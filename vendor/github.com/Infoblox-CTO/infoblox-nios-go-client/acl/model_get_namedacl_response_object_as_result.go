/*
Infoblox ACL API

OpenAPI specification for Infoblox NIOS WAPI ACL objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package acl

import (
	"encoding/json"
)

// checks if the GetNamedaclResponseObjectAsResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNamedaclResponseObjectAsResult{}

// GetNamedaclResponseObjectAsResult The response format to retrieve __Namedacl__ objects.
type GetNamedaclResponseObjectAsResult struct {
	Result *Namedacl `json:"result,omitempty"`
}

// NewGetNamedaclResponseObjectAsResult instantiates a new GetNamedaclResponseObjectAsResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNamedaclResponseObjectAsResult() *GetNamedaclResponseObjectAsResult {
	this := GetNamedaclResponseObjectAsResult{}
	return &this
}

// NewGetNamedaclResponseObjectAsResultWithDefaults instantiates a new GetNamedaclResponseObjectAsResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNamedaclResponseObjectAsResultWithDefaults() *GetNamedaclResponseObjectAsResult {
	this := GetNamedaclResponseObjectAsResult{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *GetNamedaclResponseObjectAsResult) GetResult() Namedacl {
	if o == nil || IsNil(o.Result) {
		var ret Namedacl
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNamedaclResponseObjectAsResult) GetResultOk() (*Namedacl, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *GetNamedaclResponseObjectAsResult) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given Namedacl and assigns it to the Result field.
func (o *GetNamedaclResponseObjectAsResult) SetResult(v Namedacl) {
	o.Result = &v
}

func (o GetNamedaclResponseObjectAsResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNamedaclResponseObjectAsResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	return toSerialize, nil
}

type NullableGetNamedaclResponseObjectAsResult struct {
	value *GetNamedaclResponseObjectAsResult
	isSet bool
}

func (v NullableGetNamedaclResponseObjectAsResult) Get() *GetNamedaclResponseObjectAsResult {
	return v.value
}

func (v *NullableGetNamedaclResponseObjectAsResult) Set(val *GetNamedaclResponseObjectAsResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNamedaclResponseObjectAsResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNamedaclResponseObjectAsResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNamedaclResponseObjectAsResult(val *GetNamedaclResponseObjectAsResult) *NullableGetNamedaclResponseObjectAsResult {
	return &NullableGetNamedaclResponseObjectAsResult{value: val, isSet: true}
}

func (v NullableGetNamedaclResponseObjectAsResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNamedaclResponseObjectAsResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
