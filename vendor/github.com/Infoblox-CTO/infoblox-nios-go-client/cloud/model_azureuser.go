/*
Infoblox CLOUD API

OpenAPI specification for Infoblox NIOS WAPI CLOUD objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud

import (
	"encoding/json"
)

// checks if the Azureuser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Azureuser{}

// Azureuser struct for Azureuser
type Azureuser struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// The unique Client ID of this Azure user. Maximum 255 characters.
	ClientId *string `json:"client_id,omitempty"`
	// The Client Secret Key for the Client ID of this user. Maximum 255 characters.
	ClientSecretKey *string `json:"client_secret_key,omitempty"`
	// The timestamp when this Azure user credentials was last used.
	LastUsed *int64 `json:"last_used,omitempty"`
	// The Azure user name. Maximum 64 characters.
	Name *string `json:"name,omitempty"`
	// Indicate the validity status of this Azure user.
	Status *string `json:"status,omitempty"`
	// The Azure Tenant ID of this Azure user. Maximum 64 characters.
	TenantId *string `json:"tenant_id,omitempty"`
}

// NewAzureuser instantiates a new Azureuser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureuser() *Azureuser {
	this := Azureuser{}
	return &this
}

// NewAzureuserWithDefaults instantiates a new Azureuser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureuserWithDefaults() *Azureuser {
	this := Azureuser{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *Azureuser) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Azureuser) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *Azureuser) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *Azureuser) SetRef(v string) {
	o.Ref = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *Azureuser) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Azureuser) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *Azureuser) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *Azureuser) SetClientId(v string) {
	o.ClientId = &v
}

// GetClientSecretKey returns the ClientSecretKey field value if set, zero value otherwise.
func (o *Azureuser) GetClientSecretKey() string {
	if o == nil || IsNil(o.ClientSecretKey) {
		var ret string
		return ret
	}
	return *o.ClientSecretKey
}

// GetClientSecretKeyOk returns a tuple with the ClientSecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Azureuser) GetClientSecretKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ClientSecretKey) {
		return nil, false
	}
	return o.ClientSecretKey, true
}

// HasClientSecretKey returns a boolean if a field has been set.
func (o *Azureuser) HasClientSecretKey() bool {
	if o != nil && !IsNil(o.ClientSecretKey) {
		return true
	}

	return false
}

// SetClientSecretKey gets a reference to the given string and assigns it to the ClientSecretKey field.
func (o *Azureuser) SetClientSecretKey(v string) {
	o.ClientSecretKey = &v
}

// GetLastUsed returns the LastUsed field value if set, zero value otherwise.
func (o *Azureuser) GetLastUsed() int64 {
	if o == nil || IsNil(o.LastUsed) {
		var ret int64
		return ret
	}
	return *o.LastUsed
}

// GetLastUsedOk returns a tuple with the LastUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Azureuser) GetLastUsedOk() (*int64, bool) {
	if o == nil || IsNil(o.LastUsed) {
		return nil, false
	}
	return o.LastUsed, true
}

// HasLastUsed returns a boolean if a field has been set.
func (o *Azureuser) HasLastUsed() bool {
	if o != nil && !IsNil(o.LastUsed) {
		return true
	}

	return false
}

// SetLastUsed gets a reference to the given int64 and assigns it to the LastUsed field.
func (o *Azureuser) SetLastUsed(v int64) {
	o.LastUsed = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Azureuser) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Azureuser) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Azureuser) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Azureuser) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Azureuser) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Azureuser) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Azureuser) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Azureuser) SetStatus(v string) {
	o.Status = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *Azureuser) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Azureuser) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *Azureuser) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *Azureuser) SetTenantId(v string) {
	o.TenantId = &v
}

func (o Azureuser) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Azureuser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.ClientId) {
		toSerialize["client_id"] = o.ClientId
	}
	if !IsNil(o.ClientSecretKey) {
		toSerialize["client_secret_key"] = o.ClientSecretKey
	}
	if !IsNil(o.LastUsed) {
		toSerialize["last_used"] = o.LastUsed
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TenantId) {
		toSerialize["tenant_id"] = o.TenantId
	}
	return toSerialize, nil
}

type NullableAzureuser struct {
	value *Azureuser
	isSet bool
}

func (v NullableAzureuser) Get() *Azureuser {
	return v.value
}

func (v *NullableAzureuser) Set(val *Azureuser) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureuser) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureuser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureuser(val *Azureuser) *NullableAzureuser {
	return &NullableAzureuser{value: val, isSet: true}
}

func (v NullableAzureuser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureuser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
