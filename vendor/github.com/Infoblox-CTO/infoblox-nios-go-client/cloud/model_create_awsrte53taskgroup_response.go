/*
Infoblox CLOUD API

OpenAPI specification for Infoblox NIOS WAPI CLOUD objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud

import (
	"encoding/json"
	"fmt"
)

// CreateAwsrte53taskgroupResponse - struct for CreateAwsrte53taskgroupResponse
type CreateAwsrte53taskgroupResponse struct {
	CreateAwsrte53taskgroupResponseAsObject *CreateAwsrte53taskgroupResponseAsObject
	String                                  *string
}

// CreateAwsrte53taskgroupResponseAsObjectAsCreateAwsrte53taskgroupResponse is a convenience function that returns CreateAwsrte53taskgroupResponseAsObject wrapped in CreateAwsrte53taskgroupResponse
func CreateAwsrte53taskgroupResponseAsObjectAsCreateAwsrte53taskgroupResponse(v *CreateAwsrte53taskgroupResponseAsObject) CreateAwsrte53taskgroupResponse {
	return CreateAwsrte53taskgroupResponse{
		CreateAwsrte53taskgroupResponseAsObject: v,
	}
}

// stringAsCreateAwsrte53taskgroupResponse is a convenience function that returns string wrapped in CreateAwsrte53taskgroupResponse
func StringAsCreateAwsrte53taskgroupResponse(v *string) CreateAwsrte53taskgroupResponse {
	return CreateAwsrte53taskgroupResponse{
		String: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *CreateAwsrte53taskgroupResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into CreateAwsrte53taskgroupResponseAsObject
	err = newStrictDecoder(data).Decode(&dst.CreateAwsrte53taskgroupResponseAsObject)
	if err == nil {
		jsonCreateAwsrte53taskgroupResponseAsObject, _ := json.Marshal(dst.CreateAwsrte53taskgroupResponseAsObject)
		if string(jsonCreateAwsrte53taskgroupResponseAsObject) == "{}" { // empty struct
			dst.CreateAwsrte53taskgroupResponseAsObject = nil
		} else {
			match++
		}
	} else {
		dst.CreateAwsrte53taskgroupResponseAsObject = nil
	}

	// try to unmarshal data into String
	err = newStrictDecoder(data).Decode(&dst.String)
	if err == nil {
		jsonString, _ := json.Marshal(dst.String)
		if string(jsonString) == "{}" { // empty struct
			dst.String = nil
		} else {
			match++
		}
	} else {
		dst.String = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.CreateAwsrte53taskgroupResponseAsObject = nil
		dst.String = nil

		return fmt.Errorf("data matches more than one schema in oneOf(CreateAwsrte53taskgroupResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(CreateAwsrte53taskgroupResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CreateAwsrte53taskgroupResponse) MarshalJSON() ([]byte, error) {
	if src.CreateAwsrte53taskgroupResponseAsObject != nil {
		return json.Marshal(&src.CreateAwsrte53taskgroupResponseAsObject)
	}

	if src.String != nil {
		return json.Marshal(&src.String)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *CreateAwsrte53taskgroupResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.CreateAwsrte53taskgroupResponseAsObject != nil {
		return obj.CreateAwsrte53taskgroupResponseAsObject
	}

	if obj.String != nil {
		return obj.String
	}

	// all schemas are nil
	return nil
}

type NullableCreateAwsrte53taskgroupResponse struct {
	value *CreateAwsrte53taskgroupResponse
	isSet bool
}

func (v NullableCreateAwsrte53taskgroupResponse) Get() *CreateAwsrte53taskgroupResponse {
	return v.value
}

func (v *NullableCreateAwsrte53taskgroupResponse) Set(val *CreateAwsrte53taskgroupResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAwsrte53taskgroupResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAwsrte53taskgroupResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAwsrte53taskgroupResponse(val *CreateAwsrte53taskgroupResponse) *NullableCreateAwsrte53taskgroupResponse {
	return &NullableCreateAwsrte53taskgroupResponse{value: val, isSet: true}
}

func (v NullableCreateAwsrte53taskgroupResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAwsrte53taskgroupResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
