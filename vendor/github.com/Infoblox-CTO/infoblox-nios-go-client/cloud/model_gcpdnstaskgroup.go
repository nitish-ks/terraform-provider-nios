/*
Infoblox CLOUD API

OpenAPI specification for Infoblox NIOS WAPI CLOUD objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud

import (
	"encoding/json"
)

// checks if the Gcpdnstaskgroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Gcpdnstaskgroup{}

// Gcpdnstaskgroup struct for Gcpdnstaskgroup
type Gcpdnstaskgroup struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// Comment for the task group; maximum 256 characters.
	Comment *string `json:"comment,omitempty"`
	// Indicates if all zones need to be saved into a single view.
	ConsolidateZones *bool `json:"consolidate_zones,omitempty"`
	// Consolidate all zones into one view.
	ConsolidatedView *string `json:"consolidated_view,omitempty"`
	// Indicates if the task group is enabled or disabled.
	Disabled *bool `json:"disabled,omitempty"`
	// The Gcp project IDs file's token.
	GcpProjectIdsFileToken *string `json:"gcp_project_ids_file_token,omitempty"`
	// Grid member configured to run this task group.
	GridMember *string `json:"grid_member,omitempty"`
	// Discover all child projects or Upload child project ids to discover.
	MultipleProjectsSyncPolicy *string `json:"multiple_projects_sync_policy,omitempty"`
	// The name of this Gcp DNS sync task group.
	Name *string `json:"name,omitempty"`
	// The name of the tenant's network view.
	NetworkView *string `json:"network_view,omitempty"`
	// The network view mapping policy.
	NetworkViewMappingPolicy *string `json:"network_view_mapping_policy,omitempty"`
	// The Gcp project ID associated with this task group.
	ProjectId *string `json:"project_id,omitempty"`
	// The Gcp Project IDs list associated with this task.
	ProjectsList *string `json:"projects_list,omitempty"`
	// Synchronizing child projects is enabled or disabled.
	SyncChildProjects *bool `json:"sync_child_projects,omitempty"`
	// Sync status for this task.
	SyncStatus *string `json:"sync_status,omitempty"`
	// List of Gcp DNS tasks in this group.
	TaskList []GcpdnstaskgroupTaskList `json:"task_list,omitempty"`
}

// NewGcpdnstaskgroup instantiates a new Gcpdnstaskgroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpdnstaskgroup() *Gcpdnstaskgroup {
	this := Gcpdnstaskgroup{}
	return &this
}

// NewGcpdnstaskgroupWithDefaults instantiates a new Gcpdnstaskgroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpdnstaskgroupWithDefaults() *Gcpdnstaskgroup {
	this := Gcpdnstaskgroup{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *Gcpdnstaskgroup) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gcpdnstaskgroup) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *Gcpdnstaskgroup) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *Gcpdnstaskgroup) SetRef(v string) {
	o.Ref = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *Gcpdnstaskgroup) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gcpdnstaskgroup) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *Gcpdnstaskgroup) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *Gcpdnstaskgroup) SetComment(v string) {
	o.Comment = &v
}

// GetConsolidateZones returns the ConsolidateZones field value if set, zero value otherwise.
func (o *Gcpdnstaskgroup) GetConsolidateZones() bool {
	if o == nil || IsNil(o.ConsolidateZones) {
		var ret bool
		return ret
	}
	return *o.ConsolidateZones
}

// GetConsolidateZonesOk returns a tuple with the ConsolidateZones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gcpdnstaskgroup) GetConsolidateZonesOk() (*bool, bool) {
	if o == nil || IsNil(o.ConsolidateZones) {
		return nil, false
	}
	return o.ConsolidateZones, true
}

// HasConsolidateZones returns a boolean if a field has been set.
func (o *Gcpdnstaskgroup) HasConsolidateZones() bool {
	if o != nil && !IsNil(o.ConsolidateZones) {
		return true
	}

	return false
}

// SetConsolidateZones gets a reference to the given bool and assigns it to the ConsolidateZones field.
func (o *Gcpdnstaskgroup) SetConsolidateZones(v bool) {
	o.ConsolidateZones = &v
}

// GetConsolidatedView returns the ConsolidatedView field value if set, zero value otherwise.
func (o *Gcpdnstaskgroup) GetConsolidatedView() string {
	if o == nil || IsNil(o.ConsolidatedView) {
		var ret string
		return ret
	}
	return *o.ConsolidatedView
}

// GetConsolidatedViewOk returns a tuple with the ConsolidatedView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gcpdnstaskgroup) GetConsolidatedViewOk() (*string, bool) {
	if o == nil || IsNil(o.ConsolidatedView) {
		return nil, false
	}
	return o.ConsolidatedView, true
}

// HasConsolidatedView returns a boolean if a field has been set.
func (o *Gcpdnstaskgroup) HasConsolidatedView() bool {
	if o != nil && !IsNil(o.ConsolidatedView) {
		return true
	}

	return false
}

// SetConsolidatedView gets a reference to the given string and assigns it to the ConsolidatedView field.
func (o *Gcpdnstaskgroup) SetConsolidatedView(v string) {
	o.ConsolidatedView = &v
}

// GetDisabled returns the Disabled field value if set, zero value otherwise.
func (o *Gcpdnstaskgroup) GetDisabled() bool {
	if o == nil || IsNil(o.Disabled) {
		var ret bool
		return ret
	}
	return *o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gcpdnstaskgroup) GetDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Disabled) {
		return nil, false
	}
	return o.Disabled, true
}

// HasDisabled returns a boolean if a field has been set.
func (o *Gcpdnstaskgroup) HasDisabled() bool {
	if o != nil && !IsNil(o.Disabled) {
		return true
	}

	return false
}

// SetDisabled gets a reference to the given bool and assigns it to the Disabled field.
func (o *Gcpdnstaskgroup) SetDisabled(v bool) {
	o.Disabled = &v
}

// GetGcpProjectIdsFileToken returns the GcpProjectIdsFileToken field value if set, zero value otherwise.
func (o *Gcpdnstaskgroup) GetGcpProjectIdsFileToken() string {
	if o == nil || IsNil(o.GcpProjectIdsFileToken) {
		var ret string
		return ret
	}
	return *o.GcpProjectIdsFileToken
}

// GetGcpProjectIdsFileTokenOk returns a tuple with the GcpProjectIdsFileToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gcpdnstaskgroup) GetGcpProjectIdsFileTokenOk() (*string, bool) {
	if o == nil || IsNil(o.GcpProjectIdsFileToken) {
		return nil, false
	}
	return o.GcpProjectIdsFileToken, true
}

// HasGcpProjectIdsFileToken returns a boolean if a field has been set.
func (o *Gcpdnstaskgroup) HasGcpProjectIdsFileToken() bool {
	if o != nil && !IsNil(o.GcpProjectIdsFileToken) {
		return true
	}

	return false
}

// SetGcpProjectIdsFileToken gets a reference to the given string and assigns it to the GcpProjectIdsFileToken field.
func (o *Gcpdnstaskgroup) SetGcpProjectIdsFileToken(v string) {
	o.GcpProjectIdsFileToken = &v
}

// GetGridMember returns the GridMember field value if set, zero value otherwise.
func (o *Gcpdnstaskgroup) GetGridMember() string {
	if o == nil || IsNil(o.GridMember) {
		var ret string
		return ret
	}
	return *o.GridMember
}

// GetGridMemberOk returns a tuple with the GridMember field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gcpdnstaskgroup) GetGridMemberOk() (*string, bool) {
	if o == nil || IsNil(o.GridMember) {
		return nil, false
	}
	return o.GridMember, true
}

// HasGridMember returns a boolean if a field has been set.
func (o *Gcpdnstaskgroup) HasGridMember() bool {
	if o != nil && !IsNil(o.GridMember) {
		return true
	}

	return false
}

// SetGridMember gets a reference to the given string and assigns it to the GridMember field.
func (o *Gcpdnstaskgroup) SetGridMember(v string) {
	o.GridMember = &v
}

// GetMultipleProjectsSyncPolicy returns the MultipleProjectsSyncPolicy field value if set, zero value otherwise.
func (o *Gcpdnstaskgroup) GetMultipleProjectsSyncPolicy() string {
	if o == nil || IsNil(o.MultipleProjectsSyncPolicy) {
		var ret string
		return ret
	}
	return *o.MultipleProjectsSyncPolicy
}

// GetMultipleProjectsSyncPolicyOk returns a tuple with the MultipleProjectsSyncPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gcpdnstaskgroup) GetMultipleProjectsSyncPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.MultipleProjectsSyncPolicy) {
		return nil, false
	}
	return o.MultipleProjectsSyncPolicy, true
}

// HasMultipleProjectsSyncPolicy returns a boolean if a field has been set.
func (o *Gcpdnstaskgroup) HasMultipleProjectsSyncPolicy() bool {
	if o != nil && !IsNil(o.MultipleProjectsSyncPolicy) {
		return true
	}

	return false
}

// SetMultipleProjectsSyncPolicy gets a reference to the given string and assigns it to the MultipleProjectsSyncPolicy field.
func (o *Gcpdnstaskgroup) SetMultipleProjectsSyncPolicy(v string) {
	o.MultipleProjectsSyncPolicy = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Gcpdnstaskgroup) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gcpdnstaskgroup) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Gcpdnstaskgroup) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Gcpdnstaskgroup) SetName(v string) {
	o.Name = &v
}

// GetNetworkView returns the NetworkView field value if set, zero value otherwise.
func (o *Gcpdnstaskgroup) GetNetworkView() string {
	if o == nil || IsNil(o.NetworkView) {
		var ret string
		return ret
	}
	return *o.NetworkView
}

// GetNetworkViewOk returns a tuple with the NetworkView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gcpdnstaskgroup) GetNetworkViewOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkView) {
		return nil, false
	}
	return o.NetworkView, true
}

// HasNetworkView returns a boolean if a field has been set.
func (o *Gcpdnstaskgroup) HasNetworkView() bool {
	if o != nil && !IsNil(o.NetworkView) {
		return true
	}

	return false
}

// SetNetworkView gets a reference to the given string and assigns it to the NetworkView field.
func (o *Gcpdnstaskgroup) SetNetworkView(v string) {
	o.NetworkView = &v
}

// GetNetworkViewMappingPolicy returns the NetworkViewMappingPolicy field value if set, zero value otherwise.
func (o *Gcpdnstaskgroup) GetNetworkViewMappingPolicy() string {
	if o == nil || IsNil(o.NetworkViewMappingPolicy) {
		var ret string
		return ret
	}
	return *o.NetworkViewMappingPolicy
}

// GetNetworkViewMappingPolicyOk returns a tuple with the NetworkViewMappingPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gcpdnstaskgroup) GetNetworkViewMappingPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkViewMappingPolicy) {
		return nil, false
	}
	return o.NetworkViewMappingPolicy, true
}

// HasNetworkViewMappingPolicy returns a boolean if a field has been set.
func (o *Gcpdnstaskgroup) HasNetworkViewMappingPolicy() bool {
	if o != nil && !IsNil(o.NetworkViewMappingPolicy) {
		return true
	}

	return false
}

// SetNetworkViewMappingPolicy gets a reference to the given string and assigns it to the NetworkViewMappingPolicy field.
func (o *Gcpdnstaskgroup) SetNetworkViewMappingPolicy(v string) {
	o.NetworkViewMappingPolicy = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *Gcpdnstaskgroup) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gcpdnstaskgroup) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *Gcpdnstaskgroup) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *Gcpdnstaskgroup) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetProjectsList returns the ProjectsList field value if set, zero value otherwise.
func (o *Gcpdnstaskgroup) GetProjectsList() string {
	if o == nil || IsNil(o.ProjectsList) {
		var ret string
		return ret
	}
	return *o.ProjectsList
}

// GetProjectsListOk returns a tuple with the ProjectsList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gcpdnstaskgroup) GetProjectsListOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectsList) {
		return nil, false
	}
	return o.ProjectsList, true
}

// HasProjectsList returns a boolean if a field has been set.
func (o *Gcpdnstaskgroup) HasProjectsList() bool {
	if o != nil && !IsNil(o.ProjectsList) {
		return true
	}

	return false
}

// SetProjectsList gets a reference to the given string and assigns it to the ProjectsList field.
func (o *Gcpdnstaskgroup) SetProjectsList(v string) {
	o.ProjectsList = &v
}

// GetSyncChildProjects returns the SyncChildProjects field value if set, zero value otherwise.
func (o *Gcpdnstaskgroup) GetSyncChildProjects() bool {
	if o == nil || IsNil(o.SyncChildProjects) {
		var ret bool
		return ret
	}
	return *o.SyncChildProjects
}

// GetSyncChildProjectsOk returns a tuple with the SyncChildProjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gcpdnstaskgroup) GetSyncChildProjectsOk() (*bool, bool) {
	if o == nil || IsNil(o.SyncChildProjects) {
		return nil, false
	}
	return o.SyncChildProjects, true
}

// HasSyncChildProjects returns a boolean if a field has been set.
func (o *Gcpdnstaskgroup) HasSyncChildProjects() bool {
	if o != nil && !IsNil(o.SyncChildProjects) {
		return true
	}

	return false
}

// SetSyncChildProjects gets a reference to the given bool and assigns it to the SyncChildProjects field.
func (o *Gcpdnstaskgroup) SetSyncChildProjects(v bool) {
	o.SyncChildProjects = &v
}

// GetSyncStatus returns the SyncStatus field value if set, zero value otherwise.
func (o *Gcpdnstaskgroup) GetSyncStatus() string {
	if o == nil || IsNil(o.SyncStatus) {
		var ret string
		return ret
	}
	return *o.SyncStatus
}

// GetSyncStatusOk returns a tuple with the SyncStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gcpdnstaskgroup) GetSyncStatusOk() (*string, bool) {
	if o == nil || IsNil(o.SyncStatus) {
		return nil, false
	}
	return o.SyncStatus, true
}

// HasSyncStatus returns a boolean if a field has been set.
func (o *Gcpdnstaskgroup) HasSyncStatus() bool {
	if o != nil && !IsNil(o.SyncStatus) {
		return true
	}

	return false
}

// SetSyncStatus gets a reference to the given string and assigns it to the SyncStatus field.
func (o *Gcpdnstaskgroup) SetSyncStatus(v string) {
	o.SyncStatus = &v
}

// GetTaskList returns the TaskList field value if set, zero value otherwise.
func (o *Gcpdnstaskgroup) GetTaskList() []GcpdnstaskgroupTaskList {
	if o == nil || IsNil(o.TaskList) {
		var ret []GcpdnstaskgroupTaskList
		return ret
	}
	return o.TaskList
}

// GetTaskListOk returns a tuple with the TaskList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gcpdnstaskgroup) GetTaskListOk() ([]GcpdnstaskgroupTaskList, bool) {
	if o == nil || IsNil(o.TaskList) {
		return nil, false
	}
	return o.TaskList, true
}

// HasTaskList returns a boolean if a field has been set.
func (o *Gcpdnstaskgroup) HasTaskList() bool {
	if o != nil && !IsNil(o.TaskList) {
		return true
	}

	return false
}

// SetTaskList gets a reference to the given []GcpdnstaskgroupTaskList and assigns it to the TaskList field.
func (o *Gcpdnstaskgroup) SetTaskList(v []GcpdnstaskgroupTaskList) {
	o.TaskList = v
}

func (o Gcpdnstaskgroup) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Gcpdnstaskgroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.ConsolidateZones) {
		toSerialize["consolidate_zones"] = o.ConsolidateZones
	}
	if !IsNil(o.ConsolidatedView) {
		toSerialize["consolidated_view"] = o.ConsolidatedView
	}
	if !IsNil(o.Disabled) {
		toSerialize["disabled"] = o.Disabled
	}
	if !IsNil(o.GcpProjectIdsFileToken) {
		toSerialize["gcp_project_ids_file_token"] = o.GcpProjectIdsFileToken
	}
	if !IsNil(o.GridMember) {
		toSerialize["grid_member"] = o.GridMember
	}
	if !IsNil(o.MultipleProjectsSyncPolicy) {
		toSerialize["multiple_projects_sync_policy"] = o.MultipleProjectsSyncPolicy
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NetworkView) {
		toSerialize["network_view"] = o.NetworkView
	}
	if !IsNil(o.NetworkViewMappingPolicy) {
		toSerialize["network_view_mapping_policy"] = o.NetworkViewMappingPolicy
	}
	if !IsNil(o.ProjectId) {
		toSerialize["project_id"] = o.ProjectId
	}
	if !IsNil(o.ProjectsList) {
		toSerialize["projects_list"] = o.ProjectsList
	}
	if !IsNil(o.SyncChildProjects) {
		toSerialize["sync_child_projects"] = o.SyncChildProjects
	}
	if !IsNil(o.SyncStatus) {
		toSerialize["sync_status"] = o.SyncStatus
	}
	if !IsNil(o.TaskList) {
		toSerialize["task_list"] = o.TaskList
	}
	return toSerialize, nil
}

type NullableGcpdnstaskgroup struct {
	value *Gcpdnstaskgroup
	isSet bool
}

func (v NullableGcpdnstaskgroup) Get() *Gcpdnstaskgroup {
	return v.value
}

func (v *NullableGcpdnstaskgroup) Set(val *Gcpdnstaskgroup) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpdnstaskgroup) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpdnstaskgroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpdnstaskgroup(val *Gcpdnstaskgroup) *NullableGcpdnstaskgroup {
	return &NullableGcpdnstaskgroup{value: val, isSet: true}
}

func (v NullableGcpdnstaskgroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpdnstaskgroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
