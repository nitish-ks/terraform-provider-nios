/*
Infoblox CLOUD API

OpenAPI specification for Infoblox NIOS WAPI CLOUD objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud

import (
	"encoding/json"
)

// checks if the GetAwsrte53taskgroupResponseObjectAsResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAwsrte53taskgroupResponseObjectAsResult{}

// GetAwsrte53taskgroupResponseObjectAsResult The response format to retrieve __Awsrte53taskgroup__ objects.
type GetAwsrte53taskgroupResponseObjectAsResult struct {
	Result *Awsrte53taskgroup `json:"result,omitempty"`
}

// NewGetAwsrte53taskgroupResponseObjectAsResult instantiates a new GetAwsrte53taskgroupResponseObjectAsResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAwsrte53taskgroupResponseObjectAsResult() *GetAwsrte53taskgroupResponseObjectAsResult {
	this := GetAwsrte53taskgroupResponseObjectAsResult{}
	return &this
}

// NewGetAwsrte53taskgroupResponseObjectAsResultWithDefaults instantiates a new GetAwsrte53taskgroupResponseObjectAsResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAwsrte53taskgroupResponseObjectAsResultWithDefaults() *GetAwsrte53taskgroupResponseObjectAsResult {
	this := GetAwsrte53taskgroupResponseObjectAsResult{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *GetAwsrte53taskgroupResponseObjectAsResult) GetResult() Awsrte53taskgroup {
	if o == nil || IsNil(o.Result) {
		var ret Awsrte53taskgroup
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAwsrte53taskgroupResponseObjectAsResult) GetResultOk() (*Awsrte53taskgroup, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *GetAwsrte53taskgroupResponseObjectAsResult) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given Awsrte53taskgroup and assigns it to the Result field.
func (o *GetAwsrte53taskgroupResponseObjectAsResult) SetResult(v Awsrte53taskgroup) {
	o.Result = &v
}

func (o GetAwsrte53taskgroupResponseObjectAsResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAwsrte53taskgroupResponseObjectAsResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	return toSerialize, nil
}

type NullableGetAwsrte53taskgroupResponseObjectAsResult struct {
	value *GetAwsrte53taskgroupResponseObjectAsResult
	isSet bool
}

func (v NullableGetAwsrte53taskgroupResponseObjectAsResult) Get() *GetAwsrte53taskgroupResponseObjectAsResult {
	return v.value
}

func (v *NullableGetAwsrte53taskgroupResponseObjectAsResult) Set(val *GetAwsrte53taskgroupResponseObjectAsResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAwsrte53taskgroupResponseObjectAsResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAwsrte53taskgroupResponseObjectAsResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAwsrte53taskgroupResponseObjectAsResult(val *GetAwsrte53taskgroupResponseObjectAsResult) *NullableGetAwsrte53taskgroupResponseObjectAsResult {
	return &NullableGetAwsrte53taskgroupResponseObjectAsResult{value: val, isSet: true}
}

func (v NullableGetAwsrte53taskgroupResponseObjectAsResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAwsrte53taskgroupResponseObjectAsResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
