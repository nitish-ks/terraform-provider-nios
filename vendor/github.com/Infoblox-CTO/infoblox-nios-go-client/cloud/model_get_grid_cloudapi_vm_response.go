/*
Infoblox CLOUD API

OpenAPI specification for Infoblox NIOS WAPI CLOUD objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud

import (
	"encoding/json"
	"fmt"
)

// GetGridCloudapiVmResponse - struct for GetGridCloudapiVmResponse
type GetGridCloudapiVmResponse struct {
	GetGridCloudapiVmResponseObjectAsResult *GetGridCloudapiVmResponseObjectAsResult
	GridCloudapiVm                          *GridCloudapiVm
}

// GetGridCloudapiVmResponseObjectAsResultAsGetGridCloudapiVmResponse is a convenience function that returns GetGridCloudapiVmResponseObjectAsResult wrapped in GetGridCloudapiVmResponse
func GetGridCloudapiVmResponseObjectAsResultAsGetGridCloudapiVmResponse(v *GetGridCloudapiVmResponseObjectAsResult) GetGridCloudapiVmResponse {
	return GetGridCloudapiVmResponse{
		GetGridCloudapiVmResponseObjectAsResult: v,
	}
}

// GridCloudapiVmAsGetGridCloudapiVmResponse is a convenience function that returns GridCloudapiVm wrapped in GetGridCloudapiVmResponse
func GridCloudapiVmAsGetGridCloudapiVmResponse(v *GridCloudapiVm) GetGridCloudapiVmResponse {
	return GetGridCloudapiVmResponse{
		GridCloudapiVm: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetGridCloudapiVmResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetGridCloudapiVmResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetGridCloudapiVmResponseObjectAsResult)
	if err == nil {
		jsonGetGridCloudapiVmResponseObjectAsResult, _ := json.Marshal(dst.GetGridCloudapiVmResponseObjectAsResult)
		if string(jsonGetGridCloudapiVmResponseObjectAsResult) == "{}" { // empty struct
			dst.GetGridCloudapiVmResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetGridCloudapiVmResponseObjectAsResult = nil
	}

	// try to unmarshal data into GridCloudapiVm
	err = newStrictDecoder(data).Decode(&dst.GridCloudapiVm)
	if err == nil {
		jsonGridCloudapiVm, _ := json.Marshal(dst.GridCloudapiVm)
		if string(jsonGridCloudapiVm) == "{}" { // empty struct
			dst.GridCloudapiVm = nil
		} else {
			match++
		}
	} else {
		dst.GridCloudapiVm = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetGridCloudapiVmResponseObjectAsResult = nil
		dst.GridCloudapiVm = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetGridCloudapiVmResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetGridCloudapiVmResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetGridCloudapiVmResponse) MarshalJSON() ([]byte, error) {
	if src.GetGridCloudapiVmResponseObjectAsResult != nil {
		return json.Marshal(&src.GetGridCloudapiVmResponseObjectAsResult)
	}

	if src.GridCloudapiVm != nil {
		return json.Marshal(&src.GridCloudapiVm)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetGridCloudapiVmResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GetGridCloudapiVmResponseObjectAsResult != nil {
		return obj.GetGridCloudapiVmResponseObjectAsResult
	}

	if obj.GridCloudapiVm != nil {
		return obj.GridCloudapiVm
	}

	// all schemas are nil
	return nil
}

type NullableGetGridCloudapiVmResponse struct {
	value *GetGridCloudapiVmResponse
	isSet bool
}

func (v NullableGetGridCloudapiVmResponse) Get() *GetGridCloudapiVmResponse {
	return v.value
}

func (v *NullableGetGridCloudapiVmResponse) Set(val *GetGridCloudapiVmResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetGridCloudapiVmResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetGridCloudapiVmResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetGridCloudapiVmResponse(val *GetGridCloudapiVmResponse) *NullableGetGridCloudapiVmResponse {
	return &NullableGetGridCloudapiVmResponse{value: val, isSet: true}
}

func (v NullableGetGridCloudapiVmResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetGridCloudapiVmResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
