/*
Infoblox CLOUD API

OpenAPI specification for Infoblox NIOS WAPI CLOUD objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud

import (
	"encoding/json"
)

// checks if the GridCloudapiCloudstatistics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GridCloudapiCloudstatistics{}

// GridCloudapiCloudstatistics struct for GridCloudapiCloudstatistics
type GridCloudapiCloudstatistics struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// Ratio of allocated vs. available IPs
	AllocatedAvailableRatio *int64 `json:"allocated_available_ratio,omitempty"`
	// Total number of IPs allocated by tenants.
	AllocatedIpCount *int64 `json:"allocated_ip_count,omitempty"`
	// The total number of IP addresses available to tenants. Only IP addresses in networks that are within a delegation scope are counted.
	AvailableIpCount *string `json:"available_ip_count,omitempty"`
	// The total number of fixed IP addresses currently in use by all tenants in the system.
	FixedIpCount *int64 `json:"fixed_ip_count,omitempty"`
	// The total number of floating IP addresses currently in use by all tenants in the system.
	FloatingIpCount *int64 `json:"floating_ip_count,omitempty"`
	// Total number of tenant currently in the system.
	TenantCount *int64 `json:"tenant_count,omitempty"`
	// The total number of IP addresses currently in use by all tenants in the system.
	TenantIpCount *int64 `json:"tenant_ip_count,omitempty"`
	// The total number of VMs currently in use by all tenants in the system.
	TenantVmCount *int64 `json:"tenant_vm_count,omitempty"`
}

// NewGridCloudapiCloudstatistics instantiates a new GridCloudapiCloudstatistics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGridCloudapiCloudstatistics() *GridCloudapiCloudstatistics {
	this := GridCloudapiCloudstatistics{}
	return &this
}

// NewGridCloudapiCloudstatisticsWithDefaults instantiates a new GridCloudapiCloudstatistics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGridCloudapiCloudstatisticsWithDefaults() *GridCloudapiCloudstatistics {
	this := GridCloudapiCloudstatistics{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *GridCloudapiCloudstatistics) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridCloudapiCloudstatistics) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *GridCloudapiCloudstatistics) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *GridCloudapiCloudstatistics) SetRef(v string) {
	o.Ref = &v
}

// GetAllocatedAvailableRatio returns the AllocatedAvailableRatio field value if set, zero value otherwise.
func (o *GridCloudapiCloudstatistics) GetAllocatedAvailableRatio() int64 {
	if o == nil || IsNil(o.AllocatedAvailableRatio) {
		var ret int64
		return ret
	}
	return *o.AllocatedAvailableRatio
}

// GetAllocatedAvailableRatioOk returns a tuple with the AllocatedAvailableRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridCloudapiCloudstatistics) GetAllocatedAvailableRatioOk() (*int64, bool) {
	if o == nil || IsNil(o.AllocatedAvailableRatio) {
		return nil, false
	}
	return o.AllocatedAvailableRatio, true
}

// HasAllocatedAvailableRatio returns a boolean if a field has been set.
func (o *GridCloudapiCloudstatistics) HasAllocatedAvailableRatio() bool {
	if o != nil && !IsNil(o.AllocatedAvailableRatio) {
		return true
	}

	return false
}

// SetAllocatedAvailableRatio gets a reference to the given int64 and assigns it to the AllocatedAvailableRatio field.
func (o *GridCloudapiCloudstatistics) SetAllocatedAvailableRatio(v int64) {
	o.AllocatedAvailableRatio = &v
}

// GetAllocatedIpCount returns the AllocatedIpCount field value if set, zero value otherwise.
func (o *GridCloudapiCloudstatistics) GetAllocatedIpCount() int64 {
	if o == nil || IsNil(o.AllocatedIpCount) {
		var ret int64
		return ret
	}
	return *o.AllocatedIpCount
}

// GetAllocatedIpCountOk returns a tuple with the AllocatedIpCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridCloudapiCloudstatistics) GetAllocatedIpCountOk() (*int64, bool) {
	if o == nil || IsNil(o.AllocatedIpCount) {
		return nil, false
	}
	return o.AllocatedIpCount, true
}

// HasAllocatedIpCount returns a boolean if a field has been set.
func (o *GridCloudapiCloudstatistics) HasAllocatedIpCount() bool {
	if o != nil && !IsNil(o.AllocatedIpCount) {
		return true
	}

	return false
}

// SetAllocatedIpCount gets a reference to the given int64 and assigns it to the AllocatedIpCount field.
func (o *GridCloudapiCloudstatistics) SetAllocatedIpCount(v int64) {
	o.AllocatedIpCount = &v
}

// GetAvailableIpCount returns the AvailableIpCount field value if set, zero value otherwise.
func (o *GridCloudapiCloudstatistics) GetAvailableIpCount() string {
	if o == nil || IsNil(o.AvailableIpCount) {
		var ret string
		return ret
	}
	return *o.AvailableIpCount
}

// GetAvailableIpCountOk returns a tuple with the AvailableIpCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridCloudapiCloudstatistics) GetAvailableIpCountOk() (*string, bool) {
	if o == nil || IsNil(o.AvailableIpCount) {
		return nil, false
	}
	return o.AvailableIpCount, true
}

// HasAvailableIpCount returns a boolean if a field has been set.
func (o *GridCloudapiCloudstatistics) HasAvailableIpCount() bool {
	if o != nil && !IsNil(o.AvailableIpCount) {
		return true
	}

	return false
}

// SetAvailableIpCount gets a reference to the given string and assigns it to the AvailableIpCount field.
func (o *GridCloudapiCloudstatistics) SetAvailableIpCount(v string) {
	o.AvailableIpCount = &v
}

// GetFixedIpCount returns the FixedIpCount field value if set, zero value otherwise.
func (o *GridCloudapiCloudstatistics) GetFixedIpCount() int64 {
	if o == nil || IsNil(o.FixedIpCount) {
		var ret int64
		return ret
	}
	return *o.FixedIpCount
}

// GetFixedIpCountOk returns a tuple with the FixedIpCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridCloudapiCloudstatistics) GetFixedIpCountOk() (*int64, bool) {
	if o == nil || IsNil(o.FixedIpCount) {
		return nil, false
	}
	return o.FixedIpCount, true
}

// HasFixedIpCount returns a boolean if a field has been set.
func (o *GridCloudapiCloudstatistics) HasFixedIpCount() bool {
	if o != nil && !IsNil(o.FixedIpCount) {
		return true
	}

	return false
}

// SetFixedIpCount gets a reference to the given int64 and assigns it to the FixedIpCount field.
func (o *GridCloudapiCloudstatistics) SetFixedIpCount(v int64) {
	o.FixedIpCount = &v
}

// GetFloatingIpCount returns the FloatingIpCount field value if set, zero value otherwise.
func (o *GridCloudapiCloudstatistics) GetFloatingIpCount() int64 {
	if o == nil || IsNil(o.FloatingIpCount) {
		var ret int64
		return ret
	}
	return *o.FloatingIpCount
}

// GetFloatingIpCountOk returns a tuple with the FloatingIpCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridCloudapiCloudstatistics) GetFloatingIpCountOk() (*int64, bool) {
	if o == nil || IsNil(o.FloatingIpCount) {
		return nil, false
	}
	return o.FloatingIpCount, true
}

// HasFloatingIpCount returns a boolean if a field has been set.
func (o *GridCloudapiCloudstatistics) HasFloatingIpCount() bool {
	if o != nil && !IsNil(o.FloatingIpCount) {
		return true
	}

	return false
}

// SetFloatingIpCount gets a reference to the given int64 and assigns it to the FloatingIpCount field.
func (o *GridCloudapiCloudstatistics) SetFloatingIpCount(v int64) {
	o.FloatingIpCount = &v
}

// GetTenantCount returns the TenantCount field value if set, zero value otherwise.
func (o *GridCloudapiCloudstatistics) GetTenantCount() int64 {
	if o == nil || IsNil(o.TenantCount) {
		var ret int64
		return ret
	}
	return *o.TenantCount
}

// GetTenantCountOk returns a tuple with the TenantCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridCloudapiCloudstatistics) GetTenantCountOk() (*int64, bool) {
	if o == nil || IsNil(o.TenantCount) {
		return nil, false
	}
	return o.TenantCount, true
}

// HasTenantCount returns a boolean if a field has been set.
func (o *GridCloudapiCloudstatistics) HasTenantCount() bool {
	if o != nil && !IsNil(o.TenantCount) {
		return true
	}

	return false
}

// SetTenantCount gets a reference to the given int64 and assigns it to the TenantCount field.
func (o *GridCloudapiCloudstatistics) SetTenantCount(v int64) {
	o.TenantCount = &v
}

// GetTenantIpCount returns the TenantIpCount field value if set, zero value otherwise.
func (o *GridCloudapiCloudstatistics) GetTenantIpCount() int64 {
	if o == nil || IsNil(o.TenantIpCount) {
		var ret int64
		return ret
	}
	return *o.TenantIpCount
}

// GetTenantIpCountOk returns a tuple with the TenantIpCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridCloudapiCloudstatistics) GetTenantIpCountOk() (*int64, bool) {
	if o == nil || IsNil(o.TenantIpCount) {
		return nil, false
	}
	return o.TenantIpCount, true
}

// HasTenantIpCount returns a boolean if a field has been set.
func (o *GridCloudapiCloudstatistics) HasTenantIpCount() bool {
	if o != nil && !IsNil(o.TenantIpCount) {
		return true
	}

	return false
}

// SetTenantIpCount gets a reference to the given int64 and assigns it to the TenantIpCount field.
func (o *GridCloudapiCloudstatistics) SetTenantIpCount(v int64) {
	o.TenantIpCount = &v
}

// GetTenantVmCount returns the TenantVmCount field value if set, zero value otherwise.
func (o *GridCloudapiCloudstatistics) GetTenantVmCount() int64 {
	if o == nil || IsNil(o.TenantVmCount) {
		var ret int64
		return ret
	}
	return *o.TenantVmCount
}

// GetTenantVmCountOk returns a tuple with the TenantVmCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridCloudapiCloudstatistics) GetTenantVmCountOk() (*int64, bool) {
	if o == nil || IsNil(o.TenantVmCount) {
		return nil, false
	}
	return o.TenantVmCount, true
}

// HasTenantVmCount returns a boolean if a field has been set.
func (o *GridCloudapiCloudstatistics) HasTenantVmCount() bool {
	if o != nil && !IsNil(o.TenantVmCount) {
		return true
	}

	return false
}

// SetTenantVmCount gets a reference to the given int64 and assigns it to the TenantVmCount field.
func (o *GridCloudapiCloudstatistics) SetTenantVmCount(v int64) {
	o.TenantVmCount = &v
}

func (o GridCloudapiCloudstatistics) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GridCloudapiCloudstatistics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.AllocatedAvailableRatio) {
		toSerialize["allocated_available_ratio"] = o.AllocatedAvailableRatio
	}
	if !IsNil(o.AllocatedIpCount) {
		toSerialize["allocated_ip_count"] = o.AllocatedIpCount
	}
	if !IsNil(o.AvailableIpCount) {
		toSerialize["available_ip_count"] = o.AvailableIpCount
	}
	if !IsNil(o.FixedIpCount) {
		toSerialize["fixed_ip_count"] = o.FixedIpCount
	}
	if !IsNil(o.FloatingIpCount) {
		toSerialize["floating_ip_count"] = o.FloatingIpCount
	}
	if !IsNil(o.TenantCount) {
		toSerialize["tenant_count"] = o.TenantCount
	}
	if !IsNil(o.TenantIpCount) {
		toSerialize["tenant_ip_count"] = o.TenantIpCount
	}
	if !IsNil(o.TenantVmCount) {
		toSerialize["tenant_vm_count"] = o.TenantVmCount
	}
	return toSerialize, nil
}

type NullableGridCloudapiCloudstatistics struct {
	value *GridCloudapiCloudstatistics
	isSet bool
}

func (v NullableGridCloudapiCloudstatistics) Get() *GridCloudapiCloudstatistics {
	return v.value
}

func (v *NullableGridCloudapiCloudstatistics) Set(val *GridCloudapiCloudstatistics) {
	v.value = val
	v.isSet = true
}

func (v NullableGridCloudapiCloudstatistics) IsSet() bool {
	return v.isSet
}

func (v *NullableGridCloudapiCloudstatistics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGridCloudapiCloudstatistics(val *GridCloudapiCloudstatistics) *NullableGridCloudapiCloudstatistics {
	return &NullableGridCloudapiCloudstatistics{value: val, isSet: true}
}

func (v NullableGridCloudapiCloudstatistics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGridCloudapiCloudstatistics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
