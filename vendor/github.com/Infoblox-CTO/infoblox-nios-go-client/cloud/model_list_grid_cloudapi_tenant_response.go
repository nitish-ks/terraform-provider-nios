/*
Infoblox CLOUD API

OpenAPI specification for Infoblox NIOS WAPI CLOUD objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud

import (
	"encoding/json"
	"fmt"
)

// ListGridCloudapiTenantResponse - struct for ListGridCloudapiTenantResponse
type ListGridCloudapiTenantResponse struct {
	ListGridCloudapiTenantResponseObject *ListGridCloudapiTenantResponseObject
	ArrayOfGridCloudapiTenant            *[]GridCloudapiTenant
}

// ListGridCloudapiTenantResponseObjectAsListGridCloudapiTenantResponse is a convenience function that returns ListGridCloudapiTenantResponseObject wrapped in ListGridCloudapiTenantResponse
func ListGridCloudapiTenantResponseObjectAsListGridCloudapiTenantResponse(v *ListGridCloudapiTenantResponseObject) ListGridCloudapiTenantResponse {
	return ListGridCloudapiTenantResponse{
		ListGridCloudapiTenantResponseObject: v,
	}
}

// []GridCloudapiTenantAsListGridCloudapiTenantResponse is a convenience function that returns []GridCloudapiTenant wrapped in ListGridCloudapiTenantResponse
func ArrayOfGridCloudapiTenantAsListGridCloudapiTenantResponse(v *[]GridCloudapiTenant) ListGridCloudapiTenantResponse {
	return ListGridCloudapiTenantResponse{
		ArrayOfGridCloudapiTenant: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListGridCloudapiTenantResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListGridCloudapiTenantResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListGridCloudapiTenantResponseObject)
	if err == nil {
		jsonListGridCloudapiTenantResponseObject, _ := json.Marshal(dst.ListGridCloudapiTenantResponseObject)
		if string(jsonListGridCloudapiTenantResponseObject) == "{}" { // empty struct
			dst.ListGridCloudapiTenantResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListGridCloudapiTenantResponseObject = nil
	}

	// try to unmarshal data into ArrayOfGridCloudapiTenant
	err = newStrictDecoder(data).Decode(&dst.ArrayOfGridCloudapiTenant)
	if err == nil {
		jsonArrayOfGridCloudapiTenant, _ := json.Marshal(dst.ArrayOfGridCloudapiTenant)
		if string(jsonArrayOfGridCloudapiTenant) == "{}" { // empty struct
			dst.ArrayOfGridCloudapiTenant = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfGridCloudapiTenant = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListGridCloudapiTenantResponseObject = nil
		dst.ArrayOfGridCloudapiTenant = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListGridCloudapiTenantResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListGridCloudapiTenantResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListGridCloudapiTenantResponse) MarshalJSON() ([]byte, error) {
	if src.ListGridCloudapiTenantResponseObject != nil {
		return json.Marshal(&src.ListGridCloudapiTenantResponseObject)
	}

	if src.ArrayOfGridCloudapiTenant != nil {
		return json.Marshal(&src.ArrayOfGridCloudapiTenant)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListGridCloudapiTenantResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListGridCloudapiTenantResponseObject != nil {
		return obj.ListGridCloudapiTenantResponseObject
	}

	if obj.ArrayOfGridCloudapiTenant != nil {
		return obj.ArrayOfGridCloudapiTenant
	}

	// all schemas are nil
	return nil
}

type NullableListGridCloudapiTenantResponse struct {
	value *ListGridCloudapiTenantResponse
	isSet bool
}

func (v NullableListGridCloudapiTenantResponse) Get() *ListGridCloudapiTenantResponse {
	return v.value
}

func (v *NullableListGridCloudapiTenantResponse) Set(val *ListGridCloudapiTenantResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListGridCloudapiTenantResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListGridCloudapiTenantResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListGridCloudapiTenantResponse(val *ListGridCloudapiTenantResponse) *NullableListGridCloudapiTenantResponse {
	return &NullableListGridCloudapiTenantResponse{value: val, isSet: true}
}

func (v NullableListGridCloudapiTenantResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListGridCloudapiTenantResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
