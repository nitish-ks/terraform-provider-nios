/*
Infoblox CLOUD API

OpenAPI specification for Infoblox NIOS WAPI CLOUD objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud

import (
	"encoding/json"
)

// checks if the ListMultiregionsResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListMultiregionsResponseObject{}

// ListMultiregionsResponseObject The response format to retrieve __Multiregions__ objects.
type ListMultiregionsResponseObject struct {
	Result               []Multiregions `json:"result,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListMultiregionsResponseObject ListMultiregionsResponseObject

// NewListMultiregionsResponseObject instantiates a new ListMultiregionsResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListMultiregionsResponseObject() *ListMultiregionsResponseObject {
	this := ListMultiregionsResponseObject{}
	return &this
}

// NewListMultiregionsResponseObjectWithDefaults instantiates a new ListMultiregionsResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListMultiregionsResponseObjectWithDefaults() *ListMultiregionsResponseObject {
	this := ListMultiregionsResponseObject{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *ListMultiregionsResponseObject) GetResult() []Multiregions {
	if o == nil || IsNil(o.Result) {
		var ret []Multiregions
		return ret
	}
	return o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListMultiregionsResponseObject) GetResultOk() ([]Multiregions, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *ListMultiregionsResponseObject) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given []Multiregions and assigns it to the Result field.
func (o *ListMultiregionsResponseObject) SetResult(v []Multiregions) {
	o.Result = v
}

func (o ListMultiregionsResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListMultiregionsResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListMultiregionsResponseObject) UnmarshalJSON(data []byte) (err error) {
	varListMultiregionsResponseObject := _ListMultiregionsResponseObject{}

	err = json.Unmarshal(data, &varListMultiregionsResponseObject)

	if err != nil {
		return err
	}

	*o = ListMultiregionsResponseObject(varListMultiregionsResponseObject)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "result")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListMultiregionsResponseObject struct {
	value *ListMultiregionsResponseObject
	isSet bool
}

func (v NullableListMultiregionsResponseObject) Get() *ListMultiregionsResponseObject {
	return v.value
}

func (v *NullableListMultiregionsResponseObject) Set(val *ListMultiregionsResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableListMultiregionsResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableListMultiregionsResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListMultiregionsResponseObject(val *ListMultiregionsResponseObject) *NullableListMultiregionsResponseObject {
	return &NullableListMultiregionsResponseObject{value: val, isSet: true}
}

func (v NullableListMultiregionsResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListMultiregionsResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
