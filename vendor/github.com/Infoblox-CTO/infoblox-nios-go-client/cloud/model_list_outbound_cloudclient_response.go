/*
Infoblox CLOUD API

OpenAPI specification for Infoblox NIOS WAPI CLOUD objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud

import (
	"encoding/json"
	"fmt"
)

// ListOutboundCloudclientResponse - struct for ListOutboundCloudclientResponse
type ListOutboundCloudclientResponse struct {
	ListOutboundCloudclientResponseObject *ListOutboundCloudclientResponseObject
	ArrayOfOutboundCloudclient            *[]OutboundCloudclient
}

// ListOutboundCloudclientResponseObjectAsListOutboundCloudclientResponse is a convenience function that returns ListOutboundCloudclientResponseObject wrapped in ListOutboundCloudclientResponse
func ListOutboundCloudclientResponseObjectAsListOutboundCloudclientResponse(v *ListOutboundCloudclientResponseObject) ListOutboundCloudclientResponse {
	return ListOutboundCloudclientResponse{
		ListOutboundCloudclientResponseObject: v,
	}
}

// []OutboundCloudclientAsListOutboundCloudclientResponse is a convenience function that returns []OutboundCloudclient wrapped in ListOutboundCloudclientResponse
func ArrayOfOutboundCloudclientAsListOutboundCloudclientResponse(v *[]OutboundCloudclient) ListOutboundCloudclientResponse {
	return ListOutboundCloudclientResponse{
		ArrayOfOutboundCloudclient: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListOutboundCloudclientResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListOutboundCloudclientResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListOutboundCloudclientResponseObject)
	if err == nil {
		jsonListOutboundCloudclientResponseObject, _ := json.Marshal(dst.ListOutboundCloudclientResponseObject)
		if string(jsonListOutboundCloudclientResponseObject) == "{}" { // empty struct
			dst.ListOutboundCloudclientResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListOutboundCloudclientResponseObject = nil
	}

	// try to unmarshal data into ArrayOfOutboundCloudclient
	err = newStrictDecoder(data).Decode(&dst.ArrayOfOutboundCloudclient)
	if err == nil {
		jsonArrayOfOutboundCloudclient, _ := json.Marshal(dst.ArrayOfOutboundCloudclient)
		if string(jsonArrayOfOutboundCloudclient) == "{}" { // empty struct
			dst.ArrayOfOutboundCloudclient = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfOutboundCloudclient = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListOutboundCloudclientResponseObject = nil
		dst.ArrayOfOutboundCloudclient = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListOutboundCloudclientResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListOutboundCloudclientResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListOutboundCloudclientResponse) MarshalJSON() ([]byte, error) {
	if src.ListOutboundCloudclientResponseObject != nil {
		return json.Marshal(&src.ListOutboundCloudclientResponseObject)
	}

	if src.ArrayOfOutboundCloudclient != nil {
		return json.Marshal(&src.ArrayOfOutboundCloudclient)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListOutboundCloudclientResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListOutboundCloudclientResponseObject != nil {
		return obj.ListOutboundCloudclientResponseObject
	}

	if obj.ArrayOfOutboundCloudclient != nil {
		return obj.ArrayOfOutboundCloudclient
	}

	// all schemas are nil
	return nil
}

type NullableListOutboundCloudclientResponse struct {
	value *ListOutboundCloudclientResponse
	isSet bool
}

func (v NullableListOutboundCloudclientResponse) Get() *ListOutboundCloudclientResponse {
	return v.value
}

func (v *NullableListOutboundCloudclientResponse) Set(val *ListOutboundCloudclientResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListOutboundCloudclientResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListOutboundCloudclientResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListOutboundCloudclientResponse(val *ListOutboundCloudclientResponse) *NullableListOutboundCloudclientResponse {
	return &NullableListOutboundCloudclientResponse{value: val, isSet: true}
}

func (v NullableListOutboundCloudclientResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListOutboundCloudclientResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
