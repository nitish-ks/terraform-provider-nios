/*
Infoblox CLOUD API

OpenAPI specification for Infoblox NIOS WAPI CLOUD objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud

import (
	"encoding/json"
)

// checks if the Multiregions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Multiregions{}

// Multiregions struct for Multiregions
type Multiregions struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// Type of cloud_platform to get the supported regions.
	CloudPlatform *string `json:"cloud_platform,omitempty"`
	// Comma separated sting containing only GovCloud supported regions.
	GovcloudRegions *string `json:"govcloud_regions,omitempty"`
	// Comma separated string which contains all supported regions.
	Regions *string `json:"regions,omitempty"`
}

// NewMultiregions instantiates a new Multiregions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultiregions() *Multiregions {
	this := Multiregions{}
	return &this
}

// NewMultiregionsWithDefaults instantiates a new Multiregions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultiregionsWithDefaults() *Multiregions {
	this := Multiregions{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *Multiregions) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Multiregions) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *Multiregions) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *Multiregions) SetRef(v string) {
	o.Ref = &v
}

// GetCloudPlatform returns the CloudPlatform field value if set, zero value otherwise.
func (o *Multiregions) GetCloudPlatform() string {
	if o == nil || IsNil(o.CloudPlatform) {
		var ret string
		return ret
	}
	return *o.CloudPlatform
}

// GetCloudPlatformOk returns a tuple with the CloudPlatform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Multiregions) GetCloudPlatformOk() (*string, bool) {
	if o == nil || IsNil(o.CloudPlatform) {
		return nil, false
	}
	return o.CloudPlatform, true
}

// HasCloudPlatform returns a boolean if a field has been set.
func (o *Multiregions) HasCloudPlatform() bool {
	if o != nil && !IsNil(o.CloudPlatform) {
		return true
	}

	return false
}

// SetCloudPlatform gets a reference to the given string and assigns it to the CloudPlatform field.
func (o *Multiregions) SetCloudPlatform(v string) {
	o.CloudPlatform = &v
}

// GetGovcloudRegions returns the GovcloudRegions field value if set, zero value otherwise.
func (o *Multiregions) GetGovcloudRegions() string {
	if o == nil || IsNil(o.GovcloudRegions) {
		var ret string
		return ret
	}
	return *o.GovcloudRegions
}

// GetGovcloudRegionsOk returns a tuple with the GovcloudRegions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Multiregions) GetGovcloudRegionsOk() (*string, bool) {
	if o == nil || IsNil(o.GovcloudRegions) {
		return nil, false
	}
	return o.GovcloudRegions, true
}

// HasGovcloudRegions returns a boolean if a field has been set.
func (o *Multiregions) HasGovcloudRegions() bool {
	if o != nil && !IsNil(o.GovcloudRegions) {
		return true
	}

	return false
}

// SetGovcloudRegions gets a reference to the given string and assigns it to the GovcloudRegions field.
func (o *Multiregions) SetGovcloudRegions(v string) {
	o.GovcloudRegions = &v
}

// GetRegions returns the Regions field value if set, zero value otherwise.
func (o *Multiregions) GetRegions() string {
	if o == nil || IsNil(o.Regions) {
		var ret string
		return ret
	}
	return *o.Regions
}

// GetRegionsOk returns a tuple with the Regions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Multiregions) GetRegionsOk() (*string, bool) {
	if o == nil || IsNil(o.Regions) {
		return nil, false
	}
	return o.Regions, true
}

// HasRegions returns a boolean if a field has been set.
func (o *Multiregions) HasRegions() bool {
	if o != nil && !IsNil(o.Regions) {
		return true
	}

	return false
}

// SetRegions gets a reference to the given string and assigns it to the Regions field.
func (o *Multiregions) SetRegions(v string) {
	o.Regions = &v
}

func (o Multiregions) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Multiregions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.CloudPlatform) {
		toSerialize["cloud_platform"] = o.CloudPlatform
	}
	if !IsNil(o.GovcloudRegions) {
		toSerialize["govcloud_regions"] = o.GovcloudRegions
	}
	if !IsNil(o.Regions) {
		toSerialize["regions"] = o.Regions
	}
	return toSerialize, nil
}

type NullableMultiregions struct {
	value *Multiregions
	isSet bool
}

func (v NullableMultiregions) Get() *Multiregions {
	return v.value
}

func (v *NullableMultiregions) Set(val *Multiregions) {
	v.value = val
	v.isSet = true
}

func (v NullableMultiregions) IsSet() bool {
	return v.isSet
}

func (v *NullableMultiregions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultiregions(val *Multiregions) *NullableMultiregions {
	return &NullableMultiregions{value: val, isSet: true}
}

func (v NullableMultiregions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultiregions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
