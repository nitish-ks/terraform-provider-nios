/*
Infoblox DHCP API

OpenAPI specification for Infoblox NIOS WAPI DHCP objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dhcp

import (
	"encoding/json"
)

// checks if the Filterrelayagent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Filterrelayagent{}

// Filterrelayagent struct for Filterrelayagent
type Filterrelayagent struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// The circuit_id_name of a DHCP relay agent filter object. This filter identifies the circuit between the remote host and the relay agent. For example, the identifier can be the ingress interface number of the circuit access unit, perhaps concatenated with the unit ID number and slot number. Also, the circuit ID can be an ATM virtual circuit ID or cable data virtual circuit ID.
	CircuitIdName *string `json:"circuit_id_name,omitempty"`
	// The circuit ID substring length.
	CircuitIdSubstringLength *int64 `json:"circuit_id_substring_length,omitempty"`
	// The circuit ID substring offset.
	CircuitIdSubstringOffset *int64 `json:"circuit_id_substring_offset,omitempty"`
	// A descriptive comment of a DHCP relay agent filter object.
	Comment *string `json:"comment,omitempty"`
	// Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.
	ExtAttrs *map[string]ExtAttrs `json:"extattrs,omitempty"`
	// The circuit ID matching rule of a DHCP relay agent filter object. The circuit_id value takes effect only if the value is \"MATCHES_VALUE\".
	IsCircuitId *string `json:"is_circuit_id,omitempty"`
	// Determines if the substring of circuit ID, instead of the full circuit ID, is matched.
	IsCircuitIdSubstring *bool `json:"is_circuit_id_substring,omitempty"`
	// The remote ID matching rule of a DHCP relay agent filter object. The remote_id value takes effect only if the value is Matches_Value.
	IsRemoteId *string `json:"is_remote_id,omitempty"`
	// Determines if the substring of remote ID, instead of the full remote ID, is matched.
	IsRemoteIdSubstring *bool `json:"is_remote_id_substring,omitempty"`
	// The name of a DHCP relay agent filter object.
	Name *string `json:"name,omitempty"`
	// The remote ID name attribute of a relay agent filter object. This filter identifies the remote host. The remote ID name can represent many different things such as the caller ID telephone number for a dial-up connection, a user name for logging in to the ISP, a modem ID, etc. When the remote ID name is defined on the relay agent, the DHCP server will have a trusted relationship to identify the remote host. The remote ID name is considered as a trusted identifier.
	RemoteIdName *string `json:"remote_id_name,omitempty"`
	// The remote ID substring length.
	RemoteIdSubstringLength *int64 `json:"remote_id_substring_length,omitempty"`
	// The remote ID substring offset.
	RemoteIdSubstringOffset *int64 `json:"remote_id_substring_offset,omitempty"`
}

// NewFilterrelayagent instantiates a new Filterrelayagent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilterrelayagent() *Filterrelayagent {
	this := Filterrelayagent{}
	return &this
}

// NewFilterrelayagentWithDefaults instantiates a new Filterrelayagent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilterrelayagentWithDefaults() *Filterrelayagent {
	this := Filterrelayagent{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *Filterrelayagent) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Filterrelayagent) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *Filterrelayagent) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *Filterrelayagent) SetRef(v string) {
	o.Ref = &v
}

// GetCircuitIdName returns the CircuitIdName field value if set, zero value otherwise.
func (o *Filterrelayagent) GetCircuitIdName() string {
	if o == nil || IsNil(o.CircuitIdName) {
		var ret string
		return ret
	}
	return *o.CircuitIdName
}

// GetCircuitIdNameOk returns a tuple with the CircuitIdName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Filterrelayagent) GetCircuitIdNameOk() (*string, bool) {
	if o == nil || IsNil(o.CircuitIdName) {
		return nil, false
	}
	return o.CircuitIdName, true
}

// HasCircuitIdName returns a boolean if a field has been set.
func (o *Filterrelayagent) HasCircuitIdName() bool {
	if o != nil && !IsNil(o.CircuitIdName) {
		return true
	}

	return false
}

// SetCircuitIdName gets a reference to the given string and assigns it to the CircuitIdName field.
func (o *Filterrelayagent) SetCircuitIdName(v string) {
	o.CircuitIdName = &v
}

// GetCircuitIdSubstringLength returns the CircuitIdSubstringLength field value if set, zero value otherwise.
func (o *Filterrelayagent) GetCircuitIdSubstringLength() int64 {
	if o == nil || IsNil(o.CircuitIdSubstringLength) {
		var ret int64
		return ret
	}
	return *o.CircuitIdSubstringLength
}

// GetCircuitIdSubstringLengthOk returns a tuple with the CircuitIdSubstringLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Filterrelayagent) GetCircuitIdSubstringLengthOk() (*int64, bool) {
	if o == nil || IsNil(o.CircuitIdSubstringLength) {
		return nil, false
	}
	return o.CircuitIdSubstringLength, true
}

// HasCircuitIdSubstringLength returns a boolean if a field has been set.
func (o *Filterrelayagent) HasCircuitIdSubstringLength() bool {
	if o != nil && !IsNil(o.CircuitIdSubstringLength) {
		return true
	}

	return false
}

// SetCircuitIdSubstringLength gets a reference to the given int64 and assigns it to the CircuitIdSubstringLength field.
func (o *Filterrelayagent) SetCircuitIdSubstringLength(v int64) {
	o.CircuitIdSubstringLength = &v
}

// GetCircuitIdSubstringOffset returns the CircuitIdSubstringOffset field value if set, zero value otherwise.
func (o *Filterrelayagent) GetCircuitIdSubstringOffset() int64 {
	if o == nil || IsNil(o.CircuitIdSubstringOffset) {
		var ret int64
		return ret
	}
	return *o.CircuitIdSubstringOffset
}

// GetCircuitIdSubstringOffsetOk returns a tuple with the CircuitIdSubstringOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Filterrelayagent) GetCircuitIdSubstringOffsetOk() (*int64, bool) {
	if o == nil || IsNil(o.CircuitIdSubstringOffset) {
		return nil, false
	}
	return o.CircuitIdSubstringOffset, true
}

// HasCircuitIdSubstringOffset returns a boolean if a field has been set.
func (o *Filterrelayagent) HasCircuitIdSubstringOffset() bool {
	if o != nil && !IsNil(o.CircuitIdSubstringOffset) {
		return true
	}

	return false
}

// SetCircuitIdSubstringOffset gets a reference to the given int64 and assigns it to the CircuitIdSubstringOffset field.
func (o *Filterrelayagent) SetCircuitIdSubstringOffset(v int64) {
	o.CircuitIdSubstringOffset = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *Filterrelayagent) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Filterrelayagent) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *Filterrelayagent) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *Filterrelayagent) SetComment(v string) {
	o.Comment = &v
}

// GetExtAttrs returns the ExtAttrs field value if set, zero value otherwise.
func (o *Filterrelayagent) GetExtAttrs() map[string]ExtAttrs {
	if o == nil || IsNil(o.ExtAttrs) {
		var ret map[string]ExtAttrs
		return ret
	}
	return *o.ExtAttrs
}

// GetExtAttrsOk returns a tuple with the ExtAttrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Filterrelayagent) GetExtAttrsOk() (*map[string]ExtAttrs, bool) {
	if o == nil || IsNil(o.ExtAttrs) {
		return nil, false
	}
	return o.ExtAttrs, true
}

// HasExtAttrs returns a boolean if a field has been set.
func (o *Filterrelayagent) HasExtAttrs() bool {
	if o != nil && !IsNil(o.ExtAttrs) {
		return true
	}

	return false
}

// SetExtAttrs gets a reference to the given map[string]ExtAttrs and assigns it to the ExtAttrs field.
func (o *Filterrelayagent) SetExtAttrs(v map[string]ExtAttrs) {
	o.ExtAttrs = &v
}

// GetIsCircuitId returns the IsCircuitId field value if set, zero value otherwise.
func (o *Filterrelayagent) GetIsCircuitId() string {
	if o == nil || IsNil(o.IsCircuitId) {
		var ret string
		return ret
	}
	return *o.IsCircuitId
}

// GetIsCircuitIdOk returns a tuple with the IsCircuitId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Filterrelayagent) GetIsCircuitIdOk() (*string, bool) {
	if o == nil || IsNil(o.IsCircuitId) {
		return nil, false
	}
	return o.IsCircuitId, true
}

// HasIsCircuitId returns a boolean if a field has been set.
func (o *Filterrelayagent) HasIsCircuitId() bool {
	if o != nil && !IsNil(o.IsCircuitId) {
		return true
	}

	return false
}

// SetIsCircuitId gets a reference to the given string and assigns it to the IsCircuitId field.
func (o *Filterrelayagent) SetIsCircuitId(v string) {
	o.IsCircuitId = &v
}

// GetIsCircuitIdSubstring returns the IsCircuitIdSubstring field value if set, zero value otherwise.
func (o *Filterrelayagent) GetIsCircuitIdSubstring() bool {
	if o == nil || IsNil(o.IsCircuitIdSubstring) {
		var ret bool
		return ret
	}
	return *o.IsCircuitIdSubstring
}

// GetIsCircuitIdSubstringOk returns a tuple with the IsCircuitIdSubstring field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Filterrelayagent) GetIsCircuitIdSubstringOk() (*bool, bool) {
	if o == nil || IsNil(o.IsCircuitIdSubstring) {
		return nil, false
	}
	return o.IsCircuitIdSubstring, true
}

// HasIsCircuitIdSubstring returns a boolean if a field has been set.
func (o *Filterrelayagent) HasIsCircuitIdSubstring() bool {
	if o != nil && !IsNil(o.IsCircuitIdSubstring) {
		return true
	}

	return false
}

// SetIsCircuitIdSubstring gets a reference to the given bool and assigns it to the IsCircuitIdSubstring field.
func (o *Filterrelayagent) SetIsCircuitIdSubstring(v bool) {
	o.IsCircuitIdSubstring = &v
}

// GetIsRemoteId returns the IsRemoteId field value if set, zero value otherwise.
func (o *Filterrelayagent) GetIsRemoteId() string {
	if o == nil || IsNil(o.IsRemoteId) {
		var ret string
		return ret
	}
	return *o.IsRemoteId
}

// GetIsRemoteIdOk returns a tuple with the IsRemoteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Filterrelayagent) GetIsRemoteIdOk() (*string, bool) {
	if o == nil || IsNil(o.IsRemoteId) {
		return nil, false
	}
	return o.IsRemoteId, true
}

// HasIsRemoteId returns a boolean if a field has been set.
func (o *Filterrelayagent) HasIsRemoteId() bool {
	if o != nil && !IsNil(o.IsRemoteId) {
		return true
	}

	return false
}

// SetIsRemoteId gets a reference to the given string and assigns it to the IsRemoteId field.
func (o *Filterrelayagent) SetIsRemoteId(v string) {
	o.IsRemoteId = &v
}

// GetIsRemoteIdSubstring returns the IsRemoteIdSubstring field value if set, zero value otherwise.
func (o *Filterrelayagent) GetIsRemoteIdSubstring() bool {
	if o == nil || IsNil(o.IsRemoteIdSubstring) {
		var ret bool
		return ret
	}
	return *o.IsRemoteIdSubstring
}

// GetIsRemoteIdSubstringOk returns a tuple with the IsRemoteIdSubstring field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Filterrelayagent) GetIsRemoteIdSubstringOk() (*bool, bool) {
	if o == nil || IsNil(o.IsRemoteIdSubstring) {
		return nil, false
	}
	return o.IsRemoteIdSubstring, true
}

// HasIsRemoteIdSubstring returns a boolean if a field has been set.
func (o *Filterrelayagent) HasIsRemoteIdSubstring() bool {
	if o != nil && !IsNil(o.IsRemoteIdSubstring) {
		return true
	}

	return false
}

// SetIsRemoteIdSubstring gets a reference to the given bool and assigns it to the IsRemoteIdSubstring field.
func (o *Filterrelayagent) SetIsRemoteIdSubstring(v bool) {
	o.IsRemoteIdSubstring = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Filterrelayagent) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Filterrelayagent) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Filterrelayagent) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Filterrelayagent) SetName(v string) {
	o.Name = &v
}

// GetRemoteIdName returns the RemoteIdName field value if set, zero value otherwise.
func (o *Filterrelayagent) GetRemoteIdName() string {
	if o == nil || IsNil(o.RemoteIdName) {
		var ret string
		return ret
	}
	return *o.RemoteIdName
}

// GetRemoteIdNameOk returns a tuple with the RemoteIdName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Filterrelayagent) GetRemoteIdNameOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteIdName) {
		return nil, false
	}
	return o.RemoteIdName, true
}

// HasRemoteIdName returns a boolean if a field has been set.
func (o *Filterrelayagent) HasRemoteIdName() bool {
	if o != nil && !IsNil(o.RemoteIdName) {
		return true
	}

	return false
}

// SetRemoteIdName gets a reference to the given string and assigns it to the RemoteIdName field.
func (o *Filterrelayagent) SetRemoteIdName(v string) {
	o.RemoteIdName = &v
}

// GetRemoteIdSubstringLength returns the RemoteIdSubstringLength field value if set, zero value otherwise.
func (o *Filterrelayagent) GetRemoteIdSubstringLength() int64 {
	if o == nil || IsNil(o.RemoteIdSubstringLength) {
		var ret int64
		return ret
	}
	return *o.RemoteIdSubstringLength
}

// GetRemoteIdSubstringLengthOk returns a tuple with the RemoteIdSubstringLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Filterrelayagent) GetRemoteIdSubstringLengthOk() (*int64, bool) {
	if o == nil || IsNil(o.RemoteIdSubstringLength) {
		return nil, false
	}
	return o.RemoteIdSubstringLength, true
}

// HasRemoteIdSubstringLength returns a boolean if a field has been set.
func (o *Filterrelayagent) HasRemoteIdSubstringLength() bool {
	if o != nil && !IsNil(o.RemoteIdSubstringLength) {
		return true
	}

	return false
}

// SetRemoteIdSubstringLength gets a reference to the given int64 and assigns it to the RemoteIdSubstringLength field.
func (o *Filterrelayagent) SetRemoteIdSubstringLength(v int64) {
	o.RemoteIdSubstringLength = &v
}

// GetRemoteIdSubstringOffset returns the RemoteIdSubstringOffset field value if set, zero value otherwise.
func (o *Filterrelayagent) GetRemoteIdSubstringOffset() int64 {
	if o == nil || IsNil(o.RemoteIdSubstringOffset) {
		var ret int64
		return ret
	}
	return *o.RemoteIdSubstringOffset
}

// GetRemoteIdSubstringOffsetOk returns a tuple with the RemoteIdSubstringOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Filterrelayagent) GetRemoteIdSubstringOffsetOk() (*int64, bool) {
	if o == nil || IsNil(o.RemoteIdSubstringOffset) {
		return nil, false
	}
	return o.RemoteIdSubstringOffset, true
}

// HasRemoteIdSubstringOffset returns a boolean if a field has been set.
func (o *Filterrelayagent) HasRemoteIdSubstringOffset() bool {
	if o != nil && !IsNil(o.RemoteIdSubstringOffset) {
		return true
	}

	return false
}

// SetRemoteIdSubstringOffset gets a reference to the given int64 and assigns it to the RemoteIdSubstringOffset field.
func (o *Filterrelayagent) SetRemoteIdSubstringOffset(v int64) {
	o.RemoteIdSubstringOffset = &v
}

func (o Filterrelayagent) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Filterrelayagent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.CircuitIdName) {
		toSerialize["circuit_id_name"] = o.CircuitIdName
	}
	if !IsNil(o.CircuitIdSubstringLength) {
		toSerialize["circuit_id_substring_length"] = o.CircuitIdSubstringLength
	}
	if !IsNil(o.CircuitIdSubstringOffset) {
		toSerialize["circuit_id_substring_offset"] = o.CircuitIdSubstringOffset
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.ExtAttrs) {
		toSerialize["extattrs"] = o.ExtAttrs
	}
	if !IsNil(o.IsCircuitId) {
		toSerialize["is_circuit_id"] = o.IsCircuitId
	}
	if !IsNil(o.IsCircuitIdSubstring) {
		toSerialize["is_circuit_id_substring"] = o.IsCircuitIdSubstring
	}
	if !IsNil(o.IsRemoteId) {
		toSerialize["is_remote_id"] = o.IsRemoteId
	}
	if !IsNil(o.IsRemoteIdSubstring) {
		toSerialize["is_remote_id_substring"] = o.IsRemoteIdSubstring
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.RemoteIdName) {
		toSerialize["remote_id_name"] = o.RemoteIdName
	}
	if !IsNil(o.RemoteIdSubstringLength) {
		toSerialize["remote_id_substring_length"] = o.RemoteIdSubstringLength
	}
	if !IsNil(o.RemoteIdSubstringOffset) {
		toSerialize["remote_id_substring_offset"] = o.RemoteIdSubstringOffset
	}
	return toSerialize, nil
}

type NullableFilterrelayagent struct {
	value *Filterrelayagent
	isSet bool
}

func (v NullableFilterrelayagent) Get() *Filterrelayagent {
	return v.value
}

func (v *NullableFilterrelayagent) Set(val *Filterrelayagent) {
	v.value = val
	v.isSet = true
}

func (v NullableFilterrelayagent) IsSet() bool {
	return v.isSet
}

func (v *NullableFilterrelayagent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilterrelayagent(val *Filterrelayagent) *NullableFilterrelayagent {
	return &NullableFilterrelayagent{value: val, isSet: true}
}

func (v NullableFilterrelayagent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilterrelayagent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
