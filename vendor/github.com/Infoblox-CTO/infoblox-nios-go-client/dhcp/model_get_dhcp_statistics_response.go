/*
Infoblox DHCP API

OpenAPI specification for Infoblox NIOS WAPI DHCP objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dhcp

import (
	"encoding/json"
	"fmt"
)

// GetDhcpStatisticsResponse - struct for GetDhcpStatisticsResponse
type GetDhcpStatisticsResponse struct {
	DhcpStatistics                          *DhcpStatistics
	GetDhcpStatisticsResponseObjectAsResult *GetDhcpStatisticsResponseObjectAsResult
}

// DhcpStatisticsAsGetDhcpStatisticsResponse is a convenience function that returns DhcpStatistics wrapped in GetDhcpStatisticsResponse
func DhcpStatisticsAsGetDhcpStatisticsResponse(v *DhcpStatistics) GetDhcpStatisticsResponse {
	return GetDhcpStatisticsResponse{
		DhcpStatistics: v,
	}
}

// GetDhcpStatisticsResponseObjectAsResultAsGetDhcpStatisticsResponse is a convenience function that returns GetDhcpStatisticsResponseObjectAsResult wrapped in GetDhcpStatisticsResponse
func GetDhcpStatisticsResponseObjectAsResultAsGetDhcpStatisticsResponse(v *GetDhcpStatisticsResponseObjectAsResult) GetDhcpStatisticsResponse {
	return GetDhcpStatisticsResponse{
		GetDhcpStatisticsResponseObjectAsResult: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetDhcpStatisticsResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into DhcpStatistics
	err = newStrictDecoder(data).Decode(&dst.DhcpStatistics)
	if err == nil {
		jsonDhcpStatistics, _ := json.Marshal(dst.DhcpStatistics)
		if string(jsonDhcpStatistics) == "{}" { // empty struct
			dst.DhcpStatistics = nil
		} else {
			match++
		}
	} else {
		dst.DhcpStatistics = nil
	}

	// try to unmarshal data into GetDhcpStatisticsResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetDhcpStatisticsResponseObjectAsResult)
	if err == nil {
		jsonGetDhcpStatisticsResponseObjectAsResult, _ := json.Marshal(dst.GetDhcpStatisticsResponseObjectAsResult)
		if string(jsonGetDhcpStatisticsResponseObjectAsResult) == "{}" { // empty struct
			dst.GetDhcpStatisticsResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetDhcpStatisticsResponseObjectAsResult = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.DhcpStatistics = nil
		dst.GetDhcpStatisticsResponseObjectAsResult = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetDhcpStatisticsResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetDhcpStatisticsResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetDhcpStatisticsResponse) MarshalJSON() ([]byte, error) {
	if src.DhcpStatistics != nil {
		return json.Marshal(&src.DhcpStatistics)
	}

	if src.GetDhcpStatisticsResponseObjectAsResult != nil {
		return json.Marshal(&src.GetDhcpStatisticsResponseObjectAsResult)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetDhcpStatisticsResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.DhcpStatistics != nil {
		return obj.DhcpStatistics
	}

	if obj.GetDhcpStatisticsResponseObjectAsResult != nil {
		return obj.GetDhcpStatisticsResponseObjectAsResult
	}

	// all schemas are nil
	return nil
}

type NullableGetDhcpStatisticsResponse struct {
	value *GetDhcpStatisticsResponse
	isSet bool
}

func (v NullableGetDhcpStatisticsResponse) Get() *GetDhcpStatisticsResponse {
	return v.value
}

func (v *NullableGetDhcpStatisticsResponse) Set(val *GetDhcpStatisticsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDhcpStatisticsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDhcpStatisticsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDhcpStatisticsResponse(val *GetDhcpStatisticsResponse) *NullableGetDhcpStatisticsResponse {
	return &NullableGetDhcpStatisticsResponse{value: val, isSet: true}
}

func (v NullableGetDhcpStatisticsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDhcpStatisticsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
