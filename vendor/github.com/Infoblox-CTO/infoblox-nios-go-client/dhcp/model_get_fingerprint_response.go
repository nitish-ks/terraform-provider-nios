/*
Infoblox DHCP API

OpenAPI specification for Infoblox NIOS WAPI DHCP objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dhcp

import (
	"encoding/json"
	"fmt"
)

// GetFingerprintResponse - struct for GetFingerprintResponse
type GetFingerprintResponse struct {
	Fingerprint                          *Fingerprint
	GetFingerprintResponseObjectAsResult *GetFingerprintResponseObjectAsResult
}

// FingerprintAsGetFingerprintResponse is a convenience function that returns Fingerprint wrapped in GetFingerprintResponse
func FingerprintAsGetFingerprintResponse(v *Fingerprint) GetFingerprintResponse {
	return GetFingerprintResponse{
		Fingerprint: v,
	}
}

// GetFingerprintResponseObjectAsResultAsGetFingerprintResponse is a convenience function that returns GetFingerprintResponseObjectAsResult wrapped in GetFingerprintResponse
func GetFingerprintResponseObjectAsResultAsGetFingerprintResponse(v *GetFingerprintResponseObjectAsResult) GetFingerprintResponse {
	return GetFingerprintResponse{
		GetFingerprintResponseObjectAsResult: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetFingerprintResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into Fingerprint
	err = newStrictDecoder(data).Decode(&dst.Fingerprint)
	if err == nil {
		jsonFingerprint, _ := json.Marshal(dst.Fingerprint)
		if string(jsonFingerprint) == "{}" { // empty struct
			dst.Fingerprint = nil
		} else {
			match++
		}
	} else {
		dst.Fingerprint = nil
	}

	// try to unmarshal data into GetFingerprintResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetFingerprintResponseObjectAsResult)
	if err == nil {
		jsonGetFingerprintResponseObjectAsResult, _ := json.Marshal(dst.GetFingerprintResponseObjectAsResult)
		if string(jsonGetFingerprintResponseObjectAsResult) == "{}" { // empty struct
			dst.GetFingerprintResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetFingerprintResponseObjectAsResult = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.Fingerprint = nil
		dst.GetFingerprintResponseObjectAsResult = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetFingerprintResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetFingerprintResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetFingerprintResponse) MarshalJSON() ([]byte, error) {
	if src.Fingerprint != nil {
		return json.Marshal(&src.Fingerprint)
	}

	if src.GetFingerprintResponseObjectAsResult != nil {
		return json.Marshal(&src.GetFingerprintResponseObjectAsResult)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetFingerprintResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.Fingerprint != nil {
		return obj.Fingerprint
	}

	if obj.GetFingerprintResponseObjectAsResult != nil {
		return obj.GetFingerprintResponseObjectAsResult
	}

	// all schemas are nil
	return nil
}

type NullableGetFingerprintResponse struct {
	value *GetFingerprintResponse
	isSet bool
}

func (v NullableGetFingerprintResponse) Get() *GetFingerprintResponse {
	return v.value
}

func (v *NullableGetFingerprintResponse) Set(val *GetFingerprintResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetFingerprintResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetFingerprintResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetFingerprintResponse(val *GetFingerprintResponse) *NullableGetFingerprintResponse {
	return &NullableGetFingerprintResponse{value: val, isSet: true}
}

func (v NullableGetFingerprintResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetFingerprintResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
