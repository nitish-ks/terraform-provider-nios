/*
Infoblox DHCP API

OpenAPI specification for Infoblox NIOS WAPI DHCP objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dhcp

import (
	"encoding/json"
	"fmt"
)

// GetFixedaddresstemplateResponse - struct for GetFixedaddresstemplateResponse
type GetFixedaddresstemplateResponse struct {
	Fixedaddresstemplate                          *Fixedaddresstemplate
	GetFixedaddresstemplateResponseObjectAsResult *GetFixedaddresstemplateResponseObjectAsResult
}

// FixedaddresstemplateAsGetFixedaddresstemplateResponse is a convenience function that returns Fixedaddresstemplate wrapped in GetFixedaddresstemplateResponse
func FixedaddresstemplateAsGetFixedaddresstemplateResponse(v *Fixedaddresstemplate) GetFixedaddresstemplateResponse {
	return GetFixedaddresstemplateResponse{
		Fixedaddresstemplate: v,
	}
}

// GetFixedaddresstemplateResponseObjectAsResultAsGetFixedaddresstemplateResponse is a convenience function that returns GetFixedaddresstemplateResponseObjectAsResult wrapped in GetFixedaddresstemplateResponse
func GetFixedaddresstemplateResponseObjectAsResultAsGetFixedaddresstemplateResponse(v *GetFixedaddresstemplateResponseObjectAsResult) GetFixedaddresstemplateResponse {
	return GetFixedaddresstemplateResponse{
		GetFixedaddresstemplateResponseObjectAsResult: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetFixedaddresstemplateResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into Fixedaddresstemplate
	err = newStrictDecoder(data).Decode(&dst.Fixedaddresstemplate)
	if err == nil {
		jsonFixedaddresstemplate, _ := json.Marshal(dst.Fixedaddresstemplate)
		if string(jsonFixedaddresstemplate) == "{}" { // empty struct
			dst.Fixedaddresstemplate = nil
		} else {
			match++
		}
	} else {
		dst.Fixedaddresstemplate = nil
	}

	// try to unmarshal data into GetFixedaddresstemplateResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetFixedaddresstemplateResponseObjectAsResult)
	if err == nil {
		jsonGetFixedaddresstemplateResponseObjectAsResult, _ := json.Marshal(dst.GetFixedaddresstemplateResponseObjectAsResult)
		if string(jsonGetFixedaddresstemplateResponseObjectAsResult) == "{}" { // empty struct
			dst.GetFixedaddresstemplateResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetFixedaddresstemplateResponseObjectAsResult = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.Fixedaddresstemplate = nil
		dst.GetFixedaddresstemplateResponseObjectAsResult = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetFixedaddresstemplateResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetFixedaddresstemplateResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetFixedaddresstemplateResponse) MarshalJSON() ([]byte, error) {
	if src.Fixedaddresstemplate != nil {
		return json.Marshal(&src.Fixedaddresstemplate)
	}

	if src.GetFixedaddresstemplateResponseObjectAsResult != nil {
		return json.Marshal(&src.GetFixedaddresstemplateResponseObjectAsResult)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetFixedaddresstemplateResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.Fixedaddresstemplate != nil {
		return obj.Fixedaddresstemplate
	}

	if obj.GetFixedaddresstemplateResponseObjectAsResult != nil {
		return obj.GetFixedaddresstemplateResponseObjectAsResult
	}

	// all schemas are nil
	return nil
}

type NullableGetFixedaddresstemplateResponse struct {
	value *GetFixedaddresstemplateResponse
	isSet bool
}

func (v NullableGetFixedaddresstemplateResponse) Get() *GetFixedaddresstemplateResponse {
	return v.value
}

func (v *NullableGetFixedaddresstemplateResponse) Set(val *GetFixedaddresstemplateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetFixedaddresstemplateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetFixedaddresstemplateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetFixedaddresstemplateResponse(val *GetFixedaddresstemplateResponse) *NullableGetFixedaddresstemplateResponse {
	return &NullableGetFixedaddresstemplateResponse{value: val, isSet: true}
}

func (v NullableGetFixedaddresstemplateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetFixedaddresstemplateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
