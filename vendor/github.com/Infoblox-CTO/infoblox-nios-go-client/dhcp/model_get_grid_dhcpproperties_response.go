/*
Infoblox DHCP API

OpenAPI specification for Infoblox NIOS WAPI DHCP objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dhcp

import (
	"encoding/json"
	"fmt"
)

// GetGridDhcppropertiesResponse - struct for GetGridDhcppropertiesResponse
type GetGridDhcppropertiesResponse struct {
	GetGridDhcppropertiesResponseObjectAsResult *GetGridDhcppropertiesResponseObjectAsResult
	GridDhcpproperties                          *GridDhcpproperties
}

// GetGridDhcppropertiesResponseObjectAsResultAsGetGridDhcppropertiesResponse is a convenience function that returns GetGridDhcppropertiesResponseObjectAsResult wrapped in GetGridDhcppropertiesResponse
func GetGridDhcppropertiesResponseObjectAsResultAsGetGridDhcppropertiesResponse(v *GetGridDhcppropertiesResponseObjectAsResult) GetGridDhcppropertiesResponse {
	return GetGridDhcppropertiesResponse{
		GetGridDhcppropertiesResponseObjectAsResult: v,
	}
}

// GridDhcppropertiesAsGetGridDhcppropertiesResponse is a convenience function that returns GridDhcpproperties wrapped in GetGridDhcppropertiesResponse
func GridDhcppropertiesAsGetGridDhcppropertiesResponse(v *GridDhcpproperties) GetGridDhcppropertiesResponse {
	return GetGridDhcppropertiesResponse{
		GridDhcpproperties: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetGridDhcppropertiesResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetGridDhcppropertiesResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetGridDhcppropertiesResponseObjectAsResult)
	if err == nil {
		jsonGetGridDhcppropertiesResponseObjectAsResult, _ := json.Marshal(dst.GetGridDhcppropertiesResponseObjectAsResult)
		if string(jsonGetGridDhcppropertiesResponseObjectAsResult) == "{}" { // empty struct
			dst.GetGridDhcppropertiesResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetGridDhcppropertiesResponseObjectAsResult = nil
	}

	// try to unmarshal data into GridDhcpproperties
	err = newStrictDecoder(data).Decode(&dst.GridDhcpproperties)
	if err == nil {
		jsonGridDhcpproperties, _ := json.Marshal(dst.GridDhcpproperties)
		if string(jsonGridDhcpproperties) == "{}" { // empty struct
			dst.GridDhcpproperties = nil
		} else {
			match++
		}
	} else {
		dst.GridDhcpproperties = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetGridDhcppropertiesResponseObjectAsResult = nil
		dst.GridDhcpproperties = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetGridDhcppropertiesResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetGridDhcppropertiesResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetGridDhcppropertiesResponse) MarshalJSON() ([]byte, error) {
	if src.GetGridDhcppropertiesResponseObjectAsResult != nil {
		return json.Marshal(&src.GetGridDhcppropertiesResponseObjectAsResult)
	}

	if src.GridDhcpproperties != nil {
		return json.Marshal(&src.GridDhcpproperties)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetGridDhcppropertiesResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GetGridDhcppropertiesResponseObjectAsResult != nil {
		return obj.GetGridDhcppropertiesResponseObjectAsResult
	}

	if obj.GridDhcpproperties != nil {
		return obj.GridDhcpproperties
	}

	// all schemas are nil
	return nil
}

type NullableGetGridDhcppropertiesResponse struct {
	value *GetGridDhcppropertiesResponse
	isSet bool
}

func (v NullableGetGridDhcppropertiesResponse) Get() *GetGridDhcppropertiesResponse {
	return v.value
}

func (v *NullableGetGridDhcppropertiesResponse) Set(val *GetGridDhcppropertiesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetGridDhcppropertiesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetGridDhcppropertiesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetGridDhcppropertiesResponse(val *GetGridDhcppropertiesResponse) *NullableGetGridDhcppropertiesResponse {
	return &NullableGetGridDhcppropertiesResponse{value: val, isSet: true}
}

func (v NullableGetGridDhcppropertiesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetGridDhcppropertiesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
