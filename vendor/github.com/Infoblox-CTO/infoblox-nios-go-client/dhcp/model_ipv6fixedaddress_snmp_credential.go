/*
Infoblox DHCP API

OpenAPI specification for Infoblox NIOS WAPI DHCP objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dhcp

import (
	"encoding/json"
)

// checks if the Ipv6fixedaddressSnmpCredential type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Ipv6fixedaddressSnmpCredential{}

// Ipv6fixedaddressSnmpCredential struct for Ipv6fixedaddressSnmpCredential
type Ipv6fixedaddressSnmpCredential struct {
	// The public community string.
	CommunityString *string `json:"community_string,omitempty"`
	// Comments for the SNMPv1 and SNMPv2 users.
	Comment *string `json:"comment,omitempty"`
	// Group for the SNMPv1 and SNMPv2 credential.
	CredentialGroup      *string `json:"credential_group,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Ipv6fixedaddressSnmpCredential Ipv6fixedaddressSnmpCredential

// NewIpv6fixedaddressSnmpCredential instantiates a new Ipv6fixedaddressSnmpCredential object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpv6fixedaddressSnmpCredential() *Ipv6fixedaddressSnmpCredential {
	this := Ipv6fixedaddressSnmpCredential{}
	return &this
}

// NewIpv6fixedaddressSnmpCredentialWithDefaults instantiates a new Ipv6fixedaddressSnmpCredential object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpv6fixedaddressSnmpCredentialWithDefaults() *Ipv6fixedaddressSnmpCredential {
	this := Ipv6fixedaddressSnmpCredential{}
	return &this
}

// GetCommunityString returns the CommunityString field value if set, zero value otherwise.
func (o *Ipv6fixedaddressSnmpCredential) GetCommunityString() string {
	if o == nil || IsNil(o.CommunityString) {
		var ret string
		return ret
	}
	return *o.CommunityString
}

// GetCommunityStringOk returns a tuple with the CommunityString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ipv6fixedaddressSnmpCredential) GetCommunityStringOk() (*string, bool) {
	if o == nil || IsNil(o.CommunityString) {
		return nil, false
	}
	return o.CommunityString, true
}

// HasCommunityString returns a boolean if a field has been set.
func (o *Ipv6fixedaddressSnmpCredential) HasCommunityString() bool {
	if o != nil && !IsNil(o.CommunityString) {
		return true
	}

	return false
}

// SetCommunityString gets a reference to the given string and assigns it to the CommunityString field.
func (o *Ipv6fixedaddressSnmpCredential) SetCommunityString(v string) {
	o.CommunityString = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *Ipv6fixedaddressSnmpCredential) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ipv6fixedaddressSnmpCredential) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *Ipv6fixedaddressSnmpCredential) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *Ipv6fixedaddressSnmpCredential) SetComment(v string) {
	o.Comment = &v
}

// GetCredentialGroup returns the CredentialGroup field value if set, zero value otherwise.
func (o *Ipv6fixedaddressSnmpCredential) GetCredentialGroup() string {
	if o == nil || IsNil(o.CredentialGroup) {
		var ret string
		return ret
	}
	return *o.CredentialGroup
}

// GetCredentialGroupOk returns a tuple with the CredentialGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ipv6fixedaddressSnmpCredential) GetCredentialGroupOk() (*string, bool) {
	if o == nil || IsNil(o.CredentialGroup) {
		return nil, false
	}
	return o.CredentialGroup, true
}

// HasCredentialGroup returns a boolean if a field has been set.
func (o *Ipv6fixedaddressSnmpCredential) HasCredentialGroup() bool {
	if o != nil && !IsNil(o.CredentialGroup) {
		return true
	}

	return false
}

// SetCredentialGroup gets a reference to the given string and assigns it to the CredentialGroup field.
func (o *Ipv6fixedaddressSnmpCredential) SetCredentialGroup(v string) {
	o.CredentialGroup = &v
}

func (o Ipv6fixedaddressSnmpCredential) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Ipv6fixedaddressSnmpCredential) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CommunityString) {
		toSerialize["community_string"] = o.CommunityString
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.CredentialGroup) {
		toSerialize["credential_group"] = o.CredentialGroup
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Ipv6fixedaddressSnmpCredential) UnmarshalJSON(data []byte) (err error) {
	varIpv6fixedaddressSnmpCredential := _Ipv6fixedaddressSnmpCredential{}

	err = json.Unmarshal(data, &varIpv6fixedaddressSnmpCredential)

	if err != nil {
		return err
	}

	*o = Ipv6fixedaddressSnmpCredential(varIpv6fixedaddressSnmpCredential)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "community_string")
		delete(additionalProperties, "comment")
		delete(additionalProperties, "credential_group")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIpv6fixedaddressSnmpCredential struct {
	value *Ipv6fixedaddressSnmpCredential
	isSet bool
}

func (v NullableIpv6fixedaddressSnmpCredential) Get() *Ipv6fixedaddressSnmpCredential {
	return v.value
}

func (v *NullableIpv6fixedaddressSnmpCredential) Set(val *Ipv6fixedaddressSnmpCredential) {
	v.value = val
	v.isSet = true
}

func (v NullableIpv6fixedaddressSnmpCredential) IsSet() bool {
	return v.isSet
}

func (v *NullableIpv6fixedaddressSnmpCredential) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpv6fixedaddressSnmpCredential(val *Ipv6fixedaddressSnmpCredential) *NullableIpv6fixedaddressSnmpCredential {
	return &NullableIpv6fixedaddressSnmpCredential{value: val, isSet: true}
}

func (v NullableIpv6fixedaddressSnmpCredential) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpv6fixedaddressSnmpCredential) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
