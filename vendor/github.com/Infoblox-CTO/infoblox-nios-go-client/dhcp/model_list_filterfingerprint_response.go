/*
Infoblox DHCP API

OpenAPI specification for Infoblox NIOS WAPI DHCP objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dhcp

import (
	"encoding/json"
	"fmt"
)

// ListFilterfingerprintResponse - struct for ListFilterfingerprintResponse
type ListFilterfingerprintResponse struct {
	ListFilterfingerprintResponseObject *ListFilterfingerprintResponseObject
	ArrayOfFilterfingerprint            *[]Filterfingerprint
}

// ListFilterfingerprintResponseObjectAsListFilterfingerprintResponse is a convenience function that returns ListFilterfingerprintResponseObject wrapped in ListFilterfingerprintResponse
func ListFilterfingerprintResponseObjectAsListFilterfingerprintResponse(v *ListFilterfingerprintResponseObject) ListFilterfingerprintResponse {
	return ListFilterfingerprintResponse{
		ListFilterfingerprintResponseObject: v,
	}
}

// []FilterfingerprintAsListFilterfingerprintResponse is a convenience function that returns []Filterfingerprint wrapped in ListFilterfingerprintResponse
func ArrayOfFilterfingerprintAsListFilterfingerprintResponse(v *[]Filterfingerprint) ListFilterfingerprintResponse {
	return ListFilterfingerprintResponse{
		ArrayOfFilterfingerprint: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListFilterfingerprintResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListFilterfingerprintResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListFilterfingerprintResponseObject)
	if err == nil {
		jsonListFilterfingerprintResponseObject, _ := json.Marshal(dst.ListFilterfingerprintResponseObject)
		if string(jsonListFilterfingerprintResponseObject) == "{}" { // empty struct
			dst.ListFilterfingerprintResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListFilterfingerprintResponseObject = nil
	}

	// try to unmarshal data into ArrayOfFilterfingerprint
	err = newStrictDecoder(data).Decode(&dst.ArrayOfFilterfingerprint)
	if err == nil {
		jsonArrayOfFilterfingerprint, _ := json.Marshal(dst.ArrayOfFilterfingerprint)
		if string(jsonArrayOfFilterfingerprint) == "{}" { // empty struct
			dst.ArrayOfFilterfingerprint = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfFilterfingerprint = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListFilterfingerprintResponseObject = nil
		dst.ArrayOfFilterfingerprint = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListFilterfingerprintResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListFilterfingerprintResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListFilterfingerprintResponse) MarshalJSON() ([]byte, error) {
	if src.ListFilterfingerprintResponseObject != nil {
		return json.Marshal(&src.ListFilterfingerprintResponseObject)
	}

	if src.ArrayOfFilterfingerprint != nil {
		return json.Marshal(&src.ArrayOfFilterfingerprint)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListFilterfingerprintResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListFilterfingerprintResponseObject != nil {
		return obj.ListFilterfingerprintResponseObject
	}

	if obj.ArrayOfFilterfingerprint != nil {
		return obj.ArrayOfFilterfingerprint
	}

	// all schemas are nil
	return nil
}

type NullableListFilterfingerprintResponse struct {
	value *ListFilterfingerprintResponse
	isSet bool
}

func (v NullableListFilterfingerprintResponse) Get() *ListFilterfingerprintResponse {
	return v.value
}

func (v *NullableListFilterfingerprintResponse) Set(val *ListFilterfingerprintResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListFilterfingerprintResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListFilterfingerprintResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListFilterfingerprintResponse(val *ListFilterfingerprintResponse) *NullableListFilterfingerprintResponse {
	return &NullableListFilterfingerprintResponse{value: val, isSet: true}
}

func (v NullableListFilterfingerprintResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListFilterfingerprintResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
