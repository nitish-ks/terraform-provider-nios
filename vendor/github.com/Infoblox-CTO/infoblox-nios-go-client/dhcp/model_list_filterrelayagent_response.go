/*
Infoblox DHCP API

OpenAPI specification for Infoblox NIOS WAPI DHCP objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dhcp

import (
	"encoding/json"
	"fmt"
)

// ListFilterrelayagentResponse - struct for ListFilterrelayagentResponse
type ListFilterrelayagentResponse struct {
	ListFilterrelayagentResponseObject *ListFilterrelayagentResponseObject
	ArrayOfFilterrelayagent            *[]Filterrelayagent
}

// ListFilterrelayagentResponseObjectAsListFilterrelayagentResponse is a convenience function that returns ListFilterrelayagentResponseObject wrapped in ListFilterrelayagentResponse
func ListFilterrelayagentResponseObjectAsListFilterrelayagentResponse(v *ListFilterrelayagentResponseObject) ListFilterrelayagentResponse {
	return ListFilterrelayagentResponse{
		ListFilterrelayagentResponseObject: v,
	}
}

// []FilterrelayagentAsListFilterrelayagentResponse is a convenience function that returns []Filterrelayagent wrapped in ListFilterrelayagentResponse
func ArrayOfFilterrelayagentAsListFilterrelayagentResponse(v *[]Filterrelayagent) ListFilterrelayagentResponse {
	return ListFilterrelayagentResponse{
		ArrayOfFilterrelayagent: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListFilterrelayagentResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListFilterrelayagentResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListFilterrelayagentResponseObject)
	if err == nil {
		jsonListFilterrelayagentResponseObject, _ := json.Marshal(dst.ListFilterrelayagentResponseObject)
		if string(jsonListFilterrelayagentResponseObject) == "{}" { // empty struct
			dst.ListFilterrelayagentResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListFilterrelayagentResponseObject = nil
	}

	// try to unmarshal data into ArrayOfFilterrelayagent
	err = newStrictDecoder(data).Decode(&dst.ArrayOfFilterrelayagent)
	if err == nil {
		jsonArrayOfFilterrelayagent, _ := json.Marshal(dst.ArrayOfFilterrelayagent)
		if string(jsonArrayOfFilterrelayagent) == "{}" { // empty struct
			dst.ArrayOfFilterrelayagent = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfFilterrelayagent = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListFilterrelayagentResponseObject = nil
		dst.ArrayOfFilterrelayagent = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListFilterrelayagentResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListFilterrelayagentResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListFilterrelayagentResponse) MarshalJSON() ([]byte, error) {
	if src.ListFilterrelayagentResponseObject != nil {
		return json.Marshal(&src.ListFilterrelayagentResponseObject)
	}

	if src.ArrayOfFilterrelayagent != nil {
		return json.Marshal(&src.ArrayOfFilterrelayagent)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListFilterrelayagentResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListFilterrelayagentResponseObject != nil {
		return obj.ListFilterrelayagentResponseObject
	}

	if obj.ArrayOfFilterrelayagent != nil {
		return obj.ArrayOfFilterrelayagent
	}

	// all schemas are nil
	return nil
}

type NullableListFilterrelayagentResponse struct {
	value *ListFilterrelayagentResponse
	isSet bool
}

func (v NullableListFilterrelayagentResponse) Get() *ListFilterrelayagentResponse {
	return v.value
}

func (v *NullableListFilterrelayagentResponse) Set(val *ListFilterrelayagentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListFilterrelayagentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListFilterrelayagentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListFilterrelayagentResponse(val *ListFilterrelayagentResponse) *NullableListFilterrelayagentResponse {
	return &NullableListFilterrelayagentResponse{value: val, isSet: true}
}

func (v NullableListFilterrelayagentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListFilterrelayagentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
