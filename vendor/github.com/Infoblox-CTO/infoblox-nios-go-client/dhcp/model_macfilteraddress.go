/*
Infoblox DHCP API

OpenAPI specification for Infoblox NIOS WAPI DHCP objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dhcp

import (
	"encoding/json"
)

// checks if the Macfilteraddress type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Macfilteraddress{}

// Macfilteraddress struct for Macfilteraddress
type Macfilteraddress struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// The absolute UNIX time (in seconds) since the address was last authenticated.
	AuthenticationTime *int64 `json:"authentication_time,omitempty"`
	// Comment for the MAC filter address; maximum 256 characters.
	Comment *string `json:"comment,omitempty"`
	// The absolute UNIX time (in seconds) until the address expires.
	ExpirationTime *int64 `json:"expiration_time,omitempty"`
	// Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.
	ExtAttrs *map[string]ExtAttrs `json:"extattrs,omitempty"`
	// Name of the MAC filter to which this address belongs.
	Filter *string `json:"filter,omitempty"`
	// DHCP fingerprint for the address.
	Fingerprint *string `json:"fingerprint,omitempty"`
	// Guest custom field 1.
	GuestCustomField1 *string `json:"guest_custom_field1,omitempty"`
	// Guest custom field 2.
	GuestCustomField2 *string `json:"guest_custom_field2,omitempty"`
	// Guest custom field 3.
	GuestCustomField3 *string `json:"guest_custom_field3,omitempty"`
	// Guest custom field 4.
	GuestCustomField4 *string `json:"guest_custom_field4,omitempty"`
	// Guest e-mail.
	GuestEmail *string `json:"guest_email,omitempty"`
	// Guest first name.
	GuestFirstName *string `json:"guest_first_name,omitempty"`
	// Guest last name.
	GuestLastName *string `json:"guest_last_name,omitempty"`
	// Guest middle name.
	GuestMiddleName *string `json:"guest_middle_name,omitempty"`
	// Guest phone number.
	GuestPhone *string `json:"guest_phone,omitempty"`
	// Determines if the user has been authenticated or not.
	IsRegisteredUser *bool `json:"is_registered_user,omitempty"`
	// MAC Address.
	Mac *string `json:"mac,omitempty"`
	// Determines if MAC address expiration is enabled or disabled.
	NeverExpires *bool `json:"never_expires,omitempty"`
	// Reserved for future use.
	ReservedForInfoblox *string `json:"reserved_for_infoblox,omitempty"`
	// Username for authenticated DHCP purposes.
	Username *string `json:"username,omitempty"`
}

// NewMacfilteraddress instantiates a new Macfilteraddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMacfilteraddress() *Macfilteraddress {
	this := Macfilteraddress{}
	return &this
}

// NewMacfilteraddressWithDefaults instantiates a new Macfilteraddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMacfilteraddressWithDefaults() *Macfilteraddress {
	this := Macfilteraddress{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *Macfilteraddress) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Macfilteraddress) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *Macfilteraddress) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *Macfilteraddress) SetRef(v string) {
	o.Ref = &v
}

// GetAuthenticationTime returns the AuthenticationTime field value if set, zero value otherwise.
func (o *Macfilteraddress) GetAuthenticationTime() int64 {
	if o == nil || IsNil(o.AuthenticationTime) {
		var ret int64
		return ret
	}
	return *o.AuthenticationTime
}

// GetAuthenticationTimeOk returns a tuple with the AuthenticationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Macfilteraddress) GetAuthenticationTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.AuthenticationTime) {
		return nil, false
	}
	return o.AuthenticationTime, true
}

// HasAuthenticationTime returns a boolean if a field has been set.
func (o *Macfilteraddress) HasAuthenticationTime() bool {
	if o != nil && !IsNil(o.AuthenticationTime) {
		return true
	}

	return false
}

// SetAuthenticationTime gets a reference to the given int64 and assigns it to the AuthenticationTime field.
func (o *Macfilteraddress) SetAuthenticationTime(v int64) {
	o.AuthenticationTime = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *Macfilteraddress) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Macfilteraddress) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *Macfilteraddress) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *Macfilteraddress) SetComment(v string) {
	o.Comment = &v
}

// GetExpirationTime returns the ExpirationTime field value if set, zero value otherwise.
func (o *Macfilteraddress) GetExpirationTime() int64 {
	if o == nil || IsNil(o.ExpirationTime) {
		var ret int64
		return ret
	}
	return *o.ExpirationTime
}

// GetExpirationTimeOk returns a tuple with the ExpirationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Macfilteraddress) GetExpirationTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.ExpirationTime) {
		return nil, false
	}
	return o.ExpirationTime, true
}

// HasExpirationTime returns a boolean if a field has been set.
func (o *Macfilteraddress) HasExpirationTime() bool {
	if o != nil && !IsNil(o.ExpirationTime) {
		return true
	}

	return false
}

// SetExpirationTime gets a reference to the given int64 and assigns it to the ExpirationTime field.
func (o *Macfilteraddress) SetExpirationTime(v int64) {
	o.ExpirationTime = &v
}

// GetExtAttrs returns the ExtAttrs field value if set, zero value otherwise.
func (o *Macfilteraddress) GetExtAttrs() map[string]ExtAttrs {
	if o == nil || IsNil(o.ExtAttrs) {
		var ret map[string]ExtAttrs
		return ret
	}
	return *o.ExtAttrs
}

// GetExtAttrsOk returns a tuple with the ExtAttrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Macfilteraddress) GetExtAttrsOk() (*map[string]ExtAttrs, bool) {
	if o == nil || IsNil(o.ExtAttrs) {
		return nil, false
	}
	return o.ExtAttrs, true
}

// HasExtAttrs returns a boolean if a field has been set.
func (o *Macfilteraddress) HasExtAttrs() bool {
	if o != nil && !IsNil(o.ExtAttrs) {
		return true
	}

	return false
}

// SetExtAttrs gets a reference to the given map[string]ExtAttrs and assigns it to the ExtAttrs field.
func (o *Macfilteraddress) SetExtAttrs(v map[string]ExtAttrs) {
	o.ExtAttrs = &v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *Macfilteraddress) GetFilter() string {
	if o == nil || IsNil(o.Filter) {
		var ret string
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Macfilteraddress) GetFilterOk() (*string, bool) {
	if o == nil || IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *Macfilteraddress) HasFilter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given string and assigns it to the Filter field.
func (o *Macfilteraddress) SetFilter(v string) {
	o.Filter = &v
}

// GetFingerprint returns the Fingerprint field value if set, zero value otherwise.
func (o *Macfilteraddress) GetFingerprint() string {
	if o == nil || IsNil(o.Fingerprint) {
		var ret string
		return ret
	}
	return *o.Fingerprint
}

// GetFingerprintOk returns a tuple with the Fingerprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Macfilteraddress) GetFingerprintOk() (*string, bool) {
	if o == nil || IsNil(o.Fingerprint) {
		return nil, false
	}
	return o.Fingerprint, true
}

// HasFingerprint returns a boolean if a field has been set.
func (o *Macfilteraddress) HasFingerprint() bool {
	if o != nil && !IsNil(o.Fingerprint) {
		return true
	}

	return false
}

// SetFingerprint gets a reference to the given string and assigns it to the Fingerprint field.
func (o *Macfilteraddress) SetFingerprint(v string) {
	o.Fingerprint = &v
}

// GetGuestCustomField1 returns the GuestCustomField1 field value if set, zero value otherwise.
func (o *Macfilteraddress) GetGuestCustomField1() string {
	if o == nil || IsNil(o.GuestCustomField1) {
		var ret string
		return ret
	}
	return *o.GuestCustomField1
}

// GetGuestCustomField1Ok returns a tuple with the GuestCustomField1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Macfilteraddress) GetGuestCustomField1Ok() (*string, bool) {
	if o == nil || IsNil(o.GuestCustomField1) {
		return nil, false
	}
	return o.GuestCustomField1, true
}

// HasGuestCustomField1 returns a boolean if a field has been set.
func (o *Macfilteraddress) HasGuestCustomField1() bool {
	if o != nil && !IsNil(o.GuestCustomField1) {
		return true
	}

	return false
}

// SetGuestCustomField1 gets a reference to the given string and assigns it to the GuestCustomField1 field.
func (o *Macfilteraddress) SetGuestCustomField1(v string) {
	o.GuestCustomField1 = &v
}

// GetGuestCustomField2 returns the GuestCustomField2 field value if set, zero value otherwise.
func (o *Macfilteraddress) GetGuestCustomField2() string {
	if o == nil || IsNil(o.GuestCustomField2) {
		var ret string
		return ret
	}
	return *o.GuestCustomField2
}

// GetGuestCustomField2Ok returns a tuple with the GuestCustomField2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Macfilteraddress) GetGuestCustomField2Ok() (*string, bool) {
	if o == nil || IsNil(o.GuestCustomField2) {
		return nil, false
	}
	return o.GuestCustomField2, true
}

// HasGuestCustomField2 returns a boolean if a field has been set.
func (o *Macfilteraddress) HasGuestCustomField2() bool {
	if o != nil && !IsNil(o.GuestCustomField2) {
		return true
	}

	return false
}

// SetGuestCustomField2 gets a reference to the given string and assigns it to the GuestCustomField2 field.
func (o *Macfilteraddress) SetGuestCustomField2(v string) {
	o.GuestCustomField2 = &v
}

// GetGuestCustomField3 returns the GuestCustomField3 field value if set, zero value otherwise.
func (o *Macfilteraddress) GetGuestCustomField3() string {
	if o == nil || IsNil(o.GuestCustomField3) {
		var ret string
		return ret
	}
	return *o.GuestCustomField3
}

// GetGuestCustomField3Ok returns a tuple with the GuestCustomField3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Macfilteraddress) GetGuestCustomField3Ok() (*string, bool) {
	if o == nil || IsNil(o.GuestCustomField3) {
		return nil, false
	}
	return o.GuestCustomField3, true
}

// HasGuestCustomField3 returns a boolean if a field has been set.
func (o *Macfilteraddress) HasGuestCustomField3() bool {
	if o != nil && !IsNil(o.GuestCustomField3) {
		return true
	}

	return false
}

// SetGuestCustomField3 gets a reference to the given string and assigns it to the GuestCustomField3 field.
func (o *Macfilteraddress) SetGuestCustomField3(v string) {
	o.GuestCustomField3 = &v
}

// GetGuestCustomField4 returns the GuestCustomField4 field value if set, zero value otherwise.
func (o *Macfilteraddress) GetGuestCustomField4() string {
	if o == nil || IsNil(o.GuestCustomField4) {
		var ret string
		return ret
	}
	return *o.GuestCustomField4
}

// GetGuestCustomField4Ok returns a tuple with the GuestCustomField4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Macfilteraddress) GetGuestCustomField4Ok() (*string, bool) {
	if o == nil || IsNil(o.GuestCustomField4) {
		return nil, false
	}
	return o.GuestCustomField4, true
}

// HasGuestCustomField4 returns a boolean if a field has been set.
func (o *Macfilteraddress) HasGuestCustomField4() bool {
	if o != nil && !IsNil(o.GuestCustomField4) {
		return true
	}

	return false
}

// SetGuestCustomField4 gets a reference to the given string and assigns it to the GuestCustomField4 field.
func (o *Macfilteraddress) SetGuestCustomField4(v string) {
	o.GuestCustomField4 = &v
}

// GetGuestEmail returns the GuestEmail field value if set, zero value otherwise.
func (o *Macfilteraddress) GetGuestEmail() string {
	if o == nil || IsNil(o.GuestEmail) {
		var ret string
		return ret
	}
	return *o.GuestEmail
}

// GetGuestEmailOk returns a tuple with the GuestEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Macfilteraddress) GetGuestEmailOk() (*string, bool) {
	if o == nil || IsNil(o.GuestEmail) {
		return nil, false
	}
	return o.GuestEmail, true
}

// HasGuestEmail returns a boolean if a field has been set.
func (o *Macfilteraddress) HasGuestEmail() bool {
	if o != nil && !IsNil(o.GuestEmail) {
		return true
	}

	return false
}

// SetGuestEmail gets a reference to the given string and assigns it to the GuestEmail field.
func (o *Macfilteraddress) SetGuestEmail(v string) {
	o.GuestEmail = &v
}

// GetGuestFirstName returns the GuestFirstName field value if set, zero value otherwise.
func (o *Macfilteraddress) GetGuestFirstName() string {
	if o == nil || IsNil(o.GuestFirstName) {
		var ret string
		return ret
	}
	return *o.GuestFirstName
}

// GetGuestFirstNameOk returns a tuple with the GuestFirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Macfilteraddress) GetGuestFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.GuestFirstName) {
		return nil, false
	}
	return o.GuestFirstName, true
}

// HasGuestFirstName returns a boolean if a field has been set.
func (o *Macfilteraddress) HasGuestFirstName() bool {
	if o != nil && !IsNil(o.GuestFirstName) {
		return true
	}

	return false
}

// SetGuestFirstName gets a reference to the given string and assigns it to the GuestFirstName field.
func (o *Macfilteraddress) SetGuestFirstName(v string) {
	o.GuestFirstName = &v
}

// GetGuestLastName returns the GuestLastName field value if set, zero value otherwise.
func (o *Macfilteraddress) GetGuestLastName() string {
	if o == nil || IsNil(o.GuestLastName) {
		var ret string
		return ret
	}
	return *o.GuestLastName
}

// GetGuestLastNameOk returns a tuple with the GuestLastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Macfilteraddress) GetGuestLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.GuestLastName) {
		return nil, false
	}
	return o.GuestLastName, true
}

// HasGuestLastName returns a boolean if a field has been set.
func (o *Macfilteraddress) HasGuestLastName() bool {
	if o != nil && !IsNil(o.GuestLastName) {
		return true
	}

	return false
}

// SetGuestLastName gets a reference to the given string and assigns it to the GuestLastName field.
func (o *Macfilteraddress) SetGuestLastName(v string) {
	o.GuestLastName = &v
}

// GetGuestMiddleName returns the GuestMiddleName field value if set, zero value otherwise.
func (o *Macfilteraddress) GetGuestMiddleName() string {
	if o == nil || IsNil(o.GuestMiddleName) {
		var ret string
		return ret
	}
	return *o.GuestMiddleName
}

// GetGuestMiddleNameOk returns a tuple with the GuestMiddleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Macfilteraddress) GetGuestMiddleNameOk() (*string, bool) {
	if o == nil || IsNil(o.GuestMiddleName) {
		return nil, false
	}
	return o.GuestMiddleName, true
}

// HasGuestMiddleName returns a boolean if a field has been set.
func (o *Macfilteraddress) HasGuestMiddleName() bool {
	if o != nil && !IsNil(o.GuestMiddleName) {
		return true
	}

	return false
}

// SetGuestMiddleName gets a reference to the given string and assigns it to the GuestMiddleName field.
func (o *Macfilteraddress) SetGuestMiddleName(v string) {
	o.GuestMiddleName = &v
}

// GetGuestPhone returns the GuestPhone field value if set, zero value otherwise.
func (o *Macfilteraddress) GetGuestPhone() string {
	if o == nil || IsNil(o.GuestPhone) {
		var ret string
		return ret
	}
	return *o.GuestPhone
}

// GetGuestPhoneOk returns a tuple with the GuestPhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Macfilteraddress) GetGuestPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.GuestPhone) {
		return nil, false
	}
	return o.GuestPhone, true
}

// HasGuestPhone returns a boolean if a field has been set.
func (o *Macfilteraddress) HasGuestPhone() bool {
	if o != nil && !IsNil(o.GuestPhone) {
		return true
	}

	return false
}

// SetGuestPhone gets a reference to the given string and assigns it to the GuestPhone field.
func (o *Macfilteraddress) SetGuestPhone(v string) {
	o.GuestPhone = &v
}

// GetIsRegisteredUser returns the IsRegisteredUser field value if set, zero value otherwise.
func (o *Macfilteraddress) GetIsRegisteredUser() bool {
	if o == nil || IsNil(o.IsRegisteredUser) {
		var ret bool
		return ret
	}
	return *o.IsRegisteredUser
}

// GetIsRegisteredUserOk returns a tuple with the IsRegisteredUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Macfilteraddress) GetIsRegisteredUserOk() (*bool, bool) {
	if o == nil || IsNil(o.IsRegisteredUser) {
		return nil, false
	}
	return o.IsRegisteredUser, true
}

// HasIsRegisteredUser returns a boolean if a field has been set.
func (o *Macfilteraddress) HasIsRegisteredUser() bool {
	if o != nil && !IsNil(o.IsRegisteredUser) {
		return true
	}

	return false
}

// SetIsRegisteredUser gets a reference to the given bool and assigns it to the IsRegisteredUser field.
func (o *Macfilteraddress) SetIsRegisteredUser(v bool) {
	o.IsRegisteredUser = &v
}

// GetMac returns the Mac field value if set, zero value otherwise.
func (o *Macfilteraddress) GetMac() string {
	if o == nil || IsNil(o.Mac) {
		var ret string
		return ret
	}
	return *o.Mac
}

// GetMacOk returns a tuple with the Mac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Macfilteraddress) GetMacOk() (*string, bool) {
	if o == nil || IsNil(o.Mac) {
		return nil, false
	}
	return o.Mac, true
}

// HasMac returns a boolean if a field has been set.
func (o *Macfilteraddress) HasMac() bool {
	if o != nil && !IsNil(o.Mac) {
		return true
	}

	return false
}

// SetMac gets a reference to the given string and assigns it to the Mac field.
func (o *Macfilteraddress) SetMac(v string) {
	o.Mac = &v
}

// GetNeverExpires returns the NeverExpires field value if set, zero value otherwise.
func (o *Macfilteraddress) GetNeverExpires() bool {
	if o == nil || IsNil(o.NeverExpires) {
		var ret bool
		return ret
	}
	return *o.NeverExpires
}

// GetNeverExpiresOk returns a tuple with the NeverExpires field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Macfilteraddress) GetNeverExpiresOk() (*bool, bool) {
	if o == nil || IsNil(o.NeverExpires) {
		return nil, false
	}
	return o.NeverExpires, true
}

// HasNeverExpires returns a boolean if a field has been set.
func (o *Macfilteraddress) HasNeverExpires() bool {
	if o != nil && !IsNil(o.NeverExpires) {
		return true
	}

	return false
}

// SetNeverExpires gets a reference to the given bool and assigns it to the NeverExpires field.
func (o *Macfilteraddress) SetNeverExpires(v bool) {
	o.NeverExpires = &v
}

// GetReservedForInfoblox returns the ReservedForInfoblox field value if set, zero value otherwise.
func (o *Macfilteraddress) GetReservedForInfoblox() string {
	if o == nil || IsNil(o.ReservedForInfoblox) {
		var ret string
		return ret
	}
	return *o.ReservedForInfoblox
}

// GetReservedForInfobloxOk returns a tuple with the ReservedForInfoblox field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Macfilteraddress) GetReservedForInfobloxOk() (*string, bool) {
	if o == nil || IsNil(o.ReservedForInfoblox) {
		return nil, false
	}
	return o.ReservedForInfoblox, true
}

// HasReservedForInfoblox returns a boolean if a field has been set.
func (o *Macfilteraddress) HasReservedForInfoblox() bool {
	if o != nil && !IsNil(o.ReservedForInfoblox) {
		return true
	}

	return false
}

// SetReservedForInfoblox gets a reference to the given string and assigns it to the ReservedForInfoblox field.
func (o *Macfilteraddress) SetReservedForInfoblox(v string) {
	o.ReservedForInfoblox = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *Macfilteraddress) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Macfilteraddress) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *Macfilteraddress) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *Macfilteraddress) SetUsername(v string) {
	o.Username = &v
}

func (o Macfilteraddress) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Macfilteraddress) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.AuthenticationTime) {
		toSerialize["authentication_time"] = o.AuthenticationTime
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.ExpirationTime) {
		toSerialize["expiration_time"] = o.ExpirationTime
	}
	if !IsNil(o.ExtAttrs) {
		toSerialize["extattrs"] = o.ExtAttrs
	}
	if !IsNil(o.Filter) {
		toSerialize["filter"] = o.Filter
	}
	if !IsNil(o.Fingerprint) {
		toSerialize["fingerprint"] = o.Fingerprint
	}
	if !IsNil(o.GuestCustomField1) {
		toSerialize["guest_custom_field1"] = o.GuestCustomField1
	}
	if !IsNil(o.GuestCustomField2) {
		toSerialize["guest_custom_field2"] = o.GuestCustomField2
	}
	if !IsNil(o.GuestCustomField3) {
		toSerialize["guest_custom_field3"] = o.GuestCustomField3
	}
	if !IsNil(o.GuestCustomField4) {
		toSerialize["guest_custom_field4"] = o.GuestCustomField4
	}
	if !IsNil(o.GuestEmail) {
		toSerialize["guest_email"] = o.GuestEmail
	}
	if !IsNil(o.GuestFirstName) {
		toSerialize["guest_first_name"] = o.GuestFirstName
	}
	if !IsNil(o.GuestLastName) {
		toSerialize["guest_last_name"] = o.GuestLastName
	}
	if !IsNil(o.GuestMiddleName) {
		toSerialize["guest_middle_name"] = o.GuestMiddleName
	}
	if !IsNil(o.GuestPhone) {
		toSerialize["guest_phone"] = o.GuestPhone
	}
	if !IsNil(o.IsRegisteredUser) {
		toSerialize["is_registered_user"] = o.IsRegisteredUser
	}
	if !IsNil(o.Mac) {
		toSerialize["mac"] = o.Mac
	}
	if !IsNil(o.NeverExpires) {
		toSerialize["never_expires"] = o.NeverExpires
	}
	if !IsNil(o.ReservedForInfoblox) {
		toSerialize["reserved_for_infoblox"] = o.ReservedForInfoblox
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return toSerialize, nil
}

type NullableMacfilteraddress struct {
	value *Macfilteraddress
	isSet bool
}

func (v NullableMacfilteraddress) Get() *Macfilteraddress {
	return v.value
}

func (v *NullableMacfilteraddress) Set(val *Macfilteraddress) {
	v.value = val
	v.isSet = true
}

func (v NullableMacfilteraddress) IsSet() bool {
	return v.isSet
}

func (v *NullableMacfilteraddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMacfilteraddress(val *Macfilteraddress) *NullableMacfilteraddress {
	return &NullableMacfilteraddress{value: val, isSet: true}
}

func (v NullableMacfilteraddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMacfilteraddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
