/*
Infoblox DHCP API

OpenAPI specification for Infoblox NIOS WAPI DHCP objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dhcp

import (
	"encoding/json"
)

// checks if the MemberDhcppropertiesDdnsZonePrimaries type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberDhcppropertiesDdnsZonePrimaries{}

// MemberDhcppropertiesDdnsZonePrimaries struct for MemberDhcppropertiesDdnsZonePrimaries
type MemberDhcppropertiesDdnsZonePrimaries struct {
	// Indicate matching type.
	ZoneMatch *string `json:"zone_match,omitempty"`
	// The ref of a DNS zone.
	DnsGridZone *string `json:"dns_grid_zone,omitempty"`
	// The name of a Grid member.
	DnsGridPrimary *string `json:"dns_grid_primary,omitempty"`
	// The name of external zone in FQDN format.
	DnsExtZone *string `json:"dns_ext_zone,omitempty"`
	// The IP address of the External server. Valid when zone_match is \"EXTERNAL\" or \"ANY_EXTERNAL\".
	DnsExtPrimary        *string `json:"dns_ext_primary,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MemberDhcppropertiesDdnsZonePrimaries MemberDhcppropertiesDdnsZonePrimaries

// NewMemberDhcppropertiesDdnsZonePrimaries instantiates a new MemberDhcppropertiesDdnsZonePrimaries object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberDhcppropertiesDdnsZonePrimaries() *MemberDhcppropertiesDdnsZonePrimaries {
	this := MemberDhcppropertiesDdnsZonePrimaries{}
	return &this
}

// NewMemberDhcppropertiesDdnsZonePrimariesWithDefaults instantiates a new MemberDhcppropertiesDdnsZonePrimaries object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberDhcppropertiesDdnsZonePrimariesWithDefaults() *MemberDhcppropertiesDdnsZonePrimaries {
	this := MemberDhcppropertiesDdnsZonePrimaries{}
	return &this
}

// GetZoneMatch returns the ZoneMatch field value if set, zero value otherwise.
func (o *MemberDhcppropertiesDdnsZonePrimaries) GetZoneMatch() string {
	if o == nil || IsNil(o.ZoneMatch) {
		var ret string
		return ret
	}
	return *o.ZoneMatch
}

// GetZoneMatchOk returns a tuple with the ZoneMatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberDhcppropertiesDdnsZonePrimaries) GetZoneMatchOk() (*string, bool) {
	if o == nil || IsNil(o.ZoneMatch) {
		return nil, false
	}
	return o.ZoneMatch, true
}

// HasZoneMatch returns a boolean if a field has been set.
func (o *MemberDhcppropertiesDdnsZonePrimaries) HasZoneMatch() bool {
	if o != nil && !IsNil(o.ZoneMatch) {
		return true
	}

	return false
}

// SetZoneMatch gets a reference to the given string and assigns it to the ZoneMatch field.
func (o *MemberDhcppropertiesDdnsZonePrimaries) SetZoneMatch(v string) {
	o.ZoneMatch = &v
}

// GetDnsGridZone returns the DnsGridZone field value if set, zero value otherwise.
func (o *MemberDhcppropertiesDdnsZonePrimaries) GetDnsGridZone() string {
	if o == nil || IsNil(o.DnsGridZone) {
		var ret string
		return ret
	}
	return *o.DnsGridZone
}

// GetDnsGridZoneOk returns a tuple with the DnsGridZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberDhcppropertiesDdnsZonePrimaries) GetDnsGridZoneOk() (*string, bool) {
	if o == nil || IsNil(o.DnsGridZone) {
		return nil, false
	}
	return o.DnsGridZone, true
}

// HasDnsGridZone returns a boolean if a field has been set.
func (o *MemberDhcppropertiesDdnsZonePrimaries) HasDnsGridZone() bool {
	if o != nil && !IsNil(o.DnsGridZone) {
		return true
	}

	return false
}

// SetDnsGridZone gets a reference to the given string and assigns it to the DnsGridZone field.
func (o *MemberDhcppropertiesDdnsZonePrimaries) SetDnsGridZone(v string) {
	o.DnsGridZone = &v
}

// GetDnsGridPrimary returns the DnsGridPrimary field value if set, zero value otherwise.
func (o *MemberDhcppropertiesDdnsZonePrimaries) GetDnsGridPrimary() string {
	if o == nil || IsNil(o.DnsGridPrimary) {
		var ret string
		return ret
	}
	return *o.DnsGridPrimary
}

// GetDnsGridPrimaryOk returns a tuple with the DnsGridPrimary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberDhcppropertiesDdnsZonePrimaries) GetDnsGridPrimaryOk() (*string, bool) {
	if o == nil || IsNil(o.DnsGridPrimary) {
		return nil, false
	}
	return o.DnsGridPrimary, true
}

// HasDnsGridPrimary returns a boolean if a field has been set.
func (o *MemberDhcppropertiesDdnsZonePrimaries) HasDnsGridPrimary() bool {
	if o != nil && !IsNil(o.DnsGridPrimary) {
		return true
	}

	return false
}

// SetDnsGridPrimary gets a reference to the given string and assigns it to the DnsGridPrimary field.
func (o *MemberDhcppropertiesDdnsZonePrimaries) SetDnsGridPrimary(v string) {
	o.DnsGridPrimary = &v
}

// GetDnsExtZone returns the DnsExtZone field value if set, zero value otherwise.
func (o *MemberDhcppropertiesDdnsZonePrimaries) GetDnsExtZone() string {
	if o == nil || IsNil(o.DnsExtZone) {
		var ret string
		return ret
	}
	return *o.DnsExtZone
}

// GetDnsExtZoneOk returns a tuple with the DnsExtZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberDhcppropertiesDdnsZonePrimaries) GetDnsExtZoneOk() (*string, bool) {
	if o == nil || IsNil(o.DnsExtZone) {
		return nil, false
	}
	return o.DnsExtZone, true
}

// HasDnsExtZone returns a boolean if a field has been set.
func (o *MemberDhcppropertiesDdnsZonePrimaries) HasDnsExtZone() bool {
	if o != nil && !IsNil(o.DnsExtZone) {
		return true
	}

	return false
}

// SetDnsExtZone gets a reference to the given string and assigns it to the DnsExtZone field.
func (o *MemberDhcppropertiesDdnsZonePrimaries) SetDnsExtZone(v string) {
	o.DnsExtZone = &v
}

// GetDnsExtPrimary returns the DnsExtPrimary field value if set, zero value otherwise.
func (o *MemberDhcppropertiesDdnsZonePrimaries) GetDnsExtPrimary() string {
	if o == nil || IsNil(o.DnsExtPrimary) {
		var ret string
		return ret
	}
	return *o.DnsExtPrimary
}

// GetDnsExtPrimaryOk returns a tuple with the DnsExtPrimary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberDhcppropertiesDdnsZonePrimaries) GetDnsExtPrimaryOk() (*string, bool) {
	if o == nil || IsNil(o.DnsExtPrimary) {
		return nil, false
	}
	return o.DnsExtPrimary, true
}

// HasDnsExtPrimary returns a boolean if a field has been set.
func (o *MemberDhcppropertiesDdnsZonePrimaries) HasDnsExtPrimary() bool {
	if o != nil && !IsNil(o.DnsExtPrimary) {
		return true
	}

	return false
}

// SetDnsExtPrimary gets a reference to the given string and assigns it to the DnsExtPrimary field.
func (o *MemberDhcppropertiesDdnsZonePrimaries) SetDnsExtPrimary(v string) {
	o.DnsExtPrimary = &v
}

func (o MemberDhcppropertiesDdnsZonePrimaries) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberDhcppropertiesDdnsZonePrimaries) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ZoneMatch) {
		toSerialize["zone_match"] = o.ZoneMatch
	}
	if !IsNil(o.DnsGridZone) {
		toSerialize["dns_grid_zone"] = o.DnsGridZone
	}
	if !IsNil(o.DnsGridPrimary) {
		toSerialize["dns_grid_primary"] = o.DnsGridPrimary
	}
	if !IsNil(o.DnsExtZone) {
		toSerialize["dns_ext_zone"] = o.DnsExtZone
	}
	if !IsNil(o.DnsExtPrimary) {
		toSerialize["dns_ext_primary"] = o.DnsExtPrimary
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MemberDhcppropertiesDdnsZonePrimaries) UnmarshalJSON(data []byte) (err error) {
	varMemberDhcppropertiesDdnsZonePrimaries := _MemberDhcppropertiesDdnsZonePrimaries{}

	err = json.Unmarshal(data, &varMemberDhcppropertiesDdnsZonePrimaries)

	if err != nil {
		return err
	}

	*o = MemberDhcppropertiesDdnsZonePrimaries(varMemberDhcppropertiesDdnsZonePrimaries)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "zone_match")
		delete(additionalProperties, "dns_grid_zone")
		delete(additionalProperties, "dns_grid_primary")
		delete(additionalProperties, "dns_ext_zone")
		delete(additionalProperties, "dns_ext_primary")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMemberDhcppropertiesDdnsZonePrimaries struct {
	value *MemberDhcppropertiesDdnsZonePrimaries
	isSet bool
}

func (v NullableMemberDhcppropertiesDdnsZonePrimaries) Get() *MemberDhcppropertiesDdnsZonePrimaries {
	return v.value
}

func (v *NullableMemberDhcppropertiesDdnsZonePrimaries) Set(val *MemberDhcppropertiesDdnsZonePrimaries) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberDhcppropertiesDdnsZonePrimaries) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberDhcppropertiesDdnsZonePrimaries) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberDhcppropertiesDdnsZonePrimaries(val *MemberDhcppropertiesDdnsZonePrimaries) *NullableMemberDhcppropertiesDdnsZonePrimaries {
	return &NullableMemberDhcppropertiesDdnsZonePrimaries{value: val, isSet: true}
}

func (v NullableMemberDhcppropertiesDdnsZonePrimaries) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberDhcppropertiesDdnsZonePrimaries) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
