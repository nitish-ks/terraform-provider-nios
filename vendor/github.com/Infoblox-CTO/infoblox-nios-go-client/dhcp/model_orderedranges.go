/*
Infoblox DHCP API

OpenAPI specification for Infoblox NIOS WAPI DHCP objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dhcp

import (
	"encoding/json"
)

// checks if the Orderedranges type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Orderedranges{}

// Orderedranges struct for Orderedranges
type Orderedranges struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// The reference to the network that contains ranges.
	Network *string `json:"network,omitempty"`
	// The ordered list of references to ranges.
	Ranges []string `json:"ranges,omitempty"`
}

// NewOrderedranges instantiates a new Orderedranges object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderedranges() *Orderedranges {
	this := Orderedranges{}
	return &this
}

// NewOrderedrangesWithDefaults instantiates a new Orderedranges object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderedrangesWithDefaults() *Orderedranges {
	this := Orderedranges{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *Orderedranges) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Orderedranges) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *Orderedranges) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *Orderedranges) SetRef(v string) {
	o.Ref = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *Orderedranges) GetNetwork() string {
	if o == nil || IsNil(o.Network) {
		var ret string
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Orderedranges) GetNetworkOk() (*string, bool) {
	if o == nil || IsNil(o.Network) {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *Orderedranges) HasNetwork() bool {
	if o != nil && !IsNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given string and assigns it to the Network field.
func (o *Orderedranges) SetNetwork(v string) {
	o.Network = &v
}

// GetRanges returns the Ranges field value if set, zero value otherwise.
func (o *Orderedranges) GetRanges() []string {
	if o == nil || IsNil(o.Ranges) {
		var ret []string
		return ret
	}
	return o.Ranges
}

// GetRangesOk returns a tuple with the Ranges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Orderedranges) GetRangesOk() ([]string, bool) {
	if o == nil || IsNil(o.Ranges) {
		return nil, false
	}
	return o.Ranges, true
}

// HasRanges returns a boolean if a field has been set.
func (o *Orderedranges) HasRanges() bool {
	if o != nil && !IsNil(o.Ranges) {
		return true
	}

	return false
}

// SetRanges gets a reference to the given []string and assigns it to the Ranges field.
func (o *Orderedranges) SetRanges(v []string) {
	o.Ranges = v
}

func (o Orderedranges) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Orderedranges) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	if !IsNil(o.Ranges) {
		toSerialize["ranges"] = o.Ranges
	}
	return toSerialize, nil
}

type NullableOrderedranges struct {
	value *Orderedranges
	isSet bool
}

func (v NullableOrderedranges) Get() *Orderedranges {
	return v.value
}

func (v *NullableOrderedranges) Set(val *Orderedranges) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderedranges) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderedranges) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderedranges(val *Orderedranges) *NullableOrderedranges {
	return &NullableOrderedranges{value: val, isSet: true}
}

func (v NullableOrderedranges) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderedranges) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
