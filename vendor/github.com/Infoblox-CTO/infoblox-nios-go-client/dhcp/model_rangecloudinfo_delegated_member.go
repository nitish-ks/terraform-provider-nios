/*
Infoblox DHCP API

OpenAPI specification for Infoblox NIOS WAPI DHCP objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dhcp

import (
	"encoding/json"
)

// checks if the RangecloudinfoDelegatedMember type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RangecloudinfoDelegatedMember{}

// RangecloudinfoDelegatedMember struct for RangecloudinfoDelegatedMember
type RangecloudinfoDelegatedMember struct {
	// The IPv4 Address of the Grid Member.
	Ipv4addr *string `json:"ipv4addr,omitempty"`
	// The IPv6 Address of the Grid Member.
	Ipv6addr *string `json:"ipv6addr,omitempty"`
	// The Grid member name
	Name                 *string `json:"name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RangecloudinfoDelegatedMember RangecloudinfoDelegatedMember

// NewRangecloudinfoDelegatedMember instantiates a new RangecloudinfoDelegatedMember object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRangecloudinfoDelegatedMember() *RangecloudinfoDelegatedMember {
	this := RangecloudinfoDelegatedMember{}
	return &this
}

// NewRangecloudinfoDelegatedMemberWithDefaults instantiates a new RangecloudinfoDelegatedMember object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRangecloudinfoDelegatedMemberWithDefaults() *RangecloudinfoDelegatedMember {
	this := RangecloudinfoDelegatedMember{}
	return &this
}

// GetIpv4addr returns the Ipv4addr field value if set, zero value otherwise.
func (o *RangecloudinfoDelegatedMember) GetIpv4addr() string {
	if o == nil || IsNil(o.Ipv4addr) {
		var ret string
		return ret
	}
	return *o.Ipv4addr
}

// GetIpv4addrOk returns a tuple with the Ipv4addr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RangecloudinfoDelegatedMember) GetIpv4addrOk() (*string, bool) {
	if o == nil || IsNil(o.Ipv4addr) {
		return nil, false
	}
	return o.Ipv4addr, true
}

// HasIpv4addr returns a boolean if a field has been set.
func (o *RangecloudinfoDelegatedMember) HasIpv4addr() bool {
	if o != nil && !IsNil(o.Ipv4addr) {
		return true
	}

	return false
}

// SetIpv4addr gets a reference to the given string and assigns it to the Ipv4addr field.
func (o *RangecloudinfoDelegatedMember) SetIpv4addr(v string) {
	o.Ipv4addr = &v
}

// GetIpv6addr returns the Ipv6addr field value if set, zero value otherwise.
func (o *RangecloudinfoDelegatedMember) GetIpv6addr() string {
	if o == nil || IsNil(o.Ipv6addr) {
		var ret string
		return ret
	}
	return *o.Ipv6addr
}

// GetIpv6addrOk returns a tuple with the Ipv6addr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RangecloudinfoDelegatedMember) GetIpv6addrOk() (*string, bool) {
	if o == nil || IsNil(o.Ipv6addr) {
		return nil, false
	}
	return o.Ipv6addr, true
}

// HasIpv6addr returns a boolean if a field has been set.
func (o *RangecloudinfoDelegatedMember) HasIpv6addr() bool {
	if o != nil && !IsNil(o.Ipv6addr) {
		return true
	}

	return false
}

// SetIpv6addr gets a reference to the given string and assigns it to the Ipv6addr field.
func (o *RangecloudinfoDelegatedMember) SetIpv6addr(v string) {
	o.Ipv6addr = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RangecloudinfoDelegatedMember) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RangecloudinfoDelegatedMember) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RangecloudinfoDelegatedMember) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RangecloudinfoDelegatedMember) SetName(v string) {
	o.Name = &v
}

func (o RangecloudinfoDelegatedMember) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RangecloudinfoDelegatedMember) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ipv4addr) {
		toSerialize["ipv4addr"] = o.Ipv4addr
	}
	if !IsNil(o.Ipv6addr) {
		toSerialize["ipv6addr"] = o.Ipv6addr
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RangecloudinfoDelegatedMember) UnmarshalJSON(data []byte) (err error) {
	varRangecloudinfoDelegatedMember := _RangecloudinfoDelegatedMember{}

	err = json.Unmarshal(data, &varRangecloudinfoDelegatedMember)

	if err != nil {
		return err
	}

	*o = RangecloudinfoDelegatedMember(varRangecloudinfoDelegatedMember)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ipv4addr")
		delete(additionalProperties, "ipv6addr")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRangecloudinfoDelegatedMember struct {
	value *RangecloudinfoDelegatedMember
	isSet bool
}

func (v NullableRangecloudinfoDelegatedMember) Get() *RangecloudinfoDelegatedMember {
	return v.value
}

func (v *NullableRangecloudinfoDelegatedMember) Set(val *RangecloudinfoDelegatedMember) {
	v.value = val
	v.isSet = true
}

func (v NullableRangecloudinfoDelegatedMember) IsSet() bool {
	return v.isSet
}

func (v *NullableRangecloudinfoDelegatedMember) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRangecloudinfoDelegatedMember(val *RangecloudinfoDelegatedMember) *NullableRangecloudinfoDelegatedMember {
	return &NullableRangecloudinfoDelegatedMember{value: val, isSet: true}
}

func (v NullableRangecloudinfoDelegatedMember) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRangecloudinfoDelegatedMember) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
