/*
Infoblox DISCOVERY API

OpenAPI specification for Infoblox NIOS WAPI DISCOVERY objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discovery

import (
	"github.com/Infoblox-CTO/infoblox-nios-go-client/internal"
	"github.com/Infoblox-CTO/infoblox-nios-go-client/option"
)

const serviceBasePath = "/wapi/v2.12.3"

// APIClient manages communication with the Infoblox DISCOVERY API 2.12.3
// In most cases there should be only one, shared, APIClient.
type APIClient struct {
	*internal.APIClient

	// API Services
	DiscoveryAPI DiscoveryAPI
	DiscoverycredentialgroupAPI DiscoverycredentialgroupAPI
	DiscoverydeviceAPI DiscoverydeviceAPI
	DiscoverydevicecomponentAPI DiscoverydevicecomponentAPI
	DiscoverydeviceinterfaceAPI DiscoverydeviceinterfaceAPI
	DiscoverydeviceneighborAPI DiscoverydeviceneighborAPI
	DiscoverydevicesupportbundleAPI DiscoverydevicesupportbundleAPI
	DiscoverydiagnostictaskAPI DiscoverydiagnostictaskAPI
	DiscoverygridpropertiesAPI DiscoverygridpropertiesAPI
	DiscoverymemberpropertiesAPI DiscoverymemberpropertiesAPI
	DiscoverysdnnetworkAPI DiscoverysdnnetworkAPI
	DiscoverystatusAPI DiscoverystatusAPI
	DiscoveryvrfAPI DiscoveryvrfAPI
	VdiscoverytaskAPI VdiscoverytaskAPI
}

// NewAPIClient creates a new API client.
// The client can be configured with a variadic option. The following options are available:
// - WithClientName(string) sets the name of the client using the SDK.
// - WithNIOSHostUrl(string) sets the URL for NIOS Portal.
// - WithNIOSAuth(string) sets the NIOSAuth for accessing the NIOS Portal.
// - WithHTTPClient(*http.Client) sets the HTTPClient to use for the SDK.
// - WithDefaultExtAttrs(map[string]struct{ Value string }) sets the tags the client can set by default for objects that has tags support.
// - WithDebug() sets the debug mode.
func NewAPIClient(options ...option.ClientOption) *APIClient {
	cfg := internal.NewConfiguration()
	for _, o := range options {
		o(cfg)
	}

	c := &APIClient{}
	c.APIClient = internal.NewAPIClient(serviceBasePath, cfg)

	// API Services
	c.DiscoveryAPI = (*DiscoveryAPIService)(&c.Common)
	c.DiscoverycredentialgroupAPI = (*DiscoverycredentialgroupAPIService)(&c.Common)
	c.DiscoverydeviceAPI = (*DiscoverydeviceAPIService)(&c.Common)
	c.DiscoverydevicecomponentAPI = (*DiscoverydevicecomponentAPIService)(&c.Common)
	c.DiscoverydeviceinterfaceAPI = (*DiscoverydeviceinterfaceAPIService)(&c.Common)
	c.DiscoverydeviceneighborAPI = (*DiscoverydeviceneighborAPIService)(&c.Common)
	c.DiscoverydevicesupportbundleAPI = (*DiscoverydevicesupportbundleAPIService)(&c.Common)
	c.DiscoverydiagnostictaskAPI = (*DiscoverydiagnostictaskAPIService)(&c.Common)
	c.DiscoverygridpropertiesAPI = (*DiscoverygridpropertiesAPIService)(&c.Common)
	c.DiscoverymemberpropertiesAPI = (*DiscoverymemberpropertiesAPIService)(&c.Common)
	c.DiscoverysdnnetworkAPI = (*DiscoverysdnnetworkAPIService)(&c.Common)
	c.DiscoverystatusAPI = (*DiscoverystatusAPIService)(&c.Common)
	c.DiscoveryvrfAPI = (*DiscoveryvrfAPIService)(&c.Common)
	c.VdiscoverytaskAPI = (*VdiscoverytaskAPIService)(&c.Common)

	return c
}