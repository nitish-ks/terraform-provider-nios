/*
Infoblox DISCOVERY API

OpenAPI specification for Infoblox NIOS WAPI DISCOVERY objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discovery

import (
	"encoding/json"
	"fmt"
)

// CreateDiscoveryDevicesupportbundleResponse - struct for CreateDiscoveryDevicesupportbundleResponse
type CreateDiscoveryDevicesupportbundleResponse struct {
	CreateDiscoveryDevicesupportbundleResponseAsObject *CreateDiscoveryDevicesupportbundleResponseAsObject
	String                                             *string
}

// CreateDiscoveryDevicesupportbundleResponseAsObjectAsCreateDiscoveryDevicesupportbundleResponse is a convenience function that returns CreateDiscoveryDevicesupportbundleResponseAsObject wrapped in CreateDiscoveryDevicesupportbundleResponse
func CreateDiscoveryDevicesupportbundleResponseAsObjectAsCreateDiscoveryDevicesupportbundleResponse(v *CreateDiscoveryDevicesupportbundleResponseAsObject) CreateDiscoveryDevicesupportbundleResponse {
	return CreateDiscoveryDevicesupportbundleResponse{
		CreateDiscoveryDevicesupportbundleResponseAsObject: v,
	}
}

// stringAsCreateDiscoveryDevicesupportbundleResponse is a convenience function that returns string wrapped in CreateDiscoveryDevicesupportbundleResponse
func StringAsCreateDiscoveryDevicesupportbundleResponse(v *string) CreateDiscoveryDevicesupportbundleResponse {
	return CreateDiscoveryDevicesupportbundleResponse{
		String: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *CreateDiscoveryDevicesupportbundleResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into CreateDiscoveryDevicesupportbundleResponseAsObject
	err = newStrictDecoder(data).Decode(&dst.CreateDiscoveryDevicesupportbundleResponseAsObject)
	if err == nil {
		jsonCreateDiscoveryDevicesupportbundleResponseAsObject, _ := json.Marshal(dst.CreateDiscoveryDevicesupportbundleResponseAsObject)
		if string(jsonCreateDiscoveryDevicesupportbundleResponseAsObject) == "{}" { // empty struct
			dst.CreateDiscoveryDevicesupportbundleResponseAsObject = nil
		} else {
			match++
		}
	} else {
		dst.CreateDiscoveryDevicesupportbundleResponseAsObject = nil
	}

	// try to unmarshal data into String
	err = newStrictDecoder(data).Decode(&dst.String)
	if err == nil {
		jsonString, _ := json.Marshal(dst.String)
		if string(jsonString) == "{}" { // empty struct
			dst.String = nil
		} else {
			match++
		}
	} else {
		dst.String = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.CreateDiscoveryDevicesupportbundleResponseAsObject = nil
		dst.String = nil

		return fmt.Errorf("data matches more than one schema in oneOf(CreateDiscoveryDevicesupportbundleResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(CreateDiscoveryDevicesupportbundleResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CreateDiscoveryDevicesupportbundleResponse) MarshalJSON() ([]byte, error) {
	if src.CreateDiscoveryDevicesupportbundleResponseAsObject != nil {
		return json.Marshal(&src.CreateDiscoveryDevicesupportbundleResponseAsObject)
	}

	if src.String != nil {
		return json.Marshal(&src.String)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *CreateDiscoveryDevicesupportbundleResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.CreateDiscoveryDevicesupportbundleResponseAsObject != nil {
		return obj.CreateDiscoveryDevicesupportbundleResponseAsObject
	}

	if obj.String != nil {
		return obj.String
	}

	// all schemas are nil
	return nil
}

type NullableCreateDiscoveryDevicesupportbundleResponse struct {
	value *CreateDiscoveryDevicesupportbundleResponse
	isSet bool
}

func (v NullableCreateDiscoveryDevicesupportbundleResponse) Get() *CreateDiscoveryDevicesupportbundleResponse {
	return v.value
}

func (v *NullableCreateDiscoveryDevicesupportbundleResponse) Set(val *CreateDiscoveryDevicesupportbundleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDiscoveryDevicesupportbundleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDiscoveryDevicesupportbundleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDiscoveryDevicesupportbundleResponse(val *CreateDiscoveryDevicesupportbundleResponse) *NullableCreateDiscoveryDevicesupportbundleResponse {
	return &NullableCreateDiscoveryDevicesupportbundleResponse{value: val, isSet: true}
}

func (v NullableCreateDiscoveryDevicesupportbundleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDiscoveryDevicesupportbundleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
