/*
Infoblox DISCOVERY API

OpenAPI specification for Infoblox NIOS WAPI DISCOVERY objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discovery

import (
	"encoding/json"
)

// checks if the Discovery type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Discovery{}

// Discovery struct for Discovery
type Discovery struct {
	// The reference to the object.
	Ref                        *string                `json:"_ref,omitempty"`
	ClearNetworkPortAssignment map[string]interface{} `json:"clear_network_port_assignment,omitempty"`
	ControlSwitchPort          map[string]interface{} `json:"control_switch_port,omitempty"`
	DiscoveryDataConversion    map[string]interface{} `json:"discovery_data_conversion,omitempty"`
	GetDeviceSupportInfo       map[string]interface{} `json:"get_device_support_info,omitempty"`
	GetJobDevices              map[string]interface{} `json:"get_job_devices,omitempty"`
	GetJobProcessDetails       map[string]interface{} `json:"get_job_process_details,omitempty"`
	ImportDeviceSupportBundle  map[string]interface{} `json:"import_device_support_bundle,omitempty"`
	ModifySdnAssignment        map[string]interface{} `json:"modify_sdn_assignment,omitempty"`
	ModifyVrfAssignment        map[string]interface{} `json:"modify_vrf_assignment,omitempty"`
	ProvisionNetworkDhcpRelay  map[string]interface{} `json:"provision_network_dhcp_relay,omitempty"`
	ProvisionNetworkPort       map[string]interface{} `json:"provision_network_port,omitempty"`
}

// NewDiscovery instantiates a new Discovery object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiscovery() *Discovery {
	this := Discovery{}
	return &this
}

// NewDiscoveryWithDefaults instantiates a new Discovery object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiscoveryWithDefaults() *Discovery {
	this := Discovery{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *Discovery) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discovery) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *Discovery) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *Discovery) SetRef(v string) {
	o.Ref = &v
}

// GetClearNetworkPortAssignment returns the ClearNetworkPortAssignment field value if set, zero value otherwise.
func (o *Discovery) GetClearNetworkPortAssignment() map[string]interface{} {
	if o == nil || IsNil(o.ClearNetworkPortAssignment) {
		var ret map[string]interface{}
		return ret
	}
	return o.ClearNetworkPortAssignment
}

// GetClearNetworkPortAssignmentOk returns a tuple with the ClearNetworkPortAssignment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discovery) GetClearNetworkPortAssignmentOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ClearNetworkPortAssignment) {
		return map[string]interface{}{}, false
	}
	return o.ClearNetworkPortAssignment, true
}

// HasClearNetworkPortAssignment returns a boolean if a field has been set.
func (o *Discovery) HasClearNetworkPortAssignment() bool {
	if o != nil && !IsNil(o.ClearNetworkPortAssignment) {
		return true
	}

	return false
}

// SetClearNetworkPortAssignment gets a reference to the given map[string]interface{} and assigns it to the ClearNetworkPortAssignment field.
func (o *Discovery) SetClearNetworkPortAssignment(v map[string]interface{}) {
	o.ClearNetworkPortAssignment = v
}

// GetControlSwitchPort returns the ControlSwitchPort field value if set, zero value otherwise.
func (o *Discovery) GetControlSwitchPort() map[string]interface{} {
	if o == nil || IsNil(o.ControlSwitchPort) {
		var ret map[string]interface{}
		return ret
	}
	return o.ControlSwitchPort
}

// GetControlSwitchPortOk returns a tuple with the ControlSwitchPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discovery) GetControlSwitchPortOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ControlSwitchPort) {
		return map[string]interface{}{}, false
	}
	return o.ControlSwitchPort, true
}

// HasControlSwitchPort returns a boolean if a field has been set.
func (o *Discovery) HasControlSwitchPort() bool {
	if o != nil && !IsNil(o.ControlSwitchPort) {
		return true
	}

	return false
}

// SetControlSwitchPort gets a reference to the given map[string]interface{} and assigns it to the ControlSwitchPort field.
func (o *Discovery) SetControlSwitchPort(v map[string]interface{}) {
	o.ControlSwitchPort = v
}

// GetDiscoveryDataConversion returns the DiscoveryDataConversion field value if set, zero value otherwise.
func (o *Discovery) GetDiscoveryDataConversion() map[string]interface{} {
	if o == nil || IsNil(o.DiscoveryDataConversion) {
		var ret map[string]interface{}
		return ret
	}
	return o.DiscoveryDataConversion
}

// GetDiscoveryDataConversionOk returns a tuple with the DiscoveryDataConversion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discovery) GetDiscoveryDataConversionOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.DiscoveryDataConversion) {
		return map[string]interface{}{}, false
	}
	return o.DiscoveryDataConversion, true
}

// HasDiscoveryDataConversion returns a boolean if a field has been set.
func (o *Discovery) HasDiscoveryDataConversion() bool {
	if o != nil && !IsNil(o.DiscoveryDataConversion) {
		return true
	}

	return false
}

// SetDiscoveryDataConversion gets a reference to the given map[string]interface{} and assigns it to the DiscoveryDataConversion field.
func (o *Discovery) SetDiscoveryDataConversion(v map[string]interface{}) {
	o.DiscoveryDataConversion = v
}

// GetGetDeviceSupportInfo returns the GetDeviceSupportInfo field value if set, zero value otherwise.
func (o *Discovery) GetGetDeviceSupportInfo() map[string]interface{} {
	if o == nil || IsNil(o.GetDeviceSupportInfo) {
		var ret map[string]interface{}
		return ret
	}
	return o.GetDeviceSupportInfo
}

// GetGetDeviceSupportInfoOk returns a tuple with the GetDeviceSupportInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discovery) GetGetDeviceSupportInfoOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.GetDeviceSupportInfo) {
		return map[string]interface{}{}, false
	}
	return o.GetDeviceSupportInfo, true
}

// HasGetDeviceSupportInfo returns a boolean if a field has been set.
func (o *Discovery) HasGetDeviceSupportInfo() bool {
	if o != nil && !IsNil(o.GetDeviceSupportInfo) {
		return true
	}

	return false
}

// SetGetDeviceSupportInfo gets a reference to the given map[string]interface{} and assigns it to the GetDeviceSupportInfo field.
func (o *Discovery) SetGetDeviceSupportInfo(v map[string]interface{}) {
	o.GetDeviceSupportInfo = v
}

// GetGetJobDevices returns the GetJobDevices field value if set, zero value otherwise.
func (o *Discovery) GetGetJobDevices() map[string]interface{} {
	if o == nil || IsNil(o.GetJobDevices) {
		var ret map[string]interface{}
		return ret
	}
	return o.GetJobDevices
}

// GetGetJobDevicesOk returns a tuple with the GetJobDevices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discovery) GetGetJobDevicesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.GetJobDevices) {
		return map[string]interface{}{}, false
	}
	return o.GetJobDevices, true
}

// HasGetJobDevices returns a boolean if a field has been set.
func (o *Discovery) HasGetJobDevices() bool {
	if o != nil && !IsNil(o.GetJobDevices) {
		return true
	}

	return false
}

// SetGetJobDevices gets a reference to the given map[string]interface{} and assigns it to the GetJobDevices field.
func (o *Discovery) SetGetJobDevices(v map[string]interface{}) {
	o.GetJobDevices = v
}

// GetGetJobProcessDetails returns the GetJobProcessDetails field value if set, zero value otherwise.
func (o *Discovery) GetGetJobProcessDetails() map[string]interface{} {
	if o == nil || IsNil(o.GetJobProcessDetails) {
		var ret map[string]interface{}
		return ret
	}
	return o.GetJobProcessDetails
}

// GetGetJobProcessDetailsOk returns a tuple with the GetJobProcessDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discovery) GetGetJobProcessDetailsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.GetJobProcessDetails) {
		return map[string]interface{}{}, false
	}
	return o.GetJobProcessDetails, true
}

// HasGetJobProcessDetails returns a boolean if a field has been set.
func (o *Discovery) HasGetJobProcessDetails() bool {
	if o != nil && !IsNil(o.GetJobProcessDetails) {
		return true
	}

	return false
}

// SetGetJobProcessDetails gets a reference to the given map[string]interface{} and assigns it to the GetJobProcessDetails field.
func (o *Discovery) SetGetJobProcessDetails(v map[string]interface{}) {
	o.GetJobProcessDetails = v
}

// GetImportDeviceSupportBundle returns the ImportDeviceSupportBundle field value if set, zero value otherwise.
func (o *Discovery) GetImportDeviceSupportBundle() map[string]interface{} {
	if o == nil || IsNil(o.ImportDeviceSupportBundle) {
		var ret map[string]interface{}
		return ret
	}
	return o.ImportDeviceSupportBundle
}

// GetImportDeviceSupportBundleOk returns a tuple with the ImportDeviceSupportBundle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discovery) GetImportDeviceSupportBundleOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ImportDeviceSupportBundle) {
		return map[string]interface{}{}, false
	}
	return o.ImportDeviceSupportBundle, true
}

// HasImportDeviceSupportBundle returns a boolean if a field has been set.
func (o *Discovery) HasImportDeviceSupportBundle() bool {
	if o != nil && !IsNil(o.ImportDeviceSupportBundle) {
		return true
	}

	return false
}

// SetImportDeviceSupportBundle gets a reference to the given map[string]interface{} and assigns it to the ImportDeviceSupportBundle field.
func (o *Discovery) SetImportDeviceSupportBundle(v map[string]interface{}) {
	o.ImportDeviceSupportBundle = v
}

// GetModifySdnAssignment returns the ModifySdnAssignment field value if set, zero value otherwise.
func (o *Discovery) GetModifySdnAssignment() map[string]interface{} {
	if o == nil || IsNil(o.ModifySdnAssignment) {
		var ret map[string]interface{}
		return ret
	}
	return o.ModifySdnAssignment
}

// GetModifySdnAssignmentOk returns a tuple with the ModifySdnAssignment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discovery) GetModifySdnAssignmentOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ModifySdnAssignment) {
		return map[string]interface{}{}, false
	}
	return o.ModifySdnAssignment, true
}

// HasModifySdnAssignment returns a boolean if a field has been set.
func (o *Discovery) HasModifySdnAssignment() bool {
	if o != nil && !IsNil(o.ModifySdnAssignment) {
		return true
	}

	return false
}

// SetModifySdnAssignment gets a reference to the given map[string]interface{} and assigns it to the ModifySdnAssignment field.
func (o *Discovery) SetModifySdnAssignment(v map[string]interface{}) {
	o.ModifySdnAssignment = v
}

// GetModifyVrfAssignment returns the ModifyVrfAssignment field value if set, zero value otherwise.
func (o *Discovery) GetModifyVrfAssignment() map[string]interface{} {
	if o == nil || IsNil(o.ModifyVrfAssignment) {
		var ret map[string]interface{}
		return ret
	}
	return o.ModifyVrfAssignment
}

// GetModifyVrfAssignmentOk returns a tuple with the ModifyVrfAssignment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discovery) GetModifyVrfAssignmentOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ModifyVrfAssignment) {
		return map[string]interface{}{}, false
	}
	return o.ModifyVrfAssignment, true
}

// HasModifyVrfAssignment returns a boolean if a field has been set.
func (o *Discovery) HasModifyVrfAssignment() bool {
	if o != nil && !IsNil(o.ModifyVrfAssignment) {
		return true
	}

	return false
}

// SetModifyVrfAssignment gets a reference to the given map[string]interface{} and assigns it to the ModifyVrfAssignment field.
func (o *Discovery) SetModifyVrfAssignment(v map[string]interface{}) {
	o.ModifyVrfAssignment = v
}

// GetProvisionNetworkDhcpRelay returns the ProvisionNetworkDhcpRelay field value if set, zero value otherwise.
func (o *Discovery) GetProvisionNetworkDhcpRelay() map[string]interface{} {
	if o == nil || IsNil(o.ProvisionNetworkDhcpRelay) {
		var ret map[string]interface{}
		return ret
	}
	return o.ProvisionNetworkDhcpRelay
}

// GetProvisionNetworkDhcpRelayOk returns a tuple with the ProvisionNetworkDhcpRelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discovery) GetProvisionNetworkDhcpRelayOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ProvisionNetworkDhcpRelay) {
		return map[string]interface{}{}, false
	}
	return o.ProvisionNetworkDhcpRelay, true
}

// HasProvisionNetworkDhcpRelay returns a boolean if a field has been set.
func (o *Discovery) HasProvisionNetworkDhcpRelay() bool {
	if o != nil && !IsNil(o.ProvisionNetworkDhcpRelay) {
		return true
	}

	return false
}

// SetProvisionNetworkDhcpRelay gets a reference to the given map[string]interface{} and assigns it to the ProvisionNetworkDhcpRelay field.
func (o *Discovery) SetProvisionNetworkDhcpRelay(v map[string]interface{}) {
	o.ProvisionNetworkDhcpRelay = v
}

// GetProvisionNetworkPort returns the ProvisionNetworkPort field value if set, zero value otherwise.
func (o *Discovery) GetProvisionNetworkPort() map[string]interface{} {
	if o == nil || IsNil(o.ProvisionNetworkPort) {
		var ret map[string]interface{}
		return ret
	}
	return o.ProvisionNetworkPort
}

// GetProvisionNetworkPortOk returns a tuple with the ProvisionNetworkPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discovery) GetProvisionNetworkPortOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ProvisionNetworkPort) {
		return map[string]interface{}{}, false
	}
	return o.ProvisionNetworkPort, true
}

// HasProvisionNetworkPort returns a boolean if a field has been set.
func (o *Discovery) HasProvisionNetworkPort() bool {
	if o != nil && !IsNil(o.ProvisionNetworkPort) {
		return true
	}

	return false
}

// SetProvisionNetworkPort gets a reference to the given map[string]interface{} and assigns it to the ProvisionNetworkPort field.
func (o *Discovery) SetProvisionNetworkPort(v map[string]interface{}) {
	o.ProvisionNetworkPort = v
}

func (o Discovery) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Discovery) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.ClearNetworkPortAssignment) {
		toSerialize["clear_network_port_assignment"] = o.ClearNetworkPortAssignment
	}
	if !IsNil(o.ControlSwitchPort) {
		toSerialize["control_switch_port"] = o.ControlSwitchPort
	}
	if !IsNil(o.DiscoveryDataConversion) {
		toSerialize["discovery_data_conversion"] = o.DiscoveryDataConversion
	}
	if !IsNil(o.GetDeviceSupportInfo) {
		toSerialize["get_device_support_info"] = o.GetDeviceSupportInfo
	}
	if !IsNil(o.GetJobDevices) {
		toSerialize["get_job_devices"] = o.GetJobDevices
	}
	if !IsNil(o.GetJobProcessDetails) {
		toSerialize["get_job_process_details"] = o.GetJobProcessDetails
	}
	if !IsNil(o.ImportDeviceSupportBundle) {
		toSerialize["import_device_support_bundle"] = o.ImportDeviceSupportBundle
	}
	if !IsNil(o.ModifySdnAssignment) {
		toSerialize["modify_sdn_assignment"] = o.ModifySdnAssignment
	}
	if !IsNil(o.ModifyVrfAssignment) {
		toSerialize["modify_vrf_assignment"] = o.ModifyVrfAssignment
	}
	if !IsNil(o.ProvisionNetworkDhcpRelay) {
		toSerialize["provision_network_dhcp_relay"] = o.ProvisionNetworkDhcpRelay
	}
	if !IsNil(o.ProvisionNetworkPort) {
		toSerialize["provision_network_port"] = o.ProvisionNetworkPort
	}
	return toSerialize, nil
}

type NullableDiscovery struct {
	value *Discovery
	isSet bool
}

func (v NullableDiscovery) Get() *Discovery {
	return v.value
}

func (v *NullableDiscovery) Set(val *Discovery) {
	v.value = val
	v.isSet = true
}

func (v NullableDiscovery) IsSet() bool {
	return v.isSet
}

func (v *NullableDiscovery) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiscovery(val *Discovery) *NullableDiscovery {
	return &NullableDiscovery{value: val, isSet: true}
}

func (v NullableDiscovery) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiscovery) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
