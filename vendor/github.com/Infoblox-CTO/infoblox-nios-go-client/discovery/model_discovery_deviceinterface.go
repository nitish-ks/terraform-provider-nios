/*
Infoblox DISCOVERY API

OpenAPI specification for Infoblox NIOS WAPI DISCOVERY objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discovery

import (
	"encoding/json"
)

// checks if the DiscoveryDeviceinterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DiscoveryDeviceinterface{}

// DiscoveryDeviceinterface struct for DiscoveryDeviceinterface
type DiscoveryDeviceinterface struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// Administrative state of the interface.
	AdminStatus         *string                                      `json:"admin_status,omitempty"`
	AdminStatusTaskInfo *DiscoveryDeviceinterfaceAdminStatusTaskInfo `json:"admin_status_task_info,omitempty"`
	// Name of the port channel current interface belongs to.
	AggrInterfaceName *string `json:"aggr_interface_name,omitempty"`
	// Determines whether to modify the admin status of the interface.
	CapIfAdminStatusInd *bool `json:"cap_if_admin_status_ind,omitempty"`
	// The reason that the edit admin status action is not available.
	CapIfAdminStatusNaReason *string `json:"cap_if_admin_status_na_reason,omitempty"`
	// Determines whether to modify the description of the interface.
	CapIfDescriptionInd *bool `json:"cap_if_description_ind,omitempty"`
	// The reason that the edit description action is not available.
	CapIfDescriptionNaReason *string `json:"cap_if_description_na_reason,omitempty"`
	// Determines whether to deprovision a IPv4 network from the interfaces.
	CapIfNetDeprovisioningIpv4Ind *bool `json:"cap_if_net_deprovisioning_ipv4_ind,omitempty"`
	// The reason that the deprovision a IPv4 network from the interface.
	CapIfNetDeprovisioningIpv4NaReason *string `json:"cap_if_net_deprovisioning_ipv4_na_reason,omitempty"`
	// Determines whether to deprovision a IPv6 network from the interfaces.
	CapIfNetDeprovisioningIpv6Ind *bool `json:"cap_if_net_deprovisioning_ipv6_ind,omitempty"`
	// The reason that the deprovision a IPv6 network from the interface.
	CapIfNetDeprovisioningIpv6NaReason *string `json:"cap_if_net_deprovisioning_ipv6_na_reason,omitempty"`
	// Determines whether to modify the IPv4 network associated to the interface.
	CapIfNetProvisioningIpv4Ind *bool `json:"cap_if_net_provisioning_ipv4_ind,omitempty"`
	// The reason that IPv4 network provisioning is not available.
	CapIfNetProvisioningIpv4NaReason *string `json:"cap_if_net_provisioning_ipv4_na_reason,omitempty"`
	// Determines whether to modify the IPv6 network associated to the interface.
	CapIfNetProvisioningIpv6Ind *bool `json:"cap_if_net_provisioning_ipv6_ind,omitempty"`
	// The reason that IPv6 network provisioning is not available.
	CapIfNetProvisioningIpv6NaReason *string `json:"cap_if_net_provisioning_ipv6_na_reason,omitempty"`
	// Determines whether to modify the VLAN assignement of the interface.
	CapIfVlanAssignmentInd *bool `json:"cap_if_vlan_assignment_ind,omitempty"`
	// The reason that VLAN assignment action is not available.
	CapIfVlanAssignmentNaReason *string `json:"cap_if_vlan_assignment_na_reason,omitempty"`
	// Determines whether to modify the voice VLAN assignement of the interface.
	CapIfVoiceVlanInd *bool `json:"cap_if_voice_vlan_ind,omitempty"`
	// The reason that voice VLAN assignment action is not available.
	CapIfVoiceVlanNaReason *string `json:"cap_if_voice_vlan_na_reason,omitempty"`
	// The description of the interface.
	Description         *string                                      `json:"description,omitempty"`
	DescriptionTaskInfo *DiscoveryDeviceinterfaceDescriptionTaskInfo `json:"description_task_info,omitempty"`
	// The ref to the device to which the interface belongs.
	Device *string `json:"device,omitempty"`
	// The duplex state of the interface.
	Duplex *string `json:"duplex,omitempty"`
	// Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.
	Extattrs *map[string]ExtAttrs `json:"extattrs,omitempty"`
	// List of IFaddr information associated with the interface.
	IfaddrInfos []DiscoveryDeviceinterfaceIfaddrInfos `json:"ifaddr_infos,omitempty"`
	// The interface index number, as reported by SNMP.
	Index *int32 `json:"index,omitempty"`
	// Timestamp of the last interface property change detected.
	LastChange *int64 `json:"last_change,omitempty"`
	// This field indicates if this is a link aggregation interface.
	LinkAggregation *bool `json:"link_aggregation,omitempty"`
	// The MAC address of the interface.
	Mac          *string                               `json:"mac,omitempty"`
	MsAdUserData *DiscoveryDeviceinterfaceMsAdUserData `json:"ms_ad_user_data,omitempty"`
	// The interface system name.
	Name *string `json:"name,omitempty"`
	// Th name of the network view.
	NetworkView *string `json:"network_view,omitempty"`
	// Operating state of the interface.
	OperStatus *string `json:"oper_status,omitempty"`
	// The Port Fast status of the interface.
	PortFast *string `json:"port_fast,omitempty"`
	// The reference to object(Host/FixedAddress/GridMember) to which this port is reserved.
	ReservedObject *string `json:"reserved_object,omitempty"`
	// The interface speed in bps.
	Speed *int64 `json:"speed,omitempty"`
	// Indicates if the interface is tagged as a VLAN trunk or not.
	TrunkStatus *string `json:"trunk_status,omitempty"`
	// The type of interface.
	Type             *string                                   `json:"type,omitempty"`
	VlanInfoTaskInfo *DiscoveryDeviceinterfaceVlanInfoTaskInfo `json:"vlan_info_task_info,omitempty"`
	// The list of VLAN information associated with the interface.
	VlanInfos []DiscoveryDeviceinterfaceVlanInfos `json:"vlan_infos,omitempty"`
	// Aggregated interface name of vPC peer device current port is connected to.
	VpcPeer *string `json:"vpc_peer,omitempty"`
	// The reference to vPC peer device.
	VpcPeerDevice *string `json:"vpc_peer_device,omitempty"`
	// The description of the Virtual Routing and Forwarding (VRF) associated with the interface.
	VrfDescription *string `json:"vrf_description,omitempty"`
	// The name of the Virtual Routing and Forwarding (VRF) associated with the interface.
	VrfName *string `json:"vrf_name,omitempty"`
	// The route distinguisher of the Virtual Routing and Forwarding (VRF) associated with the interface.
	VrfRd *string `json:"vrf_rd,omitempty"`
}

// NewDiscoveryDeviceinterface instantiates a new DiscoveryDeviceinterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiscoveryDeviceinterface() *DiscoveryDeviceinterface {
	this := DiscoveryDeviceinterface{}
	return &this
}

// NewDiscoveryDeviceinterfaceWithDefaults instantiates a new DiscoveryDeviceinterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiscoveryDeviceinterfaceWithDefaults() *DiscoveryDeviceinterface {
	this := DiscoveryDeviceinterface{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *DiscoveryDeviceinterface) SetRef(v string) {
	o.Ref = &v
}

// GetAdminStatus returns the AdminStatus field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetAdminStatus() string {
	if o == nil || IsNil(o.AdminStatus) {
		var ret string
		return ret
	}
	return *o.AdminStatus
}

// GetAdminStatusOk returns a tuple with the AdminStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetAdminStatusOk() (*string, bool) {
	if o == nil || IsNil(o.AdminStatus) {
		return nil, false
	}
	return o.AdminStatus, true
}

// HasAdminStatus returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasAdminStatus() bool {
	if o != nil && !IsNil(o.AdminStatus) {
		return true
	}

	return false
}

// SetAdminStatus gets a reference to the given string and assigns it to the AdminStatus field.
func (o *DiscoveryDeviceinterface) SetAdminStatus(v string) {
	o.AdminStatus = &v
}

// GetAdminStatusTaskInfo returns the AdminStatusTaskInfo field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetAdminStatusTaskInfo() DiscoveryDeviceinterfaceAdminStatusTaskInfo {
	if o == nil || IsNil(o.AdminStatusTaskInfo) {
		var ret DiscoveryDeviceinterfaceAdminStatusTaskInfo
		return ret
	}
	return *o.AdminStatusTaskInfo
}

// GetAdminStatusTaskInfoOk returns a tuple with the AdminStatusTaskInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetAdminStatusTaskInfoOk() (*DiscoveryDeviceinterfaceAdminStatusTaskInfo, bool) {
	if o == nil || IsNil(o.AdminStatusTaskInfo) {
		return nil, false
	}
	return o.AdminStatusTaskInfo, true
}

// HasAdminStatusTaskInfo returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasAdminStatusTaskInfo() bool {
	if o != nil && !IsNil(o.AdminStatusTaskInfo) {
		return true
	}

	return false
}

// SetAdminStatusTaskInfo gets a reference to the given DiscoveryDeviceinterfaceAdminStatusTaskInfo and assigns it to the AdminStatusTaskInfo field.
func (o *DiscoveryDeviceinterface) SetAdminStatusTaskInfo(v DiscoveryDeviceinterfaceAdminStatusTaskInfo) {
	o.AdminStatusTaskInfo = &v
}

// GetAggrInterfaceName returns the AggrInterfaceName field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetAggrInterfaceName() string {
	if o == nil || IsNil(o.AggrInterfaceName) {
		var ret string
		return ret
	}
	return *o.AggrInterfaceName
}

// GetAggrInterfaceNameOk returns a tuple with the AggrInterfaceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetAggrInterfaceNameOk() (*string, bool) {
	if o == nil || IsNil(o.AggrInterfaceName) {
		return nil, false
	}
	return o.AggrInterfaceName, true
}

// HasAggrInterfaceName returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasAggrInterfaceName() bool {
	if o != nil && !IsNil(o.AggrInterfaceName) {
		return true
	}

	return false
}

// SetAggrInterfaceName gets a reference to the given string and assigns it to the AggrInterfaceName field.
func (o *DiscoveryDeviceinterface) SetAggrInterfaceName(v string) {
	o.AggrInterfaceName = &v
}

// GetCapIfAdminStatusInd returns the CapIfAdminStatusInd field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetCapIfAdminStatusInd() bool {
	if o == nil || IsNil(o.CapIfAdminStatusInd) {
		var ret bool
		return ret
	}
	return *o.CapIfAdminStatusInd
}

// GetCapIfAdminStatusIndOk returns a tuple with the CapIfAdminStatusInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetCapIfAdminStatusIndOk() (*bool, bool) {
	if o == nil || IsNil(o.CapIfAdminStatusInd) {
		return nil, false
	}
	return o.CapIfAdminStatusInd, true
}

// HasCapIfAdminStatusInd returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasCapIfAdminStatusInd() bool {
	if o != nil && !IsNil(o.CapIfAdminStatusInd) {
		return true
	}

	return false
}

// SetCapIfAdminStatusInd gets a reference to the given bool and assigns it to the CapIfAdminStatusInd field.
func (o *DiscoveryDeviceinterface) SetCapIfAdminStatusInd(v bool) {
	o.CapIfAdminStatusInd = &v
}

// GetCapIfAdminStatusNaReason returns the CapIfAdminStatusNaReason field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetCapIfAdminStatusNaReason() string {
	if o == nil || IsNil(o.CapIfAdminStatusNaReason) {
		var ret string
		return ret
	}
	return *o.CapIfAdminStatusNaReason
}

// GetCapIfAdminStatusNaReasonOk returns a tuple with the CapIfAdminStatusNaReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetCapIfAdminStatusNaReasonOk() (*string, bool) {
	if o == nil || IsNil(o.CapIfAdminStatusNaReason) {
		return nil, false
	}
	return o.CapIfAdminStatusNaReason, true
}

// HasCapIfAdminStatusNaReason returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasCapIfAdminStatusNaReason() bool {
	if o != nil && !IsNil(o.CapIfAdminStatusNaReason) {
		return true
	}

	return false
}

// SetCapIfAdminStatusNaReason gets a reference to the given string and assigns it to the CapIfAdminStatusNaReason field.
func (o *DiscoveryDeviceinterface) SetCapIfAdminStatusNaReason(v string) {
	o.CapIfAdminStatusNaReason = &v
}

// GetCapIfDescriptionInd returns the CapIfDescriptionInd field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetCapIfDescriptionInd() bool {
	if o == nil || IsNil(o.CapIfDescriptionInd) {
		var ret bool
		return ret
	}
	return *o.CapIfDescriptionInd
}

// GetCapIfDescriptionIndOk returns a tuple with the CapIfDescriptionInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetCapIfDescriptionIndOk() (*bool, bool) {
	if o == nil || IsNil(o.CapIfDescriptionInd) {
		return nil, false
	}
	return o.CapIfDescriptionInd, true
}

// HasCapIfDescriptionInd returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasCapIfDescriptionInd() bool {
	if o != nil && !IsNil(o.CapIfDescriptionInd) {
		return true
	}

	return false
}

// SetCapIfDescriptionInd gets a reference to the given bool and assigns it to the CapIfDescriptionInd field.
func (o *DiscoveryDeviceinterface) SetCapIfDescriptionInd(v bool) {
	o.CapIfDescriptionInd = &v
}

// GetCapIfDescriptionNaReason returns the CapIfDescriptionNaReason field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetCapIfDescriptionNaReason() string {
	if o == nil || IsNil(o.CapIfDescriptionNaReason) {
		var ret string
		return ret
	}
	return *o.CapIfDescriptionNaReason
}

// GetCapIfDescriptionNaReasonOk returns a tuple with the CapIfDescriptionNaReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetCapIfDescriptionNaReasonOk() (*string, bool) {
	if o == nil || IsNil(o.CapIfDescriptionNaReason) {
		return nil, false
	}
	return o.CapIfDescriptionNaReason, true
}

// HasCapIfDescriptionNaReason returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasCapIfDescriptionNaReason() bool {
	if o != nil && !IsNil(o.CapIfDescriptionNaReason) {
		return true
	}

	return false
}

// SetCapIfDescriptionNaReason gets a reference to the given string and assigns it to the CapIfDescriptionNaReason field.
func (o *DiscoveryDeviceinterface) SetCapIfDescriptionNaReason(v string) {
	o.CapIfDescriptionNaReason = &v
}

// GetCapIfNetDeprovisioningIpv4Ind returns the CapIfNetDeprovisioningIpv4Ind field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetCapIfNetDeprovisioningIpv4Ind() bool {
	if o == nil || IsNil(o.CapIfNetDeprovisioningIpv4Ind) {
		var ret bool
		return ret
	}
	return *o.CapIfNetDeprovisioningIpv4Ind
}

// GetCapIfNetDeprovisioningIpv4IndOk returns a tuple with the CapIfNetDeprovisioningIpv4Ind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetCapIfNetDeprovisioningIpv4IndOk() (*bool, bool) {
	if o == nil || IsNil(o.CapIfNetDeprovisioningIpv4Ind) {
		return nil, false
	}
	return o.CapIfNetDeprovisioningIpv4Ind, true
}

// HasCapIfNetDeprovisioningIpv4Ind returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasCapIfNetDeprovisioningIpv4Ind() bool {
	if o != nil && !IsNil(o.CapIfNetDeprovisioningIpv4Ind) {
		return true
	}

	return false
}

// SetCapIfNetDeprovisioningIpv4Ind gets a reference to the given bool and assigns it to the CapIfNetDeprovisioningIpv4Ind field.
func (o *DiscoveryDeviceinterface) SetCapIfNetDeprovisioningIpv4Ind(v bool) {
	o.CapIfNetDeprovisioningIpv4Ind = &v
}

// GetCapIfNetDeprovisioningIpv4NaReason returns the CapIfNetDeprovisioningIpv4NaReason field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetCapIfNetDeprovisioningIpv4NaReason() string {
	if o == nil || IsNil(o.CapIfNetDeprovisioningIpv4NaReason) {
		var ret string
		return ret
	}
	return *o.CapIfNetDeprovisioningIpv4NaReason
}

// GetCapIfNetDeprovisioningIpv4NaReasonOk returns a tuple with the CapIfNetDeprovisioningIpv4NaReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetCapIfNetDeprovisioningIpv4NaReasonOk() (*string, bool) {
	if o == nil || IsNil(o.CapIfNetDeprovisioningIpv4NaReason) {
		return nil, false
	}
	return o.CapIfNetDeprovisioningIpv4NaReason, true
}

// HasCapIfNetDeprovisioningIpv4NaReason returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasCapIfNetDeprovisioningIpv4NaReason() bool {
	if o != nil && !IsNil(o.CapIfNetDeprovisioningIpv4NaReason) {
		return true
	}

	return false
}

// SetCapIfNetDeprovisioningIpv4NaReason gets a reference to the given string and assigns it to the CapIfNetDeprovisioningIpv4NaReason field.
func (o *DiscoveryDeviceinterface) SetCapIfNetDeprovisioningIpv4NaReason(v string) {
	o.CapIfNetDeprovisioningIpv4NaReason = &v
}

// GetCapIfNetDeprovisioningIpv6Ind returns the CapIfNetDeprovisioningIpv6Ind field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetCapIfNetDeprovisioningIpv6Ind() bool {
	if o == nil || IsNil(o.CapIfNetDeprovisioningIpv6Ind) {
		var ret bool
		return ret
	}
	return *o.CapIfNetDeprovisioningIpv6Ind
}

// GetCapIfNetDeprovisioningIpv6IndOk returns a tuple with the CapIfNetDeprovisioningIpv6Ind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetCapIfNetDeprovisioningIpv6IndOk() (*bool, bool) {
	if o == nil || IsNil(o.CapIfNetDeprovisioningIpv6Ind) {
		return nil, false
	}
	return o.CapIfNetDeprovisioningIpv6Ind, true
}

// HasCapIfNetDeprovisioningIpv6Ind returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasCapIfNetDeprovisioningIpv6Ind() bool {
	if o != nil && !IsNil(o.CapIfNetDeprovisioningIpv6Ind) {
		return true
	}

	return false
}

// SetCapIfNetDeprovisioningIpv6Ind gets a reference to the given bool and assigns it to the CapIfNetDeprovisioningIpv6Ind field.
func (o *DiscoveryDeviceinterface) SetCapIfNetDeprovisioningIpv6Ind(v bool) {
	o.CapIfNetDeprovisioningIpv6Ind = &v
}

// GetCapIfNetDeprovisioningIpv6NaReason returns the CapIfNetDeprovisioningIpv6NaReason field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetCapIfNetDeprovisioningIpv6NaReason() string {
	if o == nil || IsNil(o.CapIfNetDeprovisioningIpv6NaReason) {
		var ret string
		return ret
	}
	return *o.CapIfNetDeprovisioningIpv6NaReason
}

// GetCapIfNetDeprovisioningIpv6NaReasonOk returns a tuple with the CapIfNetDeprovisioningIpv6NaReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetCapIfNetDeprovisioningIpv6NaReasonOk() (*string, bool) {
	if o == nil || IsNil(o.CapIfNetDeprovisioningIpv6NaReason) {
		return nil, false
	}
	return o.CapIfNetDeprovisioningIpv6NaReason, true
}

// HasCapIfNetDeprovisioningIpv6NaReason returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasCapIfNetDeprovisioningIpv6NaReason() bool {
	if o != nil && !IsNil(o.CapIfNetDeprovisioningIpv6NaReason) {
		return true
	}

	return false
}

// SetCapIfNetDeprovisioningIpv6NaReason gets a reference to the given string and assigns it to the CapIfNetDeprovisioningIpv6NaReason field.
func (o *DiscoveryDeviceinterface) SetCapIfNetDeprovisioningIpv6NaReason(v string) {
	o.CapIfNetDeprovisioningIpv6NaReason = &v
}

// GetCapIfNetProvisioningIpv4Ind returns the CapIfNetProvisioningIpv4Ind field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetCapIfNetProvisioningIpv4Ind() bool {
	if o == nil || IsNil(o.CapIfNetProvisioningIpv4Ind) {
		var ret bool
		return ret
	}
	return *o.CapIfNetProvisioningIpv4Ind
}

// GetCapIfNetProvisioningIpv4IndOk returns a tuple with the CapIfNetProvisioningIpv4Ind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetCapIfNetProvisioningIpv4IndOk() (*bool, bool) {
	if o == nil || IsNil(o.CapIfNetProvisioningIpv4Ind) {
		return nil, false
	}
	return o.CapIfNetProvisioningIpv4Ind, true
}

// HasCapIfNetProvisioningIpv4Ind returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasCapIfNetProvisioningIpv4Ind() bool {
	if o != nil && !IsNil(o.CapIfNetProvisioningIpv4Ind) {
		return true
	}

	return false
}

// SetCapIfNetProvisioningIpv4Ind gets a reference to the given bool and assigns it to the CapIfNetProvisioningIpv4Ind field.
func (o *DiscoveryDeviceinterface) SetCapIfNetProvisioningIpv4Ind(v bool) {
	o.CapIfNetProvisioningIpv4Ind = &v
}

// GetCapIfNetProvisioningIpv4NaReason returns the CapIfNetProvisioningIpv4NaReason field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetCapIfNetProvisioningIpv4NaReason() string {
	if o == nil || IsNil(o.CapIfNetProvisioningIpv4NaReason) {
		var ret string
		return ret
	}
	return *o.CapIfNetProvisioningIpv4NaReason
}

// GetCapIfNetProvisioningIpv4NaReasonOk returns a tuple with the CapIfNetProvisioningIpv4NaReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetCapIfNetProvisioningIpv4NaReasonOk() (*string, bool) {
	if o == nil || IsNil(o.CapIfNetProvisioningIpv4NaReason) {
		return nil, false
	}
	return o.CapIfNetProvisioningIpv4NaReason, true
}

// HasCapIfNetProvisioningIpv4NaReason returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasCapIfNetProvisioningIpv4NaReason() bool {
	if o != nil && !IsNil(o.CapIfNetProvisioningIpv4NaReason) {
		return true
	}

	return false
}

// SetCapIfNetProvisioningIpv4NaReason gets a reference to the given string and assigns it to the CapIfNetProvisioningIpv4NaReason field.
func (o *DiscoveryDeviceinterface) SetCapIfNetProvisioningIpv4NaReason(v string) {
	o.CapIfNetProvisioningIpv4NaReason = &v
}

// GetCapIfNetProvisioningIpv6Ind returns the CapIfNetProvisioningIpv6Ind field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetCapIfNetProvisioningIpv6Ind() bool {
	if o == nil || IsNil(o.CapIfNetProvisioningIpv6Ind) {
		var ret bool
		return ret
	}
	return *o.CapIfNetProvisioningIpv6Ind
}

// GetCapIfNetProvisioningIpv6IndOk returns a tuple with the CapIfNetProvisioningIpv6Ind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetCapIfNetProvisioningIpv6IndOk() (*bool, bool) {
	if o == nil || IsNil(o.CapIfNetProvisioningIpv6Ind) {
		return nil, false
	}
	return o.CapIfNetProvisioningIpv6Ind, true
}

// HasCapIfNetProvisioningIpv6Ind returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasCapIfNetProvisioningIpv6Ind() bool {
	if o != nil && !IsNil(o.CapIfNetProvisioningIpv6Ind) {
		return true
	}

	return false
}

// SetCapIfNetProvisioningIpv6Ind gets a reference to the given bool and assigns it to the CapIfNetProvisioningIpv6Ind field.
func (o *DiscoveryDeviceinterface) SetCapIfNetProvisioningIpv6Ind(v bool) {
	o.CapIfNetProvisioningIpv6Ind = &v
}

// GetCapIfNetProvisioningIpv6NaReason returns the CapIfNetProvisioningIpv6NaReason field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetCapIfNetProvisioningIpv6NaReason() string {
	if o == nil || IsNil(o.CapIfNetProvisioningIpv6NaReason) {
		var ret string
		return ret
	}
	return *o.CapIfNetProvisioningIpv6NaReason
}

// GetCapIfNetProvisioningIpv6NaReasonOk returns a tuple with the CapIfNetProvisioningIpv6NaReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetCapIfNetProvisioningIpv6NaReasonOk() (*string, bool) {
	if o == nil || IsNil(o.CapIfNetProvisioningIpv6NaReason) {
		return nil, false
	}
	return o.CapIfNetProvisioningIpv6NaReason, true
}

// HasCapIfNetProvisioningIpv6NaReason returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasCapIfNetProvisioningIpv6NaReason() bool {
	if o != nil && !IsNil(o.CapIfNetProvisioningIpv6NaReason) {
		return true
	}

	return false
}

// SetCapIfNetProvisioningIpv6NaReason gets a reference to the given string and assigns it to the CapIfNetProvisioningIpv6NaReason field.
func (o *DiscoveryDeviceinterface) SetCapIfNetProvisioningIpv6NaReason(v string) {
	o.CapIfNetProvisioningIpv6NaReason = &v
}

// GetCapIfVlanAssignmentInd returns the CapIfVlanAssignmentInd field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetCapIfVlanAssignmentInd() bool {
	if o == nil || IsNil(o.CapIfVlanAssignmentInd) {
		var ret bool
		return ret
	}
	return *o.CapIfVlanAssignmentInd
}

// GetCapIfVlanAssignmentIndOk returns a tuple with the CapIfVlanAssignmentInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetCapIfVlanAssignmentIndOk() (*bool, bool) {
	if o == nil || IsNil(o.CapIfVlanAssignmentInd) {
		return nil, false
	}
	return o.CapIfVlanAssignmentInd, true
}

// HasCapIfVlanAssignmentInd returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasCapIfVlanAssignmentInd() bool {
	if o != nil && !IsNil(o.CapIfVlanAssignmentInd) {
		return true
	}

	return false
}

// SetCapIfVlanAssignmentInd gets a reference to the given bool and assigns it to the CapIfVlanAssignmentInd field.
func (o *DiscoveryDeviceinterface) SetCapIfVlanAssignmentInd(v bool) {
	o.CapIfVlanAssignmentInd = &v
}

// GetCapIfVlanAssignmentNaReason returns the CapIfVlanAssignmentNaReason field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetCapIfVlanAssignmentNaReason() string {
	if o == nil || IsNil(o.CapIfVlanAssignmentNaReason) {
		var ret string
		return ret
	}
	return *o.CapIfVlanAssignmentNaReason
}

// GetCapIfVlanAssignmentNaReasonOk returns a tuple with the CapIfVlanAssignmentNaReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetCapIfVlanAssignmentNaReasonOk() (*string, bool) {
	if o == nil || IsNil(o.CapIfVlanAssignmentNaReason) {
		return nil, false
	}
	return o.CapIfVlanAssignmentNaReason, true
}

// HasCapIfVlanAssignmentNaReason returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasCapIfVlanAssignmentNaReason() bool {
	if o != nil && !IsNil(o.CapIfVlanAssignmentNaReason) {
		return true
	}

	return false
}

// SetCapIfVlanAssignmentNaReason gets a reference to the given string and assigns it to the CapIfVlanAssignmentNaReason field.
func (o *DiscoveryDeviceinterface) SetCapIfVlanAssignmentNaReason(v string) {
	o.CapIfVlanAssignmentNaReason = &v
}

// GetCapIfVoiceVlanInd returns the CapIfVoiceVlanInd field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetCapIfVoiceVlanInd() bool {
	if o == nil || IsNil(o.CapIfVoiceVlanInd) {
		var ret bool
		return ret
	}
	return *o.CapIfVoiceVlanInd
}

// GetCapIfVoiceVlanIndOk returns a tuple with the CapIfVoiceVlanInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetCapIfVoiceVlanIndOk() (*bool, bool) {
	if o == nil || IsNil(o.CapIfVoiceVlanInd) {
		return nil, false
	}
	return o.CapIfVoiceVlanInd, true
}

// HasCapIfVoiceVlanInd returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasCapIfVoiceVlanInd() bool {
	if o != nil && !IsNil(o.CapIfVoiceVlanInd) {
		return true
	}

	return false
}

// SetCapIfVoiceVlanInd gets a reference to the given bool and assigns it to the CapIfVoiceVlanInd field.
func (o *DiscoveryDeviceinterface) SetCapIfVoiceVlanInd(v bool) {
	o.CapIfVoiceVlanInd = &v
}

// GetCapIfVoiceVlanNaReason returns the CapIfVoiceVlanNaReason field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetCapIfVoiceVlanNaReason() string {
	if o == nil || IsNil(o.CapIfVoiceVlanNaReason) {
		var ret string
		return ret
	}
	return *o.CapIfVoiceVlanNaReason
}

// GetCapIfVoiceVlanNaReasonOk returns a tuple with the CapIfVoiceVlanNaReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetCapIfVoiceVlanNaReasonOk() (*string, bool) {
	if o == nil || IsNil(o.CapIfVoiceVlanNaReason) {
		return nil, false
	}
	return o.CapIfVoiceVlanNaReason, true
}

// HasCapIfVoiceVlanNaReason returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasCapIfVoiceVlanNaReason() bool {
	if o != nil && !IsNil(o.CapIfVoiceVlanNaReason) {
		return true
	}

	return false
}

// SetCapIfVoiceVlanNaReason gets a reference to the given string and assigns it to the CapIfVoiceVlanNaReason field.
func (o *DiscoveryDeviceinterface) SetCapIfVoiceVlanNaReason(v string) {
	o.CapIfVoiceVlanNaReason = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DiscoveryDeviceinterface) SetDescription(v string) {
	o.Description = &v
}

// GetDescriptionTaskInfo returns the DescriptionTaskInfo field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetDescriptionTaskInfo() DiscoveryDeviceinterfaceDescriptionTaskInfo {
	if o == nil || IsNil(o.DescriptionTaskInfo) {
		var ret DiscoveryDeviceinterfaceDescriptionTaskInfo
		return ret
	}
	return *o.DescriptionTaskInfo
}

// GetDescriptionTaskInfoOk returns a tuple with the DescriptionTaskInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetDescriptionTaskInfoOk() (*DiscoveryDeviceinterfaceDescriptionTaskInfo, bool) {
	if o == nil || IsNil(o.DescriptionTaskInfo) {
		return nil, false
	}
	return o.DescriptionTaskInfo, true
}

// HasDescriptionTaskInfo returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasDescriptionTaskInfo() bool {
	if o != nil && !IsNil(o.DescriptionTaskInfo) {
		return true
	}

	return false
}

// SetDescriptionTaskInfo gets a reference to the given DiscoveryDeviceinterfaceDescriptionTaskInfo and assigns it to the DescriptionTaskInfo field.
func (o *DiscoveryDeviceinterface) SetDescriptionTaskInfo(v DiscoveryDeviceinterfaceDescriptionTaskInfo) {
	o.DescriptionTaskInfo = &v
}

// GetDevice returns the Device field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetDevice() string {
	if o == nil || IsNil(o.Device) {
		var ret string
		return ret
	}
	return *o.Device
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetDeviceOk() (*string, bool) {
	if o == nil || IsNil(o.Device) {
		return nil, false
	}
	return o.Device, true
}

// HasDevice returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasDevice() bool {
	if o != nil && !IsNil(o.Device) {
		return true
	}

	return false
}

// SetDevice gets a reference to the given string and assigns it to the Device field.
func (o *DiscoveryDeviceinterface) SetDevice(v string) {
	o.Device = &v
}

// GetDuplex returns the Duplex field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetDuplex() string {
	if o == nil || IsNil(o.Duplex) {
		var ret string
		return ret
	}
	return *o.Duplex
}

// GetDuplexOk returns a tuple with the Duplex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetDuplexOk() (*string, bool) {
	if o == nil || IsNil(o.Duplex) {
		return nil, false
	}
	return o.Duplex, true
}

// HasDuplex returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasDuplex() bool {
	if o != nil && !IsNil(o.Duplex) {
		return true
	}

	return false
}

// SetDuplex gets a reference to the given string and assigns it to the Duplex field.
func (o *DiscoveryDeviceinterface) SetDuplex(v string) {
	o.Duplex = &v
}

// GetExtattrs returns the Extattrs field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetExtattrs() map[string]ExtAttrs {
	if o == nil || IsNil(o.Extattrs) {
		var ret map[string]ExtAttrs
		return ret
	}
	return *o.Extattrs
}

// GetExtattrsOk returns a tuple with the Extattrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetExtattrsOk() (*map[string]ExtAttrs, bool) {
	if o == nil || IsNil(o.Extattrs) {
		return nil, false
	}
	return o.Extattrs, true
}

// HasExtattrs returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasExtattrs() bool {
	if o != nil && !IsNil(o.Extattrs) {
		return true
	}

	return false
}

// SetExtattrs gets a reference to the given map[string]ExtAttrs and assigns it to the Extattrs field.
func (o *DiscoveryDeviceinterface) SetExtattrs(v map[string]ExtAttrs) {
	o.Extattrs = &v
}

// GetIfaddrInfos returns the IfaddrInfos field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetIfaddrInfos() []DiscoveryDeviceinterfaceIfaddrInfos {
	if o == nil || IsNil(o.IfaddrInfos) {
		var ret []DiscoveryDeviceinterfaceIfaddrInfos
		return ret
	}
	return o.IfaddrInfos
}

// GetIfaddrInfosOk returns a tuple with the IfaddrInfos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetIfaddrInfosOk() ([]DiscoveryDeviceinterfaceIfaddrInfos, bool) {
	if o == nil || IsNil(o.IfaddrInfos) {
		return nil, false
	}
	return o.IfaddrInfos, true
}

// HasIfaddrInfos returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasIfaddrInfos() bool {
	if o != nil && !IsNil(o.IfaddrInfos) {
		return true
	}

	return false
}

// SetIfaddrInfos gets a reference to the given []DiscoveryDeviceinterfaceIfaddrInfos and assigns it to the IfaddrInfos field.
func (o *DiscoveryDeviceinterface) SetIfaddrInfos(v []DiscoveryDeviceinterfaceIfaddrInfos) {
	o.IfaddrInfos = v
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetIndex() int32 {
	if o == nil || IsNil(o.Index) {
		var ret int32
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.Index) {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasIndex() bool {
	if o != nil && !IsNil(o.Index) {
		return true
	}

	return false
}

// SetIndex gets a reference to the given int32 and assigns it to the Index field.
func (o *DiscoveryDeviceinterface) SetIndex(v int32) {
	o.Index = &v
}

// GetLastChange returns the LastChange field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetLastChange() int64 {
	if o == nil || IsNil(o.LastChange) {
		var ret int64
		return ret
	}
	return *o.LastChange
}

// GetLastChangeOk returns a tuple with the LastChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetLastChangeOk() (*int64, bool) {
	if o == nil || IsNil(o.LastChange) {
		return nil, false
	}
	return o.LastChange, true
}

// HasLastChange returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasLastChange() bool {
	if o != nil && !IsNil(o.LastChange) {
		return true
	}

	return false
}

// SetLastChange gets a reference to the given int64 and assigns it to the LastChange field.
func (o *DiscoveryDeviceinterface) SetLastChange(v int64) {
	o.LastChange = &v
}

// GetLinkAggregation returns the LinkAggregation field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetLinkAggregation() bool {
	if o == nil || IsNil(o.LinkAggregation) {
		var ret bool
		return ret
	}
	return *o.LinkAggregation
}

// GetLinkAggregationOk returns a tuple with the LinkAggregation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetLinkAggregationOk() (*bool, bool) {
	if o == nil || IsNil(o.LinkAggregation) {
		return nil, false
	}
	return o.LinkAggregation, true
}

// HasLinkAggregation returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasLinkAggregation() bool {
	if o != nil && !IsNil(o.LinkAggregation) {
		return true
	}

	return false
}

// SetLinkAggregation gets a reference to the given bool and assigns it to the LinkAggregation field.
func (o *DiscoveryDeviceinterface) SetLinkAggregation(v bool) {
	o.LinkAggregation = &v
}

// GetMac returns the Mac field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetMac() string {
	if o == nil || IsNil(o.Mac) {
		var ret string
		return ret
	}
	return *o.Mac
}

// GetMacOk returns a tuple with the Mac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetMacOk() (*string, bool) {
	if o == nil || IsNil(o.Mac) {
		return nil, false
	}
	return o.Mac, true
}

// HasMac returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasMac() bool {
	if o != nil && !IsNil(o.Mac) {
		return true
	}

	return false
}

// SetMac gets a reference to the given string and assigns it to the Mac field.
func (o *DiscoveryDeviceinterface) SetMac(v string) {
	o.Mac = &v
}

// GetMsAdUserData returns the MsAdUserData field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetMsAdUserData() DiscoveryDeviceinterfaceMsAdUserData {
	if o == nil || IsNil(o.MsAdUserData) {
		var ret DiscoveryDeviceinterfaceMsAdUserData
		return ret
	}
	return *o.MsAdUserData
}

// GetMsAdUserDataOk returns a tuple with the MsAdUserData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetMsAdUserDataOk() (*DiscoveryDeviceinterfaceMsAdUserData, bool) {
	if o == nil || IsNil(o.MsAdUserData) {
		return nil, false
	}
	return o.MsAdUserData, true
}

// HasMsAdUserData returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasMsAdUserData() bool {
	if o != nil && !IsNil(o.MsAdUserData) {
		return true
	}

	return false
}

// SetMsAdUserData gets a reference to the given DiscoveryDeviceinterfaceMsAdUserData and assigns it to the MsAdUserData field.
func (o *DiscoveryDeviceinterface) SetMsAdUserData(v DiscoveryDeviceinterfaceMsAdUserData) {
	o.MsAdUserData = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DiscoveryDeviceinterface) SetName(v string) {
	o.Name = &v
}

// GetNetworkView returns the NetworkView field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetNetworkView() string {
	if o == nil || IsNil(o.NetworkView) {
		var ret string
		return ret
	}
	return *o.NetworkView
}

// GetNetworkViewOk returns a tuple with the NetworkView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetNetworkViewOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkView) {
		return nil, false
	}
	return o.NetworkView, true
}

// HasNetworkView returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasNetworkView() bool {
	if o != nil && !IsNil(o.NetworkView) {
		return true
	}

	return false
}

// SetNetworkView gets a reference to the given string and assigns it to the NetworkView field.
func (o *DiscoveryDeviceinterface) SetNetworkView(v string) {
	o.NetworkView = &v
}

// GetOperStatus returns the OperStatus field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetOperStatus() string {
	if o == nil || IsNil(o.OperStatus) {
		var ret string
		return ret
	}
	return *o.OperStatus
}

// GetOperStatusOk returns a tuple with the OperStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetOperStatusOk() (*string, bool) {
	if o == nil || IsNil(o.OperStatus) {
		return nil, false
	}
	return o.OperStatus, true
}

// HasOperStatus returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasOperStatus() bool {
	if o != nil && !IsNil(o.OperStatus) {
		return true
	}

	return false
}

// SetOperStatus gets a reference to the given string and assigns it to the OperStatus field.
func (o *DiscoveryDeviceinterface) SetOperStatus(v string) {
	o.OperStatus = &v
}

// GetPortFast returns the PortFast field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetPortFast() string {
	if o == nil || IsNil(o.PortFast) {
		var ret string
		return ret
	}
	return *o.PortFast
}

// GetPortFastOk returns a tuple with the PortFast field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetPortFastOk() (*string, bool) {
	if o == nil || IsNil(o.PortFast) {
		return nil, false
	}
	return o.PortFast, true
}

// HasPortFast returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasPortFast() bool {
	if o != nil && !IsNil(o.PortFast) {
		return true
	}

	return false
}

// SetPortFast gets a reference to the given string and assigns it to the PortFast field.
func (o *DiscoveryDeviceinterface) SetPortFast(v string) {
	o.PortFast = &v
}

// GetReservedObject returns the ReservedObject field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetReservedObject() string {
	if o == nil || IsNil(o.ReservedObject) {
		var ret string
		return ret
	}
	return *o.ReservedObject
}

// GetReservedObjectOk returns a tuple with the ReservedObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetReservedObjectOk() (*string, bool) {
	if o == nil || IsNil(o.ReservedObject) {
		return nil, false
	}
	return o.ReservedObject, true
}

// HasReservedObject returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasReservedObject() bool {
	if o != nil && !IsNil(o.ReservedObject) {
		return true
	}

	return false
}

// SetReservedObject gets a reference to the given string and assigns it to the ReservedObject field.
func (o *DiscoveryDeviceinterface) SetReservedObject(v string) {
	o.ReservedObject = &v
}

// GetSpeed returns the Speed field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetSpeed() int64 {
	if o == nil || IsNil(o.Speed) {
		var ret int64
		return ret
	}
	return *o.Speed
}

// GetSpeedOk returns a tuple with the Speed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetSpeedOk() (*int64, bool) {
	if o == nil || IsNil(o.Speed) {
		return nil, false
	}
	return o.Speed, true
}

// HasSpeed returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasSpeed() bool {
	if o != nil && !IsNil(o.Speed) {
		return true
	}

	return false
}

// SetSpeed gets a reference to the given int64 and assigns it to the Speed field.
func (o *DiscoveryDeviceinterface) SetSpeed(v int64) {
	o.Speed = &v
}

// GetTrunkStatus returns the TrunkStatus field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetTrunkStatus() string {
	if o == nil || IsNil(o.TrunkStatus) {
		var ret string
		return ret
	}
	return *o.TrunkStatus
}

// GetTrunkStatusOk returns a tuple with the TrunkStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetTrunkStatusOk() (*string, bool) {
	if o == nil || IsNil(o.TrunkStatus) {
		return nil, false
	}
	return o.TrunkStatus, true
}

// HasTrunkStatus returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasTrunkStatus() bool {
	if o != nil && !IsNil(o.TrunkStatus) {
		return true
	}

	return false
}

// SetTrunkStatus gets a reference to the given string and assigns it to the TrunkStatus field.
func (o *DiscoveryDeviceinterface) SetTrunkStatus(v string) {
	o.TrunkStatus = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *DiscoveryDeviceinterface) SetType(v string) {
	o.Type = &v
}

// GetVlanInfoTaskInfo returns the VlanInfoTaskInfo field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetVlanInfoTaskInfo() DiscoveryDeviceinterfaceVlanInfoTaskInfo {
	if o == nil || IsNil(o.VlanInfoTaskInfo) {
		var ret DiscoveryDeviceinterfaceVlanInfoTaskInfo
		return ret
	}
	return *o.VlanInfoTaskInfo
}

// GetVlanInfoTaskInfoOk returns a tuple with the VlanInfoTaskInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetVlanInfoTaskInfoOk() (*DiscoveryDeviceinterfaceVlanInfoTaskInfo, bool) {
	if o == nil || IsNil(o.VlanInfoTaskInfo) {
		return nil, false
	}
	return o.VlanInfoTaskInfo, true
}

// HasVlanInfoTaskInfo returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasVlanInfoTaskInfo() bool {
	if o != nil && !IsNil(o.VlanInfoTaskInfo) {
		return true
	}

	return false
}

// SetVlanInfoTaskInfo gets a reference to the given DiscoveryDeviceinterfaceVlanInfoTaskInfo and assigns it to the VlanInfoTaskInfo field.
func (o *DiscoveryDeviceinterface) SetVlanInfoTaskInfo(v DiscoveryDeviceinterfaceVlanInfoTaskInfo) {
	o.VlanInfoTaskInfo = &v
}

// GetVlanInfos returns the VlanInfos field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetVlanInfos() []DiscoveryDeviceinterfaceVlanInfos {
	if o == nil || IsNil(o.VlanInfos) {
		var ret []DiscoveryDeviceinterfaceVlanInfos
		return ret
	}
	return o.VlanInfos
}

// GetVlanInfosOk returns a tuple with the VlanInfos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetVlanInfosOk() ([]DiscoveryDeviceinterfaceVlanInfos, bool) {
	if o == nil || IsNil(o.VlanInfos) {
		return nil, false
	}
	return o.VlanInfos, true
}

// HasVlanInfos returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasVlanInfos() bool {
	if o != nil && !IsNil(o.VlanInfos) {
		return true
	}

	return false
}

// SetVlanInfos gets a reference to the given []DiscoveryDeviceinterfaceVlanInfos and assigns it to the VlanInfos field.
func (o *DiscoveryDeviceinterface) SetVlanInfos(v []DiscoveryDeviceinterfaceVlanInfos) {
	o.VlanInfos = v
}

// GetVpcPeer returns the VpcPeer field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetVpcPeer() string {
	if o == nil || IsNil(o.VpcPeer) {
		var ret string
		return ret
	}
	return *o.VpcPeer
}

// GetVpcPeerOk returns a tuple with the VpcPeer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetVpcPeerOk() (*string, bool) {
	if o == nil || IsNil(o.VpcPeer) {
		return nil, false
	}
	return o.VpcPeer, true
}

// HasVpcPeer returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasVpcPeer() bool {
	if o != nil && !IsNil(o.VpcPeer) {
		return true
	}

	return false
}

// SetVpcPeer gets a reference to the given string and assigns it to the VpcPeer field.
func (o *DiscoveryDeviceinterface) SetVpcPeer(v string) {
	o.VpcPeer = &v
}

// GetVpcPeerDevice returns the VpcPeerDevice field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetVpcPeerDevice() string {
	if o == nil || IsNil(o.VpcPeerDevice) {
		var ret string
		return ret
	}
	return *o.VpcPeerDevice
}

// GetVpcPeerDeviceOk returns a tuple with the VpcPeerDevice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetVpcPeerDeviceOk() (*string, bool) {
	if o == nil || IsNil(o.VpcPeerDevice) {
		return nil, false
	}
	return o.VpcPeerDevice, true
}

// HasVpcPeerDevice returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasVpcPeerDevice() bool {
	if o != nil && !IsNil(o.VpcPeerDevice) {
		return true
	}

	return false
}

// SetVpcPeerDevice gets a reference to the given string and assigns it to the VpcPeerDevice field.
func (o *DiscoveryDeviceinterface) SetVpcPeerDevice(v string) {
	o.VpcPeerDevice = &v
}

// GetVrfDescription returns the VrfDescription field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetVrfDescription() string {
	if o == nil || IsNil(o.VrfDescription) {
		var ret string
		return ret
	}
	return *o.VrfDescription
}

// GetVrfDescriptionOk returns a tuple with the VrfDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetVrfDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.VrfDescription) {
		return nil, false
	}
	return o.VrfDescription, true
}

// HasVrfDescription returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasVrfDescription() bool {
	if o != nil && !IsNil(o.VrfDescription) {
		return true
	}

	return false
}

// SetVrfDescription gets a reference to the given string and assigns it to the VrfDescription field.
func (o *DiscoveryDeviceinterface) SetVrfDescription(v string) {
	o.VrfDescription = &v
}

// GetVrfName returns the VrfName field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetVrfName() string {
	if o == nil || IsNil(o.VrfName) {
		var ret string
		return ret
	}
	return *o.VrfName
}

// GetVrfNameOk returns a tuple with the VrfName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetVrfNameOk() (*string, bool) {
	if o == nil || IsNil(o.VrfName) {
		return nil, false
	}
	return o.VrfName, true
}

// HasVrfName returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasVrfName() bool {
	if o != nil && !IsNil(o.VrfName) {
		return true
	}

	return false
}

// SetVrfName gets a reference to the given string and assigns it to the VrfName field.
func (o *DiscoveryDeviceinterface) SetVrfName(v string) {
	o.VrfName = &v
}

// GetVrfRd returns the VrfRd field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterface) GetVrfRd() string {
	if o == nil || IsNil(o.VrfRd) {
		var ret string
		return ret
	}
	return *o.VrfRd
}

// GetVrfRdOk returns a tuple with the VrfRd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterface) GetVrfRdOk() (*string, bool) {
	if o == nil || IsNil(o.VrfRd) {
		return nil, false
	}
	return o.VrfRd, true
}

// HasVrfRd returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterface) HasVrfRd() bool {
	if o != nil && !IsNil(o.VrfRd) {
		return true
	}

	return false
}

// SetVrfRd gets a reference to the given string and assigns it to the VrfRd field.
func (o *DiscoveryDeviceinterface) SetVrfRd(v string) {
	o.VrfRd = &v
}

func (o DiscoveryDeviceinterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DiscoveryDeviceinterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.AdminStatus) {
		toSerialize["admin_status"] = o.AdminStatus
	}
	if !IsNil(o.AdminStatusTaskInfo) {
		toSerialize["admin_status_task_info"] = o.AdminStatusTaskInfo
	}
	if !IsNil(o.AggrInterfaceName) {
		toSerialize["aggr_interface_name"] = o.AggrInterfaceName
	}
	if !IsNil(o.CapIfAdminStatusInd) {
		toSerialize["cap_if_admin_status_ind"] = o.CapIfAdminStatusInd
	}
	if !IsNil(o.CapIfAdminStatusNaReason) {
		toSerialize["cap_if_admin_status_na_reason"] = o.CapIfAdminStatusNaReason
	}
	if !IsNil(o.CapIfDescriptionInd) {
		toSerialize["cap_if_description_ind"] = o.CapIfDescriptionInd
	}
	if !IsNil(o.CapIfDescriptionNaReason) {
		toSerialize["cap_if_description_na_reason"] = o.CapIfDescriptionNaReason
	}
	if !IsNil(o.CapIfNetDeprovisioningIpv4Ind) {
		toSerialize["cap_if_net_deprovisioning_ipv4_ind"] = o.CapIfNetDeprovisioningIpv4Ind
	}
	if !IsNil(o.CapIfNetDeprovisioningIpv4NaReason) {
		toSerialize["cap_if_net_deprovisioning_ipv4_na_reason"] = o.CapIfNetDeprovisioningIpv4NaReason
	}
	if !IsNil(o.CapIfNetDeprovisioningIpv6Ind) {
		toSerialize["cap_if_net_deprovisioning_ipv6_ind"] = o.CapIfNetDeprovisioningIpv6Ind
	}
	if !IsNil(o.CapIfNetDeprovisioningIpv6NaReason) {
		toSerialize["cap_if_net_deprovisioning_ipv6_na_reason"] = o.CapIfNetDeprovisioningIpv6NaReason
	}
	if !IsNil(o.CapIfNetProvisioningIpv4Ind) {
		toSerialize["cap_if_net_provisioning_ipv4_ind"] = o.CapIfNetProvisioningIpv4Ind
	}
	if !IsNil(o.CapIfNetProvisioningIpv4NaReason) {
		toSerialize["cap_if_net_provisioning_ipv4_na_reason"] = o.CapIfNetProvisioningIpv4NaReason
	}
	if !IsNil(o.CapIfNetProvisioningIpv6Ind) {
		toSerialize["cap_if_net_provisioning_ipv6_ind"] = o.CapIfNetProvisioningIpv6Ind
	}
	if !IsNil(o.CapIfNetProvisioningIpv6NaReason) {
		toSerialize["cap_if_net_provisioning_ipv6_na_reason"] = o.CapIfNetProvisioningIpv6NaReason
	}
	if !IsNil(o.CapIfVlanAssignmentInd) {
		toSerialize["cap_if_vlan_assignment_ind"] = o.CapIfVlanAssignmentInd
	}
	if !IsNil(o.CapIfVlanAssignmentNaReason) {
		toSerialize["cap_if_vlan_assignment_na_reason"] = o.CapIfVlanAssignmentNaReason
	}
	if !IsNil(o.CapIfVoiceVlanInd) {
		toSerialize["cap_if_voice_vlan_ind"] = o.CapIfVoiceVlanInd
	}
	if !IsNil(o.CapIfVoiceVlanNaReason) {
		toSerialize["cap_if_voice_vlan_na_reason"] = o.CapIfVoiceVlanNaReason
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DescriptionTaskInfo) {
		toSerialize["description_task_info"] = o.DescriptionTaskInfo
	}
	if !IsNil(o.Device) {
		toSerialize["device"] = o.Device
	}
	if !IsNil(o.Duplex) {
		toSerialize["duplex"] = o.Duplex
	}
	if !IsNil(o.Extattrs) {
		toSerialize["extattrs"] = o.Extattrs
	}
	if !IsNil(o.IfaddrInfos) {
		toSerialize["ifaddr_infos"] = o.IfaddrInfos
	}
	if !IsNil(o.Index) {
		toSerialize["index"] = o.Index
	}
	if !IsNil(o.LastChange) {
		toSerialize["last_change"] = o.LastChange
	}
	if !IsNil(o.LinkAggregation) {
		toSerialize["link_aggregation"] = o.LinkAggregation
	}
	if !IsNil(o.Mac) {
		toSerialize["mac"] = o.Mac
	}
	if !IsNil(o.MsAdUserData) {
		toSerialize["ms_ad_user_data"] = o.MsAdUserData
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NetworkView) {
		toSerialize["network_view"] = o.NetworkView
	}
	if !IsNil(o.OperStatus) {
		toSerialize["oper_status"] = o.OperStatus
	}
	if !IsNil(o.PortFast) {
		toSerialize["port_fast"] = o.PortFast
	}
	if !IsNil(o.ReservedObject) {
		toSerialize["reserved_object"] = o.ReservedObject
	}
	if !IsNil(o.Speed) {
		toSerialize["speed"] = o.Speed
	}
	if !IsNil(o.TrunkStatus) {
		toSerialize["trunk_status"] = o.TrunkStatus
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.VlanInfoTaskInfo) {
		toSerialize["vlan_info_task_info"] = o.VlanInfoTaskInfo
	}
	if !IsNil(o.VlanInfos) {
		toSerialize["vlan_infos"] = o.VlanInfos
	}
	if !IsNil(o.VpcPeer) {
		toSerialize["vpc_peer"] = o.VpcPeer
	}
	if !IsNil(o.VpcPeerDevice) {
		toSerialize["vpc_peer_device"] = o.VpcPeerDevice
	}
	if !IsNil(o.VrfDescription) {
		toSerialize["vrf_description"] = o.VrfDescription
	}
	if !IsNil(o.VrfName) {
		toSerialize["vrf_name"] = o.VrfName
	}
	if !IsNil(o.VrfRd) {
		toSerialize["vrf_rd"] = o.VrfRd
	}
	return toSerialize, nil
}

type NullableDiscoveryDeviceinterface struct {
	value *DiscoveryDeviceinterface
	isSet bool
}

func (v NullableDiscoveryDeviceinterface) Get() *DiscoveryDeviceinterface {
	return v.value
}

func (v *NullableDiscoveryDeviceinterface) Set(val *DiscoveryDeviceinterface) {
	v.value = val
	v.isSet = true
}

func (v NullableDiscoveryDeviceinterface) IsSet() bool {
	return v.isSet
}

func (v *NullableDiscoveryDeviceinterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiscoveryDeviceinterface(val *DiscoveryDeviceinterface) *NullableDiscoveryDeviceinterface {
	return &NullableDiscoveryDeviceinterface{value: val, isSet: true}
}

func (v NullableDiscoveryDeviceinterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiscoveryDeviceinterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
