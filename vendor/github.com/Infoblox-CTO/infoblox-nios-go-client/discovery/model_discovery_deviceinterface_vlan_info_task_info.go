/*
Infoblox DISCOVERY API

OpenAPI specification for Infoblox NIOS WAPI DISCOVERY objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discovery

import (
	"encoding/json"
)

// checks if the DiscoveryDeviceinterfaceVlanInfoTaskInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DiscoveryDeviceinterfaceVlanInfoTaskInfo{}

// DiscoveryDeviceinterfaceVlanInfoTaskInfo struct for DiscoveryDeviceinterfaceVlanInfoTaskInfo
type DiscoveryDeviceinterfaceVlanInfoTaskInfo struct {
	DataVlanInfo         *DiscoverydeviceinterfacevlaninfotaskinfoDataVlanInfo  `json:"data_vlan_info,omitempty"`
	VoiceVlanInfo        *DiscoverydeviceinterfacevlaninfotaskinfoVoiceVlanInfo `json:"voice_vlan_info,omitempty"`
	Details              *DiscoverydeviceinterfacevlaninfotaskinfoDetails       `json:"details,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DiscoveryDeviceinterfaceVlanInfoTaskInfo DiscoveryDeviceinterfaceVlanInfoTaskInfo

// NewDiscoveryDeviceinterfaceVlanInfoTaskInfo instantiates a new DiscoveryDeviceinterfaceVlanInfoTaskInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiscoveryDeviceinterfaceVlanInfoTaskInfo() *DiscoveryDeviceinterfaceVlanInfoTaskInfo {
	this := DiscoveryDeviceinterfaceVlanInfoTaskInfo{}
	return &this
}

// NewDiscoveryDeviceinterfaceVlanInfoTaskInfoWithDefaults instantiates a new DiscoveryDeviceinterfaceVlanInfoTaskInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiscoveryDeviceinterfaceVlanInfoTaskInfoWithDefaults() *DiscoveryDeviceinterfaceVlanInfoTaskInfo {
	this := DiscoveryDeviceinterfaceVlanInfoTaskInfo{}
	return &this
}

// GetDataVlanInfo returns the DataVlanInfo field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterfaceVlanInfoTaskInfo) GetDataVlanInfo() DiscoverydeviceinterfacevlaninfotaskinfoDataVlanInfo {
	if o == nil || IsNil(o.DataVlanInfo) {
		var ret DiscoverydeviceinterfacevlaninfotaskinfoDataVlanInfo
		return ret
	}
	return *o.DataVlanInfo
}

// GetDataVlanInfoOk returns a tuple with the DataVlanInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterfaceVlanInfoTaskInfo) GetDataVlanInfoOk() (*DiscoverydeviceinterfacevlaninfotaskinfoDataVlanInfo, bool) {
	if o == nil || IsNil(o.DataVlanInfo) {
		return nil, false
	}
	return o.DataVlanInfo, true
}

// HasDataVlanInfo returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterfaceVlanInfoTaskInfo) HasDataVlanInfo() bool {
	if o != nil && !IsNil(o.DataVlanInfo) {
		return true
	}

	return false
}

// SetDataVlanInfo gets a reference to the given DiscoverydeviceinterfacevlaninfotaskinfoDataVlanInfo and assigns it to the DataVlanInfo field.
func (o *DiscoveryDeviceinterfaceVlanInfoTaskInfo) SetDataVlanInfo(v DiscoverydeviceinterfacevlaninfotaskinfoDataVlanInfo) {
	o.DataVlanInfo = &v
}

// GetVoiceVlanInfo returns the VoiceVlanInfo field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterfaceVlanInfoTaskInfo) GetVoiceVlanInfo() DiscoverydeviceinterfacevlaninfotaskinfoVoiceVlanInfo {
	if o == nil || IsNil(o.VoiceVlanInfo) {
		var ret DiscoverydeviceinterfacevlaninfotaskinfoVoiceVlanInfo
		return ret
	}
	return *o.VoiceVlanInfo
}

// GetVoiceVlanInfoOk returns a tuple with the VoiceVlanInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterfaceVlanInfoTaskInfo) GetVoiceVlanInfoOk() (*DiscoverydeviceinterfacevlaninfotaskinfoVoiceVlanInfo, bool) {
	if o == nil || IsNil(o.VoiceVlanInfo) {
		return nil, false
	}
	return o.VoiceVlanInfo, true
}

// HasVoiceVlanInfo returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterfaceVlanInfoTaskInfo) HasVoiceVlanInfo() bool {
	if o != nil && !IsNil(o.VoiceVlanInfo) {
		return true
	}

	return false
}

// SetVoiceVlanInfo gets a reference to the given DiscoverydeviceinterfacevlaninfotaskinfoVoiceVlanInfo and assigns it to the VoiceVlanInfo field.
func (o *DiscoveryDeviceinterfaceVlanInfoTaskInfo) SetVoiceVlanInfo(v DiscoverydeviceinterfacevlaninfotaskinfoVoiceVlanInfo) {
	o.VoiceVlanInfo = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterfaceVlanInfoTaskInfo) GetDetails() DiscoverydeviceinterfacevlaninfotaskinfoDetails {
	if o == nil || IsNil(o.Details) {
		var ret DiscoverydeviceinterfacevlaninfotaskinfoDetails
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterfaceVlanInfoTaskInfo) GetDetailsOk() (*DiscoverydeviceinterfacevlaninfotaskinfoDetails, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterfaceVlanInfoTaskInfo) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given DiscoverydeviceinterfacevlaninfotaskinfoDetails and assigns it to the Details field.
func (o *DiscoveryDeviceinterfaceVlanInfoTaskInfo) SetDetails(v DiscoverydeviceinterfacevlaninfotaskinfoDetails) {
	o.Details = &v
}

func (o DiscoveryDeviceinterfaceVlanInfoTaskInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DiscoveryDeviceinterfaceVlanInfoTaskInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DataVlanInfo) {
		toSerialize["data_vlan_info"] = o.DataVlanInfo
	}
	if !IsNil(o.VoiceVlanInfo) {
		toSerialize["voice_vlan_info"] = o.VoiceVlanInfo
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DiscoveryDeviceinterfaceVlanInfoTaskInfo) UnmarshalJSON(data []byte) (err error) {
	varDiscoveryDeviceinterfaceVlanInfoTaskInfo := _DiscoveryDeviceinterfaceVlanInfoTaskInfo{}

	err = json.Unmarshal(data, &varDiscoveryDeviceinterfaceVlanInfoTaskInfo)

	if err != nil {
		return err
	}

	*o = DiscoveryDeviceinterfaceVlanInfoTaskInfo(varDiscoveryDeviceinterfaceVlanInfoTaskInfo)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "data_vlan_info")
		delete(additionalProperties, "voice_vlan_info")
		delete(additionalProperties, "details")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDiscoveryDeviceinterfaceVlanInfoTaskInfo struct {
	value *DiscoveryDeviceinterfaceVlanInfoTaskInfo
	isSet bool
}

func (v NullableDiscoveryDeviceinterfaceVlanInfoTaskInfo) Get() *DiscoveryDeviceinterfaceVlanInfoTaskInfo {
	return v.value
}

func (v *NullableDiscoveryDeviceinterfaceVlanInfoTaskInfo) Set(val *DiscoveryDeviceinterfaceVlanInfoTaskInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableDiscoveryDeviceinterfaceVlanInfoTaskInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableDiscoveryDeviceinterfaceVlanInfoTaskInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiscoveryDeviceinterfaceVlanInfoTaskInfo(val *DiscoveryDeviceinterfaceVlanInfoTaskInfo) *NullableDiscoveryDeviceinterfaceVlanInfoTaskInfo {
	return &NullableDiscoveryDeviceinterfaceVlanInfoTaskInfo{value: val, isSet: true}
}

func (v NullableDiscoveryDeviceinterfaceVlanInfoTaskInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiscoveryDeviceinterfaceVlanInfoTaskInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
