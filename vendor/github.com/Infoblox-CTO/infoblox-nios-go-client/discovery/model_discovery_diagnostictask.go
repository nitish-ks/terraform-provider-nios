/*
Infoblox DISCOVERY API

OpenAPI specification for Infoblox NIOS WAPI DISCOVERY objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discovery

import (
	"encoding/json"
)

// checks if the DiscoveryDiagnostictask type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DiscoveryDiagnostictask{}

// DiscoveryDiagnostictask struct for DiscoveryDiagnostictask
type DiscoveryDiagnostictask struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// The SNMP community string of the discovery diagnostic task.
	CommunityString *string `json:"community_string,omitempty"`
	// The SNMP debug flag of the discovery diagnostic task.
	DebugSnmp *bool `json:"debug_snmp,omitempty"`
	// The force test flag of the discovery diagnostic task.
	ForceTest *bool `json:"force_test,omitempty"`
	// The IP address of the discovery diagnostic task.
	IpAddress *string `json:"ip_address,omitempty"`
	// The network view name of the discovery diagnostic task.
	NetworkView *string `json:"network_view,omitempty"`
	// The time when the discovery diagnostic task was started.
	StartTime *int64 `json:"start_time,omitempty"`
	// The ID of the discovery diagnostic task.
	TaskId *string `json:"task_id,omitempty"`
}

// NewDiscoveryDiagnostictask instantiates a new DiscoveryDiagnostictask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiscoveryDiagnostictask() *DiscoveryDiagnostictask {
	this := DiscoveryDiagnostictask{}
	return &this
}

// NewDiscoveryDiagnostictaskWithDefaults instantiates a new DiscoveryDiagnostictask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiscoveryDiagnostictaskWithDefaults() *DiscoveryDiagnostictask {
	this := DiscoveryDiagnostictask{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *DiscoveryDiagnostictask) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDiagnostictask) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *DiscoveryDiagnostictask) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *DiscoveryDiagnostictask) SetRef(v string) {
	o.Ref = &v
}

// GetCommunityString returns the CommunityString field value if set, zero value otherwise.
func (o *DiscoveryDiagnostictask) GetCommunityString() string {
	if o == nil || IsNil(o.CommunityString) {
		var ret string
		return ret
	}
	return *o.CommunityString
}

// GetCommunityStringOk returns a tuple with the CommunityString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDiagnostictask) GetCommunityStringOk() (*string, bool) {
	if o == nil || IsNil(o.CommunityString) {
		return nil, false
	}
	return o.CommunityString, true
}

// HasCommunityString returns a boolean if a field has been set.
func (o *DiscoveryDiagnostictask) HasCommunityString() bool {
	if o != nil && !IsNil(o.CommunityString) {
		return true
	}

	return false
}

// SetCommunityString gets a reference to the given string and assigns it to the CommunityString field.
func (o *DiscoveryDiagnostictask) SetCommunityString(v string) {
	o.CommunityString = &v
}

// GetDebugSnmp returns the DebugSnmp field value if set, zero value otherwise.
func (o *DiscoveryDiagnostictask) GetDebugSnmp() bool {
	if o == nil || IsNil(o.DebugSnmp) {
		var ret bool
		return ret
	}
	return *o.DebugSnmp
}

// GetDebugSnmpOk returns a tuple with the DebugSnmp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDiagnostictask) GetDebugSnmpOk() (*bool, bool) {
	if o == nil || IsNil(o.DebugSnmp) {
		return nil, false
	}
	return o.DebugSnmp, true
}

// HasDebugSnmp returns a boolean if a field has been set.
func (o *DiscoveryDiagnostictask) HasDebugSnmp() bool {
	if o != nil && !IsNil(o.DebugSnmp) {
		return true
	}

	return false
}

// SetDebugSnmp gets a reference to the given bool and assigns it to the DebugSnmp field.
func (o *DiscoveryDiagnostictask) SetDebugSnmp(v bool) {
	o.DebugSnmp = &v
}

// GetForceTest returns the ForceTest field value if set, zero value otherwise.
func (o *DiscoveryDiagnostictask) GetForceTest() bool {
	if o == nil || IsNil(o.ForceTest) {
		var ret bool
		return ret
	}
	return *o.ForceTest
}

// GetForceTestOk returns a tuple with the ForceTest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDiagnostictask) GetForceTestOk() (*bool, bool) {
	if o == nil || IsNil(o.ForceTest) {
		return nil, false
	}
	return o.ForceTest, true
}

// HasForceTest returns a boolean if a field has been set.
func (o *DiscoveryDiagnostictask) HasForceTest() bool {
	if o != nil && !IsNil(o.ForceTest) {
		return true
	}

	return false
}

// SetForceTest gets a reference to the given bool and assigns it to the ForceTest field.
func (o *DiscoveryDiagnostictask) SetForceTest(v bool) {
	o.ForceTest = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *DiscoveryDiagnostictask) GetIpAddress() string {
	if o == nil || IsNil(o.IpAddress) {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDiagnostictask) GetIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.IpAddress) {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *DiscoveryDiagnostictask) HasIpAddress() bool {
	if o != nil && !IsNil(o.IpAddress) {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *DiscoveryDiagnostictask) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetNetworkView returns the NetworkView field value if set, zero value otherwise.
func (o *DiscoveryDiagnostictask) GetNetworkView() string {
	if o == nil || IsNil(o.NetworkView) {
		var ret string
		return ret
	}
	return *o.NetworkView
}

// GetNetworkViewOk returns a tuple with the NetworkView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDiagnostictask) GetNetworkViewOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkView) {
		return nil, false
	}
	return o.NetworkView, true
}

// HasNetworkView returns a boolean if a field has been set.
func (o *DiscoveryDiagnostictask) HasNetworkView() bool {
	if o != nil && !IsNil(o.NetworkView) {
		return true
	}

	return false
}

// SetNetworkView gets a reference to the given string and assigns it to the NetworkView field.
func (o *DiscoveryDiagnostictask) SetNetworkView(v string) {
	o.NetworkView = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *DiscoveryDiagnostictask) GetStartTime() int64 {
	if o == nil || IsNil(o.StartTime) {
		var ret int64
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDiagnostictask) GetStartTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *DiscoveryDiagnostictask) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given int64 and assigns it to the StartTime field.
func (o *DiscoveryDiagnostictask) SetStartTime(v int64) {
	o.StartTime = &v
}

// GetTaskId returns the TaskId field value if set, zero value otherwise.
func (o *DiscoveryDiagnostictask) GetTaskId() string {
	if o == nil || IsNil(o.TaskId) {
		var ret string
		return ret
	}
	return *o.TaskId
}

// GetTaskIdOk returns a tuple with the TaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDiagnostictask) GetTaskIdOk() (*string, bool) {
	if o == nil || IsNil(o.TaskId) {
		return nil, false
	}
	return o.TaskId, true
}

// HasTaskId returns a boolean if a field has been set.
func (o *DiscoveryDiagnostictask) HasTaskId() bool {
	if o != nil && !IsNil(o.TaskId) {
		return true
	}

	return false
}

// SetTaskId gets a reference to the given string and assigns it to the TaskId field.
func (o *DiscoveryDiagnostictask) SetTaskId(v string) {
	o.TaskId = &v
}

func (o DiscoveryDiagnostictask) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DiscoveryDiagnostictask) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.CommunityString) {
		toSerialize["community_string"] = o.CommunityString
	}
	if !IsNil(o.DebugSnmp) {
		toSerialize["debug_snmp"] = o.DebugSnmp
	}
	if !IsNil(o.ForceTest) {
		toSerialize["force_test"] = o.ForceTest
	}
	if !IsNil(o.IpAddress) {
		toSerialize["ip_address"] = o.IpAddress
	}
	if !IsNil(o.NetworkView) {
		toSerialize["network_view"] = o.NetworkView
	}
	if !IsNil(o.StartTime) {
		toSerialize["start_time"] = o.StartTime
	}
	if !IsNil(o.TaskId) {
		toSerialize["task_id"] = o.TaskId
	}
	return toSerialize, nil
}

type NullableDiscoveryDiagnostictask struct {
	value *DiscoveryDiagnostictask
	isSet bool
}

func (v NullableDiscoveryDiagnostictask) Get() *DiscoveryDiagnostictask {
	return v.value
}

func (v *NullableDiscoveryDiagnostictask) Set(val *DiscoveryDiagnostictask) {
	v.value = val
	v.isSet = true
}

func (v NullableDiscoveryDiagnostictask) IsSet() bool {
	return v.isSet
}

func (v *NullableDiscoveryDiagnostictask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiscoveryDiagnostictask(val *DiscoveryDiagnostictask) *NullableDiscoveryDiagnostictask {
	return &NullableDiscoveryDiagnostictask{value: val, isSet: true}
}

func (v NullableDiscoveryDiagnostictask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiscoveryDiagnostictask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
