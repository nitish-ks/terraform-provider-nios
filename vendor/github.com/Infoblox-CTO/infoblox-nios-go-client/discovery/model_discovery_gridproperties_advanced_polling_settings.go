/*
Infoblox DISCOVERY API

OpenAPI specification for Infoblox NIOS WAPI DISCOVERY objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discovery

import (
	"encoding/json"
)

// checks if the DiscoveryGridpropertiesAdvancedPollingSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DiscoveryGridpropertiesAdvancedPollingSettings{}

// DiscoveryGridpropertiesAdvancedPollingSettings struct for DiscoveryGridpropertiesAdvancedPollingSettings
type DiscoveryGridpropertiesAdvancedPollingSettings struct {
	// The TCP scan method.
	TcpScanTechnique *string `json:"tcp_scan_technique,omitempty"`
	// The ping timeout in seconds.
	PingTimeout *int64 `json:"ping_timeout,omitempty"`
	// The number of ping retries.
	PingRetries *int64 `json:"ping_retries,omitempty"`
	// The number of days a device remains in database after it is no longer found in network.
	PurgeExpiredDeviceData *int64 `json:"purge_expired_device_data,omitempty"`
	// Determines if purge of expired end host data is enabled.
	EnablePurgeExpiredEndhostData *bool `json:"enable_purge_expired_endhost_data,omitempty"`
	// The number of days a end host remains in database after it is no longer found in network.
	PurgeExpiredEndhostData *int64 `json:"purge_expired_endhost_data,omitempty"`
	// The ARP aggregate limit.
	ArpAggregateLimit *int64 `json:"arp_aggregate_limit,omitempty"`
	// Route limit.
	RouteLimit *int64 `json:"route_limit,omitempty"`
	// The hourly wait interval between ping sweeps for individual discovery ranges.
	PingSweepInterval *int64 `json:"ping_sweep_interval,omitempty"`
	// The refresh interval in seconds for ARP cache.
	ArpCacheRefreshInterval *int64 `json:"arp_cache_refresh_interval,omitempty"`
	// Determines if polling and authenticating using SNMPv2c or later is enabled.
	PollingAuthenticateSnmpv2cOrLaterOnly *bool `json:"polling_authenticate_snmpv2c_or_later_only,omitempty"`
	// Determines if discovery of networks that are not in IPAM is disabled.
	DisableDiscoveryOutsideIpam *bool `json:"disable_discovery_outside_ipam,omitempty"`
	// Determines if DHCP router is used as seed for discovery.
	DhcpRouterAsSeed *bool `json:"dhcp_router_as_seed,omitempty"`
	// Determines if syslogging of IPAM sync events is enabled.
	SyslogIpamEvents *bool `json:"syslog_ipam_events,omitempty"`
	// Determines if syslogging of Network sync events is enabled.
	SyslogNetworkEvents  *bool `json:"syslog_network_events,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DiscoveryGridpropertiesAdvancedPollingSettings DiscoveryGridpropertiesAdvancedPollingSettings

// NewDiscoveryGridpropertiesAdvancedPollingSettings instantiates a new DiscoveryGridpropertiesAdvancedPollingSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiscoveryGridpropertiesAdvancedPollingSettings() *DiscoveryGridpropertiesAdvancedPollingSettings {
	this := DiscoveryGridpropertiesAdvancedPollingSettings{}
	return &this
}

// NewDiscoveryGridpropertiesAdvancedPollingSettingsWithDefaults instantiates a new DiscoveryGridpropertiesAdvancedPollingSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiscoveryGridpropertiesAdvancedPollingSettingsWithDefaults() *DiscoveryGridpropertiesAdvancedPollingSettings {
	this := DiscoveryGridpropertiesAdvancedPollingSettings{}
	return &this
}

// GetTcpScanTechnique returns the TcpScanTechnique field value if set, zero value otherwise.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) GetTcpScanTechnique() string {
	if o == nil || IsNil(o.TcpScanTechnique) {
		var ret string
		return ret
	}
	return *o.TcpScanTechnique
}

// GetTcpScanTechniqueOk returns a tuple with the TcpScanTechnique field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) GetTcpScanTechniqueOk() (*string, bool) {
	if o == nil || IsNil(o.TcpScanTechnique) {
		return nil, false
	}
	return o.TcpScanTechnique, true
}

// HasTcpScanTechnique returns a boolean if a field has been set.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) HasTcpScanTechnique() bool {
	if o != nil && !IsNil(o.TcpScanTechnique) {
		return true
	}

	return false
}

// SetTcpScanTechnique gets a reference to the given string and assigns it to the TcpScanTechnique field.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) SetTcpScanTechnique(v string) {
	o.TcpScanTechnique = &v
}

// GetPingTimeout returns the PingTimeout field value if set, zero value otherwise.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) GetPingTimeout() int64 {
	if o == nil || IsNil(o.PingTimeout) {
		var ret int64
		return ret
	}
	return *o.PingTimeout
}

// GetPingTimeoutOk returns a tuple with the PingTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) GetPingTimeoutOk() (*int64, bool) {
	if o == nil || IsNil(o.PingTimeout) {
		return nil, false
	}
	return o.PingTimeout, true
}

// HasPingTimeout returns a boolean if a field has been set.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) HasPingTimeout() bool {
	if o != nil && !IsNil(o.PingTimeout) {
		return true
	}

	return false
}

// SetPingTimeout gets a reference to the given int64 and assigns it to the PingTimeout field.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) SetPingTimeout(v int64) {
	o.PingTimeout = &v
}

// GetPingRetries returns the PingRetries field value if set, zero value otherwise.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) GetPingRetries() int64 {
	if o == nil || IsNil(o.PingRetries) {
		var ret int64
		return ret
	}
	return *o.PingRetries
}

// GetPingRetriesOk returns a tuple with the PingRetries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) GetPingRetriesOk() (*int64, bool) {
	if o == nil || IsNil(o.PingRetries) {
		return nil, false
	}
	return o.PingRetries, true
}

// HasPingRetries returns a boolean if a field has been set.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) HasPingRetries() bool {
	if o != nil && !IsNil(o.PingRetries) {
		return true
	}

	return false
}

// SetPingRetries gets a reference to the given int64 and assigns it to the PingRetries field.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) SetPingRetries(v int64) {
	o.PingRetries = &v
}

// GetPurgeExpiredDeviceData returns the PurgeExpiredDeviceData field value if set, zero value otherwise.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) GetPurgeExpiredDeviceData() int64 {
	if o == nil || IsNil(o.PurgeExpiredDeviceData) {
		var ret int64
		return ret
	}
	return *o.PurgeExpiredDeviceData
}

// GetPurgeExpiredDeviceDataOk returns a tuple with the PurgeExpiredDeviceData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) GetPurgeExpiredDeviceDataOk() (*int64, bool) {
	if o == nil || IsNil(o.PurgeExpiredDeviceData) {
		return nil, false
	}
	return o.PurgeExpiredDeviceData, true
}

// HasPurgeExpiredDeviceData returns a boolean if a field has been set.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) HasPurgeExpiredDeviceData() bool {
	if o != nil && !IsNil(o.PurgeExpiredDeviceData) {
		return true
	}

	return false
}

// SetPurgeExpiredDeviceData gets a reference to the given int64 and assigns it to the PurgeExpiredDeviceData field.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) SetPurgeExpiredDeviceData(v int64) {
	o.PurgeExpiredDeviceData = &v
}

// GetEnablePurgeExpiredEndhostData returns the EnablePurgeExpiredEndhostData field value if set, zero value otherwise.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) GetEnablePurgeExpiredEndhostData() bool {
	if o == nil || IsNil(o.EnablePurgeExpiredEndhostData) {
		var ret bool
		return ret
	}
	return *o.EnablePurgeExpiredEndhostData
}

// GetEnablePurgeExpiredEndhostDataOk returns a tuple with the EnablePurgeExpiredEndhostData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) GetEnablePurgeExpiredEndhostDataOk() (*bool, bool) {
	if o == nil || IsNil(o.EnablePurgeExpiredEndhostData) {
		return nil, false
	}
	return o.EnablePurgeExpiredEndhostData, true
}

// HasEnablePurgeExpiredEndhostData returns a boolean if a field has been set.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) HasEnablePurgeExpiredEndhostData() bool {
	if o != nil && !IsNil(o.EnablePurgeExpiredEndhostData) {
		return true
	}

	return false
}

// SetEnablePurgeExpiredEndhostData gets a reference to the given bool and assigns it to the EnablePurgeExpiredEndhostData field.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) SetEnablePurgeExpiredEndhostData(v bool) {
	o.EnablePurgeExpiredEndhostData = &v
}

// GetPurgeExpiredEndhostData returns the PurgeExpiredEndhostData field value if set, zero value otherwise.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) GetPurgeExpiredEndhostData() int64 {
	if o == nil || IsNil(o.PurgeExpiredEndhostData) {
		var ret int64
		return ret
	}
	return *o.PurgeExpiredEndhostData
}

// GetPurgeExpiredEndhostDataOk returns a tuple with the PurgeExpiredEndhostData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) GetPurgeExpiredEndhostDataOk() (*int64, bool) {
	if o == nil || IsNil(o.PurgeExpiredEndhostData) {
		return nil, false
	}
	return o.PurgeExpiredEndhostData, true
}

// HasPurgeExpiredEndhostData returns a boolean if a field has been set.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) HasPurgeExpiredEndhostData() bool {
	if o != nil && !IsNil(o.PurgeExpiredEndhostData) {
		return true
	}

	return false
}

// SetPurgeExpiredEndhostData gets a reference to the given int64 and assigns it to the PurgeExpiredEndhostData field.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) SetPurgeExpiredEndhostData(v int64) {
	o.PurgeExpiredEndhostData = &v
}

// GetArpAggregateLimit returns the ArpAggregateLimit field value if set, zero value otherwise.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) GetArpAggregateLimit() int64 {
	if o == nil || IsNil(o.ArpAggregateLimit) {
		var ret int64
		return ret
	}
	return *o.ArpAggregateLimit
}

// GetArpAggregateLimitOk returns a tuple with the ArpAggregateLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) GetArpAggregateLimitOk() (*int64, bool) {
	if o == nil || IsNil(o.ArpAggregateLimit) {
		return nil, false
	}
	return o.ArpAggregateLimit, true
}

// HasArpAggregateLimit returns a boolean if a field has been set.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) HasArpAggregateLimit() bool {
	if o != nil && !IsNil(o.ArpAggregateLimit) {
		return true
	}

	return false
}

// SetArpAggregateLimit gets a reference to the given int64 and assigns it to the ArpAggregateLimit field.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) SetArpAggregateLimit(v int64) {
	o.ArpAggregateLimit = &v
}

// GetRouteLimit returns the RouteLimit field value if set, zero value otherwise.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) GetRouteLimit() int64 {
	if o == nil || IsNil(o.RouteLimit) {
		var ret int64
		return ret
	}
	return *o.RouteLimit
}

// GetRouteLimitOk returns a tuple with the RouteLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) GetRouteLimitOk() (*int64, bool) {
	if o == nil || IsNil(o.RouteLimit) {
		return nil, false
	}
	return o.RouteLimit, true
}

// HasRouteLimit returns a boolean if a field has been set.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) HasRouteLimit() bool {
	if o != nil && !IsNil(o.RouteLimit) {
		return true
	}

	return false
}

// SetRouteLimit gets a reference to the given int64 and assigns it to the RouteLimit field.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) SetRouteLimit(v int64) {
	o.RouteLimit = &v
}

// GetPingSweepInterval returns the PingSweepInterval field value if set, zero value otherwise.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) GetPingSweepInterval() int64 {
	if o == nil || IsNil(o.PingSweepInterval) {
		var ret int64
		return ret
	}
	return *o.PingSweepInterval
}

// GetPingSweepIntervalOk returns a tuple with the PingSweepInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) GetPingSweepIntervalOk() (*int64, bool) {
	if o == nil || IsNil(o.PingSweepInterval) {
		return nil, false
	}
	return o.PingSweepInterval, true
}

// HasPingSweepInterval returns a boolean if a field has been set.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) HasPingSweepInterval() bool {
	if o != nil && !IsNil(o.PingSweepInterval) {
		return true
	}

	return false
}

// SetPingSweepInterval gets a reference to the given int64 and assigns it to the PingSweepInterval field.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) SetPingSweepInterval(v int64) {
	o.PingSweepInterval = &v
}

// GetArpCacheRefreshInterval returns the ArpCacheRefreshInterval field value if set, zero value otherwise.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) GetArpCacheRefreshInterval() int64 {
	if o == nil || IsNil(o.ArpCacheRefreshInterval) {
		var ret int64
		return ret
	}
	return *o.ArpCacheRefreshInterval
}

// GetArpCacheRefreshIntervalOk returns a tuple with the ArpCacheRefreshInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) GetArpCacheRefreshIntervalOk() (*int64, bool) {
	if o == nil || IsNil(o.ArpCacheRefreshInterval) {
		return nil, false
	}
	return o.ArpCacheRefreshInterval, true
}

// HasArpCacheRefreshInterval returns a boolean if a field has been set.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) HasArpCacheRefreshInterval() bool {
	if o != nil && !IsNil(o.ArpCacheRefreshInterval) {
		return true
	}

	return false
}

// SetArpCacheRefreshInterval gets a reference to the given int64 and assigns it to the ArpCacheRefreshInterval field.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) SetArpCacheRefreshInterval(v int64) {
	o.ArpCacheRefreshInterval = &v
}

// GetPollingAuthenticateSnmpv2cOrLaterOnly returns the PollingAuthenticateSnmpv2cOrLaterOnly field value if set, zero value otherwise.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) GetPollingAuthenticateSnmpv2cOrLaterOnly() bool {
	if o == nil || IsNil(o.PollingAuthenticateSnmpv2cOrLaterOnly) {
		var ret bool
		return ret
	}
	return *o.PollingAuthenticateSnmpv2cOrLaterOnly
}

// GetPollingAuthenticateSnmpv2cOrLaterOnlyOk returns a tuple with the PollingAuthenticateSnmpv2cOrLaterOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) GetPollingAuthenticateSnmpv2cOrLaterOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.PollingAuthenticateSnmpv2cOrLaterOnly) {
		return nil, false
	}
	return o.PollingAuthenticateSnmpv2cOrLaterOnly, true
}

// HasPollingAuthenticateSnmpv2cOrLaterOnly returns a boolean if a field has been set.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) HasPollingAuthenticateSnmpv2cOrLaterOnly() bool {
	if o != nil && !IsNil(o.PollingAuthenticateSnmpv2cOrLaterOnly) {
		return true
	}

	return false
}

// SetPollingAuthenticateSnmpv2cOrLaterOnly gets a reference to the given bool and assigns it to the PollingAuthenticateSnmpv2cOrLaterOnly field.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) SetPollingAuthenticateSnmpv2cOrLaterOnly(v bool) {
	o.PollingAuthenticateSnmpv2cOrLaterOnly = &v
}

// GetDisableDiscoveryOutsideIpam returns the DisableDiscoveryOutsideIpam field value if set, zero value otherwise.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) GetDisableDiscoveryOutsideIpam() bool {
	if o == nil || IsNil(o.DisableDiscoveryOutsideIpam) {
		var ret bool
		return ret
	}
	return *o.DisableDiscoveryOutsideIpam
}

// GetDisableDiscoveryOutsideIpamOk returns a tuple with the DisableDiscoveryOutsideIpam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) GetDisableDiscoveryOutsideIpamOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableDiscoveryOutsideIpam) {
		return nil, false
	}
	return o.DisableDiscoveryOutsideIpam, true
}

// HasDisableDiscoveryOutsideIpam returns a boolean if a field has been set.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) HasDisableDiscoveryOutsideIpam() bool {
	if o != nil && !IsNil(o.DisableDiscoveryOutsideIpam) {
		return true
	}

	return false
}

// SetDisableDiscoveryOutsideIpam gets a reference to the given bool and assigns it to the DisableDiscoveryOutsideIpam field.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) SetDisableDiscoveryOutsideIpam(v bool) {
	o.DisableDiscoveryOutsideIpam = &v
}

// GetDhcpRouterAsSeed returns the DhcpRouterAsSeed field value if set, zero value otherwise.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) GetDhcpRouterAsSeed() bool {
	if o == nil || IsNil(o.DhcpRouterAsSeed) {
		var ret bool
		return ret
	}
	return *o.DhcpRouterAsSeed
}

// GetDhcpRouterAsSeedOk returns a tuple with the DhcpRouterAsSeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) GetDhcpRouterAsSeedOk() (*bool, bool) {
	if o == nil || IsNil(o.DhcpRouterAsSeed) {
		return nil, false
	}
	return o.DhcpRouterAsSeed, true
}

// HasDhcpRouterAsSeed returns a boolean if a field has been set.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) HasDhcpRouterAsSeed() bool {
	if o != nil && !IsNil(o.DhcpRouterAsSeed) {
		return true
	}

	return false
}

// SetDhcpRouterAsSeed gets a reference to the given bool and assigns it to the DhcpRouterAsSeed field.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) SetDhcpRouterAsSeed(v bool) {
	o.DhcpRouterAsSeed = &v
}

// GetSyslogIpamEvents returns the SyslogIpamEvents field value if set, zero value otherwise.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) GetSyslogIpamEvents() bool {
	if o == nil || IsNil(o.SyslogIpamEvents) {
		var ret bool
		return ret
	}
	return *o.SyslogIpamEvents
}

// GetSyslogIpamEventsOk returns a tuple with the SyslogIpamEvents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) GetSyslogIpamEventsOk() (*bool, bool) {
	if o == nil || IsNil(o.SyslogIpamEvents) {
		return nil, false
	}
	return o.SyslogIpamEvents, true
}

// HasSyslogIpamEvents returns a boolean if a field has been set.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) HasSyslogIpamEvents() bool {
	if o != nil && !IsNil(o.SyslogIpamEvents) {
		return true
	}

	return false
}

// SetSyslogIpamEvents gets a reference to the given bool and assigns it to the SyslogIpamEvents field.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) SetSyslogIpamEvents(v bool) {
	o.SyslogIpamEvents = &v
}

// GetSyslogNetworkEvents returns the SyslogNetworkEvents field value if set, zero value otherwise.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) GetSyslogNetworkEvents() bool {
	if o == nil || IsNil(o.SyslogNetworkEvents) {
		var ret bool
		return ret
	}
	return *o.SyslogNetworkEvents
}

// GetSyslogNetworkEventsOk returns a tuple with the SyslogNetworkEvents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) GetSyslogNetworkEventsOk() (*bool, bool) {
	if o == nil || IsNil(o.SyslogNetworkEvents) {
		return nil, false
	}
	return o.SyslogNetworkEvents, true
}

// HasSyslogNetworkEvents returns a boolean if a field has been set.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) HasSyslogNetworkEvents() bool {
	if o != nil && !IsNil(o.SyslogNetworkEvents) {
		return true
	}

	return false
}

// SetSyslogNetworkEvents gets a reference to the given bool and assigns it to the SyslogNetworkEvents field.
func (o *DiscoveryGridpropertiesAdvancedPollingSettings) SetSyslogNetworkEvents(v bool) {
	o.SyslogNetworkEvents = &v
}

func (o DiscoveryGridpropertiesAdvancedPollingSettings) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DiscoveryGridpropertiesAdvancedPollingSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TcpScanTechnique) {
		toSerialize["tcp_scan_technique"] = o.TcpScanTechnique
	}
	if !IsNil(o.PingTimeout) {
		toSerialize["ping_timeout"] = o.PingTimeout
	}
	if !IsNil(o.PingRetries) {
		toSerialize["ping_retries"] = o.PingRetries
	}
	if !IsNil(o.PurgeExpiredDeviceData) {
		toSerialize["purge_expired_device_data"] = o.PurgeExpiredDeviceData
	}
	if !IsNil(o.EnablePurgeExpiredEndhostData) {
		toSerialize["enable_purge_expired_endhost_data"] = o.EnablePurgeExpiredEndhostData
	}
	if !IsNil(o.PurgeExpiredEndhostData) {
		toSerialize["purge_expired_endhost_data"] = o.PurgeExpiredEndhostData
	}
	if !IsNil(o.ArpAggregateLimit) {
		toSerialize["arp_aggregate_limit"] = o.ArpAggregateLimit
	}
	if !IsNil(o.RouteLimit) {
		toSerialize["route_limit"] = o.RouteLimit
	}
	if !IsNil(o.PingSweepInterval) {
		toSerialize["ping_sweep_interval"] = o.PingSweepInterval
	}
	if !IsNil(o.ArpCacheRefreshInterval) {
		toSerialize["arp_cache_refresh_interval"] = o.ArpCacheRefreshInterval
	}
	if !IsNil(o.PollingAuthenticateSnmpv2cOrLaterOnly) {
		toSerialize["polling_authenticate_snmpv2c_or_later_only"] = o.PollingAuthenticateSnmpv2cOrLaterOnly
	}
	if !IsNil(o.DisableDiscoveryOutsideIpam) {
		toSerialize["disable_discovery_outside_ipam"] = o.DisableDiscoveryOutsideIpam
	}
	if !IsNil(o.DhcpRouterAsSeed) {
		toSerialize["dhcp_router_as_seed"] = o.DhcpRouterAsSeed
	}
	if !IsNil(o.SyslogIpamEvents) {
		toSerialize["syslog_ipam_events"] = o.SyslogIpamEvents
	}
	if !IsNil(o.SyslogNetworkEvents) {
		toSerialize["syslog_network_events"] = o.SyslogNetworkEvents
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DiscoveryGridpropertiesAdvancedPollingSettings) UnmarshalJSON(data []byte) (err error) {
	varDiscoveryGridpropertiesAdvancedPollingSettings := _DiscoveryGridpropertiesAdvancedPollingSettings{}

	err = json.Unmarshal(data, &varDiscoveryGridpropertiesAdvancedPollingSettings)

	if err != nil {
		return err
	}

	*o = DiscoveryGridpropertiesAdvancedPollingSettings(varDiscoveryGridpropertiesAdvancedPollingSettings)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "tcp_scan_technique")
		delete(additionalProperties, "ping_timeout")
		delete(additionalProperties, "ping_retries")
		delete(additionalProperties, "purge_expired_device_data")
		delete(additionalProperties, "enable_purge_expired_endhost_data")
		delete(additionalProperties, "purge_expired_endhost_data")
		delete(additionalProperties, "arp_aggregate_limit")
		delete(additionalProperties, "route_limit")
		delete(additionalProperties, "ping_sweep_interval")
		delete(additionalProperties, "arp_cache_refresh_interval")
		delete(additionalProperties, "polling_authenticate_snmpv2c_or_later_only")
		delete(additionalProperties, "disable_discovery_outside_ipam")
		delete(additionalProperties, "dhcp_router_as_seed")
		delete(additionalProperties, "syslog_ipam_events")
		delete(additionalProperties, "syslog_network_events")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDiscoveryGridpropertiesAdvancedPollingSettings struct {
	value *DiscoveryGridpropertiesAdvancedPollingSettings
	isSet bool
}

func (v NullableDiscoveryGridpropertiesAdvancedPollingSettings) Get() *DiscoveryGridpropertiesAdvancedPollingSettings {
	return v.value
}

func (v *NullableDiscoveryGridpropertiesAdvancedPollingSettings) Set(val *DiscoveryGridpropertiesAdvancedPollingSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableDiscoveryGridpropertiesAdvancedPollingSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableDiscoveryGridpropertiesAdvancedPollingSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiscoveryGridpropertiesAdvancedPollingSettings(val *DiscoveryGridpropertiesAdvancedPollingSettings) *NullableDiscoveryGridpropertiesAdvancedPollingSettings {
	return &NullableDiscoveryGridpropertiesAdvancedPollingSettings{value: val, isSet: true}
}

func (v NullableDiscoveryGridpropertiesAdvancedPollingSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiscoveryGridpropertiesAdvancedPollingSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
