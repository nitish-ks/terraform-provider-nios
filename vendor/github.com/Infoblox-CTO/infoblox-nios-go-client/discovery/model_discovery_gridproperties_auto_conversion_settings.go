/*
Infoblox DISCOVERY API

OpenAPI specification for Infoblox NIOS WAPI DISCOVERY objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discovery

import (
	"encoding/json"
)

// checks if the DiscoveryGridpropertiesAutoConversionSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DiscoveryGridpropertiesAutoConversionSettings{}

// DiscoveryGridpropertiesAutoConversionSettings struct for DiscoveryGridpropertiesAutoConversionSettings
type DiscoveryGridpropertiesAutoConversionSettings struct {
	// The network view name which contains discovered data for convert.
	NetworkView *string `json:"network_view,omitempty"`
	// The object type used to define the converted object.
	Type *string `json:"type,omitempty"`
	// Template string used to generate host names.
	Format *string `json:"format,omitempty"`
	// The string that contains condition of use the auto conversion settings.
	Condition *string `json:"condition,omitempty"`
	// The comment.
	Comment              *string `json:"comment,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DiscoveryGridpropertiesAutoConversionSettings DiscoveryGridpropertiesAutoConversionSettings

// NewDiscoveryGridpropertiesAutoConversionSettings instantiates a new DiscoveryGridpropertiesAutoConversionSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiscoveryGridpropertiesAutoConversionSettings() *DiscoveryGridpropertiesAutoConversionSettings {
	this := DiscoveryGridpropertiesAutoConversionSettings{}
	return &this
}

// NewDiscoveryGridpropertiesAutoConversionSettingsWithDefaults instantiates a new DiscoveryGridpropertiesAutoConversionSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiscoveryGridpropertiesAutoConversionSettingsWithDefaults() *DiscoveryGridpropertiesAutoConversionSettings {
	this := DiscoveryGridpropertiesAutoConversionSettings{}
	return &this
}

// GetNetworkView returns the NetworkView field value if set, zero value otherwise.
func (o *DiscoveryGridpropertiesAutoConversionSettings) GetNetworkView() string {
	if o == nil || IsNil(o.NetworkView) {
		var ret string
		return ret
	}
	return *o.NetworkView
}

// GetNetworkViewOk returns a tuple with the NetworkView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryGridpropertiesAutoConversionSettings) GetNetworkViewOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkView) {
		return nil, false
	}
	return o.NetworkView, true
}

// HasNetworkView returns a boolean if a field has been set.
func (o *DiscoveryGridpropertiesAutoConversionSettings) HasNetworkView() bool {
	if o != nil && !IsNil(o.NetworkView) {
		return true
	}

	return false
}

// SetNetworkView gets a reference to the given string and assigns it to the NetworkView field.
func (o *DiscoveryGridpropertiesAutoConversionSettings) SetNetworkView(v string) {
	o.NetworkView = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *DiscoveryGridpropertiesAutoConversionSettings) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryGridpropertiesAutoConversionSettings) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *DiscoveryGridpropertiesAutoConversionSettings) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *DiscoveryGridpropertiesAutoConversionSettings) SetType(v string) {
	o.Type = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *DiscoveryGridpropertiesAutoConversionSettings) GetFormat() string {
	if o == nil || IsNil(o.Format) {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryGridpropertiesAutoConversionSettings) GetFormatOk() (*string, bool) {
	if o == nil || IsNil(o.Format) {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *DiscoveryGridpropertiesAutoConversionSettings) HasFormat() bool {
	if o != nil && !IsNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *DiscoveryGridpropertiesAutoConversionSettings) SetFormat(v string) {
	o.Format = &v
}

// GetCondition returns the Condition field value if set, zero value otherwise.
func (o *DiscoveryGridpropertiesAutoConversionSettings) GetCondition() string {
	if o == nil || IsNil(o.Condition) {
		var ret string
		return ret
	}
	return *o.Condition
}

// GetConditionOk returns a tuple with the Condition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryGridpropertiesAutoConversionSettings) GetConditionOk() (*string, bool) {
	if o == nil || IsNil(o.Condition) {
		return nil, false
	}
	return o.Condition, true
}

// HasCondition returns a boolean if a field has been set.
func (o *DiscoveryGridpropertiesAutoConversionSettings) HasCondition() bool {
	if o != nil && !IsNil(o.Condition) {
		return true
	}

	return false
}

// SetCondition gets a reference to the given string and assigns it to the Condition field.
func (o *DiscoveryGridpropertiesAutoConversionSettings) SetCondition(v string) {
	o.Condition = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *DiscoveryGridpropertiesAutoConversionSettings) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryGridpropertiesAutoConversionSettings) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *DiscoveryGridpropertiesAutoConversionSettings) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *DiscoveryGridpropertiesAutoConversionSettings) SetComment(v string) {
	o.Comment = &v
}

func (o DiscoveryGridpropertiesAutoConversionSettings) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DiscoveryGridpropertiesAutoConversionSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NetworkView) {
		toSerialize["network_view"] = o.NetworkView
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	if !IsNil(o.Condition) {
		toSerialize["condition"] = o.Condition
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DiscoveryGridpropertiesAutoConversionSettings) UnmarshalJSON(data []byte) (err error) {
	varDiscoveryGridpropertiesAutoConversionSettings := _DiscoveryGridpropertiesAutoConversionSettings{}

	err = json.Unmarshal(data, &varDiscoveryGridpropertiesAutoConversionSettings)

	if err != nil {
		return err
	}

	*o = DiscoveryGridpropertiesAutoConversionSettings(varDiscoveryGridpropertiesAutoConversionSettings)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "network_view")
		delete(additionalProperties, "type")
		delete(additionalProperties, "format")
		delete(additionalProperties, "condition")
		delete(additionalProperties, "comment")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDiscoveryGridpropertiesAutoConversionSettings struct {
	value *DiscoveryGridpropertiesAutoConversionSettings
	isSet bool
}

func (v NullableDiscoveryGridpropertiesAutoConversionSettings) Get() *DiscoveryGridpropertiesAutoConversionSettings {
	return v.value
}

func (v *NullableDiscoveryGridpropertiesAutoConversionSettings) Set(val *DiscoveryGridpropertiesAutoConversionSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableDiscoveryGridpropertiesAutoConversionSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableDiscoveryGridpropertiesAutoConversionSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiscoveryGridpropertiesAutoConversionSettings(val *DiscoveryGridpropertiesAutoConversionSettings) *NullableDiscoveryGridpropertiesAutoConversionSettings {
	return &NullableDiscoveryGridpropertiesAutoConversionSettings{value: val, isSet: true}
}

func (v NullableDiscoveryGridpropertiesAutoConversionSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiscoveryGridpropertiesAutoConversionSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
