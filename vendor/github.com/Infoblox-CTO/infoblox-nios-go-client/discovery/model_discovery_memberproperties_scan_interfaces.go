/*
Infoblox DISCOVERY API

OpenAPI specification for Infoblox NIOS WAPI DISCOVERY objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discovery

import (
	"encoding/json"
)

// checks if the DiscoveryMemberpropertiesScanInterfaces type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DiscoveryMemberpropertiesScanInterfaces{}

// DiscoveryMemberpropertiesScanInterfaces struct for DiscoveryMemberpropertiesScanInterfaces
type DiscoveryMemberpropertiesScanInterfaces struct {
	// The name of the network view associated with the network discovery probing member.
	NetworkView *string `json:"network_view,omitempty"`
	// The probing interface associated with the network discovery probing member.
	Type *string `json:"type,omitempty"`
	// The virtual ip for discovery scan interface on network discovery probing member.
	ScanVirtualIp        *string `json:"scan_virtual_ip,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DiscoveryMemberpropertiesScanInterfaces DiscoveryMemberpropertiesScanInterfaces

// NewDiscoveryMemberpropertiesScanInterfaces instantiates a new DiscoveryMemberpropertiesScanInterfaces object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiscoveryMemberpropertiesScanInterfaces() *DiscoveryMemberpropertiesScanInterfaces {
	this := DiscoveryMemberpropertiesScanInterfaces{}
	return &this
}

// NewDiscoveryMemberpropertiesScanInterfacesWithDefaults instantiates a new DiscoveryMemberpropertiesScanInterfaces object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiscoveryMemberpropertiesScanInterfacesWithDefaults() *DiscoveryMemberpropertiesScanInterfaces {
	this := DiscoveryMemberpropertiesScanInterfaces{}
	return &this
}

// GetNetworkView returns the NetworkView field value if set, zero value otherwise.
func (o *DiscoveryMemberpropertiesScanInterfaces) GetNetworkView() string {
	if o == nil || IsNil(o.NetworkView) {
		var ret string
		return ret
	}
	return *o.NetworkView
}

// GetNetworkViewOk returns a tuple with the NetworkView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryMemberpropertiesScanInterfaces) GetNetworkViewOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkView) {
		return nil, false
	}
	return o.NetworkView, true
}

// HasNetworkView returns a boolean if a field has been set.
func (o *DiscoveryMemberpropertiesScanInterfaces) HasNetworkView() bool {
	if o != nil && !IsNil(o.NetworkView) {
		return true
	}

	return false
}

// SetNetworkView gets a reference to the given string and assigns it to the NetworkView field.
func (o *DiscoveryMemberpropertiesScanInterfaces) SetNetworkView(v string) {
	o.NetworkView = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *DiscoveryMemberpropertiesScanInterfaces) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryMemberpropertiesScanInterfaces) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *DiscoveryMemberpropertiesScanInterfaces) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *DiscoveryMemberpropertiesScanInterfaces) SetType(v string) {
	o.Type = &v
}

// GetScanVirtualIp returns the ScanVirtualIp field value if set, zero value otherwise.
func (o *DiscoveryMemberpropertiesScanInterfaces) GetScanVirtualIp() string {
	if o == nil || IsNil(o.ScanVirtualIp) {
		var ret string
		return ret
	}
	return *o.ScanVirtualIp
}

// GetScanVirtualIpOk returns a tuple with the ScanVirtualIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryMemberpropertiesScanInterfaces) GetScanVirtualIpOk() (*string, bool) {
	if o == nil || IsNil(o.ScanVirtualIp) {
		return nil, false
	}
	return o.ScanVirtualIp, true
}

// HasScanVirtualIp returns a boolean if a field has been set.
func (o *DiscoveryMemberpropertiesScanInterfaces) HasScanVirtualIp() bool {
	if o != nil && !IsNil(o.ScanVirtualIp) {
		return true
	}

	return false
}

// SetScanVirtualIp gets a reference to the given string and assigns it to the ScanVirtualIp field.
func (o *DiscoveryMemberpropertiesScanInterfaces) SetScanVirtualIp(v string) {
	o.ScanVirtualIp = &v
}

func (o DiscoveryMemberpropertiesScanInterfaces) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DiscoveryMemberpropertiesScanInterfaces) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NetworkView) {
		toSerialize["network_view"] = o.NetworkView
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.ScanVirtualIp) {
		toSerialize["scan_virtual_ip"] = o.ScanVirtualIp
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DiscoveryMemberpropertiesScanInterfaces) UnmarshalJSON(data []byte) (err error) {
	varDiscoveryMemberpropertiesScanInterfaces := _DiscoveryMemberpropertiesScanInterfaces{}

	err = json.Unmarshal(data, &varDiscoveryMemberpropertiesScanInterfaces)

	if err != nil {
		return err
	}

	*o = DiscoveryMemberpropertiesScanInterfaces(varDiscoveryMemberpropertiesScanInterfaces)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "network_view")
		delete(additionalProperties, "type")
		delete(additionalProperties, "scan_virtual_ip")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDiscoveryMemberpropertiesScanInterfaces struct {
	value *DiscoveryMemberpropertiesScanInterfaces
	isSet bool
}

func (v NullableDiscoveryMemberpropertiesScanInterfaces) Get() *DiscoveryMemberpropertiesScanInterfaces {
	return v.value
}

func (v *NullableDiscoveryMemberpropertiesScanInterfaces) Set(val *DiscoveryMemberpropertiesScanInterfaces) {
	v.value = val
	v.isSet = true
}

func (v NullableDiscoveryMemberpropertiesScanInterfaces) IsSet() bool {
	return v.isSet
}

func (v *NullableDiscoveryMemberpropertiesScanInterfaces) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiscoveryMemberpropertiesScanInterfaces(val *DiscoveryMemberpropertiesScanInterfaces) *NullableDiscoveryMemberpropertiesScanInterfaces {
	return &NullableDiscoveryMemberpropertiesScanInterfaces{value: val, isSet: true}
}

func (v NullableDiscoveryMemberpropertiesScanInterfaces) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiscoveryMemberpropertiesScanInterfaces) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
