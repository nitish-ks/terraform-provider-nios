/*
Infoblox DISCOVERY API

OpenAPI specification for Infoblox NIOS WAPI DISCOVERY objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discovery

import (
	"encoding/json"
)

// checks if the DiscoveryMemberpropertiesSdnConfigs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DiscoveryMemberpropertiesSdnConfigs{}

// DiscoveryMemberpropertiesSdnConfigs struct for DiscoveryMemberpropertiesSdnConfigs
type DiscoveryMemberpropertiesSdnConfigs struct {
	// Type of SDN controller.
	SdnType *string `json:"sdn_type,omitempty"`
	// SDN controller IP addresses or FQDNs.
	Addresses []string `json:"addresses,omitempty"`
	// The network view associated with SDN controller.
	NetworkView *string `json:"network_view,omitempty"`
	// The connection protocol. Valid values are 'HTTP' and 'HTTPS'.
	Protocol *string `json:"protocol,omitempty"`
	// Unique configuration handle.
	Handle *string `json:"handle,omitempty"`
	// SDN controller login password.
	Password *string `json:"password,omitempty"`
	// SDN controller login name.
	Username *string `json:"username,omitempty"`
	// SDN controller API key.
	ApiKey *string `json:"api_key,omitempty"`
	// True if controller is on-premises, otherwise we consider it is in cloud.
	OnPrem *bool `json:"on_prem,omitempty"`
	// Use global proxy settings to access SDN controller.
	UseGlobalProxy *bool `json:"use_global_proxy,omitempty"`
	// Additional information about the SDN configuration.
	Comment *string `json:"comment,omitempty"`
	// The type of the network interface on discovery member used for SDN controller discovery
	NetworkInterfaceType *string `json:"network_interface_type,omitempty"`
	// Virtual IP of VLAN network interface on discovery member
	NetworkInterfaceVirtualIp *string `json:"network_interface_virtual_ip,omitempty"`
	// Unique key of SDN controller structure. Must be specified for existing sdn_config structures, otherwise they will be removed. If not specified, new structure will be created.
	Uuid                 *string `json:"uuid,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DiscoveryMemberpropertiesSdnConfigs DiscoveryMemberpropertiesSdnConfigs

// NewDiscoveryMemberpropertiesSdnConfigs instantiates a new DiscoveryMemberpropertiesSdnConfigs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiscoveryMemberpropertiesSdnConfigs() *DiscoveryMemberpropertiesSdnConfigs {
	this := DiscoveryMemberpropertiesSdnConfigs{}
	return &this
}

// NewDiscoveryMemberpropertiesSdnConfigsWithDefaults instantiates a new DiscoveryMemberpropertiesSdnConfigs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiscoveryMemberpropertiesSdnConfigsWithDefaults() *DiscoveryMemberpropertiesSdnConfigs {
	this := DiscoveryMemberpropertiesSdnConfigs{}
	return &this
}

// GetSdnType returns the SdnType field value if set, zero value otherwise.
func (o *DiscoveryMemberpropertiesSdnConfigs) GetSdnType() string {
	if o == nil || IsNil(o.SdnType) {
		var ret string
		return ret
	}
	return *o.SdnType
}

// GetSdnTypeOk returns a tuple with the SdnType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryMemberpropertiesSdnConfigs) GetSdnTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SdnType) {
		return nil, false
	}
	return o.SdnType, true
}

// HasSdnType returns a boolean if a field has been set.
func (o *DiscoveryMemberpropertiesSdnConfigs) HasSdnType() bool {
	if o != nil && !IsNil(o.SdnType) {
		return true
	}

	return false
}

// SetSdnType gets a reference to the given string and assigns it to the SdnType field.
func (o *DiscoveryMemberpropertiesSdnConfigs) SetSdnType(v string) {
	o.SdnType = &v
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *DiscoveryMemberpropertiesSdnConfigs) GetAddresses() []string {
	if o == nil || IsNil(o.Addresses) {
		var ret []string
		return ret
	}
	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryMemberpropertiesSdnConfigs) GetAddressesOk() ([]string, bool) {
	if o == nil || IsNil(o.Addresses) {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *DiscoveryMemberpropertiesSdnConfigs) HasAddresses() bool {
	if o != nil && !IsNil(o.Addresses) {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []string and assigns it to the Addresses field.
func (o *DiscoveryMemberpropertiesSdnConfigs) SetAddresses(v []string) {
	o.Addresses = v
}

// GetNetworkView returns the NetworkView field value if set, zero value otherwise.
func (o *DiscoveryMemberpropertiesSdnConfigs) GetNetworkView() string {
	if o == nil || IsNil(o.NetworkView) {
		var ret string
		return ret
	}
	return *o.NetworkView
}

// GetNetworkViewOk returns a tuple with the NetworkView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryMemberpropertiesSdnConfigs) GetNetworkViewOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkView) {
		return nil, false
	}
	return o.NetworkView, true
}

// HasNetworkView returns a boolean if a field has been set.
func (o *DiscoveryMemberpropertiesSdnConfigs) HasNetworkView() bool {
	if o != nil && !IsNil(o.NetworkView) {
		return true
	}

	return false
}

// SetNetworkView gets a reference to the given string and assigns it to the NetworkView field.
func (o *DiscoveryMemberpropertiesSdnConfigs) SetNetworkView(v string) {
	o.NetworkView = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *DiscoveryMemberpropertiesSdnConfigs) GetProtocol() string {
	if o == nil || IsNil(o.Protocol) {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryMemberpropertiesSdnConfigs) GetProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *DiscoveryMemberpropertiesSdnConfigs) HasProtocol() bool {
	if o != nil && !IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *DiscoveryMemberpropertiesSdnConfigs) SetProtocol(v string) {
	o.Protocol = &v
}

// GetHandle returns the Handle field value if set, zero value otherwise.
func (o *DiscoveryMemberpropertiesSdnConfigs) GetHandle() string {
	if o == nil || IsNil(o.Handle) {
		var ret string
		return ret
	}
	return *o.Handle
}

// GetHandleOk returns a tuple with the Handle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryMemberpropertiesSdnConfigs) GetHandleOk() (*string, bool) {
	if o == nil || IsNil(o.Handle) {
		return nil, false
	}
	return o.Handle, true
}

// HasHandle returns a boolean if a field has been set.
func (o *DiscoveryMemberpropertiesSdnConfigs) HasHandle() bool {
	if o != nil && !IsNil(o.Handle) {
		return true
	}

	return false
}

// SetHandle gets a reference to the given string and assigns it to the Handle field.
func (o *DiscoveryMemberpropertiesSdnConfigs) SetHandle(v string) {
	o.Handle = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *DiscoveryMemberpropertiesSdnConfigs) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryMemberpropertiesSdnConfigs) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *DiscoveryMemberpropertiesSdnConfigs) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *DiscoveryMemberpropertiesSdnConfigs) SetPassword(v string) {
	o.Password = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *DiscoveryMemberpropertiesSdnConfigs) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryMemberpropertiesSdnConfigs) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *DiscoveryMemberpropertiesSdnConfigs) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *DiscoveryMemberpropertiesSdnConfigs) SetUsername(v string) {
	o.Username = &v
}

// GetApiKey returns the ApiKey field value if set, zero value otherwise.
func (o *DiscoveryMemberpropertiesSdnConfigs) GetApiKey() string {
	if o == nil || IsNil(o.ApiKey) {
		var ret string
		return ret
	}
	return *o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryMemberpropertiesSdnConfigs) GetApiKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ApiKey) {
		return nil, false
	}
	return o.ApiKey, true
}

// HasApiKey returns a boolean if a field has been set.
func (o *DiscoveryMemberpropertiesSdnConfigs) HasApiKey() bool {
	if o != nil && !IsNil(o.ApiKey) {
		return true
	}

	return false
}

// SetApiKey gets a reference to the given string and assigns it to the ApiKey field.
func (o *DiscoveryMemberpropertiesSdnConfigs) SetApiKey(v string) {
	o.ApiKey = &v
}

// GetOnPrem returns the OnPrem field value if set, zero value otherwise.
func (o *DiscoveryMemberpropertiesSdnConfigs) GetOnPrem() bool {
	if o == nil || IsNil(o.OnPrem) {
		var ret bool
		return ret
	}
	return *o.OnPrem
}

// GetOnPremOk returns a tuple with the OnPrem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryMemberpropertiesSdnConfigs) GetOnPremOk() (*bool, bool) {
	if o == nil || IsNil(o.OnPrem) {
		return nil, false
	}
	return o.OnPrem, true
}

// HasOnPrem returns a boolean if a field has been set.
func (o *DiscoveryMemberpropertiesSdnConfigs) HasOnPrem() bool {
	if o != nil && !IsNil(o.OnPrem) {
		return true
	}

	return false
}

// SetOnPrem gets a reference to the given bool and assigns it to the OnPrem field.
func (o *DiscoveryMemberpropertiesSdnConfigs) SetOnPrem(v bool) {
	o.OnPrem = &v
}

// GetUseGlobalProxy returns the UseGlobalProxy field value if set, zero value otherwise.
func (o *DiscoveryMemberpropertiesSdnConfigs) GetUseGlobalProxy() bool {
	if o == nil || IsNil(o.UseGlobalProxy) {
		var ret bool
		return ret
	}
	return *o.UseGlobalProxy
}

// GetUseGlobalProxyOk returns a tuple with the UseGlobalProxy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryMemberpropertiesSdnConfigs) GetUseGlobalProxyOk() (*bool, bool) {
	if o == nil || IsNil(o.UseGlobalProxy) {
		return nil, false
	}
	return o.UseGlobalProxy, true
}

// HasUseGlobalProxy returns a boolean if a field has been set.
func (o *DiscoveryMemberpropertiesSdnConfigs) HasUseGlobalProxy() bool {
	if o != nil && !IsNil(o.UseGlobalProxy) {
		return true
	}

	return false
}

// SetUseGlobalProxy gets a reference to the given bool and assigns it to the UseGlobalProxy field.
func (o *DiscoveryMemberpropertiesSdnConfigs) SetUseGlobalProxy(v bool) {
	o.UseGlobalProxy = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *DiscoveryMemberpropertiesSdnConfigs) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryMemberpropertiesSdnConfigs) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *DiscoveryMemberpropertiesSdnConfigs) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *DiscoveryMemberpropertiesSdnConfigs) SetComment(v string) {
	o.Comment = &v
}

// GetNetworkInterfaceType returns the NetworkInterfaceType field value if set, zero value otherwise.
func (o *DiscoveryMemberpropertiesSdnConfigs) GetNetworkInterfaceType() string {
	if o == nil || IsNil(o.NetworkInterfaceType) {
		var ret string
		return ret
	}
	return *o.NetworkInterfaceType
}

// GetNetworkInterfaceTypeOk returns a tuple with the NetworkInterfaceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryMemberpropertiesSdnConfigs) GetNetworkInterfaceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkInterfaceType) {
		return nil, false
	}
	return o.NetworkInterfaceType, true
}

// HasNetworkInterfaceType returns a boolean if a field has been set.
func (o *DiscoveryMemberpropertiesSdnConfigs) HasNetworkInterfaceType() bool {
	if o != nil && !IsNil(o.NetworkInterfaceType) {
		return true
	}

	return false
}

// SetNetworkInterfaceType gets a reference to the given string and assigns it to the NetworkInterfaceType field.
func (o *DiscoveryMemberpropertiesSdnConfigs) SetNetworkInterfaceType(v string) {
	o.NetworkInterfaceType = &v
}

// GetNetworkInterfaceVirtualIp returns the NetworkInterfaceVirtualIp field value if set, zero value otherwise.
func (o *DiscoveryMemberpropertiesSdnConfigs) GetNetworkInterfaceVirtualIp() string {
	if o == nil || IsNil(o.NetworkInterfaceVirtualIp) {
		var ret string
		return ret
	}
	return *o.NetworkInterfaceVirtualIp
}

// GetNetworkInterfaceVirtualIpOk returns a tuple with the NetworkInterfaceVirtualIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryMemberpropertiesSdnConfigs) GetNetworkInterfaceVirtualIpOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkInterfaceVirtualIp) {
		return nil, false
	}
	return o.NetworkInterfaceVirtualIp, true
}

// HasNetworkInterfaceVirtualIp returns a boolean if a field has been set.
func (o *DiscoveryMemberpropertiesSdnConfigs) HasNetworkInterfaceVirtualIp() bool {
	if o != nil && !IsNil(o.NetworkInterfaceVirtualIp) {
		return true
	}

	return false
}

// SetNetworkInterfaceVirtualIp gets a reference to the given string and assigns it to the NetworkInterfaceVirtualIp field.
func (o *DiscoveryMemberpropertiesSdnConfigs) SetNetworkInterfaceVirtualIp(v string) {
	o.NetworkInterfaceVirtualIp = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *DiscoveryMemberpropertiesSdnConfigs) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryMemberpropertiesSdnConfigs) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *DiscoveryMemberpropertiesSdnConfigs) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *DiscoveryMemberpropertiesSdnConfigs) SetUuid(v string) {
	o.Uuid = &v
}

func (o DiscoveryMemberpropertiesSdnConfigs) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DiscoveryMemberpropertiesSdnConfigs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SdnType) {
		toSerialize["sdn_type"] = o.SdnType
	}
	if !IsNil(o.Addresses) {
		toSerialize["addresses"] = o.Addresses
	}
	if !IsNil(o.NetworkView) {
		toSerialize["network_view"] = o.NetworkView
	}
	if !IsNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	if !IsNil(o.Handle) {
		toSerialize["handle"] = o.Handle
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.ApiKey) {
		toSerialize["api_key"] = o.ApiKey
	}
	if !IsNil(o.OnPrem) {
		toSerialize["on_prem"] = o.OnPrem
	}
	if !IsNil(o.UseGlobalProxy) {
		toSerialize["use_global_proxy"] = o.UseGlobalProxy
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.NetworkInterfaceType) {
		toSerialize["network_interface_type"] = o.NetworkInterfaceType
	}
	if !IsNil(o.NetworkInterfaceVirtualIp) {
		toSerialize["network_interface_virtual_ip"] = o.NetworkInterfaceVirtualIp
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DiscoveryMemberpropertiesSdnConfigs) UnmarshalJSON(data []byte) (err error) {
	varDiscoveryMemberpropertiesSdnConfigs := _DiscoveryMemberpropertiesSdnConfigs{}

	err = json.Unmarshal(data, &varDiscoveryMemberpropertiesSdnConfigs)

	if err != nil {
		return err
	}

	*o = DiscoveryMemberpropertiesSdnConfigs(varDiscoveryMemberpropertiesSdnConfigs)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "sdn_type")
		delete(additionalProperties, "addresses")
		delete(additionalProperties, "network_view")
		delete(additionalProperties, "protocol")
		delete(additionalProperties, "handle")
		delete(additionalProperties, "password")
		delete(additionalProperties, "username")
		delete(additionalProperties, "api_key")
		delete(additionalProperties, "on_prem")
		delete(additionalProperties, "use_global_proxy")
		delete(additionalProperties, "comment")
		delete(additionalProperties, "network_interface_type")
		delete(additionalProperties, "network_interface_virtual_ip")
		delete(additionalProperties, "uuid")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDiscoveryMemberpropertiesSdnConfigs struct {
	value *DiscoveryMemberpropertiesSdnConfigs
	isSet bool
}

func (v NullableDiscoveryMemberpropertiesSdnConfigs) Get() *DiscoveryMemberpropertiesSdnConfigs {
	return v.value
}

func (v *NullableDiscoveryMemberpropertiesSdnConfigs) Set(val *DiscoveryMemberpropertiesSdnConfigs) {
	v.value = val
	v.isSet = true
}

func (v NullableDiscoveryMemberpropertiesSdnConfigs) IsSet() bool {
	return v.isSet
}

func (v *NullableDiscoveryMemberpropertiesSdnConfigs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiscoveryMemberpropertiesSdnConfigs(val *DiscoveryMemberpropertiesSdnConfigs) *NullableDiscoveryMemberpropertiesSdnConfigs {
	return &NullableDiscoveryMemberpropertiesSdnConfigs{value: val, isSet: true}
}

func (v NullableDiscoveryMemberpropertiesSdnConfigs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiscoveryMemberpropertiesSdnConfigs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
