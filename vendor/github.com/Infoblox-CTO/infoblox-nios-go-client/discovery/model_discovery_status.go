/*
Infoblox DISCOVERY API

OpenAPI specification for Infoblox NIOS WAPI DISCOVERY objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discovery

import (
	"encoding/json"
)

// checks if the DiscoveryStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DiscoveryStatus{}

// DiscoveryStatus struct for DiscoveryStatus
type DiscoveryStatus struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// The IPv4 Address or IPv6 Address of the device.
	Address *string `json:"address,omitempty"`
	// Indicates if CLI collection is enabled.
	CliCollectionEnabled *bool                             `json:"cli_collection_enabled,omitempty"`
	CliCredentialInfo    *DiscoveryStatusCliCredentialInfo `json:"cli_credential_info,omitempty"`
	ExistenceInfo        *DiscoveryStatusExistenceInfo     `json:"existence_info,omitempty"`
	// Indicates if DHCP finterprinting is enabled.
	FingerprintEnabled *bool                           `json:"fingerprint_enabled,omitempty"`
	FingerprintInfo    *DiscoveryStatusFingerprintInfo `json:"fingerprint_info,omitempty"`
	// The timestamp when the device was first discovered.
	FirstSeen *int64 `json:"first_seen,omitempty"`
	// The timestamp of the last detected interface property change.
	LastAction *string `json:"last_action,omitempty"`
	// The timestamp when the device was last discovered.
	LastSeen *int64 `json:"last_seen,omitempty"`
	// The timestamp of the last executed action for the device.
	LastTimestamp *int64 `json:"last_timestamp,omitempty"`
	// The name of the device.
	Name *string `json:"name,omitempty"`
	// The name of the network view in which this device resides.
	NetworkView   *string                       `json:"network_view,omitempty"`
	ReachableInfo *DiscoveryStatusReachableInfo `json:"reachable_info,omitempty"`
	// Indicate whether SDN collection enabled for the device.
	SdnCollectionEnabled *bool                             `json:"sdn_collection_enabled,omitempty"`
	SdnCollectionInfo    *DiscoveryStatusSdnCollectionInfo `json:"sdn_collection_info,omitempty"`
	// Indicates if SNMP collection is enabled.
	SnmpCollectionEnabled *bool                              `json:"snmp_collection_enabled,omitempty"`
	SnmpCollectionInfo    *DiscoveryStatusSnmpCollectionInfo `json:"snmp_collection_info,omitempty"`
	SnmpCredentialInfo    *DiscoveryStatusSnmpCredentialInfo `json:"snmp_credential_info,omitempty"`
	// The overall status of the device.
	Status *string `json:"status,omitempty"`
	// The type of device.
	Type *string `json:"type,omitempty"`
}

// NewDiscoveryStatus instantiates a new DiscoveryStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiscoveryStatus() *DiscoveryStatus {
	this := DiscoveryStatus{}
	return &this
}

// NewDiscoveryStatusWithDefaults instantiates a new DiscoveryStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiscoveryStatusWithDefaults() *DiscoveryStatus {
	this := DiscoveryStatus{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *DiscoveryStatus) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryStatus) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *DiscoveryStatus) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *DiscoveryStatus) SetRef(v string) {
	o.Ref = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *DiscoveryStatus) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryStatus) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *DiscoveryStatus) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *DiscoveryStatus) SetAddress(v string) {
	o.Address = &v
}

// GetCliCollectionEnabled returns the CliCollectionEnabled field value if set, zero value otherwise.
func (o *DiscoveryStatus) GetCliCollectionEnabled() bool {
	if o == nil || IsNil(o.CliCollectionEnabled) {
		var ret bool
		return ret
	}
	return *o.CliCollectionEnabled
}

// GetCliCollectionEnabledOk returns a tuple with the CliCollectionEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryStatus) GetCliCollectionEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.CliCollectionEnabled) {
		return nil, false
	}
	return o.CliCollectionEnabled, true
}

// HasCliCollectionEnabled returns a boolean if a field has been set.
func (o *DiscoveryStatus) HasCliCollectionEnabled() bool {
	if o != nil && !IsNil(o.CliCollectionEnabled) {
		return true
	}

	return false
}

// SetCliCollectionEnabled gets a reference to the given bool and assigns it to the CliCollectionEnabled field.
func (o *DiscoveryStatus) SetCliCollectionEnabled(v bool) {
	o.CliCollectionEnabled = &v
}

// GetCliCredentialInfo returns the CliCredentialInfo field value if set, zero value otherwise.
func (o *DiscoveryStatus) GetCliCredentialInfo() DiscoveryStatusCliCredentialInfo {
	if o == nil || IsNil(o.CliCredentialInfo) {
		var ret DiscoveryStatusCliCredentialInfo
		return ret
	}
	return *o.CliCredentialInfo
}

// GetCliCredentialInfoOk returns a tuple with the CliCredentialInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryStatus) GetCliCredentialInfoOk() (*DiscoveryStatusCliCredentialInfo, bool) {
	if o == nil || IsNil(o.CliCredentialInfo) {
		return nil, false
	}
	return o.CliCredentialInfo, true
}

// HasCliCredentialInfo returns a boolean if a field has been set.
func (o *DiscoveryStatus) HasCliCredentialInfo() bool {
	if o != nil && !IsNil(o.CliCredentialInfo) {
		return true
	}

	return false
}

// SetCliCredentialInfo gets a reference to the given DiscoveryStatusCliCredentialInfo and assigns it to the CliCredentialInfo field.
func (o *DiscoveryStatus) SetCliCredentialInfo(v DiscoveryStatusCliCredentialInfo) {
	o.CliCredentialInfo = &v
}

// GetExistenceInfo returns the ExistenceInfo field value if set, zero value otherwise.
func (o *DiscoveryStatus) GetExistenceInfo() DiscoveryStatusExistenceInfo {
	if o == nil || IsNil(o.ExistenceInfo) {
		var ret DiscoveryStatusExistenceInfo
		return ret
	}
	return *o.ExistenceInfo
}

// GetExistenceInfoOk returns a tuple with the ExistenceInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryStatus) GetExistenceInfoOk() (*DiscoveryStatusExistenceInfo, bool) {
	if o == nil || IsNil(o.ExistenceInfo) {
		return nil, false
	}
	return o.ExistenceInfo, true
}

// HasExistenceInfo returns a boolean if a field has been set.
func (o *DiscoveryStatus) HasExistenceInfo() bool {
	if o != nil && !IsNil(o.ExistenceInfo) {
		return true
	}

	return false
}

// SetExistenceInfo gets a reference to the given DiscoveryStatusExistenceInfo and assigns it to the ExistenceInfo field.
func (o *DiscoveryStatus) SetExistenceInfo(v DiscoveryStatusExistenceInfo) {
	o.ExistenceInfo = &v
}

// GetFingerprintEnabled returns the FingerprintEnabled field value if set, zero value otherwise.
func (o *DiscoveryStatus) GetFingerprintEnabled() bool {
	if o == nil || IsNil(o.FingerprintEnabled) {
		var ret bool
		return ret
	}
	return *o.FingerprintEnabled
}

// GetFingerprintEnabledOk returns a tuple with the FingerprintEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryStatus) GetFingerprintEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.FingerprintEnabled) {
		return nil, false
	}
	return o.FingerprintEnabled, true
}

// HasFingerprintEnabled returns a boolean if a field has been set.
func (o *DiscoveryStatus) HasFingerprintEnabled() bool {
	if o != nil && !IsNil(o.FingerprintEnabled) {
		return true
	}

	return false
}

// SetFingerprintEnabled gets a reference to the given bool and assigns it to the FingerprintEnabled field.
func (o *DiscoveryStatus) SetFingerprintEnabled(v bool) {
	o.FingerprintEnabled = &v
}

// GetFingerprintInfo returns the FingerprintInfo field value if set, zero value otherwise.
func (o *DiscoveryStatus) GetFingerprintInfo() DiscoveryStatusFingerprintInfo {
	if o == nil || IsNil(o.FingerprintInfo) {
		var ret DiscoveryStatusFingerprintInfo
		return ret
	}
	return *o.FingerprintInfo
}

// GetFingerprintInfoOk returns a tuple with the FingerprintInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryStatus) GetFingerprintInfoOk() (*DiscoveryStatusFingerprintInfo, bool) {
	if o == nil || IsNil(o.FingerprintInfo) {
		return nil, false
	}
	return o.FingerprintInfo, true
}

// HasFingerprintInfo returns a boolean if a field has been set.
func (o *DiscoveryStatus) HasFingerprintInfo() bool {
	if o != nil && !IsNil(o.FingerprintInfo) {
		return true
	}

	return false
}

// SetFingerprintInfo gets a reference to the given DiscoveryStatusFingerprintInfo and assigns it to the FingerprintInfo field.
func (o *DiscoveryStatus) SetFingerprintInfo(v DiscoveryStatusFingerprintInfo) {
	o.FingerprintInfo = &v
}

// GetFirstSeen returns the FirstSeen field value if set, zero value otherwise.
func (o *DiscoveryStatus) GetFirstSeen() int64 {
	if o == nil || IsNil(o.FirstSeen) {
		var ret int64
		return ret
	}
	return *o.FirstSeen
}

// GetFirstSeenOk returns a tuple with the FirstSeen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryStatus) GetFirstSeenOk() (*int64, bool) {
	if o == nil || IsNil(o.FirstSeen) {
		return nil, false
	}
	return o.FirstSeen, true
}

// HasFirstSeen returns a boolean if a field has been set.
func (o *DiscoveryStatus) HasFirstSeen() bool {
	if o != nil && !IsNil(o.FirstSeen) {
		return true
	}

	return false
}

// SetFirstSeen gets a reference to the given int64 and assigns it to the FirstSeen field.
func (o *DiscoveryStatus) SetFirstSeen(v int64) {
	o.FirstSeen = &v
}

// GetLastAction returns the LastAction field value if set, zero value otherwise.
func (o *DiscoveryStatus) GetLastAction() string {
	if o == nil || IsNil(o.LastAction) {
		var ret string
		return ret
	}
	return *o.LastAction
}

// GetLastActionOk returns a tuple with the LastAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryStatus) GetLastActionOk() (*string, bool) {
	if o == nil || IsNil(o.LastAction) {
		return nil, false
	}
	return o.LastAction, true
}

// HasLastAction returns a boolean if a field has been set.
func (o *DiscoveryStatus) HasLastAction() bool {
	if o != nil && !IsNil(o.LastAction) {
		return true
	}

	return false
}

// SetLastAction gets a reference to the given string and assigns it to the LastAction field.
func (o *DiscoveryStatus) SetLastAction(v string) {
	o.LastAction = &v
}

// GetLastSeen returns the LastSeen field value if set, zero value otherwise.
func (o *DiscoveryStatus) GetLastSeen() int64 {
	if o == nil || IsNil(o.LastSeen) {
		var ret int64
		return ret
	}
	return *o.LastSeen
}

// GetLastSeenOk returns a tuple with the LastSeen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryStatus) GetLastSeenOk() (*int64, bool) {
	if o == nil || IsNil(o.LastSeen) {
		return nil, false
	}
	return o.LastSeen, true
}

// HasLastSeen returns a boolean if a field has been set.
func (o *DiscoveryStatus) HasLastSeen() bool {
	if o != nil && !IsNil(o.LastSeen) {
		return true
	}

	return false
}

// SetLastSeen gets a reference to the given int64 and assigns it to the LastSeen field.
func (o *DiscoveryStatus) SetLastSeen(v int64) {
	o.LastSeen = &v
}

// GetLastTimestamp returns the LastTimestamp field value if set, zero value otherwise.
func (o *DiscoveryStatus) GetLastTimestamp() int64 {
	if o == nil || IsNil(o.LastTimestamp) {
		var ret int64
		return ret
	}
	return *o.LastTimestamp
}

// GetLastTimestampOk returns a tuple with the LastTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryStatus) GetLastTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.LastTimestamp) {
		return nil, false
	}
	return o.LastTimestamp, true
}

// HasLastTimestamp returns a boolean if a field has been set.
func (o *DiscoveryStatus) HasLastTimestamp() bool {
	if o != nil && !IsNil(o.LastTimestamp) {
		return true
	}

	return false
}

// SetLastTimestamp gets a reference to the given int64 and assigns it to the LastTimestamp field.
func (o *DiscoveryStatus) SetLastTimestamp(v int64) {
	o.LastTimestamp = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DiscoveryStatus) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryStatus) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DiscoveryStatus) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DiscoveryStatus) SetName(v string) {
	o.Name = &v
}

// GetNetworkView returns the NetworkView field value if set, zero value otherwise.
func (o *DiscoveryStatus) GetNetworkView() string {
	if o == nil || IsNil(o.NetworkView) {
		var ret string
		return ret
	}
	return *o.NetworkView
}

// GetNetworkViewOk returns a tuple with the NetworkView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryStatus) GetNetworkViewOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkView) {
		return nil, false
	}
	return o.NetworkView, true
}

// HasNetworkView returns a boolean if a field has been set.
func (o *DiscoveryStatus) HasNetworkView() bool {
	if o != nil && !IsNil(o.NetworkView) {
		return true
	}

	return false
}

// SetNetworkView gets a reference to the given string and assigns it to the NetworkView field.
func (o *DiscoveryStatus) SetNetworkView(v string) {
	o.NetworkView = &v
}

// GetReachableInfo returns the ReachableInfo field value if set, zero value otherwise.
func (o *DiscoveryStatus) GetReachableInfo() DiscoveryStatusReachableInfo {
	if o == nil || IsNil(o.ReachableInfo) {
		var ret DiscoveryStatusReachableInfo
		return ret
	}
	return *o.ReachableInfo
}

// GetReachableInfoOk returns a tuple with the ReachableInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryStatus) GetReachableInfoOk() (*DiscoveryStatusReachableInfo, bool) {
	if o == nil || IsNil(o.ReachableInfo) {
		return nil, false
	}
	return o.ReachableInfo, true
}

// HasReachableInfo returns a boolean if a field has been set.
func (o *DiscoveryStatus) HasReachableInfo() bool {
	if o != nil && !IsNil(o.ReachableInfo) {
		return true
	}

	return false
}

// SetReachableInfo gets a reference to the given DiscoveryStatusReachableInfo and assigns it to the ReachableInfo field.
func (o *DiscoveryStatus) SetReachableInfo(v DiscoveryStatusReachableInfo) {
	o.ReachableInfo = &v
}

// GetSdnCollectionEnabled returns the SdnCollectionEnabled field value if set, zero value otherwise.
func (o *DiscoveryStatus) GetSdnCollectionEnabled() bool {
	if o == nil || IsNil(o.SdnCollectionEnabled) {
		var ret bool
		return ret
	}
	return *o.SdnCollectionEnabled
}

// GetSdnCollectionEnabledOk returns a tuple with the SdnCollectionEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryStatus) GetSdnCollectionEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SdnCollectionEnabled) {
		return nil, false
	}
	return o.SdnCollectionEnabled, true
}

// HasSdnCollectionEnabled returns a boolean if a field has been set.
func (o *DiscoveryStatus) HasSdnCollectionEnabled() bool {
	if o != nil && !IsNil(o.SdnCollectionEnabled) {
		return true
	}

	return false
}

// SetSdnCollectionEnabled gets a reference to the given bool and assigns it to the SdnCollectionEnabled field.
func (o *DiscoveryStatus) SetSdnCollectionEnabled(v bool) {
	o.SdnCollectionEnabled = &v
}

// GetSdnCollectionInfo returns the SdnCollectionInfo field value if set, zero value otherwise.
func (o *DiscoveryStatus) GetSdnCollectionInfo() DiscoveryStatusSdnCollectionInfo {
	if o == nil || IsNil(o.SdnCollectionInfo) {
		var ret DiscoveryStatusSdnCollectionInfo
		return ret
	}
	return *o.SdnCollectionInfo
}

// GetSdnCollectionInfoOk returns a tuple with the SdnCollectionInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryStatus) GetSdnCollectionInfoOk() (*DiscoveryStatusSdnCollectionInfo, bool) {
	if o == nil || IsNil(o.SdnCollectionInfo) {
		return nil, false
	}
	return o.SdnCollectionInfo, true
}

// HasSdnCollectionInfo returns a boolean if a field has been set.
func (o *DiscoveryStatus) HasSdnCollectionInfo() bool {
	if o != nil && !IsNil(o.SdnCollectionInfo) {
		return true
	}

	return false
}

// SetSdnCollectionInfo gets a reference to the given DiscoveryStatusSdnCollectionInfo and assigns it to the SdnCollectionInfo field.
func (o *DiscoveryStatus) SetSdnCollectionInfo(v DiscoveryStatusSdnCollectionInfo) {
	o.SdnCollectionInfo = &v
}

// GetSnmpCollectionEnabled returns the SnmpCollectionEnabled field value if set, zero value otherwise.
func (o *DiscoveryStatus) GetSnmpCollectionEnabled() bool {
	if o == nil || IsNil(o.SnmpCollectionEnabled) {
		var ret bool
		return ret
	}
	return *o.SnmpCollectionEnabled
}

// GetSnmpCollectionEnabledOk returns a tuple with the SnmpCollectionEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryStatus) GetSnmpCollectionEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SnmpCollectionEnabled) {
		return nil, false
	}
	return o.SnmpCollectionEnabled, true
}

// HasSnmpCollectionEnabled returns a boolean if a field has been set.
func (o *DiscoveryStatus) HasSnmpCollectionEnabled() bool {
	if o != nil && !IsNil(o.SnmpCollectionEnabled) {
		return true
	}

	return false
}

// SetSnmpCollectionEnabled gets a reference to the given bool and assigns it to the SnmpCollectionEnabled field.
func (o *DiscoveryStatus) SetSnmpCollectionEnabled(v bool) {
	o.SnmpCollectionEnabled = &v
}

// GetSnmpCollectionInfo returns the SnmpCollectionInfo field value if set, zero value otherwise.
func (o *DiscoveryStatus) GetSnmpCollectionInfo() DiscoveryStatusSnmpCollectionInfo {
	if o == nil || IsNil(o.SnmpCollectionInfo) {
		var ret DiscoveryStatusSnmpCollectionInfo
		return ret
	}
	return *o.SnmpCollectionInfo
}

// GetSnmpCollectionInfoOk returns a tuple with the SnmpCollectionInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryStatus) GetSnmpCollectionInfoOk() (*DiscoveryStatusSnmpCollectionInfo, bool) {
	if o == nil || IsNil(o.SnmpCollectionInfo) {
		return nil, false
	}
	return o.SnmpCollectionInfo, true
}

// HasSnmpCollectionInfo returns a boolean if a field has been set.
func (o *DiscoveryStatus) HasSnmpCollectionInfo() bool {
	if o != nil && !IsNil(o.SnmpCollectionInfo) {
		return true
	}

	return false
}

// SetSnmpCollectionInfo gets a reference to the given DiscoveryStatusSnmpCollectionInfo and assigns it to the SnmpCollectionInfo field.
func (o *DiscoveryStatus) SetSnmpCollectionInfo(v DiscoveryStatusSnmpCollectionInfo) {
	o.SnmpCollectionInfo = &v
}

// GetSnmpCredentialInfo returns the SnmpCredentialInfo field value if set, zero value otherwise.
func (o *DiscoveryStatus) GetSnmpCredentialInfo() DiscoveryStatusSnmpCredentialInfo {
	if o == nil || IsNil(o.SnmpCredentialInfo) {
		var ret DiscoveryStatusSnmpCredentialInfo
		return ret
	}
	return *o.SnmpCredentialInfo
}

// GetSnmpCredentialInfoOk returns a tuple with the SnmpCredentialInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryStatus) GetSnmpCredentialInfoOk() (*DiscoveryStatusSnmpCredentialInfo, bool) {
	if o == nil || IsNil(o.SnmpCredentialInfo) {
		return nil, false
	}
	return o.SnmpCredentialInfo, true
}

// HasSnmpCredentialInfo returns a boolean if a field has been set.
func (o *DiscoveryStatus) HasSnmpCredentialInfo() bool {
	if o != nil && !IsNil(o.SnmpCredentialInfo) {
		return true
	}

	return false
}

// SetSnmpCredentialInfo gets a reference to the given DiscoveryStatusSnmpCredentialInfo and assigns it to the SnmpCredentialInfo field.
func (o *DiscoveryStatus) SetSnmpCredentialInfo(v DiscoveryStatusSnmpCredentialInfo) {
	o.SnmpCredentialInfo = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DiscoveryStatus) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryStatus) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DiscoveryStatus) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DiscoveryStatus) SetStatus(v string) {
	o.Status = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *DiscoveryStatus) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryStatus) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *DiscoveryStatus) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *DiscoveryStatus) SetType(v string) {
	o.Type = &v
}

func (o DiscoveryStatus) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DiscoveryStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.CliCollectionEnabled) {
		toSerialize["cli_collection_enabled"] = o.CliCollectionEnabled
	}
	if !IsNil(o.CliCredentialInfo) {
		toSerialize["cli_credential_info"] = o.CliCredentialInfo
	}
	if !IsNil(o.ExistenceInfo) {
		toSerialize["existence_info"] = o.ExistenceInfo
	}
	if !IsNil(o.FingerprintEnabled) {
		toSerialize["fingerprint_enabled"] = o.FingerprintEnabled
	}
	if !IsNil(o.FingerprintInfo) {
		toSerialize["fingerprint_info"] = o.FingerprintInfo
	}
	if !IsNil(o.FirstSeen) {
		toSerialize["first_seen"] = o.FirstSeen
	}
	if !IsNil(o.LastAction) {
		toSerialize["last_action"] = o.LastAction
	}
	if !IsNil(o.LastSeen) {
		toSerialize["last_seen"] = o.LastSeen
	}
	if !IsNil(o.LastTimestamp) {
		toSerialize["last_timestamp"] = o.LastTimestamp
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NetworkView) {
		toSerialize["network_view"] = o.NetworkView
	}
	if !IsNil(o.ReachableInfo) {
		toSerialize["reachable_info"] = o.ReachableInfo
	}
	if !IsNil(o.SdnCollectionEnabled) {
		toSerialize["sdn_collection_enabled"] = o.SdnCollectionEnabled
	}
	if !IsNil(o.SdnCollectionInfo) {
		toSerialize["sdn_collection_info"] = o.SdnCollectionInfo
	}
	if !IsNil(o.SnmpCollectionEnabled) {
		toSerialize["snmp_collection_enabled"] = o.SnmpCollectionEnabled
	}
	if !IsNil(o.SnmpCollectionInfo) {
		toSerialize["snmp_collection_info"] = o.SnmpCollectionInfo
	}
	if !IsNil(o.SnmpCredentialInfo) {
		toSerialize["snmp_credential_info"] = o.SnmpCredentialInfo
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableDiscoveryStatus struct {
	value *DiscoveryStatus
	isSet bool
}

func (v NullableDiscoveryStatus) Get() *DiscoveryStatus {
	return v.value
}

func (v *NullableDiscoveryStatus) Set(val *DiscoveryStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableDiscoveryStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableDiscoveryStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiscoveryStatus(val *DiscoveryStatus) *NullableDiscoveryStatus {
	return &NullableDiscoveryStatus{value: val, isSet: true}
}

func (v NullableDiscoveryStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiscoveryStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
