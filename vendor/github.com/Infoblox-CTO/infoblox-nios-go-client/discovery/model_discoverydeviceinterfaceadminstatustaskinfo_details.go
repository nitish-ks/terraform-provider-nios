/*
Infoblox DISCOVERY API

OpenAPI specification for Infoblox NIOS WAPI DISCOVERY objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discovery

import (
	"encoding/json"
)

// checks if the DiscoverydeviceinterfaceadminstatustaskinfoDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DiscoverydeviceinterfaceadminstatustaskinfoDetails{}

// DiscoverydeviceinterfaceadminstatustaskinfoDetails struct for DiscoverydeviceinterfaceadminstatustaskinfoDetails
type DiscoverydeviceinterfaceadminstatustaskinfoDetails struct {
	// The ID of the associated port control task.
	Id *int64 `json:"id,omitempty"`
	// The task status of the associated port control task.
	Status *string `json:"status,omitempty"`
	// True if this port control task is completed and matched with current discovered value.
	IsSynchronized       *bool `json:"is_synchronized,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DiscoverydeviceinterfaceadminstatustaskinfoDetails DiscoverydeviceinterfaceadminstatustaskinfoDetails

// NewDiscoverydeviceinterfaceadminstatustaskinfoDetails instantiates a new DiscoverydeviceinterfaceadminstatustaskinfoDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiscoverydeviceinterfaceadminstatustaskinfoDetails() *DiscoverydeviceinterfaceadminstatustaskinfoDetails {
	this := DiscoverydeviceinterfaceadminstatustaskinfoDetails{}
	return &this
}

// NewDiscoverydeviceinterfaceadminstatustaskinfoDetailsWithDefaults instantiates a new DiscoverydeviceinterfaceadminstatustaskinfoDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiscoverydeviceinterfaceadminstatustaskinfoDetailsWithDefaults() *DiscoverydeviceinterfaceadminstatustaskinfoDetails {
	this := DiscoverydeviceinterfaceadminstatustaskinfoDetails{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DiscoverydeviceinterfaceadminstatustaskinfoDetails) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoverydeviceinterfaceadminstatustaskinfoDetails) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DiscoverydeviceinterfaceadminstatustaskinfoDetails) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *DiscoverydeviceinterfaceadminstatustaskinfoDetails) SetId(v int64) {
	o.Id = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DiscoverydeviceinterfaceadminstatustaskinfoDetails) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoverydeviceinterfaceadminstatustaskinfoDetails) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DiscoverydeviceinterfaceadminstatustaskinfoDetails) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DiscoverydeviceinterfaceadminstatustaskinfoDetails) SetStatus(v string) {
	o.Status = &v
}

// GetIsSynchronized returns the IsSynchronized field value if set, zero value otherwise.
func (o *DiscoverydeviceinterfaceadminstatustaskinfoDetails) GetIsSynchronized() bool {
	if o == nil || IsNil(o.IsSynchronized) {
		var ret bool
		return ret
	}
	return *o.IsSynchronized
}

// GetIsSynchronizedOk returns a tuple with the IsSynchronized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoverydeviceinterfaceadminstatustaskinfoDetails) GetIsSynchronizedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSynchronized) {
		return nil, false
	}
	return o.IsSynchronized, true
}

// HasIsSynchronized returns a boolean if a field has been set.
func (o *DiscoverydeviceinterfaceadminstatustaskinfoDetails) HasIsSynchronized() bool {
	if o != nil && !IsNil(o.IsSynchronized) {
		return true
	}

	return false
}

// SetIsSynchronized gets a reference to the given bool and assigns it to the IsSynchronized field.
func (o *DiscoverydeviceinterfaceadminstatustaskinfoDetails) SetIsSynchronized(v bool) {
	o.IsSynchronized = &v
}

func (o DiscoverydeviceinterfaceadminstatustaskinfoDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DiscoverydeviceinterfaceadminstatustaskinfoDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.IsSynchronized) {
		toSerialize["is_synchronized"] = o.IsSynchronized
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DiscoverydeviceinterfaceadminstatustaskinfoDetails) UnmarshalJSON(data []byte) (err error) {
	varDiscoverydeviceinterfaceadminstatustaskinfoDetails := _DiscoverydeviceinterfaceadminstatustaskinfoDetails{}

	err = json.Unmarshal(data, &varDiscoverydeviceinterfaceadminstatustaskinfoDetails)

	if err != nil {
		return err
	}

	*o = DiscoverydeviceinterfaceadminstatustaskinfoDetails(varDiscoverydeviceinterfaceadminstatustaskinfoDetails)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "status")
		delete(additionalProperties, "is_synchronized")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDiscoverydeviceinterfaceadminstatustaskinfoDetails struct {
	value *DiscoverydeviceinterfaceadminstatustaskinfoDetails
	isSet bool
}

func (v NullableDiscoverydeviceinterfaceadminstatustaskinfoDetails) Get() *DiscoverydeviceinterfaceadminstatustaskinfoDetails {
	return v.value
}

func (v *NullableDiscoverydeviceinterfaceadminstatustaskinfoDetails) Set(val *DiscoverydeviceinterfaceadminstatustaskinfoDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableDiscoverydeviceinterfaceadminstatustaskinfoDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableDiscoverydeviceinterfaceadminstatustaskinfoDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiscoverydeviceinterfaceadminstatustaskinfoDetails(val *DiscoverydeviceinterfaceadminstatustaskinfoDetails) *NullableDiscoverydeviceinterfaceadminstatustaskinfoDetails {
	return &NullableDiscoverydeviceinterfaceadminstatustaskinfoDetails{value: val, isSet: true}
}

func (v NullableDiscoverydeviceinterfaceadminstatustaskinfoDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiscoverydeviceinterfaceadminstatustaskinfoDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
