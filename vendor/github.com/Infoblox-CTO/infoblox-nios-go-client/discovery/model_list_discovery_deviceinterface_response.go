/*
Infoblox DISCOVERY API

OpenAPI specification for Infoblox NIOS WAPI DISCOVERY objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discovery

import (
	"encoding/json"
	"fmt"
)

// ListDiscoveryDeviceinterfaceResponse - struct for ListDiscoveryDeviceinterfaceResponse
type ListDiscoveryDeviceinterfaceResponse struct {
	ListDiscoveryDeviceinterfaceResponseObject *ListDiscoveryDeviceinterfaceResponseObject
	ArrayOfDiscoveryDeviceinterface            *[]DiscoveryDeviceinterface
}

// ListDiscoveryDeviceinterfaceResponseObjectAsListDiscoveryDeviceinterfaceResponse is a convenience function that returns ListDiscoveryDeviceinterfaceResponseObject wrapped in ListDiscoveryDeviceinterfaceResponse
func ListDiscoveryDeviceinterfaceResponseObjectAsListDiscoveryDeviceinterfaceResponse(v *ListDiscoveryDeviceinterfaceResponseObject) ListDiscoveryDeviceinterfaceResponse {
	return ListDiscoveryDeviceinterfaceResponse{
		ListDiscoveryDeviceinterfaceResponseObject: v,
	}
}

// []DiscoveryDeviceinterfaceAsListDiscoveryDeviceinterfaceResponse is a convenience function that returns []DiscoveryDeviceinterface wrapped in ListDiscoveryDeviceinterfaceResponse
func ArrayOfDiscoveryDeviceinterfaceAsListDiscoveryDeviceinterfaceResponse(v *[]DiscoveryDeviceinterface) ListDiscoveryDeviceinterfaceResponse {
	return ListDiscoveryDeviceinterfaceResponse{
		ArrayOfDiscoveryDeviceinterface: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListDiscoveryDeviceinterfaceResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListDiscoveryDeviceinterfaceResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListDiscoveryDeviceinterfaceResponseObject)
	if err == nil {
		jsonListDiscoveryDeviceinterfaceResponseObject, _ := json.Marshal(dst.ListDiscoveryDeviceinterfaceResponseObject)
		if string(jsonListDiscoveryDeviceinterfaceResponseObject) == "{}" { // empty struct
			dst.ListDiscoveryDeviceinterfaceResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListDiscoveryDeviceinterfaceResponseObject = nil
	}

	// try to unmarshal data into ArrayOfDiscoveryDeviceinterface
	err = newStrictDecoder(data).Decode(&dst.ArrayOfDiscoveryDeviceinterface)
	if err == nil {
		jsonArrayOfDiscoveryDeviceinterface, _ := json.Marshal(dst.ArrayOfDiscoveryDeviceinterface)
		if string(jsonArrayOfDiscoveryDeviceinterface) == "{}" { // empty struct
			dst.ArrayOfDiscoveryDeviceinterface = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfDiscoveryDeviceinterface = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListDiscoveryDeviceinterfaceResponseObject = nil
		dst.ArrayOfDiscoveryDeviceinterface = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListDiscoveryDeviceinterfaceResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListDiscoveryDeviceinterfaceResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListDiscoveryDeviceinterfaceResponse) MarshalJSON() ([]byte, error) {
	if src.ListDiscoveryDeviceinterfaceResponseObject != nil {
		return json.Marshal(&src.ListDiscoveryDeviceinterfaceResponseObject)
	}

	if src.ArrayOfDiscoveryDeviceinterface != nil {
		return json.Marshal(&src.ArrayOfDiscoveryDeviceinterface)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListDiscoveryDeviceinterfaceResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListDiscoveryDeviceinterfaceResponseObject != nil {
		return obj.ListDiscoveryDeviceinterfaceResponseObject
	}

	if obj.ArrayOfDiscoveryDeviceinterface != nil {
		return obj.ArrayOfDiscoveryDeviceinterface
	}

	// all schemas are nil
	return nil
}

type NullableListDiscoveryDeviceinterfaceResponse struct {
	value *ListDiscoveryDeviceinterfaceResponse
	isSet bool
}

func (v NullableListDiscoveryDeviceinterfaceResponse) Get() *ListDiscoveryDeviceinterfaceResponse {
	return v.value
}

func (v *NullableListDiscoveryDeviceinterfaceResponse) Set(val *ListDiscoveryDeviceinterfaceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListDiscoveryDeviceinterfaceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListDiscoveryDeviceinterfaceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListDiscoveryDeviceinterfaceResponse(val *ListDiscoveryDeviceinterfaceResponse) *NullableListDiscoveryDeviceinterfaceResponse {
	return &NullableListDiscoveryDeviceinterfaceResponse{value: val, isSet: true}
}

func (v NullableListDiscoveryDeviceinterfaceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListDiscoveryDeviceinterfaceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
