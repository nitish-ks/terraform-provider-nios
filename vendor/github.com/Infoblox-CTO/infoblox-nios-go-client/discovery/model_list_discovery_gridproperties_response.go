/*
Infoblox DISCOVERY API

OpenAPI specification for Infoblox NIOS WAPI DISCOVERY objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discovery

import (
	"encoding/json"
	"fmt"
)

// ListDiscoveryGridpropertiesResponse - struct for ListDiscoveryGridpropertiesResponse
type ListDiscoveryGridpropertiesResponse struct {
	ListDiscoveryGridpropertiesResponseObject *ListDiscoveryGridpropertiesResponseObject
	ArrayOfDiscoveryGridproperties            *[]DiscoveryGridproperties
}

// ListDiscoveryGridpropertiesResponseObjectAsListDiscoveryGridpropertiesResponse is a convenience function that returns ListDiscoveryGridpropertiesResponseObject wrapped in ListDiscoveryGridpropertiesResponse
func ListDiscoveryGridpropertiesResponseObjectAsListDiscoveryGridpropertiesResponse(v *ListDiscoveryGridpropertiesResponseObject) ListDiscoveryGridpropertiesResponse {
	return ListDiscoveryGridpropertiesResponse{
		ListDiscoveryGridpropertiesResponseObject: v,
	}
}

// []DiscoveryGridpropertiesAsListDiscoveryGridpropertiesResponse is a convenience function that returns []DiscoveryGridproperties wrapped in ListDiscoveryGridpropertiesResponse
func ArrayOfDiscoveryGridpropertiesAsListDiscoveryGridpropertiesResponse(v *[]DiscoveryGridproperties) ListDiscoveryGridpropertiesResponse {
	return ListDiscoveryGridpropertiesResponse{
		ArrayOfDiscoveryGridproperties: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListDiscoveryGridpropertiesResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListDiscoveryGridpropertiesResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListDiscoveryGridpropertiesResponseObject)
	if err == nil {
		jsonListDiscoveryGridpropertiesResponseObject, _ := json.Marshal(dst.ListDiscoveryGridpropertiesResponseObject)
		if string(jsonListDiscoveryGridpropertiesResponseObject) == "{}" { // empty struct
			dst.ListDiscoveryGridpropertiesResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListDiscoveryGridpropertiesResponseObject = nil
	}

	// try to unmarshal data into ArrayOfDiscoveryGridproperties
	err = newStrictDecoder(data).Decode(&dst.ArrayOfDiscoveryGridproperties)
	if err == nil {
		jsonArrayOfDiscoveryGridproperties, _ := json.Marshal(dst.ArrayOfDiscoveryGridproperties)
		if string(jsonArrayOfDiscoveryGridproperties) == "{}" { // empty struct
			dst.ArrayOfDiscoveryGridproperties = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfDiscoveryGridproperties = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListDiscoveryGridpropertiesResponseObject = nil
		dst.ArrayOfDiscoveryGridproperties = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListDiscoveryGridpropertiesResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListDiscoveryGridpropertiesResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListDiscoveryGridpropertiesResponse) MarshalJSON() ([]byte, error) {
	if src.ListDiscoveryGridpropertiesResponseObject != nil {
		return json.Marshal(&src.ListDiscoveryGridpropertiesResponseObject)
	}

	if src.ArrayOfDiscoveryGridproperties != nil {
		return json.Marshal(&src.ArrayOfDiscoveryGridproperties)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListDiscoveryGridpropertiesResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListDiscoveryGridpropertiesResponseObject != nil {
		return obj.ListDiscoveryGridpropertiesResponseObject
	}

	if obj.ArrayOfDiscoveryGridproperties != nil {
		return obj.ArrayOfDiscoveryGridproperties
	}

	// all schemas are nil
	return nil
}

type NullableListDiscoveryGridpropertiesResponse struct {
	value *ListDiscoveryGridpropertiesResponse
	isSet bool
}

func (v NullableListDiscoveryGridpropertiesResponse) Get() *ListDiscoveryGridpropertiesResponse {
	return v.value
}

func (v *NullableListDiscoveryGridpropertiesResponse) Set(val *ListDiscoveryGridpropertiesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListDiscoveryGridpropertiesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListDiscoveryGridpropertiesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListDiscoveryGridpropertiesResponse(val *ListDiscoveryGridpropertiesResponse) *NullableListDiscoveryGridpropertiesResponse {
	return &NullableListDiscoveryGridpropertiesResponse{value: val, isSet: true}
}

func (v NullableListDiscoveryGridpropertiesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListDiscoveryGridpropertiesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
