/*
Infoblox DISCOVERY API

OpenAPI specification for Infoblox NIOS WAPI DISCOVERY objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discovery

import (
	"encoding/json"
	"fmt"
)

// ListDiscoveryMemberpropertiesResponse - struct for ListDiscoveryMemberpropertiesResponse
type ListDiscoveryMemberpropertiesResponse struct {
	ListDiscoveryMemberpropertiesResponseObject *ListDiscoveryMemberpropertiesResponseObject
	ArrayOfDiscoveryMemberproperties            *[]DiscoveryMemberproperties
}

// ListDiscoveryMemberpropertiesResponseObjectAsListDiscoveryMemberpropertiesResponse is a convenience function that returns ListDiscoveryMemberpropertiesResponseObject wrapped in ListDiscoveryMemberpropertiesResponse
func ListDiscoveryMemberpropertiesResponseObjectAsListDiscoveryMemberpropertiesResponse(v *ListDiscoveryMemberpropertiesResponseObject) ListDiscoveryMemberpropertiesResponse {
	return ListDiscoveryMemberpropertiesResponse{
		ListDiscoveryMemberpropertiesResponseObject: v,
	}
}

// []DiscoveryMemberpropertiesAsListDiscoveryMemberpropertiesResponse is a convenience function that returns []DiscoveryMemberproperties wrapped in ListDiscoveryMemberpropertiesResponse
func ArrayOfDiscoveryMemberpropertiesAsListDiscoveryMemberpropertiesResponse(v *[]DiscoveryMemberproperties) ListDiscoveryMemberpropertiesResponse {
	return ListDiscoveryMemberpropertiesResponse{
		ArrayOfDiscoveryMemberproperties: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListDiscoveryMemberpropertiesResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListDiscoveryMemberpropertiesResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListDiscoveryMemberpropertiesResponseObject)
	if err == nil {
		jsonListDiscoveryMemberpropertiesResponseObject, _ := json.Marshal(dst.ListDiscoveryMemberpropertiesResponseObject)
		if string(jsonListDiscoveryMemberpropertiesResponseObject) == "{}" { // empty struct
			dst.ListDiscoveryMemberpropertiesResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListDiscoveryMemberpropertiesResponseObject = nil
	}

	// try to unmarshal data into ArrayOfDiscoveryMemberproperties
	err = newStrictDecoder(data).Decode(&dst.ArrayOfDiscoveryMemberproperties)
	if err == nil {
		jsonArrayOfDiscoveryMemberproperties, _ := json.Marshal(dst.ArrayOfDiscoveryMemberproperties)
		if string(jsonArrayOfDiscoveryMemberproperties) == "{}" { // empty struct
			dst.ArrayOfDiscoveryMemberproperties = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfDiscoveryMemberproperties = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListDiscoveryMemberpropertiesResponseObject = nil
		dst.ArrayOfDiscoveryMemberproperties = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListDiscoveryMemberpropertiesResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListDiscoveryMemberpropertiesResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListDiscoveryMemberpropertiesResponse) MarshalJSON() ([]byte, error) {
	if src.ListDiscoveryMemberpropertiesResponseObject != nil {
		return json.Marshal(&src.ListDiscoveryMemberpropertiesResponseObject)
	}

	if src.ArrayOfDiscoveryMemberproperties != nil {
		return json.Marshal(&src.ArrayOfDiscoveryMemberproperties)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListDiscoveryMemberpropertiesResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListDiscoveryMemberpropertiesResponseObject != nil {
		return obj.ListDiscoveryMemberpropertiesResponseObject
	}

	if obj.ArrayOfDiscoveryMemberproperties != nil {
		return obj.ArrayOfDiscoveryMemberproperties
	}

	// all schemas are nil
	return nil
}

type NullableListDiscoveryMemberpropertiesResponse struct {
	value *ListDiscoveryMemberpropertiesResponse
	isSet bool
}

func (v NullableListDiscoveryMemberpropertiesResponse) Get() *ListDiscoveryMemberpropertiesResponse {
	return v.value
}

func (v *NullableListDiscoveryMemberpropertiesResponse) Set(val *ListDiscoveryMemberpropertiesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListDiscoveryMemberpropertiesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListDiscoveryMemberpropertiesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListDiscoveryMemberpropertiesResponse(val *ListDiscoveryMemberpropertiesResponse) *NullableListDiscoveryMemberpropertiesResponse {
	return &NullableListDiscoveryMemberpropertiesResponse{value: val, isSet: true}
}

func (v NullableListDiscoveryMemberpropertiesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListDiscoveryMemberpropertiesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
