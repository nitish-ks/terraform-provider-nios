/*
Infoblox DISCOVERY API

OpenAPI specification for Infoblox NIOS WAPI DISCOVERY objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discovery

import (
	"encoding/json"
	"fmt"
)

// ListVdiscoverytaskResponse - struct for ListVdiscoverytaskResponse
type ListVdiscoverytaskResponse struct {
	ListVdiscoverytaskResponseObject *ListVdiscoverytaskResponseObject
	ArrayOfVdiscoverytask            *[]Vdiscoverytask
}

// ListVdiscoverytaskResponseObjectAsListVdiscoverytaskResponse is a convenience function that returns ListVdiscoverytaskResponseObject wrapped in ListVdiscoverytaskResponse
func ListVdiscoverytaskResponseObjectAsListVdiscoverytaskResponse(v *ListVdiscoverytaskResponseObject) ListVdiscoverytaskResponse {
	return ListVdiscoverytaskResponse{
		ListVdiscoverytaskResponseObject: v,
	}
}

// []VdiscoverytaskAsListVdiscoverytaskResponse is a convenience function that returns []Vdiscoverytask wrapped in ListVdiscoverytaskResponse
func ArrayOfVdiscoverytaskAsListVdiscoverytaskResponse(v *[]Vdiscoverytask) ListVdiscoverytaskResponse {
	return ListVdiscoverytaskResponse{
		ArrayOfVdiscoverytask: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListVdiscoverytaskResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListVdiscoverytaskResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListVdiscoverytaskResponseObject)
	if err == nil {
		jsonListVdiscoverytaskResponseObject, _ := json.Marshal(dst.ListVdiscoverytaskResponseObject)
		if string(jsonListVdiscoverytaskResponseObject) == "{}" { // empty struct
			dst.ListVdiscoverytaskResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListVdiscoverytaskResponseObject = nil
	}

	// try to unmarshal data into ArrayOfVdiscoverytask
	err = newStrictDecoder(data).Decode(&dst.ArrayOfVdiscoverytask)
	if err == nil {
		jsonArrayOfVdiscoverytask, _ := json.Marshal(dst.ArrayOfVdiscoverytask)
		if string(jsonArrayOfVdiscoverytask) == "{}" { // empty struct
			dst.ArrayOfVdiscoverytask = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfVdiscoverytask = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListVdiscoverytaskResponseObject = nil
		dst.ArrayOfVdiscoverytask = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListVdiscoverytaskResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListVdiscoverytaskResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListVdiscoverytaskResponse) MarshalJSON() ([]byte, error) {
	if src.ListVdiscoverytaskResponseObject != nil {
		return json.Marshal(&src.ListVdiscoverytaskResponseObject)
	}

	if src.ArrayOfVdiscoverytask != nil {
		return json.Marshal(&src.ArrayOfVdiscoverytask)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListVdiscoverytaskResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListVdiscoverytaskResponseObject != nil {
		return obj.ListVdiscoverytaskResponseObject
	}

	if obj.ArrayOfVdiscoverytask != nil {
		return obj.ArrayOfVdiscoverytask
	}

	// all schemas are nil
	return nil
}

type NullableListVdiscoverytaskResponse struct {
	value *ListVdiscoverytaskResponse
	isSet bool
}

func (v NullableListVdiscoverytaskResponse) Get() *ListVdiscoverytaskResponse {
	return v.value
}

func (v *NullableListVdiscoverytaskResponse) Set(val *ListVdiscoverytaskResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListVdiscoverytaskResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListVdiscoverytaskResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListVdiscoverytaskResponse(val *ListVdiscoverytaskResponse) *NullableListVdiscoverytaskResponse {
	return &NullableListVdiscoverytaskResponse{value: val, isSet: true}
}

func (v NullableListVdiscoverytaskResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListVdiscoverytaskResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
