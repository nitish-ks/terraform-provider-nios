/*
Infoblox DISCOVERY API

OpenAPI specification for Infoblox NIOS WAPI DISCOVERY objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discovery

import (
	"encoding/json"
)

// checks if the Vdiscoverytask type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Vdiscoverytask{}

// Vdiscoverytask struct for Vdiscoverytask
type Vdiscoverytask struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// Allow unsecured connection over HTTPS and bypass validation of the remote SSL certificate.
	AllowUnsecuredConnection *bool `json:"allow_unsecured_connection,omitempty"`
	// Whether to insert or update cloud EAs with discovery data.
	AutoConsolidateCloudEa *bool `json:"auto_consolidate_cloud_ea,omitempty"`
	// Whether to replace managed tenant with discovery tenant data.
	AutoConsolidateManagedTenant *bool `json:"auto_consolidate_managed_tenant,omitempty"`
	// Whether to replace managed virtual machine with discovery vm data.
	AutoConsolidateManagedVm *bool `json:"auto_consolidate_managed_vm,omitempty"`
	// Template string used to generate host name.
	AutoCreateDnsHostnameTemplate *string `json:"auto_create_dns_hostname_template,omitempty"`
	// Control whether to create or update DNS record using discovered data.
	AutoCreateDnsRecord *bool `json:"auto_create_dns_record,omitempty"`
	// Indicates the type of record to create if the auto create DNS record is enabled.
	AutoCreateDnsRecordType *string `json:"auto_create_dns_record_type,omitempty"`
	// Comment on the task.
	Comment *string `json:"comment,omitempty"`
	// Credentials type used for connecting to the cloud management platform.
	CredentialsType *string `json:"credentials_type,omitempty"`
	// The DNS view name for private IPs.
	DnsViewPrivateIp *string `json:"dns_view_private_ip,omitempty"`
	// The DNS view name for public IPs.
	DnsViewPublicIp *string `json:"dns_view_public_ip,omitempty"`
	// The name of the domain to use with keystone v3.
	DomainName *string `json:"domain_name,omitempty"`
	// Type of discovery driver.
	DriverType *string `json:"driver_type,omitempty"`
	// Enable filter for cloud discovery task
	EnableFilter *bool `json:"enable_filter,omitempty"`
	// Whether to enabled the cloud discovery or not.
	Enabled *bool `json:"enabled,omitempty"`
	// FQDN or IP of the cloud management platform.
	FqdnOrIp *string `json:"fqdn_or_ip,omitempty"`
	// Identity service version.
	IdentityVersion *string `json:"identity_version,omitempty"`
	// Timestamp of last run.
	LastRun *int64 `json:"last_run,omitempty"`
	// Member on which cloud discovery will be run.
	Member *string `json:"member,omitempty"`
	// Whether to replace the old data with new or not.
	MergeData *bool `json:"merge_data,omitempty"`
	// Name of this cloud discovery task. Uniquely identify a task.
	Name *string `json:"name,omitempty"`
	// Options to filter the networks in cdiscovery task.
	NetworkFilter *string `json:"network_filter,omitempty"`
	// List of networks to filter in cdiscovery task.
	NetworkList []string `json:"network_list,omitempty"`
	// Password used for connecting to the cloud management platform.
	Password *string `json:"password,omitempty"`
	// Connection port used for connecting to the cloud management platform.
	Port *int64 `json:"port,omitempty"`
	// Network view for private IPs.
	PrivateNetworkView *string `json:"private_network_view,omitempty"`
	// Mapping policy for the network view for private IPs in discovery data.
	PrivateNetworkViewMappingPolicy *string `json:"private_network_view_mapping_policy,omitempty"`
	// Connection protocol used for connecting to the cloud management platform.
	Protocol *string `json:"protocol,omitempty"`
	// Network view for public IPs.
	PublicNetworkView *string `json:"public_network_view,omitempty"`
	// Mapping policy for the network view for public IPs in discovery data.
	PublicNetworkViewMappingPolicy *string                     `json:"public_network_view_mapping_policy,omitempty"`
	ScheduledRun                   *VdiscoverytaskScheduledRun `json:"scheduled_run,omitempty"`
	// The service_account_file for GCP.
	ServiceAccountFile *string `json:"service_account_file,omitempty"`
	// Current state of this task.
	State *string `json:"state,omitempty"`
	// State message of the complete discovery process.
	StateMsg *string `json:"state_msg,omitempty"`
	// If set to true, the appliance uses a specific DNS view for private IPs.
	UpdateDnsViewPrivateIp *bool `json:"update_dns_view_private_ip,omitempty"`
	// If set to true, the appliance uses a specific DNS view for public IPs.
	UpdateDnsViewPublicIp *bool `json:"update_dns_view_public_ip,omitempty"`
	// Whether to update metadata as a result of this network discovery.
	UpdateMetadata *bool `json:"update_metadata,omitempty"`
	// If set true, all keystone connection will use \"/identity\" endpoint and port value will be ignored.
	UseIdentity *bool `json:"use_identity,omitempty"`
	// Username used for connecting to the cloud management platform.
	Username          *string                `json:"username,omitempty"`
	VdiscoveryControl map[string]interface{} `json:"vdiscovery_control,omitempty"`
}

// NewVdiscoverytask instantiates a new Vdiscoverytask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVdiscoverytask() *Vdiscoverytask {
	this := Vdiscoverytask{}
	return &this
}

// NewVdiscoverytaskWithDefaults instantiates a new Vdiscoverytask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVdiscoverytaskWithDefaults() *Vdiscoverytask {
	this := Vdiscoverytask{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *Vdiscoverytask) SetRef(v string) {
	o.Ref = &v
}

// GetAllowUnsecuredConnection returns the AllowUnsecuredConnection field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetAllowUnsecuredConnection() bool {
	if o == nil || IsNil(o.AllowUnsecuredConnection) {
		var ret bool
		return ret
	}
	return *o.AllowUnsecuredConnection
}

// GetAllowUnsecuredConnectionOk returns a tuple with the AllowUnsecuredConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetAllowUnsecuredConnectionOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowUnsecuredConnection) {
		return nil, false
	}
	return o.AllowUnsecuredConnection, true
}

// HasAllowUnsecuredConnection returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasAllowUnsecuredConnection() bool {
	if o != nil && !IsNil(o.AllowUnsecuredConnection) {
		return true
	}

	return false
}

// SetAllowUnsecuredConnection gets a reference to the given bool and assigns it to the AllowUnsecuredConnection field.
func (o *Vdiscoverytask) SetAllowUnsecuredConnection(v bool) {
	o.AllowUnsecuredConnection = &v
}

// GetAutoConsolidateCloudEa returns the AutoConsolidateCloudEa field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetAutoConsolidateCloudEa() bool {
	if o == nil || IsNil(o.AutoConsolidateCloudEa) {
		var ret bool
		return ret
	}
	return *o.AutoConsolidateCloudEa
}

// GetAutoConsolidateCloudEaOk returns a tuple with the AutoConsolidateCloudEa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetAutoConsolidateCloudEaOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoConsolidateCloudEa) {
		return nil, false
	}
	return o.AutoConsolidateCloudEa, true
}

// HasAutoConsolidateCloudEa returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasAutoConsolidateCloudEa() bool {
	if o != nil && !IsNil(o.AutoConsolidateCloudEa) {
		return true
	}

	return false
}

// SetAutoConsolidateCloudEa gets a reference to the given bool and assigns it to the AutoConsolidateCloudEa field.
func (o *Vdiscoverytask) SetAutoConsolidateCloudEa(v bool) {
	o.AutoConsolidateCloudEa = &v
}

// GetAutoConsolidateManagedTenant returns the AutoConsolidateManagedTenant field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetAutoConsolidateManagedTenant() bool {
	if o == nil || IsNil(o.AutoConsolidateManagedTenant) {
		var ret bool
		return ret
	}
	return *o.AutoConsolidateManagedTenant
}

// GetAutoConsolidateManagedTenantOk returns a tuple with the AutoConsolidateManagedTenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetAutoConsolidateManagedTenantOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoConsolidateManagedTenant) {
		return nil, false
	}
	return o.AutoConsolidateManagedTenant, true
}

// HasAutoConsolidateManagedTenant returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasAutoConsolidateManagedTenant() bool {
	if o != nil && !IsNil(o.AutoConsolidateManagedTenant) {
		return true
	}

	return false
}

// SetAutoConsolidateManagedTenant gets a reference to the given bool and assigns it to the AutoConsolidateManagedTenant field.
func (o *Vdiscoverytask) SetAutoConsolidateManagedTenant(v bool) {
	o.AutoConsolidateManagedTenant = &v
}

// GetAutoConsolidateManagedVm returns the AutoConsolidateManagedVm field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetAutoConsolidateManagedVm() bool {
	if o == nil || IsNil(o.AutoConsolidateManagedVm) {
		var ret bool
		return ret
	}
	return *o.AutoConsolidateManagedVm
}

// GetAutoConsolidateManagedVmOk returns a tuple with the AutoConsolidateManagedVm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetAutoConsolidateManagedVmOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoConsolidateManagedVm) {
		return nil, false
	}
	return o.AutoConsolidateManagedVm, true
}

// HasAutoConsolidateManagedVm returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasAutoConsolidateManagedVm() bool {
	if o != nil && !IsNil(o.AutoConsolidateManagedVm) {
		return true
	}

	return false
}

// SetAutoConsolidateManagedVm gets a reference to the given bool and assigns it to the AutoConsolidateManagedVm field.
func (o *Vdiscoverytask) SetAutoConsolidateManagedVm(v bool) {
	o.AutoConsolidateManagedVm = &v
}

// GetAutoCreateDnsHostnameTemplate returns the AutoCreateDnsHostnameTemplate field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetAutoCreateDnsHostnameTemplate() string {
	if o == nil || IsNil(o.AutoCreateDnsHostnameTemplate) {
		var ret string
		return ret
	}
	return *o.AutoCreateDnsHostnameTemplate
}

// GetAutoCreateDnsHostnameTemplateOk returns a tuple with the AutoCreateDnsHostnameTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetAutoCreateDnsHostnameTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.AutoCreateDnsHostnameTemplate) {
		return nil, false
	}
	return o.AutoCreateDnsHostnameTemplate, true
}

// HasAutoCreateDnsHostnameTemplate returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasAutoCreateDnsHostnameTemplate() bool {
	if o != nil && !IsNil(o.AutoCreateDnsHostnameTemplate) {
		return true
	}

	return false
}

// SetAutoCreateDnsHostnameTemplate gets a reference to the given string and assigns it to the AutoCreateDnsHostnameTemplate field.
func (o *Vdiscoverytask) SetAutoCreateDnsHostnameTemplate(v string) {
	o.AutoCreateDnsHostnameTemplate = &v
}

// GetAutoCreateDnsRecord returns the AutoCreateDnsRecord field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetAutoCreateDnsRecord() bool {
	if o == nil || IsNil(o.AutoCreateDnsRecord) {
		var ret bool
		return ret
	}
	return *o.AutoCreateDnsRecord
}

// GetAutoCreateDnsRecordOk returns a tuple with the AutoCreateDnsRecord field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetAutoCreateDnsRecordOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoCreateDnsRecord) {
		return nil, false
	}
	return o.AutoCreateDnsRecord, true
}

// HasAutoCreateDnsRecord returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasAutoCreateDnsRecord() bool {
	if o != nil && !IsNil(o.AutoCreateDnsRecord) {
		return true
	}

	return false
}

// SetAutoCreateDnsRecord gets a reference to the given bool and assigns it to the AutoCreateDnsRecord field.
func (o *Vdiscoverytask) SetAutoCreateDnsRecord(v bool) {
	o.AutoCreateDnsRecord = &v
}

// GetAutoCreateDnsRecordType returns the AutoCreateDnsRecordType field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetAutoCreateDnsRecordType() string {
	if o == nil || IsNil(o.AutoCreateDnsRecordType) {
		var ret string
		return ret
	}
	return *o.AutoCreateDnsRecordType
}

// GetAutoCreateDnsRecordTypeOk returns a tuple with the AutoCreateDnsRecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetAutoCreateDnsRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AutoCreateDnsRecordType) {
		return nil, false
	}
	return o.AutoCreateDnsRecordType, true
}

// HasAutoCreateDnsRecordType returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasAutoCreateDnsRecordType() bool {
	if o != nil && !IsNil(o.AutoCreateDnsRecordType) {
		return true
	}

	return false
}

// SetAutoCreateDnsRecordType gets a reference to the given string and assigns it to the AutoCreateDnsRecordType field.
func (o *Vdiscoverytask) SetAutoCreateDnsRecordType(v string) {
	o.AutoCreateDnsRecordType = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *Vdiscoverytask) SetComment(v string) {
	o.Comment = &v
}

// GetCredentialsType returns the CredentialsType field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetCredentialsType() string {
	if o == nil || IsNil(o.CredentialsType) {
		var ret string
		return ret
	}
	return *o.CredentialsType
}

// GetCredentialsTypeOk returns a tuple with the CredentialsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetCredentialsTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CredentialsType) {
		return nil, false
	}
	return o.CredentialsType, true
}

// HasCredentialsType returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasCredentialsType() bool {
	if o != nil && !IsNil(o.CredentialsType) {
		return true
	}

	return false
}

// SetCredentialsType gets a reference to the given string and assigns it to the CredentialsType field.
func (o *Vdiscoverytask) SetCredentialsType(v string) {
	o.CredentialsType = &v
}

// GetDnsViewPrivateIp returns the DnsViewPrivateIp field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetDnsViewPrivateIp() string {
	if o == nil || IsNil(o.DnsViewPrivateIp) {
		var ret string
		return ret
	}
	return *o.DnsViewPrivateIp
}

// GetDnsViewPrivateIpOk returns a tuple with the DnsViewPrivateIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetDnsViewPrivateIpOk() (*string, bool) {
	if o == nil || IsNil(o.DnsViewPrivateIp) {
		return nil, false
	}
	return o.DnsViewPrivateIp, true
}

// HasDnsViewPrivateIp returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasDnsViewPrivateIp() bool {
	if o != nil && !IsNil(o.DnsViewPrivateIp) {
		return true
	}

	return false
}

// SetDnsViewPrivateIp gets a reference to the given string and assigns it to the DnsViewPrivateIp field.
func (o *Vdiscoverytask) SetDnsViewPrivateIp(v string) {
	o.DnsViewPrivateIp = &v
}

// GetDnsViewPublicIp returns the DnsViewPublicIp field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetDnsViewPublicIp() string {
	if o == nil || IsNil(o.DnsViewPublicIp) {
		var ret string
		return ret
	}
	return *o.DnsViewPublicIp
}

// GetDnsViewPublicIpOk returns a tuple with the DnsViewPublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetDnsViewPublicIpOk() (*string, bool) {
	if o == nil || IsNil(o.DnsViewPublicIp) {
		return nil, false
	}
	return o.DnsViewPublicIp, true
}

// HasDnsViewPublicIp returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasDnsViewPublicIp() bool {
	if o != nil && !IsNil(o.DnsViewPublicIp) {
		return true
	}

	return false
}

// SetDnsViewPublicIp gets a reference to the given string and assigns it to the DnsViewPublicIp field.
func (o *Vdiscoverytask) SetDnsViewPublicIp(v string) {
	o.DnsViewPublicIp = &v
}

// GetDomainName returns the DomainName field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetDomainName() string {
	if o == nil || IsNil(o.DomainName) {
		var ret string
		return ret
	}
	return *o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetDomainNameOk() (*string, bool) {
	if o == nil || IsNil(o.DomainName) {
		return nil, false
	}
	return o.DomainName, true
}

// HasDomainName returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasDomainName() bool {
	if o != nil && !IsNil(o.DomainName) {
		return true
	}

	return false
}

// SetDomainName gets a reference to the given string and assigns it to the DomainName field.
func (o *Vdiscoverytask) SetDomainName(v string) {
	o.DomainName = &v
}

// GetDriverType returns the DriverType field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetDriverType() string {
	if o == nil || IsNil(o.DriverType) {
		var ret string
		return ret
	}
	return *o.DriverType
}

// GetDriverTypeOk returns a tuple with the DriverType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetDriverTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DriverType) {
		return nil, false
	}
	return o.DriverType, true
}

// HasDriverType returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasDriverType() bool {
	if o != nil && !IsNil(o.DriverType) {
		return true
	}

	return false
}

// SetDriverType gets a reference to the given string and assigns it to the DriverType field.
func (o *Vdiscoverytask) SetDriverType(v string) {
	o.DriverType = &v
}

// GetEnableFilter returns the EnableFilter field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetEnableFilter() bool {
	if o == nil || IsNil(o.EnableFilter) {
		var ret bool
		return ret
	}
	return *o.EnableFilter
}

// GetEnableFilterOk returns a tuple with the EnableFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetEnableFilterOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableFilter) {
		return nil, false
	}
	return o.EnableFilter, true
}

// HasEnableFilter returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasEnableFilter() bool {
	if o != nil && !IsNil(o.EnableFilter) {
		return true
	}

	return false
}

// SetEnableFilter gets a reference to the given bool and assigns it to the EnableFilter field.
func (o *Vdiscoverytask) SetEnableFilter(v bool) {
	o.EnableFilter = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *Vdiscoverytask) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetFqdnOrIp returns the FqdnOrIp field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetFqdnOrIp() string {
	if o == nil || IsNil(o.FqdnOrIp) {
		var ret string
		return ret
	}
	return *o.FqdnOrIp
}

// GetFqdnOrIpOk returns a tuple with the FqdnOrIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetFqdnOrIpOk() (*string, bool) {
	if o == nil || IsNil(o.FqdnOrIp) {
		return nil, false
	}
	return o.FqdnOrIp, true
}

// HasFqdnOrIp returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasFqdnOrIp() bool {
	if o != nil && !IsNil(o.FqdnOrIp) {
		return true
	}

	return false
}

// SetFqdnOrIp gets a reference to the given string and assigns it to the FqdnOrIp field.
func (o *Vdiscoverytask) SetFqdnOrIp(v string) {
	o.FqdnOrIp = &v
}

// GetIdentityVersion returns the IdentityVersion field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetIdentityVersion() string {
	if o == nil || IsNil(o.IdentityVersion) {
		var ret string
		return ret
	}
	return *o.IdentityVersion
}

// GetIdentityVersionOk returns a tuple with the IdentityVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetIdentityVersionOk() (*string, bool) {
	if o == nil || IsNil(o.IdentityVersion) {
		return nil, false
	}
	return o.IdentityVersion, true
}

// HasIdentityVersion returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasIdentityVersion() bool {
	if o != nil && !IsNil(o.IdentityVersion) {
		return true
	}

	return false
}

// SetIdentityVersion gets a reference to the given string and assigns it to the IdentityVersion field.
func (o *Vdiscoverytask) SetIdentityVersion(v string) {
	o.IdentityVersion = &v
}

// GetLastRun returns the LastRun field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetLastRun() int64 {
	if o == nil || IsNil(o.LastRun) {
		var ret int64
		return ret
	}
	return *o.LastRun
}

// GetLastRunOk returns a tuple with the LastRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetLastRunOk() (*int64, bool) {
	if o == nil || IsNil(o.LastRun) {
		return nil, false
	}
	return o.LastRun, true
}

// HasLastRun returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasLastRun() bool {
	if o != nil && !IsNil(o.LastRun) {
		return true
	}

	return false
}

// SetLastRun gets a reference to the given int64 and assigns it to the LastRun field.
func (o *Vdiscoverytask) SetLastRun(v int64) {
	o.LastRun = &v
}

// GetMember returns the Member field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetMember() string {
	if o == nil || IsNil(o.Member) {
		var ret string
		return ret
	}
	return *o.Member
}

// GetMemberOk returns a tuple with the Member field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetMemberOk() (*string, bool) {
	if o == nil || IsNil(o.Member) {
		return nil, false
	}
	return o.Member, true
}

// HasMember returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasMember() bool {
	if o != nil && !IsNil(o.Member) {
		return true
	}

	return false
}

// SetMember gets a reference to the given string and assigns it to the Member field.
func (o *Vdiscoverytask) SetMember(v string) {
	o.Member = &v
}

// GetMergeData returns the MergeData field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetMergeData() bool {
	if o == nil || IsNil(o.MergeData) {
		var ret bool
		return ret
	}
	return *o.MergeData
}

// GetMergeDataOk returns a tuple with the MergeData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetMergeDataOk() (*bool, bool) {
	if o == nil || IsNil(o.MergeData) {
		return nil, false
	}
	return o.MergeData, true
}

// HasMergeData returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasMergeData() bool {
	if o != nil && !IsNil(o.MergeData) {
		return true
	}

	return false
}

// SetMergeData gets a reference to the given bool and assigns it to the MergeData field.
func (o *Vdiscoverytask) SetMergeData(v bool) {
	o.MergeData = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Vdiscoverytask) SetName(v string) {
	o.Name = &v
}

// GetNetworkFilter returns the NetworkFilter field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetNetworkFilter() string {
	if o == nil || IsNil(o.NetworkFilter) {
		var ret string
		return ret
	}
	return *o.NetworkFilter
}

// GetNetworkFilterOk returns a tuple with the NetworkFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetNetworkFilterOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkFilter) {
		return nil, false
	}
	return o.NetworkFilter, true
}

// HasNetworkFilter returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasNetworkFilter() bool {
	if o != nil && !IsNil(o.NetworkFilter) {
		return true
	}

	return false
}

// SetNetworkFilter gets a reference to the given string and assigns it to the NetworkFilter field.
func (o *Vdiscoverytask) SetNetworkFilter(v string) {
	o.NetworkFilter = &v
}

// GetNetworkList returns the NetworkList field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetNetworkList() []string {
	if o == nil || IsNil(o.NetworkList) {
		var ret []string
		return ret
	}
	return o.NetworkList
}

// GetNetworkListOk returns a tuple with the NetworkList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetNetworkListOk() ([]string, bool) {
	if o == nil || IsNil(o.NetworkList) {
		return nil, false
	}
	return o.NetworkList, true
}

// HasNetworkList returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasNetworkList() bool {
	if o != nil && !IsNil(o.NetworkList) {
		return true
	}

	return false
}

// SetNetworkList gets a reference to the given []string and assigns it to the NetworkList field.
func (o *Vdiscoverytask) SetNetworkList(v []string) {
	o.NetworkList = v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *Vdiscoverytask) SetPassword(v string) {
	o.Password = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetPort() int64 {
	if o == nil || IsNil(o.Port) {
		var ret int64
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetPortOk() (*int64, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int64 and assigns it to the Port field.
func (o *Vdiscoverytask) SetPort(v int64) {
	o.Port = &v
}

// GetPrivateNetworkView returns the PrivateNetworkView field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetPrivateNetworkView() string {
	if o == nil || IsNil(o.PrivateNetworkView) {
		var ret string
		return ret
	}
	return *o.PrivateNetworkView
}

// GetPrivateNetworkViewOk returns a tuple with the PrivateNetworkView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetPrivateNetworkViewOk() (*string, bool) {
	if o == nil || IsNil(o.PrivateNetworkView) {
		return nil, false
	}
	return o.PrivateNetworkView, true
}

// HasPrivateNetworkView returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasPrivateNetworkView() bool {
	if o != nil && !IsNil(o.PrivateNetworkView) {
		return true
	}

	return false
}

// SetPrivateNetworkView gets a reference to the given string and assigns it to the PrivateNetworkView field.
func (o *Vdiscoverytask) SetPrivateNetworkView(v string) {
	o.PrivateNetworkView = &v
}

// GetPrivateNetworkViewMappingPolicy returns the PrivateNetworkViewMappingPolicy field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetPrivateNetworkViewMappingPolicy() string {
	if o == nil || IsNil(o.PrivateNetworkViewMappingPolicy) {
		var ret string
		return ret
	}
	return *o.PrivateNetworkViewMappingPolicy
}

// GetPrivateNetworkViewMappingPolicyOk returns a tuple with the PrivateNetworkViewMappingPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetPrivateNetworkViewMappingPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.PrivateNetworkViewMappingPolicy) {
		return nil, false
	}
	return o.PrivateNetworkViewMappingPolicy, true
}

// HasPrivateNetworkViewMappingPolicy returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasPrivateNetworkViewMappingPolicy() bool {
	if o != nil && !IsNil(o.PrivateNetworkViewMappingPolicy) {
		return true
	}

	return false
}

// SetPrivateNetworkViewMappingPolicy gets a reference to the given string and assigns it to the PrivateNetworkViewMappingPolicy field.
func (o *Vdiscoverytask) SetPrivateNetworkViewMappingPolicy(v string) {
	o.PrivateNetworkViewMappingPolicy = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetProtocol() string {
	if o == nil || IsNil(o.Protocol) {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasProtocol() bool {
	if o != nil && !IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *Vdiscoverytask) SetProtocol(v string) {
	o.Protocol = &v
}

// GetPublicNetworkView returns the PublicNetworkView field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetPublicNetworkView() string {
	if o == nil || IsNil(o.PublicNetworkView) {
		var ret string
		return ret
	}
	return *o.PublicNetworkView
}

// GetPublicNetworkViewOk returns a tuple with the PublicNetworkView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetPublicNetworkViewOk() (*string, bool) {
	if o == nil || IsNil(o.PublicNetworkView) {
		return nil, false
	}
	return o.PublicNetworkView, true
}

// HasPublicNetworkView returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasPublicNetworkView() bool {
	if o != nil && !IsNil(o.PublicNetworkView) {
		return true
	}

	return false
}

// SetPublicNetworkView gets a reference to the given string and assigns it to the PublicNetworkView field.
func (o *Vdiscoverytask) SetPublicNetworkView(v string) {
	o.PublicNetworkView = &v
}

// GetPublicNetworkViewMappingPolicy returns the PublicNetworkViewMappingPolicy field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetPublicNetworkViewMappingPolicy() string {
	if o == nil || IsNil(o.PublicNetworkViewMappingPolicy) {
		var ret string
		return ret
	}
	return *o.PublicNetworkViewMappingPolicy
}

// GetPublicNetworkViewMappingPolicyOk returns a tuple with the PublicNetworkViewMappingPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetPublicNetworkViewMappingPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.PublicNetworkViewMappingPolicy) {
		return nil, false
	}
	return o.PublicNetworkViewMappingPolicy, true
}

// HasPublicNetworkViewMappingPolicy returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasPublicNetworkViewMappingPolicy() bool {
	if o != nil && !IsNil(o.PublicNetworkViewMappingPolicy) {
		return true
	}

	return false
}

// SetPublicNetworkViewMappingPolicy gets a reference to the given string and assigns it to the PublicNetworkViewMappingPolicy field.
func (o *Vdiscoverytask) SetPublicNetworkViewMappingPolicy(v string) {
	o.PublicNetworkViewMappingPolicy = &v
}

// GetScheduledRun returns the ScheduledRun field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetScheduledRun() VdiscoverytaskScheduledRun {
	if o == nil || IsNil(o.ScheduledRun) {
		var ret VdiscoverytaskScheduledRun
		return ret
	}
	return *o.ScheduledRun
}

// GetScheduledRunOk returns a tuple with the ScheduledRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetScheduledRunOk() (*VdiscoverytaskScheduledRun, bool) {
	if o == nil || IsNil(o.ScheduledRun) {
		return nil, false
	}
	return o.ScheduledRun, true
}

// HasScheduledRun returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasScheduledRun() bool {
	if o != nil && !IsNil(o.ScheduledRun) {
		return true
	}

	return false
}

// SetScheduledRun gets a reference to the given VdiscoverytaskScheduledRun and assigns it to the ScheduledRun field.
func (o *Vdiscoverytask) SetScheduledRun(v VdiscoverytaskScheduledRun) {
	o.ScheduledRun = &v
}

// GetServiceAccountFile returns the ServiceAccountFile field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetServiceAccountFile() string {
	if o == nil || IsNil(o.ServiceAccountFile) {
		var ret string
		return ret
	}
	return *o.ServiceAccountFile
}

// GetServiceAccountFileOk returns a tuple with the ServiceAccountFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetServiceAccountFileOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceAccountFile) {
		return nil, false
	}
	return o.ServiceAccountFile, true
}

// HasServiceAccountFile returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasServiceAccountFile() bool {
	if o != nil && !IsNil(o.ServiceAccountFile) {
		return true
	}

	return false
}

// SetServiceAccountFile gets a reference to the given string and assigns it to the ServiceAccountFile field.
func (o *Vdiscoverytask) SetServiceAccountFile(v string) {
	o.ServiceAccountFile = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *Vdiscoverytask) SetState(v string) {
	o.State = &v
}

// GetStateMsg returns the StateMsg field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetStateMsg() string {
	if o == nil || IsNil(o.StateMsg) {
		var ret string
		return ret
	}
	return *o.StateMsg
}

// GetStateMsgOk returns a tuple with the StateMsg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetStateMsgOk() (*string, bool) {
	if o == nil || IsNil(o.StateMsg) {
		return nil, false
	}
	return o.StateMsg, true
}

// HasStateMsg returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasStateMsg() bool {
	if o != nil && !IsNil(o.StateMsg) {
		return true
	}

	return false
}

// SetStateMsg gets a reference to the given string and assigns it to the StateMsg field.
func (o *Vdiscoverytask) SetStateMsg(v string) {
	o.StateMsg = &v
}

// GetUpdateDnsViewPrivateIp returns the UpdateDnsViewPrivateIp field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetUpdateDnsViewPrivateIp() bool {
	if o == nil || IsNil(o.UpdateDnsViewPrivateIp) {
		var ret bool
		return ret
	}
	return *o.UpdateDnsViewPrivateIp
}

// GetUpdateDnsViewPrivateIpOk returns a tuple with the UpdateDnsViewPrivateIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetUpdateDnsViewPrivateIpOk() (*bool, bool) {
	if o == nil || IsNil(o.UpdateDnsViewPrivateIp) {
		return nil, false
	}
	return o.UpdateDnsViewPrivateIp, true
}

// HasUpdateDnsViewPrivateIp returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasUpdateDnsViewPrivateIp() bool {
	if o != nil && !IsNil(o.UpdateDnsViewPrivateIp) {
		return true
	}

	return false
}

// SetUpdateDnsViewPrivateIp gets a reference to the given bool and assigns it to the UpdateDnsViewPrivateIp field.
func (o *Vdiscoverytask) SetUpdateDnsViewPrivateIp(v bool) {
	o.UpdateDnsViewPrivateIp = &v
}

// GetUpdateDnsViewPublicIp returns the UpdateDnsViewPublicIp field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetUpdateDnsViewPublicIp() bool {
	if o == nil || IsNil(o.UpdateDnsViewPublicIp) {
		var ret bool
		return ret
	}
	return *o.UpdateDnsViewPublicIp
}

// GetUpdateDnsViewPublicIpOk returns a tuple with the UpdateDnsViewPublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetUpdateDnsViewPublicIpOk() (*bool, bool) {
	if o == nil || IsNil(o.UpdateDnsViewPublicIp) {
		return nil, false
	}
	return o.UpdateDnsViewPublicIp, true
}

// HasUpdateDnsViewPublicIp returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasUpdateDnsViewPublicIp() bool {
	if o != nil && !IsNil(o.UpdateDnsViewPublicIp) {
		return true
	}

	return false
}

// SetUpdateDnsViewPublicIp gets a reference to the given bool and assigns it to the UpdateDnsViewPublicIp field.
func (o *Vdiscoverytask) SetUpdateDnsViewPublicIp(v bool) {
	o.UpdateDnsViewPublicIp = &v
}

// GetUpdateMetadata returns the UpdateMetadata field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetUpdateMetadata() bool {
	if o == nil || IsNil(o.UpdateMetadata) {
		var ret bool
		return ret
	}
	return *o.UpdateMetadata
}

// GetUpdateMetadataOk returns a tuple with the UpdateMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetUpdateMetadataOk() (*bool, bool) {
	if o == nil || IsNil(o.UpdateMetadata) {
		return nil, false
	}
	return o.UpdateMetadata, true
}

// HasUpdateMetadata returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasUpdateMetadata() bool {
	if o != nil && !IsNil(o.UpdateMetadata) {
		return true
	}

	return false
}

// SetUpdateMetadata gets a reference to the given bool and assigns it to the UpdateMetadata field.
func (o *Vdiscoverytask) SetUpdateMetadata(v bool) {
	o.UpdateMetadata = &v
}

// GetUseIdentity returns the UseIdentity field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetUseIdentity() bool {
	if o == nil || IsNil(o.UseIdentity) {
		var ret bool
		return ret
	}
	return *o.UseIdentity
}

// GetUseIdentityOk returns a tuple with the UseIdentity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetUseIdentityOk() (*bool, bool) {
	if o == nil || IsNil(o.UseIdentity) {
		return nil, false
	}
	return o.UseIdentity, true
}

// HasUseIdentity returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasUseIdentity() bool {
	if o != nil && !IsNil(o.UseIdentity) {
		return true
	}

	return false
}

// SetUseIdentity gets a reference to the given bool and assigns it to the UseIdentity field.
func (o *Vdiscoverytask) SetUseIdentity(v bool) {
	o.UseIdentity = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *Vdiscoverytask) SetUsername(v string) {
	o.Username = &v
}

// GetVdiscoveryControl returns the VdiscoveryControl field value if set, zero value otherwise.
func (o *Vdiscoverytask) GetVdiscoveryControl() map[string]interface{} {
	if o == nil || IsNil(o.VdiscoveryControl) {
		var ret map[string]interface{}
		return ret
	}
	return o.VdiscoveryControl
}

// GetVdiscoveryControlOk returns a tuple with the VdiscoveryControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vdiscoverytask) GetVdiscoveryControlOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.VdiscoveryControl) {
		return map[string]interface{}{}, false
	}
	return o.VdiscoveryControl, true
}

// HasVdiscoveryControl returns a boolean if a field has been set.
func (o *Vdiscoverytask) HasVdiscoveryControl() bool {
	if o != nil && !IsNil(o.VdiscoveryControl) {
		return true
	}

	return false
}

// SetVdiscoveryControl gets a reference to the given map[string]interface{} and assigns it to the VdiscoveryControl field.
func (o *Vdiscoverytask) SetVdiscoveryControl(v map[string]interface{}) {
	o.VdiscoveryControl = v
}

func (o Vdiscoverytask) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Vdiscoverytask) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.AllowUnsecuredConnection) {
		toSerialize["allow_unsecured_connection"] = o.AllowUnsecuredConnection
	}
	if !IsNil(o.AutoConsolidateCloudEa) {
		toSerialize["auto_consolidate_cloud_ea"] = o.AutoConsolidateCloudEa
	}
	if !IsNil(o.AutoConsolidateManagedTenant) {
		toSerialize["auto_consolidate_managed_tenant"] = o.AutoConsolidateManagedTenant
	}
	if !IsNil(o.AutoConsolidateManagedVm) {
		toSerialize["auto_consolidate_managed_vm"] = o.AutoConsolidateManagedVm
	}
	if !IsNil(o.AutoCreateDnsHostnameTemplate) {
		toSerialize["auto_create_dns_hostname_template"] = o.AutoCreateDnsHostnameTemplate
	}
	if !IsNil(o.AutoCreateDnsRecord) {
		toSerialize["auto_create_dns_record"] = o.AutoCreateDnsRecord
	}
	if !IsNil(o.AutoCreateDnsRecordType) {
		toSerialize["auto_create_dns_record_type"] = o.AutoCreateDnsRecordType
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.CredentialsType) {
		toSerialize["credentials_type"] = o.CredentialsType
	}
	if !IsNil(o.DnsViewPrivateIp) {
		toSerialize["dns_view_private_ip"] = o.DnsViewPrivateIp
	}
	if !IsNil(o.DnsViewPublicIp) {
		toSerialize["dns_view_public_ip"] = o.DnsViewPublicIp
	}
	if !IsNil(o.DomainName) {
		toSerialize["domain_name"] = o.DomainName
	}
	if !IsNil(o.DriverType) {
		toSerialize["driver_type"] = o.DriverType
	}
	if !IsNil(o.EnableFilter) {
		toSerialize["enable_filter"] = o.EnableFilter
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.FqdnOrIp) {
		toSerialize["fqdn_or_ip"] = o.FqdnOrIp
	}
	if !IsNil(o.IdentityVersion) {
		toSerialize["identity_version"] = o.IdentityVersion
	}
	if !IsNil(o.LastRun) {
		toSerialize["last_run"] = o.LastRun
	}
	if !IsNil(o.Member) {
		toSerialize["member"] = o.Member
	}
	if !IsNil(o.MergeData) {
		toSerialize["merge_data"] = o.MergeData
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NetworkFilter) {
		toSerialize["network_filter"] = o.NetworkFilter
	}
	if !IsNil(o.NetworkList) {
		toSerialize["network_list"] = o.NetworkList
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.PrivateNetworkView) {
		toSerialize["private_network_view"] = o.PrivateNetworkView
	}
	if !IsNil(o.PrivateNetworkViewMappingPolicy) {
		toSerialize["private_network_view_mapping_policy"] = o.PrivateNetworkViewMappingPolicy
	}
	if !IsNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	if !IsNil(o.PublicNetworkView) {
		toSerialize["public_network_view"] = o.PublicNetworkView
	}
	if !IsNil(o.PublicNetworkViewMappingPolicy) {
		toSerialize["public_network_view_mapping_policy"] = o.PublicNetworkViewMappingPolicy
	}
	if !IsNil(o.ScheduledRun) {
		toSerialize["scheduled_run"] = o.ScheduledRun
	}
	if !IsNil(o.ServiceAccountFile) {
		toSerialize["service_account_file"] = o.ServiceAccountFile
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.StateMsg) {
		toSerialize["state_msg"] = o.StateMsg
	}
	if !IsNil(o.UpdateDnsViewPrivateIp) {
		toSerialize["update_dns_view_private_ip"] = o.UpdateDnsViewPrivateIp
	}
	if !IsNil(o.UpdateDnsViewPublicIp) {
		toSerialize["update_dns_view_public_ip"] = o.UpdateDnsViewPublicIp
	}
	if !IsNil(o.UpdateMetadata) {
		toSerialize["update_metadata"] = o.UpdateMetadata
	}
	if !IsNil(o.UseIdentity) {
		toSerialize["use_identity"] = o.UseIdentity
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.VdiscoveryControl) {
		toSerialize["vdiscovery_control"] = o.VdiscoveryControl
	}
	return toSerialize, nil
}

type NullableVdiscoverytask struct {
	value *Vdiscoverytask
	isSet bool
}

func (v NullableVdiscoverytask) Get() *Vdiscoverytask {
	return v.value
}

func (v *NullableVdiscoverytask) Set(val *Vdiscoverytask) {
	v.value = val
	v.isSet = true
}

func (v NullableVdiscoverytask) IsSet() bool {
	return v.isSet
}

func (v *NullableVdiscoverytask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVdiscoverytask(val *Vdiscoverytask) *NullableVdiscoverytask {
	return &NullableVdiscoverytask{value: val, isSet: true}
}

func (v NullableVdiscoverytask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVdiscoverytask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
