/*
Infoblox DNS API

OpenAPI specification for Infoblox NIOS WAPI DNS objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dns

import (
	"encoding/json"
)

// checks if the CreateRecordNsec3ResponseAsObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateRecordNsec3ResponseAsObject{}

// CreateRecordNsec3ResponseAsObject The response format to create __RecordNsec3__ in object format.
type CreateRecordNsec3ResponseAsObject struct {
	Result               *RecordNsec3 `json:"result,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateRecordNsec3ResponseAsObject CreateRecordNsec3ResponseAsObject

// NewCreateRecordNsec3ResponseAsObject instantiates a new CreateRecordNsec3ResponseAsObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRecordNsec3ResponseAsObject() *CreateRecordNsec3ResponseAsObject {
	this := CreateRecordNsec3ResponseAsObject{}
	return &this
}

// NewCreateRecordNsec3ResponseAsObjectWithDefaults instantiates a new CreateRecordNsec3ResponseAsObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRecordNsec3ResponseAsObjectWithDefaults() *CreateRecordNsec3ResponseAsObject {
	this := CreateRecordNsec3ResponseAsObject{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *CreateRecordNsec3ResponseAsObject) GetResult() RecordNsec3 {
	if o == nil || IsNil(o.Result) {
		var ret RecordNsec3
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecordNsec3ResponseAsObject) GetResultOk() (*RecordNsec3, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *CreateRecordNsec3ResponseAsObject) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given RecordNsec3 and assigns it to the Result field.
func (o *CreateRecordNsec3ResponseAsObject) SetResult(v RecordNsec3) {
	o.Result = &v
}

func (o CreateRecordNsec3ResponseAsObject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateRecordNsec3ResponseAsObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateRecordNsec3ResponseAsObject) UnmarshalJSON(data []byte) (err error) {
	varCreateRecordNsec3ResponseAsObject := _CreateRecordNsec3ResponseAsObject{}

	err = json.Unmarshal(data, &varCreateRecordNsec3ResponseAsObject)

	if err != nil {
		return err
	}

	*o = CreateRecordNsec3ResponseAsObject(varCreateRecordNsec3ResponseAsObject)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "result")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateRecordNsec3ResponseAsObject struct {
	value *CreateRecordNsec3ResponseAsObject
	isSet bool
}

func (v NullableCreateRecordNsec3ResponseAsObject) Get() *CreateRecordNsec3ResponseAsObject {
	return v.value
}

func (v *NullableCreateRecordNsec3ResponseAsObject) Set(val *CreateRecordNsec3ResponseAsObject) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRecordNsec3ResponseAsObject) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRecordNsec3ResponseAsObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRecordNsec3ResponseAsObject(val *CreateRecordNsec3ResponseAsObject) *NullableCreateRecordNsec3ResponseAsObject {
	return &NullableCreateRecordNsec3ResponseAsObject{value: val, isSet: true}
}

func (v NullableCreateRecordNsec3ResponseAsObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRecordNsec3ResponseAsObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
