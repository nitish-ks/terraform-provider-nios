/*
Infoblox DNS API

OpenAPI specification for Infoblox NIOS WAPI DNS objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dns

import (
	"encoding/json"
)

// checks if the GetAllrecordsResponseObjectAsResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAllrecordsResponseObjectAsResult{}

// GetAllrecordsResponseObjectAsResult The response format to retrieve __Allrecords__ objects.
type GetAllrecordsResponseObjectAsResult struct {
	Result *Allrecords `json:"result,omitempty"`
}

// NewGetAllrecordsResponseObjectAsResult instantiates a new GetAllrecordsResponseObjectAsResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAllrecordsResponseObjectAsResult() *GetAllrecordsResponseObjectAsResult {
	this := GetAllrecordsResponseObjectAsResult{}
	return &this
}

// NewGetAllrecordsResponseObjectAsResultWithDefaults instantiates a new GetAllrecordsResponseObjectAsResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAllrecordsResponseObjectAsResultWithDefaults() *GetAllrecordsResponseObjectAsResult {
	this := GetAllrecordsResponseObjectAsResult{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *GetAllrecordsResponseObjectAsResult) GetResult() Allrecords {
	if o == nil || IsNil(o.Result) {
		var ret Allrecords
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAllrecordsResponseObjectAsResult) GetResultOk() (*Allrecords, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *GetAllrecordsResponseObjectAsResult) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given Allrecords and assigns it to the Result field.
func (o *GetAllrecordsResponseObjectAsResult) SetResult(v Allrecords) {
	o.Result = &v
}

func (o GetAllrecordsResponseObjectAsResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAllrecordsResponseObjectAsResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	return toSerialize, nil
}

type NullableGetAllrecordsResponseObjectAsResult struct {
	value *GetAllrecordsResponseObjectAsResult
	isSet bool
}

func (v NullableGetAllrecordsResponseObjectAsResult) Get() *GetAllrecordsResponseObjectAsResult {
	return v.value
}

func (v *NullableGetAllrecordsResponseObjectAsResult) Set(val *GetAllrecordsResponseObjectAsResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAllrecordsResponseObjectAsResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAllrecordsResponseObjectAsResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAllrecordsResponseObjectAsResult(val *GetAllrecordsResponseObjectAsResult) *NullableGetAllrecordsResponseObjectAsResult {
	return &NullableGetAllrecordsResponseObjectAsResult{value: val, isSet: true}
}

func (v NullableGetAllrecordsResponseObjectAsResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAllrecordsResponseObjectAsResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
