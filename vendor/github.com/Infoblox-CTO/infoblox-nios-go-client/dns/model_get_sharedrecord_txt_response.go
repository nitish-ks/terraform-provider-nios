/*
Infoblox DNS API

OpenAPI specification for Infoblox NIOS WAPI DNS objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dns

import (
	"encoding/json"
	"fmt"
)

// GetSharedrecordTxtResponse - struct for GetSharedrecordTxtResponse
type GetSharedrecordTxtResponse struct {
	GetSharedrecordTxtResponseObjectAsResult *GetSharedrecordTxtResponseObjectAsResult
	SharedrecordTxt                          *SharedrecordTxt
}

// GetSharedrecordTxtResponseObjectAsResultAsGetSharedrecordTxtResponse is a convenience function that returns GetSharedrecordTxtResponseObjectAsResult wrapped in GetSharedrecordTxtResponse
func GetSharedrecordTxtResponseObjectAsResultAsGetSharedrecordTxtResponse(v *GetSharedrecordTxtResponseObjectAsResult) GetSharedrecordTxtResponse {
	return GetSharedrecordTxtResponse{
		GetSharedrecordTxtResponseObjectAsResult: v,
	}
}

// SharedrecordTxtAsGetSharedrecordTxtResponse is a convenience function that returns SharedrecordTxt wrapped in GetSharedrecordTxtResponse
func SharedrecordTxtAsGetSharedrecordTxtResponse(v *SharedrecordTxt) GetSharedrecordTxtResponse {
	return GetSharedrecordTxtResponse{
		SharedrecordTxt: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetSharedrecordTxtResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetSharedrecordTxtResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetSharedrecordTxtResponseObjectAsResult)
	if err == nil {
		jsonGetSharedrecordTxtResponseObjectAsResult, _ := json.Marshal(dst.GetSharedrecordTxtResponseObjectAsResult)
		if string(jsonGetSharedrecordTxtResponseObjectAsResult) == "{}" { // empty struct
			dst.GetSharedrecordTxtResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetSharedrecordTxtResponseObjectAsResult = nil
	}

	// try to unmarshal data into SharedrecordTxt
	err = newStrictDecoder(data).Decode(&dst.SharedrecordTxt)
	if err == nil {
		jsonSharedrecordTxt, _ := json.Marshal(dst.SharedrecordTxt)
		if string(jsonSharedrecordTxt) == "{}" { // empty struct
			dst.SharedrecordTxt = nil
		} else {
			match++
		}
	} else {
		dst.SharedrecordTxt = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetSharedrecordTxtResponseObjectAsResult = nil
		dst.SharedrecordTxt = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetSharedrecordTxtResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetSharedrecordTxtResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetSharedrecordTxtResponse) MarshalJSON() ([]byte, error) {
	if src.GetSharedrecordTxtResponseObjectAsResult != nil {
		return json.Marshal(&src.GetSharedrecordTxtResponseObjectAsResult)
	}

	if src.SharedrecordTxt != nil {
		return json.Marshal(&src.SharedrecordTxt)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetSharedrecordTxtResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GetSharedrecordTxtResponseObjectAsResult != nil {
		return obj.GetSharedrecordTxtResponseObjectAsResult
	}

	if obj.SharedrecordTxt != nil {
		return obj.SharedrecordTxt
	}

	// all schemas are nil
	return nil
}

type NullableGetSharedrecordTxtResponse struct {
	value *GetSharedrecordTxtResponse
	isSet bool
}

func (v NullableGetSharedrecordTxtResponse) Get() *GetSharedrecordTxtResponse {
	return v.value
}

func (v *NullableGetSharedrecordTxtResponse) Set(val *GetSharedrecordTxtResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSharedrecordTxtResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSharedrecordTxtResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSharedrecordTxtResponse(val *GetSharedrecordTxtResponse) *NullableGetSharedrecordTxtResponse {
	return &NullableGetSharedrecordTxtResponse{value: val, isSet: true}
}

func (v NullableGetSharedrecordTxtResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSharedrecordTxtResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
