/*
Infoblox DNS API

OpenAPI specification for Infoblox NIOS WAPI DNS objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dns

import (
	"encoding/json"
)

// checks if the ListDns64groupResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListDns64groupResponseObject{}

// ListDns64groupResponseObject The response format to retrieve __Dns64group__ objects.
type ListDns64groupResponseObject struct {
	Result               []Dns64group `json:"result,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListDns64groupResponseObject ListDns64groupResponseObject

// NewListDns64groupResponseObject instantiates a new ListDns64groupResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListDns64groupResponseObject() *ListDns64groupResponseObject {
	this := ListDns64groupResponseObject{}
	return &this
}

// NewListDns64groupResponseObjectWithDefaults instantiates a new ListDns64groupResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListDns64groupResponseObjectWithDefaults() *ListDns64groupResponseObject {
	this := ListDns64groupResponseObject{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *ListDns64groupResponseObject) GetResult() []Dns64group {
	if o == nil || IsNil(o.Result) {
		var ret []Dns64group
		return ret
	}
	return o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDns64groupResponseObject) GetResultOk() ([]Dns64group, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *ListDns64groupResponseObject) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given []Dns64group and assigns it to the Result field.
func (o *ListDns64groupResponseObject) SetResult(v []Dns64group) {
	o.Result = v
}

func (o ListDns64groupResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListDns64groupResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListDns64groupResponseObject) UnmarshalJSON(data []byte) (err error) {
	varListDns64groupResponseObject := _ListDns64groupResponseObject{}

	err = json.Unmarshal(data, &varListDns64groupResponseObject)

	if err != nil {
		return err
	}

	*o = ListDns64groupResponseObject(varListDns64groupResponseObject)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "result")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListDns64groupResponseObject struct {
	value *ListDns64groupResponseObject
	isSet bool
}

func (v NullableListDns64groupResponseObject) Get() *ListDns64groupResponseObject {
	return v.value
}

func (v *NullableListDns64groupResponseObject) Set(val *ListDns64groupResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableListDns64groupResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableListDns64groupResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListDns64groupResponseObject(val *ListDns64groupResponseObject) *NullableListDns64groupResponseObject {
	return &NullableListDns64groupResponseObject{value: val, isSet: true}
}

func (v NullableListDns64groupResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListDns64groupResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
