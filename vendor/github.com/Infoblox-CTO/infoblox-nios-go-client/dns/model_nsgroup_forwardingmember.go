/*
Infoblox DNS API

OpenAPI specification for Infoblox NIOS WAPI DNS objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dns

import (
	"encoding/json"
)

// checks if the NsgroupForwardingmember type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NsgroupForwardingmember{}

// NsgroupForwardingmember struct for NsgroupForwardingmember
type NsgroupForwardingmember struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// Comment for the Forwarding Member Name Server Group; maximum 256 characters.
	Comment *string `json:"comment,omitempty"`
	// Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.
	Extattrs *map[string]ExtAttrs `json:"extattrs,omitempty"`
	// The list of forwarding member servers.
	ForwardingServers []NsgroupForwardingmemberForwardingServers `json:"forwarding_servers,omitempty"`
	// The name of the Forwarding Member Name Server Group.
	Name *string `json:"name,omitempty"`
}

// NewNsgroupForwardingmember instantiates a new NsgroupForwardingmember object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNsgroupForwardingmember() *NsgroupForwardingmember {
	this := NsgroupForwardingmember{}
	return &this
}

// NewNsgroupForwardingmemberWithDefaults instantiates a new NsgroupForwardingmember object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNsgroupForwardingmemberWithDefaults() *NsgroupForwardingmember {
	this := NsgroupForwardingmember{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *NsgroupForwardingmember) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NsgroupForwardingmember) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *NsgroupForwardingmember) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *NsgroupForwardingmember) SetRef(v string) {
	o.Ref = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *NsgroupForwardingmember) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NsgroupForwardingmember) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *NsgroupForwardingmember) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *NsgroupForwardingmember) SetComment(v string) {
	o.Comment = &v
}

// GetExtattrs returns the Extattrs field value if set, zero value otherwise.
func (o *NsgroupForwardingmember) GetExtattrs() map[string]ExtAttrs {
	if o == nil || IsNil(o.Extattrs) {
		var ret map[string]ExtAttrs
		return ret
	}
	return *o.Extattrs
}

// GetExtattrsOk returns a tuple with the Extattrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NsgroupForwardingmember) GetExtattrsOk() (*map[string]ExtAttrs, bool) {
	if o == nil || IsNil(o.Extattrs) {
		return nil, false
	}
	return o.Extattrs, true
}

// HasExtattrs returns a boolean if a field has been set.
func (o *NsgroupForwardingmember) HasExtattrs() bool {
	if o != nil && !IsNil(o.Extattrs) {
		return true
	}

	return false
}

// SetExtattrs gets a reference to the given map[string]ExtAttrs and assigns it to the Extattrs field.
func (o *NsgroupForwardingmember) SetExtattrs(v map[string]ExtAttrs) {
	o.Extattrs = &v
}

// GetForwardingServers returns the ForwardingServers field value if set, zero value otherwise.
func (o *NsgroupForwardingmember) GetForwardingServers() []NsgroupForwardingmemberForwardingServers {
	if o == nil || IsNil(o.ForwardingServers) {
		var ret []NsgroupForwardingmemberForwardingServers
		return ret
	}
	return o.ForwardingServers
}

// GetForwardingServersOk returns a tuple with the ForwardingServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NsgroupForwardingmember) GetForwardingServersOk() ([]NsgroupForwardingmemberForwardingServers, bool) {
	if o == nil || IsNil(o.ForwardingServers) {
		return nil, false
	}
	return o.ForwardingServers, true
}

// HasForwardingServers returns a boolean if a field has been set.
func (o *NsgroupForwardingmember) HasForwardingServers() bool {
	if o != nil && !IsNil(o.ForwardingServers) {
		return true
	}

	return false
}

// SetForwardingServers gets a reference to the given []NsgroupForwardingmemberForwardingServers and assigns it to the ForwardingServers field.
func (o *NsgroupForwardingmember) SetForwardingServers(v []NsgroupForwardingmemberForwardingServers) {
	o.ForwardingServers = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NsgroupForwardingmember) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NsgroupForwardingmember) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *NsgroupForwardingmember) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *NsgroupForwardingmember) SetName(v string) {
	o.Name = &v
}

func (o NsgroupForwardingmember) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NsgroupForwardingmember) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.Extattrs) {
		toSerialize["extattrs"] = o.Extattrs
	}
	if !IsNil(o.ForwardingServers) {
		toSerialize["forwarding_servers"] = o.ForwardingServers
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableNsgroupForwardingmember struct {
	value *NsgroupForwardingmember
	isSet bool
}

func (v NullableNsgroupForwardingmember) Get() *NsgroupForwardingmember {
	return v.value
}

func (v *NullableNsgroupForwardingmember) Set(val *NsgroupForwardingmember) {
	v.value = val
	v.isSet = true
}

func (v NullableNsgroupForwardingmember) IsSet() bool {
	return v.isSet
}

func (v *NullableNsgroupForwardingmember) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNsgroupForwardingmember(val *NsgroupForwardingmember) *NullableNsgroupForwardingmember {
	return &NullableNsgroupForwardingmember{value: val, isSet: true}
}

func (v NullableNsgroupForwardingmember) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNsgroupForwardingmember) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
