/*
Infoblox DNS API

OpenAPI specification for Infoblox NIOS WAPI DNS objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dns

import (
	"encoding/json"
)

// checks if the Orderedresponsepolicyzones type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Orderedresponsepolicyzones{}

// Orderedresponsepolicyzones struct for Orderedresponsepolicyzones
type Orderedresponsepolicyzones struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// An ordered list of Response Policy Zone names.
	RpZones []string `json:"rp_zones,omitempty"`
	// The DNS View name.
	View *string `json:"view,omitempty"`
}

// NewOrderedresponsepolicyzones instantiates a new Orderedresponsepolicyzones object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderedresponsepolicyzones() *Orderedresponsepolicyzones {
	this := Orderedresponsepolicyzones{}
	return &this
}

// NewOrderedresponsepolicyzonesWithDefaults instantiates a new Orderedresponsepolicyzones object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderedresponsepolicyzonesWithDefaults() *Orderedresponsepolicyzones {
	this := Orderedresponsepolicyzones{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *Orderedresponsepolicyzones) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Orderedresponsepolicyzones) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *Orderedresponsepolicyzones) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *Orderedresponsepolicyzones) SetRef(v string) {
	o.Ref = &v
}

// GetRpZones returns the RpZones field value if set, zero value otherwise.
func (o *Orderedresponsepolicyzones) GetRpZones() []string {
	if o == nil || IsNil(o.RpZones) {
		var ret []string
		return ret
	}
	return o.RpZones
}

// GetRpZonesOk returns a tuple with the RpZones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Orderedresponsepolicyzones) GetRpZonesOk() ([]string, bool) {
	if o == nil || IsNil(o.RpZones) {
		return nil, false
	}
	return o.RpZones, true
}

// HasRpZones returns a boolean if a field has been set.
func (o *Orderedresponsepolicyzones) HasRpZones() bool {
	if o != nil && !IsNil(o.RpZones) {
		return true
	}

	return false
}

// SetRpZones gets a reference to the given []string and assigns it to the RpZones field.
func (o *Orderedresponsepolicyzones) SetRpZones(v []string) {
	o.RpZones = v
}

// GetView returns the View field value if set, zero value otherwise.
func (o *Orderedresponsepolicyzones) GetView() string {
	if o == nil || IsNil(o.View) {
		var ret string
		return ret
	}
	return *o.View
}

// GetViewOk returns a tuple with the View field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Orderedresponsepolicyzones) GetViewOk() (*string, bool) {
	if o == nil || IsNil(o.View) {
		return nil, false
	}
	return o.View, true
}

// HasView returns a boolean if a field has been set.
func (o *Orderedresponsepolicyzones) HasView() bool {
	if o != nil && !IsNil(o.View) {
		return true
	}

	return false
}

// SetView gets a reference to the given string and assigns it to the View field.
func (o *Orderedresponsepolicyzones) SetView(v string) {
	o.View = &v
}

func (o Orderedresponsepolicyzones) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Orderedresponsepolicyzones) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.RpZones) {
		toSerialize["rp_zones"] = o.RpZones
	}
	if !IsNil(o.View) {
		toSerialize["view"] = o.View
	}
	return toSerialize, nil
}

type NullableOrderedresponsepolicyzones struct {
	value *Orderedresponsepolicyzones
	isSet bool
}

func (v NullableOrderedresponsepolicyzones) Get() *Orderedresponsepolicyzones {
	return v.value
}

func (v *NullableOrderedresponsepolicyzones) Set(val *Orderedresponsepolicyzones) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderedresponsepolicyzones) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderedresponsepolicyzones) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderedresponsepolicyzones(val *Orderedresponsepolicyzones) *NullableOrderedresponsepolicyzones {
	return &NullableOrderedresponsepolicyzones{value: val, isSet: true}
}

func (v NullableOrderedresponsepolicyzones) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderedresponsepolicyzones) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
