/*
Infoblox DNS API

OpenAPI specification for Infoblox NIOS WAPI DNS objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dns

import (
	"encoding/json"
)

// checks if the UpdateRecordHostIpv6addrResponseAsObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateRecordHostIpv6addrResponseAsObject{}

// UpdateRecordHostIpv6addrResponseAsObject The response format to update __RecordHostIpv6addr__ in object format.
type UpdateRecordHostIpv6addrResponseAsObject struct {
	Result               *RecordHostIpv6addr `json:"result,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateRecordHostIpv6addrResponseAsObject UpdateRecordHostIpv6addrResponseAsObject

// NewUpdateRecordHostIpv6addrResponseAsObject instantiates a new UpdateRecordHostIpv6addrResponseAsObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateRecordHostIpv6addrResponseAsObject() *UpdateRecordHostIpv6addrResponseAsObject {
	this := UpdateRecordHostIpv6addrResponseAsObject{}
	return &this
}

// NewUpdateRecordHostIpv6addrResponseAsObjectWithDefaults instantiates a new UpdateRecordHostIpv6addrResponseAsObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateRecordHostIpv6addrResponseAsObjectWithDefaults() *UpdateRecordHostIpv6addrResponseAsObject {
	this := UpdateRecordHostIpv6addrResponseAsObject{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *UpdateRecordHostIpv6addrResponseAsObject) GetResult() RecordHostIpv6addr {
	if o == nil || IsNil(o.Result) {
		var ret RecordHostIpv6addr
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRecordHostIpv6addrResponseAsObject) GetResultOk() (*RecordHostIpv6addr, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *UpdateRecordHostIpv6addrResponseAsObject) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given RecordHostIpv6addr and assigns it to the Result field.
func (o *UpdateRecordHostIpv6addrResponseAsObject) SetResult(v RecordHostIpv6addr) {
	o.Result = &v
}

func (o UpdateRecordHostIpv6addrResponseAsObject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateRecordHostIpv6addrResponseAsObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateRecordHostIpv6addrResponseAsObject) UnmarshalJSON(data []byte) (err error) {
	varUpdateRecordHostIpv6addrResponseAsObject := _UpdateRecordHostIpv6addrResponseAsObject{}

	err = json.Unmarshal(data, &varUpdateRecordHostIpv6addrResponseAsObject)

	if err != nil {
		return err
	}

	*o = UpdateRecordHostIpv6addrResponseAsObject(varUpdateRecordHostIpv6addrResponseAsObject)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "result")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateRecordHostIpv6addrResponseAsObject struct {
	value *UpdateRecordHostIpv6addrResponseAsObject
	isSet bool
}

func (v NullableUpdateRecordHostIpv6addrResponseAsObject) Get() *UpdateRecordHostIpv6addrResponseAsObject {
	return v.value
}

func (v *NullableUpdateRecordHostIpv6addrResponseAsObject) Set(val *UpdateRecordHostIpv6addrResponseAsObject) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateRecordHostIpv6addrResponseAsObject) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateRecordHostIpv6addrResponseAsObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateRecordHostIpv6addrResponseAsObject(val *UpdateRecordHostIpv6addrResponseAsObject) *NullableUpdateRecordHostIpv6addrResponseAsObject {
	return &NullableUpdateRecordHostIpv6addrResponseAsObject{value: val, isSet: true}
}

func (v NullableUpdateRecordHostIpv6addrResponseAsObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateRecordHostIpv6addrResponseAsObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
