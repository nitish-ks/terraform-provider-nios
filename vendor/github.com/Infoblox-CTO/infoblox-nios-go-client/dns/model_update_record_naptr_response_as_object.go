/*
Infoblox DNS API

OpenAPI specification for Infoblox NIOS WAPI DNS objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dns

import (
	"encoding/json"
)

// checks if the UpdateRecordNaptrResponseAsObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateRecordNaptrResponseAsObject{}

// UpdateRecordNaptrResponseAsObject The response format to update __RecordNaptr__ in object format.
type UpdateRecordNaptrResponseAsObject struct {
	Result               *RecordNaptr `json:"result,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateRecordNaptrResponseAsObject UpdateRecordNaptrResponseAsObject

// NewUpdateRecordNaptrResponseAsObject instantiates a new UpdateRecordNaptrResponseAsObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateRecordNaptrResponseAsObject() *UpdateRecordNaptrResponseAsObject {
	this := UpdateRecordNaptrResponseAsObject{}
	return &this
}

// NewUpdateRecordNaptrResponseAsObjectWithDefaults instantiates a new UpdateRecordNaptrResponseAsObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateRecordNaptrResponseAsObjectWithDefaults() *UpdateRecordNaptrResponseAsObject {
	this := UpdateRecordNaptrResponseAsObject{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *UpdateRecordNaptrResponseAsObject) GetResult() RecordNaptr {
	if o == nil || IsNil(o.Result) {
		var ret RecordNaptr
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRecordNaptrResponseAsObject) GetResultOk() (*RecordNaptr, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *UpdateRecordNaptrResponseAsObject) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given RecordNaptr and assigns it to the Result field.
func (o *UpdateRecordNaptrResponseAsObject) SetResult(v RecordNaptr) {
	o.Result = &v
}

func (o UpdateRecordNaptrResponseAsObject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateRecordNaptrResponseAsObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateRecordNaptrResponseAsObject) UnmarshalJSON(data []byte) (err error) {
	varUpdateRecordNaptrResponseAsObject := _UpdateRecordNaptrResponseAsObject{}

	err = json.Unmarshal(data, &varUpdateRecordNaptrResponseAsObject)

	if err != nil {
		return err
	}

	*o = UpdateRecordNaptrResponseAsObject(varUpdateRecordNaptrResponseAsObject)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "result")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateRecordNaptrResponseAsObject struct {
	value *UpdateRecordNaptrResponseAsObject
	isSet bool
}

func (v NullableUpdateRecordNaptrResponseAsObject) Get() *UpdateRecordNaptrResponseAsObject {
	return v.value
}

func (v *NullableUpdateRecordNaptrResponseAsObject) Set(val *UpdateRecordNaptrResponseAsObject) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateRecordNaptrResponseAsObject) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateRecordNaptrResponseAsObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateRecordNaptrResponseAsObject(val *UpdateRecordNaptrResponseAsObject) *NullableUpdateRecordNaptrResponseAsObject {
	return &NullableUpdateRecordNaptrResponseAsObject{value: val, isSet: true}
}

func (v NullableUpdateRecordNaptrResponseAsObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateRecordNaptrResponseAsObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
