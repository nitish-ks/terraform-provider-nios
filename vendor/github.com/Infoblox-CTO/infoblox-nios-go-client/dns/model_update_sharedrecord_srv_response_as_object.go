/*
Infoblox DNS API

OpenAPI specification for Infoblox NIOS WAPI DNS objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dns

import (
	"encoding/json"
)

// checks if the UpdateSharedrecordSrvResponseAsObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateSharedrecordSrvResponseAsObject{}

// UpdateSharedrecordSrvResponseAsObject The response format to update __SharedrecordSrv__ in object format.
type UpdateSharedrecordSrvResponseAsObject struct {
	Result               *SharedrecordSrv `json:"result,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateSharedrecordSrvResponseAsObject UpdateSharedrecordSrvResponseAsObject

// NewUpdateSharedrecordSrvResponseAsObject instantiates a new UpdateSharedrecordSrvResponseAsObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateSharedrecordSrvResponseAsObject() *UpdateSharedrecordSrvResponseAsObject {
	this := UpdateSharedrecordSrvResponseAsObject{}
	return &this
}

// NewUpdateSharedrecordSrvResponseAsObjectWithDefaults instantiates a new UpdateSharedrecordSrvResponseAsObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateSharedrecordSrvResponseAsObjectWithDefaults() *UpdateSharedrecordSrvResponseAsObject {
	this := UpdateSharedrecordSrvResponseAsObject{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *UpdateSharedrecordSrvResponseAsObject) GetResult() SharedrecordSrv {
	if o == nil || IsNil(o.Result) {
		var ret SharedrecordSrv
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSharedrecordSrvResponseAsObject) GetResultOk() (*SharedrecordSrv, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *UpdateSharedrecordSrvResponseAsObject) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given SharedrecordSrv and assigns it to the Result field.
func (o *UpdateSharedrecordSrvResponseAsObject) SetResult(v SharedrecordSrv) {
	o.Result = &v
}

func (o UpdateSharedrecordSrvResponseAsObject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateSharedrecordSrvResponseAsObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateSharedrecordSrvResponseAsObject) UnmarshalJSON(data []byte) (err error) {
	varUpdateSharedrecordSrvResponseAsObject := _UpdateSharedrecordSrvResponseAsObject{}

	err = json.Unmarshal(data, &varUpdateSharedrecordSrvResponseAsObject)

	if err != nil {
		return err
	}

	*o = UpdateSharedrecordSrvResponseAsObject(varUpdateSharedrecordSrvResponseAsObject)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "result")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateSharedrecordSrvResponseAsObject struct {
	value *UpdateSharedrecordSrvResponseAsObject
	isSet bool
}

func (v NullableUpdateSharedrecordSrvResponseAsObject) Get() *UpdateSharedrecordSrvResponseAsObject {
	return v.value
}

func (v *NullableUpdateSharedrecordSrvResponseAsObject) Set(val *UpdateSharedrecordSrvResponseAsObject) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateSharedrecordSrvResponseAsObject) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateSharedrecordSrvResponseAsObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateSharedrecordSrvResponseAsObject(val *UpdateSharedrecordSrvResponseAsObject) *NullableUpdateSharedrecordSrvResponseAsObject {
	return &NullableUpdateSharedrecordSrvResponseAsObject{value: val, isSet: true}
}

func (v NullableUpdateSharedrecordSrvResponseAsObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateSharedrecordSrvResponseAsObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
