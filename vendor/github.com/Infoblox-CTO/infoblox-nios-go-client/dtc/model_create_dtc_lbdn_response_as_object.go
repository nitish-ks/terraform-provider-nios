/*
Infoblox DTC API

OpenAPI specification for Infoblox NIOS WAPI DTC objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dtc

import (
	"encoding/json"
)

// checks if the CreateDtcLbdnResponseAsObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateDtcLbdnResponseAsObject{}

// CreateDtcLbdnResponseAsObject The response format to create __DtcLbdn__ in object format.
type CreateDtcLbdnResponseAsObject struct {
	Result               *DtcLbdn `json:"result,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateDtcLbdnResponseAsObject CreateDtcLbdnResponseAsObject

// NewCreateDtcLbdnResponseAsObject instantiates a new CreateDtcLbdnResponseAsObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDtcLbdnResponseAsObject() *CreateDtcLbdnResponseAsObject {
	this := CreateDtcLbdnResponseAsObject{}
	return &this
}

// NewCreateDtcLbdnResponseAsObjectWithDefaults instantiates a new CreateDtcLbdnResponseAsObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDtcLbdnResponseAsObjectWithDefaults() *CreateDtcLbdnResponseAsObject {
	this := CreateDtcLbdnResponseAsObject{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *CreateDtcLbdnResponseAsObject) GetResult() DtcLbdn {
	if o == nil || IsNil(o.Result) {
		var ret DtcLbdn
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDtcLbdnResponseAsObject) GetResultOk() (*DtcLbdn, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *CreateDtcLbdnResponseAsObject) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given DtcLbdn and assigns it to the Result field.
func (o *CreateDtcLbdnResponseAsObject) SetResult(v DtcLbdn) {
	o.Result = &v
}

func (o CreateDtcLbdnResponseAsObject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateDtcLbdnResponseAsObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateDtcLbdnResponseAsObject) UnmarshalJSON(data []byte) (err error) {
	varCreateDtcLbdnResponseAsObject := _CreateDtcLbdnResponseAsObject{}

	err = json.Unmarshal(data, &varCreateDtcLbdnResponseAsObject)

	if err != nil {
		return err
	}

	*o = CreateDtcLbdnResponseAsObject(varCreateDtcLbdnResponseAsObject)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "result")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateDtcLbdnResponseAsObject struct {
	value *CreateDtcLbdnResponseAsObject
	isSet bool
}

func (v NullableCreateDtcLbdnResponseAsObject) Get() *CreateDtcLbdnResponseAsObject {
	return v.value
}

func (v *NullableCreateDtcLbdnResponseAsObject) Set(val *CreateDtcLbdnResponseAsObject) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDtcLbdnResponseAsObject) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDtcLbdnResponseAsObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDtcLbdnResponseAsObject(val *CreateDtcLbdnResponseAsObject) *NullableCreateDtcLbdnResponseAsObject {
	return &NullableCreateDtcLbdnResponseAsObject{value: val, isSet: true}
}

func (v NullableCreateDtcLbdnResponseAsObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDtcLbdnResponseAsObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
