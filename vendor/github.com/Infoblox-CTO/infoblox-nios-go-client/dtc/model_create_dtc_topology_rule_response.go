/*
Infoblox DTC API

OpenAPI specification for Infoblox NIOS WAPI DTC objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dtc

import (
	"encoding/json"
	"fmt"
)

// CreateDtcTopologyRuleResponse - struct for CreateDtcTopologyRuleResponse
type CreateDtcTopologyRuleResponse struct {
	CreateDtcTopologyRuleResponseAsObject *CreateDtcTopologyRuleResponseAsObject
	String                                *string
}

// CreateDtcTopologyRuleResponseAsObjectAsCreateDtcTopologyRuleResponse is a convenience function that returns CreateDtcTopologyRuleResponseAsObject wrapped in CreateDtcTopologyRuleResponse
func CreateDtcTopologyRuleResponseAsObjectAsCreateDtcTopologyRuleResponse(v *CreateDtcTopologyRuleResponseAsObject) CreateDtcTopologyRuleResponse {
	return CreateDtcTopologyRuleResponse{
		CreateDtcTopologyRuleResponseAsObject: v,
	}
}

// stringAsCreateDtcTopologyRuleResponse is a convenience function that returns string wrapped in CreateDtcTopologyRuleResponse
func StringAsCreateDtcTopologyRuleResponse(v *string) CreateDtcTopologyRuleResponse {
	return CreateDtcTopologyRuleResponse{
		String: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *CreateDtcTopologyRuleResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into CreateDtcTopologyRuleResponseAsObject
	err = newStrictDecoder(data).Decode(&dst.CreateDtcTopologyRuleResponseAsObject)
	if err == nil {
		jsonCreateDtcTopologyRuleResponseAsObject, _ := json.Marshal(dst.CreateDtcTopologyRuleResponseAsObject)
		if string(jsonCreateDtcTopologyRuleResponseAsObject) == "{}" { // empty struct
			dst.CreateDtcTopologyRuleResponseAsObject = nil
		} else {
			match++
		}
	} else {
		dst.CreateDtcTopologyRuleResponseAsObject = nil
	}

	// try to unmarshal data into String
	err = newStrictDecoder(data).Decode(&dst.String)
	if err == nil {
		jsonString, _ := json.Marshal(dst.String)
		if string(jsonString) == "{}" { // empty struct
			dst.String = nil
		} else {
			match++
		}
	} else {
		dst.String = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.CreateDtcTopologyRuleResponseAsObject = nil
		dst.String = nil

		return fmt.Errorf("data matches more than one schema in oneOf(CreateDtcTopologyRuleResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(CreateDtcTopologyRuleResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CreateDtcTopologyRuleResponse) MarshalJSON() ([]byte, error) {
	if src.CreateDtcTopologyRuleResponseAsObject != nil {
		return json.Marshal(&src.CreateDtcTopologyRuleResponseAsObject)
	}

	if src.String != nil {
		return json.Marshal(&src.String)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *CreateDtcTopologyRuleResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.CreateDtcTopologyRuleResponseAsObject != nil {
		return obj.CreateDtcTopologyRuleResponseAsObject
	}

	if obj.String != nil {
		return obj.String
	}

	// all schemas are nil
	return nil
}

type NullableCreateDtcTopologyRuleResponse struct {
	value *CreateDtcTopologyRuleResponse
	isSet bool
}

func (v NullableCreateDtcTopologyRuleResponse) Get() *CreateDtcTopologyRuleResponse {
	return v.value
}

func (v *NullableCreateDtcTopologyRuleResponse) Set(val *CreateDtcTopologyRuleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDtcTopologyRuleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDtcTopologyRuleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDtcTopologyRuleResponse(val *CreateDtcTopologyRuleResponse) *NullableCreateDtcTopologyRuleResponse {
	return &NullableCreateDtcTopologyRuleResponse{value: val, isSet: true}
}

func (v NullableCreateDtcTopologyRuleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDtcTopologyRuleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
