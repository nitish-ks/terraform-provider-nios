/*
Infoblox DTC API

OpenAPI specification for Infoblox NIOS WAPI DTC objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dtc

import (
	"encoding/json"
)

// checks if the DtcMonitorHttp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtcMonitorHttp{}

// DtcMonitorHttp struct for DtcMonitorHttp
type DtcMonitorHttp struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// An optional cipher list for a secure HTTP/S connection.
	Ciphers *string `json:"ciphers,omitempty"`
	// An optional client certificate, supplied in a secure HTTP/S mode if present.
	ClientCert *string `json:"client_cert,omitempty"`
	// Comment for this DTC monitor; maximum 256 characters.
	Comment *string `json:"comment,omitempty"`
	// The content check type.
	ContentCheck *string `json:"content_check,omitempty"`
	// A portion of response to use as input for content check.
	ContentCheckInput *string `json:"content_check_input,omitempty"`
	// A content check success criteria operator.
	ContentCheckOp *string `json:"content_check_op,omitempty"`
	// A content check regular expression.
	ContentCheckRegex *string `json:"content_check_regex,omitempty"`
	// A content extraction sub-expression to extract.
	ContentExtractGroup *int64 `json:"content_extract_group,omitempty"`
	// A content extraction expected type for the extracted data.
	ContentExtractType *string `json:"content_extract_type,omitempty"`
	// A content extraction value to compare with extracted result.
	ContentExtractValue *string `json:"content_extract_value,omitempty"`
	// Determines whether the Server Name Indication (SNI) for HTTPS monitor is enabled.
	EnableSni *bool `json:"enable_sni,omitempty"`
	// Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.
	Extattrs *map[string]ExtAttrs `json:"extattrs,omitempty"`
	// The interval for TCP health check.
	Interval *int64 `json:"interval,omitempty"`
	// The display name for this DTC monitor.
	Name *string `json:"name,omitempty"`
	// Port for TCP requests.
	Port *int64 `json:"port,omitempty"`
	// An HTTP request to send.
	Request *string `json:"request,omitempty"`
	// The type of an expected result.
	Result *string `json:"result,omitempty"`
	// The expected return code.
	ResultCode *int64 `json:"result_code,omitempty"`
	// The value of how many times the server should appear as down to be treated as dead after it was alive.
	RetryDown *int64 `json:"retry_down,omitempty"`
	// The value of how many times the server should appear as up to be treated as alive after it was dead.
	RetryUp *int64 `json:"retry_up,omitempty"`
	// The connection security status.
	Secure *bool `json:"secure,omitempty"`
	// The timeout for TCP health check in seconds.
	Timeout *int64 `json:"timeout,omitempty"`
	// Determines whether the validation of the remote server's certificate is enabled.
	ValidateCert *bool `json:"validate_cert,omitempty"`
}

// NewDtcMonitorHttp instantiates a new DtcMonitorHttp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtcMonitorHttp() *DtcMonitorHttp {
	this := DtcMonitorHttp{}
	return &this
}

// NewDtcMonitorHttpWithDefaults instantiates a new DtcMonitorHttp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtcMonitorHttpWithDefaults() *DtcMonitorHttp {
	this := DtcMonitorHttp{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *DtcMonitorHttp) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtcMonitorHttp) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *DtcMonitorHttp) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *DtcMonitorHttp) SetRef(v string) {
	o.Ref = &v
}

// GetCiphers returns the Ciphers field value if set, zero value otherwise.
func (o *DtcMonitorHttp) GetCiphers() string {
	if o == nil || IsNil(o.Ciphers) {
		var ret string
		return ret
	}
	return *o.Ciphers
}

// GetCiphersOk returns a tuple with the Ciphers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtcMonitorHttp) GetCiphersOk() (*string, bool) {
	if o == nil || IsNil(o.Ciphers) {
		return nil, false
	}
	return o.Ciphers, true
}

// HasCiphers returns a boolean if a field has been set.
func (o *DtcMonitorHttp) HasCiphers() bool {
	if o != nil && !IsNil(o.Ciphers) {
		return true
	}

	return false
}

// SetCiphers gets a reference to the given string and assigns it to the Ciphers field.
func (o *DtcMonitorHttp) SetCiphers(v string) {
	o.Ciphers = &v
}

// GetClientCert returns the ClientCert field value if set, zero value otherwise.
func (o *DtcMonitorHttp) GetClientCert() string {
	if o == nil || IsNil(o.ClientCert) {
		var ret string
		return ret
	}
	return *o.ClientCert
}

// GetClientCertOk returns a tuple with the ClientCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtcMonitorHttp) GetClientCertOk() (*string, bool) {
	if o == nil || IsNil(o.ClientCert) {
		return nil, false
	}
	return o.ClientCert, true
}

// HasClientCert returns a boolean if a field has been set.
func (o *DtcMonitorHttp) HasClientCert() bool {
	if o != nil && !IsNil(o.ClientCert) {
		return true
	}

	return false
}

// SetClientCert gets a reference to the given string and assigns it to the ClientCert field.
func (o *DtcMonitorHttp) SetClientCert(v string) {
	o.ClientCert = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *DtcMonitorHttp) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtcMonitorHttp) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *DtcMonitorHttp) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *DtcMonitorHttp) SetComment(v string) {
	o.Comment = &v
}

// GetContentCheck returns the ContentCheck field value if set, zero value otherwise.
func (o *DtcMonitorHttp) GetContentCheck() string {
	if o == nil || IsNil(o.ContentCheck) {
		var ret string
		return ret
	}
	return *o.ContentCheck
}

// GetContentCheckOk returns a tuple with the ContentCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtcMonitorHttp) GetContentCheckOk() (*string, bool) {
	if o == nil || IsNil(o.ContentCheck) {
		return nil, false
	}
	return o.ContentCheck, true
}

// HasContentCheck returns a boolean if a field has been set.
func (o *DtcMonitorHttp) HasContentCheck() bool {
	if o != nil && !IsNil(o.ContentCheck) {
		return true
	}

	return false
}

// SetContentCheck gets a reference to the given string and assigns it to the ContentCheck field.
func (o *DtcMonitorHttp) SetContentCheck(v string) {
	o.ContentCheck = &v
}

// GetContentCheckInput returns the ContentCheckInput field value if set, zero value otherwise.
func (o *DtcMonitorHttp) GetContentCheckInput() string {
	if o == nil || IsNil(o.ContentCheckInput) {
		var ret string
		return ret
	}
	return *o.ContentCheckInput
}

// GetContentCheckInputOk returns a tuple with the ContentCheckInput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtcMonitorHttp) GetContentCheckInputOk() (*string, bool) {
	if o == nil || IsNil(o.ContentCheckInput) {
		return nil, false
	}
	return o.ContentCheckInput, true
}

// HasContentCheckInput returns a boolean if a field has been set.
func (o *DtcMonitorHttp) HasContentCheckInput() bool {
	if o != nil && !IsNil(o.ContentCheckInput) {
		return true
	}

	return false
}

// SetContentCheckInput gets a reference to the given string and assigns it to the ContentCheckInput field.
func (o *DtcMonitorHttp) SetContentCheckInput(v string) {
	o.ContentCheckInput = &v
}

// GetContentCheckOp returns the ContentCheckOp field value if set, zero value otherwise.
func (o *DtcMonitorHttp) GetContentCheckOp() string {
	if o == nil || IsNil(o.ContentCheckOp) {
		var ret string
		return ret
	}
	return *o.ContentCheckOp
}

// GetContentCheckOpOk returns a tuple with the ContentCheckOp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtcMonitorHttp) GetContentCheckOpOk() (*string, bool) {
	if o == nil || IsNil(o.ContentCheckOp) {
		return nil, false
	}
	return o.ContentCheckOp, true
}

// HasContentCheckOp returns a boolean if a field has been set.
func (o *DtcMonitorHttp) HasContentCheckOp() bool {
	if o != nil && !IsNil(o.ContentCheckOp) {
		return true
	}

	return false
}

// SetContentCheckOp gets a reference to the given string and assigns it to the ContentCheckOp field.
func (o *DtcMonitorHttp) SetContentCheckOp(v string) {
	o.ContentCheckOp = &v
}

// GetContentCheckRegex returns the ContentCheckRegex field value if set, zero value otherwise.
func (o *DtcMonitorHttp) GetContentCheckRegex() string {
	if o == nil || IsNil(o.ContentCheckRegex) {
		var ret string
		return ret
	}
	return *o.ContentCheckRegex
}

// GetContentCheckRegexOk returns a tuple with the ContentCheckRegex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtcMonitorHttp) GetContentCheckRegexOk() (*string, bool) {
	if o == nil || IsNil(o.ContentCheckRegex) {
		return nil, false
	}
	return o.ContentCheckRegex, true
}

// HasContentCheckRegex returns a boolean if a field has been set.
func (o *DtcMonitorHttp) HasContentCheckRegex() bool {
	if o != nil && !IsNil(o.ContentCheckRegex) {
		return true
	}

	return false
}

// SetContentCheckRegex gets a reference to the given string and assigns it to the ContentCheckRegex field.
func (o *DtcMonitorHttp) SetContentCheckRegex(v string) {
	o.ContentCheckRegex = &v
}

// GetContentExtractGroup returns the ContentExtractGroup field value if set, zero value otherwise.
func (o *DtcMonitorHttp) GetContentExtractGroup() int64 {
	if o == nil || IsNil(o.ContentExtractGroup) {
		var ret int64
		return ret
	}
	return *o.ContentExtractGroup
}

// GetContentExtractGroupOk returns a tuple with the ContentExtractGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtcMonitorHttp) GetContentExtractGroupOk() (*int64, bool) {
	if o == nil || IsNil(o.ContentExtractGroup) {
		return nil, false
	}
	return o.ContentExtractGroup, true
}

// HasContentExtractGroup returns a boolean if a field has been set.
func (o *DtcMonitorHttp) HasContentExtractGroup() bool {
	if o != nil && !IsNil(o.ContentExtractGroup) {
		return true
	}

	return false
}

// SetContentExtractGroup gets a reference to the given int64 and assigns it to the ContentExtractGroup field.
func (o *DtcMonitorHttp) SetContentExtractGroup(v int64) {
	o.ContentExtractGroup = &v
}

// GetContentExtractType returns the ContentExtractType field value if set, zero value otherwise.
func (o *DtcMonitorHttp) GetContentExtractType() string {
	if o == nil || IsNil(o.ContentExtractType) {
		var ret string
		return ret
	}
	return *o.ContentExtractType
}

// GetContentExtractTypeOk returns a tuple with the ContentExtractType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtcMonitorHttp) GetContentExtractTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ContentExtractType) {
		return nil, false
	}
	return o.ContentExtractType, true
}

// HasContentExtractType returns a boolean if a field has been set.
func (o *DtcMonitorHttp) HasContentExtractType() bool {
	if o != nil && !IsNil(o.ContentExtractType) {
		return true
	}

	return false
}

// SetContentExtractType gets a reference to the given string and assigns it to the ContentExtractType field.
func (o *DtcMonitorHttp) SetContentExtractType(v string) {
	o.ContentExtractType = &v
}

// GetContentExtractValue returns the ContentExtractValue field value if set, zero value otherwise.
func (o *DtcMonitorHttp) GetContentExtractValue() string {
	if o == nil || IsNil(o.ContentExtractValue) {
		var ret string
		return ret
	}
	return *o.ContentExtractValue
}

// GetContentExtractValueOk returns a tuple with the ContentExtractValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtcMonitorHttp) GetContentExtractValueOk() (*string, bool) {
	if o == nil || IsNil(o.ContentExtractValue) {
		return nil, false
	}
	return o.ContentExtractValue, true
}

// HasContentExtractValue returns a boolean if a field has been set.
func (o *DtcMonitorHttp) HasContentExtractValue() bool {
	if o != nil && !IsNil(o.ContentExtractValue) {
		return true
	}

	return false
}

// SetContentExtractValue gets a reference to the given string and assigns it to the ContentExtractValue field.
func (o *DtcMonitorHttp) SetContentExtractValue(v string) {
	o.ContentExtractValue = &v
}

// GetEnableSni returns the EnableSni field value if set, zero value otherwise.
func (o *DtcMonitorHttp) GetEnableSni() bool {
	if o == nil || IsNil(o.EnableSni) {
		var ret bool
		return ret
	}
	return *o.EnableSni
}

// GetEnableSniOk returns a tuple with the EnableSni field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtcMonitorHttp) GetEnableSniOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableSni) {
		return nil, false
	}
	return o.EnableSni, true
}

// HasEnableSni returns a boolean if a field has been set.
func (o *DtcMonitorHttp) HasEnableSni() bool {
	if o != nil && !IsNil(o.EnableSni) {
		return true
	}

	return false
}

// SetEnableSni gets a reference to the given bool and assigns it to the EnableSni field.
func (o *DtcMonitorHttp) SetEnableSni(v bool) {
	o.EnableSni = &v
}

// GetExtattrs returns the Extattrs field value if set, zero value otherwise.
func (o *DtcMonitorHttp) GetExtattrs() map[string]ExtAttrs {
	if o == nil || IsNil(o.Extattrs) {
		var ret map[string]ExtAttrs
		return ret
	}
	return *o.Extattrs
}

// GetExtattrsOk returns a tuple with the Extattrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtcMonitorHttp) GetExtattrsOk() (*map[string]ExtAttrs, bool) {
	if o == nil || IsNil(o.Extattrs) {
		return nil, false
	}
	return o.Extattrs, true
}

// HasExtattrs returns a boolean if a field has been set.
func (o *DtcMonitorHttp) HasExtattrs() bool {
	if o != nil && !IsNil(o.Extattrs) {
		return true
	}

	return false
}

// SetExtattrs gets a reference to the given map[string]ExtAttrs and assigns it to the Extattrs field.
func (o *DtcMonitorHttp) SetExtattrs(v map[string]ExtAttrs) {
	o.Extattrs = &v
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *DtcMonitorHttp) GetInterval() int64 {
	if o == nil || IsNil(o.Interval) {
		var ret int64
		return ret
	}
	return *o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtcMonitorHttp) GetIntervalOk() (*int64, bool) {
	if o == nil || IsNil(o.Interval) {
		return nil, false
	}
	return o.Interval, true
}

// HasInterval returns a boolean if a field has been set.
func (o *DtcMonitorHttp) HasInterval() bool {
	if o != nil && !IsNil(o.Interval) {
		return true
	}

	return false
}

// SetInterval gets a reference to the given int64 and assigns it to the Interval field.
func (o *DtcMonitorHttp) SetInterval(v int64) {
	o.Interval = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DtcMonitorHttp) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtcMonitorHttp) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DtcMonitorHttp) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DtcMonitorHttp) SetName(v string) {
	o.Name = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *DtcMonitorHttp) GetPort() int64 {
	if o == nil || IsNil(o.Port) {
		var ret int64
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtcMonitorHttp) GetPortOk() (*int64, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *DtcMonitorHttp) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int64 and assigns it to the Port field.
func (o *DtcMonitorHttp) SetPort(v int64) {
	o.Port = &v
}

// GetRequest returns the Request field value if set, zero value otherwise.
func (o *DtcMonitorHttp) GetRequest() string {
	if o == nil || IsNil(o.Request) {
		var ret string
		return ret
	}
	return *o.Request
}

// GetRequestOk returns a tuple with the Request field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtcMonitorHttp) GetRequestOk() (*string, bool) {
	if o == nil || IsNil(o.Request) {
		return nil, false
	}
	return o.Request, true
}

// HasRequest returns a boolean if a field has been set.
func (o *DtcMonitorHttp) HasRequest() bool {
	if o != nil && !IsNil(o.Request) {
		return true
	}

	return false
}

// SetRequest gets a reference to the given string and assigns it to the Request field.
func (o *DtcMonitorHttp) SetRequest(v string) {
	o.Request = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *DtcMonitorHttp) GetResult() string {
	if o == nil || IsNil(o.Result) {
		var ret string
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtcMonitorHttp) GetResultOk() (*string, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *DtcMonitorHttp) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given string and assigns it to the Result field.
func (o *DtcMonitorHttp) SetResult(v string) {
	o.Result = &v
}

// GetResultCode returns the ResultCode field value if set, zero value otherwise.
func (o *DtcMonitorHttp) GetResultCode() int64 {
	if o == nil || IsNil(o.ResultCode) {
		var ret int64
		return ret
	}
	return *o.ResultCode
}

// GetResultCodeOk returns a tuple with the ResultCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtcMonitorHttp) GetResultCodeOk() (*int64, bool) {
	if o == nil || IsNil(o.ResultCode) {
		return nil, false
	}
	return o.ResultCode, true
}

// HasResultCode returns a boolean if a field has been set.
func (o *DtcMonitorHttp) HasResultCode() bool {
	if o != nil && !IsNil(o.ResultCode) {
		return true
	}

	return false
}

// SetResultCode gets a reference to the given int64 and assigns it to the ResultCode field.
func (o *DtcMonitorHttp) SetResultCode(v int64) {
	o.ResultCode = &v
}

// GetRetryDown returns the RetryDown field value if set, zero value otherwise.
func (o *DtcMonitorHttp) GetRetryDown() int64 {
	if o == nil || IsNil(o.RetryDown) {
		var ret int64
		return ret
	}
	return *o.RetryDown
}

// GetRetryDownOk returns a tuple with the RetryDown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtcMonitorHttp) GetRetryDownOk() (*int64, bool) {
	if o == nil || IsNil(o.RetryDown) {
		return nil, false
	}
	return o.RetryDown, true
}

// HasRetryDown returns a boolean if a field has been set.
func (o *DtcMonitorHttp) HasRetryDown() bool {
	if o != nil && !IsNil(o.RetryDown) {
		return true
	}

	return false
}

// SetRetryDown gets a reference to the given int64 and assigns it to the RetryDown field.
func (o *DtcMonitorHttp) SetRetryDown(v int64) {
	o.RetryDown = &v
}

// GetRetryUp returns the RetryUp field value if set, zero value otherwise.
func (o *DtcMonitorHttp) GetRetryUp() int64 {
	if o == nil || IsNil(o.RetryUp) {
		var ret int64
		return ret
	}
	return *o.RetryUp
}

// GetRetryUpOk returns a tuple with the RetryUp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtcMonitorHttp) GetRetryUpOk() (*int64, bool) {
	if o == nil || IsNil(o.RetryUp) {
		return nil, false
	}
	return o.RetryUp, true
}

// HasRetryUp returns a boolean if a field has been set.
func (o *DtcMonitorHttp) HasRetryUp() bool {
	if o != nil && !IsNil(o.RetryUp) {
		return true
	}

	return false
}

// SetRetryUp gets a reference to the given int64 and assigns it to the RetryUp field.
func (o *DtcMonitorHttp) SetRetryUp(v int64) {
	o.RetryUp = &v
}

// GetSecure returns the Secure field value if set, zero value otherwise.
func (o *DtcMonitorHttp) GetSecure() bool {
	if o == nil || IsNil(o.Secure) {
		var ret bool
		return ret
	}
	return *o.Secure
}

// GetSecureOk returns a tuple with the Secure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtcMonitorHttp) GetSecureOk() (*bool, bool) {
	if o == nil || IsNil(o.Secure) {
		return nil, false
	}
	return o.Secure, true
}

// HasSecure returns a boolean if a field has been set.
func (o *DtcMonitorHttp) HasSecure() bool {
	if o != nil && !IsNil(o.Secure) {
		return true
	}

	return false
}

// SetSecure gets a reference to the given bool and assigns it to the Secure field.
func (o *DtcMonitorHttp) SetSecure(v bool) {
	o.Secure = &v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *DtcMonitorHttp) GetTimeout() int64 {
	if o == nil || IsNil(o.Timeout) {
		var ret int64
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtcMonitorHttp) GetTimeoutOk() (*int64, bool) {
	if o == nil || IsNil(o.Timeout) {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *DtcMonitorHttp) HasTimeout() bool {
	if o != nil && !IsNil(o.Timeout) {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given int64 and assigns it to the Timeout field.
func (o *DtcMonitorHttp) SetTimeout(v int64) {
	o.Timeout = &v
}

// GetValidateCert returns the ValidateCert field value if set, zero value otherwise.
func (o *DtcMonitorHttp) GetValidateCert() bool {
	if o == nil || IsNil(o.ValidateCert) {
		var ret bool
		return ret
	}
	return *o.ValidateCert
}

// GetValidateCertOk returns a tuple with the ValidateCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtcMonitorHttp) GetValidateCertOk() (*bool, bool) {
	if o == nil || IsNil(o.ValidateCert) {
		return nil, false
	}
	return o.ValidateCert, true
}

// HasValidateCert returns a boolean if a field has been set.
func (o *DtcMonitorHttp) HasValidateCert() bool {
	if o != nil && !IsNil(o.ValidateCert) {
		return true
	}

	return false
}

// SetValidateCert gets a reference to the given bool and assigns it to the ValidateCert field.
func (o *DtcMonitorHttp) SetValidateCert(v bool) {
	o.ValidateCert = &v
}

func (o DtcMonitorHttp) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtcMonitorHttp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.Ciphers) {
		toSerialize["ciphers"] = o.Ciphers
	}
	if !IsNil(o.ClientCert) {
		toSerialize["client_cert"] = o.ClientCert
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.ContentCheck) {
		toSerialize["content_check"] = o.ContentCheck
	}
	if !IsNil(o.ContentCheckInput) {
		toSerialize["content_check_input"] = o.ContentCheckInput
	}
	if !IsNil(o.ContentCheckOp) {
		toSerialize["content_check_op"] = o.ContentCheckOp
	}
	if !IsNil(o.ContentCheckRegex) {
		toSerialize["content_check_regex"] = o.ContentCheckRegex
	}
	if !IsNil(o.ContentExtractGroup) {
		toSerialize["content_extract_group"] = o.ContentExtractGroup
	}
	if !IsNil(o.ContentExtractType) {
		toSerialize["content_extract_type"] = o.ContentExtractType
	}
	if !IsNil(o.ContentExtractValue) {
		toSerialize["content_extract_value"] = o.ContentExtractValue
	}
	if !IsNil(o.EnableSni) {
		toSerialize["enable_sni"] = o.EnableSni
	}
	if !IsNil(o.Extattrs) {
		toSerialize["extattrs"] = o.Extattrs
	}
	if !IsNil(o.Interval) {
		toSerialize["interval"] = o.Interval
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.Request) {
		toSerialize["request"] = o.Request
	}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !IsNil(o.ResultCode) {
		toSerialize["result_code"] = o.ResultCode
	}
	if !IsNil(o.RetryDown) {
		toSerialize["retry_down"] = o.RetryDown
	}
	if !IsNil(o.RetryUp) {
		toSerialize["retry_up"] = o.RetryUp
	}
	if !IsNil(o.Secure) {
		toSerialize["secure"] = o.Secure
	}
	if !IsNil(o.Timeout) {
		toSerialize["timeout"] = o.Timeout
	}
	if !IsNil(o.ValidateCert) {
		toSerialize["validate_cert"] = o.ValidateCert
	}
	return toSerialize, nil
}

type NullableDtcMonitorHttp struct {
	value *DtcMonitorHttp
	isSet bool
}

func (v NullableDtcMonitorHttp) Get() *DtcMonitorHttp {
	return v.value
}

func (v *NullableDtcMonitorHttp) Set(val *DtcMonitorHttp) {
	v.value = val
	v.isSet = true
}

func (v NullableDtcMonitorHttp) IsSet() bool {
	return v.isSet
}

func (v *NullableDtcMonitorHttp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtcMonitorHttp(val *DtcMonitorHttp) *NullableDtcMonitorHttp {
	return &NullableDtcMonitorHttp{value: val, isSet: true}
}

func (v NullableDtcMonitorHttp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtcMonitorHttp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
