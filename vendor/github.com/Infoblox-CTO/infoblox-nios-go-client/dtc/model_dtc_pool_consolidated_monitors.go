/*
Infoblox DTC API

OpenAPI specification for Infoblox NIOS WAPI DTC objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dtc

import (
	"encoding/json"
)

// checks if the DtcPoolConsolidatedMonitors type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtcPoolConsolidatedMonitors{}

// DtcPoolConsolidatedMonitors struct for DtcPoolConsolidatedMonitors
type DtcPoolConsolidatedMonitors struct {
	// Members whose monitor statuses are shared across other members in a pool.
	Members []string `json:"members,omitempty"`
	// Monitor whose statuses are shared across other members in a pool.
	Monitor *string `json:"monitor,omitempty"`
	// Servers assigned to a pool with monitor defined are healthy if ANY or ALL members report healthy status.
	Availability *string `json:"availability,omitempty"`
	// Flag for switching health performing and sharing behavior to perform health checks on each DTC grid member that serves related LBDN(s) and send them across all DTC grid members from both selected and non-selected lists.
	FullHealthCommunication *bool `json:"full_health_communication,omitempty"`
	AdditionalProperties    map[string]interface{}
}

type _DtcPoolConsolidatedMonitors DtcPoolConsolidatedMonitors

// NewDtcPoolConsolidatedMonitors instantiates a new DtcPoolConsolidatedMonitors object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtcPoolConsolidatedMonitors() *DtcPoolConsolidatedMonitors {
	this := DtcPoolConsolidatedMonitors{}
	return &this
}

// NewDtcPoolConsolidatedMonitorsWithDefaults instantiates a new DtcPoolConsolidatedMonitors object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtcPoolConsolidatedMonitorsWithDefaults() *DtcPoolConsolidatedMonitors {
	this := DtcPoolConsolidatedMonitors{}
	return &this
}

// GetMembers returns the Members field value if set, zero value otherwise.
func (o *DtcPoolConsolidatedMonitors) GetMembers() []string {
	if o == nil || IsNil(o.Members) {
		var ret []string
		return ret
	}
	return o.Members
}

// GetMembersOk returns a tuple with the Members field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtcPoolConsolidatedMonitors) GetMembersOk() ([]string, bool) {
	if o == nil || IsNil(o.Members) {
		return nil, false
	}
	return o.Members, true
}

// HasMembers returns a boolean if a field has been set.
func (o *DtcPoolConsolidatedMonitors) HasMembers() bool {
	if o != nil && !IsNil(o.Members) {
		return true
	}

	return false
}

// SetMembers gets a reference to the given []string and assigns it to the Members field.
func (o *DtcPoolConsolidatedMonitors) SetMembers(v []string) {
	o.Members = v
}

// GetMonitor returns the Monitor field value if set, zero value otherwise.
func (o *DtcPoolConsolidatedMonitors) GetMonitor() string {
	if o == nil || IsNil(o.Monitor) {
		var ret string
		return ret
	}
	return *o.Monitor
}

// GetMonitorOk returns a tuple with the Monitor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtcPoolConsolidatedMonitors) GetMonitorOk() (*string, bool) {
	if o == nil || IsNil(o.Monitor) {
		return nil, false
	}
	return o.Monitor, true
}

// HasMonitor returns a boolean if a field has been set.
func (o *DtcPoolConsolidatedMonitors) HasMonitor() bool {
	if o != nil && !IsNil(o.Monitor) {
		return true
	}

	return false
}

// SetMonitor gets a reference to the given string and assigns it to the Monitor field.
func (o *DtcPoolConsolidatedMonitors) SetMonitor(v string) {
	o.Monitor = &v
}

// GetAvailability returns the Availability field value if set, zero value otherwise.
func (o *DtcPoolConsolidatedMonitors) GetAvailability() string {
	if o == nil || IsNil(o.Availability) {
		var ret string
		return ret
	}
	return *o.Availability
}

// GetAvailabilityOk returns a tuple with the Availability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtcPoolConsolidatedMonitors) GetAvailabilityOk() (*string, bool) {
	if o == nil || IsNil(o.Availability) {
		return nil, false
	}
	return o.Availability, true
}

// HasAvailability returns a boolean if a field has been set.
func (o *DtcPoolConsolidatedMonitors) HasAvailability() bool {
	if o != nil && !IsNil(o.Availability) {
		return true
	}

	return false
}

// SetAvailability gets a reference to the given string and assigns it to the Availability field.
func (o *DtcPoolConsolidatedMonitors) SetAvailability(v string) {
	o.Availability = &v
}

// GetFullHealthCommunication returns the FullHealthCommunication field value if set, zero value otherwise.
func (o *DtcPoolConsolidatedMonitors) GetFullHealthCommunication() bool {
	if o == nil || IsNil(o.FullHealthCommunication) {
		var ret bool
		return ret
	}
	return *o.FullHealthCommunication
}

// GetFullHealthCommunicationOk returns a tuple with the FullHealthCommunication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtcPoolConsolidatedMonitors) GetFullHealthCommunicationOk() (*bool, bool) {
	if o == nil || IsNil(o.FullHealthCommunication) {
		return nil, false
	}
	return o.FullHealthCommunication, true
}

// HasFullHealthCommunication returns a boolean if a field has been set.
func (o *DtcPoolConsolidatedMonitors) HasFullHealthCommunication() bool {
	if o != nil && !IsNil(o.FullHealthCommunication) {
		return true
	}

	return false
}

// SetFullHealthCommunication gets a reference to the given bool and assigns it to the FullHealthCommunication field.
func (o *DtcPoolConsolidatedMonitors) SetFullHealthCommunication(v bool) {
	o.FullHealthCommunication = &v
}

func (o DtcPoolConsolidatedMonitors) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtcPoolConsolidatedMonitors) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Members) {
		toSerialize["members"] = o.Members
	}
	if !IsNil(o.Monitor) {
		toSerialize["monitor"] = o.Monitor
	}
	if !IsNil(o.Availability) {
		toSerialize["availability"] = o.Availability
	}
	if !IsNil(o.FullHealthCommunication) {
		toSerialize["full_health_communication"] = o.FullHealthCommunication
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DtcPoolConsolidatedMonitors) UnmarshalJSON(data []byte) (err error) {
	varDtcPoolConsolidatedMonitors := _DtcPoolConsolidatedMonitors{}

	err = json.Unmarshal(data, &varDtcPoolConsolidatedMonitors)

	if err != nil {
		return err
	}

	*o = DtcPoolConsolidatedMonitors(varDtcPoolConsolidatedMonitors)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "members")
		delete(additionalProperties, "monitor")
		delete(additionalProperties, "availability")
		delete(additionalProperties, "full_health_communication")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDtcPoolConsolidatedMonitors struct {
	value *DtcPoolConsolidatedMonitors
	isSet bool
}

func (v NullableDtcPoolConsolidatedMonitors) Get() *DtcPoolConsolidatedMonitors {
	return v.value
}

func (v *NullableDtcPoolConsolidatedMonitors) Set(val *DtcPoolConsolidatedMonitors) {
	v.value = val
	v.isSet = true
}

func (v NullableDtcPoolConsolidatedMonitors) IsSet() bool {
	return v.isSet
}

func (v *NullableDtcPoolConsolidatedMonitors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtcPoolConsolidatedMonitors(val *DtcPoolConsolidatedMonitors) *NullableDtcPoolConsolidatedMonitors {
	return &NullableDtcPoolConsolidatedMonitors{value: val, isSet: true}
}

func (v NullableDtcPoolConsolidatedMonitors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtcPoolConsolidatedMonitors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
