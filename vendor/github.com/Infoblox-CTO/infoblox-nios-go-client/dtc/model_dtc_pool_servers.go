/*
Infoblox DTC API

OpenAPI specification for Infoblox NIOS WAPI DTC objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dtc

import (
	"encoding/json"
)

// checks if the DtcPoolServers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtcPoolServers{}

// DtcPoolServers struct for DtcPoolServers
type DtcPoolServers struct {
	// The server to link with.
	Server *string `json:"server,omitempty"`
	// The weight of server.
	Ratio                *int64 `json:"ratio,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DtcPoolServers DtcPoolServers

// NewDtcPoolServers instantiates a new DtcPoolServers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtcPoolServers() *DtcPoolServers {
	this := DtcPoolServers{}
	return &this
}

// NewDtcPoolServersWithDefaults instantiates a new DtcPoolServers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtcPoolServersWithDefaults() *DtcPoolServers {
	this := DtcPoolServers{}
	return &this
}

// GetServer returns the Server field value if set, zero value otherwise.
func (o *DtcPoolServers) GetServer() string {
	if o == nil || IsNil(o.Server) {
		var ret string
		return ret
	}
	return *o.Server
}

// GetServerOk returns a tuple with the Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtcPoolServers) GetServerOk() (*string, bool) {
	if o == nil || IsNil(o.Server) {
		return nil, false
	}
	return o.Server, true
}

// HasServer returns a boolean if a field has been set.
func (o *DtcPoolServers) HasServer() bool {
	if o != nil && !IsNil(o.Server) {
		return true
	}

	return false
}

// SetServer gets a reference to the given string and assigns it to the Server field.
func (o *DtcPoolServers) SetServer(v string) {
	o.Server = &v
}

// GetRatio returns the Ratio field value if set, zero value otherwise.
func (o *DtcPoolServers) GetRatio() int64 {
	if o == nil || IsNil(o.Ratio) {
		var ret int64
		return ret
	}
	return *o.Ratio
}

// GetRatioOk returns a tuple with the Ratio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtcPoolServers) GetRatioOk() (*int64, bool) {
	if o == nil || IsNil(o.Ratio) {
		return nil, false
	}
	return o.Ratio, true
}

// HasRatio returns a boolean if a field has been set.
func (o *DtcPoolServers) HasRatio() bool {
	if o != nil && !IsNil(o.Ratio) {
		return true
	}

	return false
}

// SetRatio gets a reference to the given int64 and assigns it to the Ratio field.
func (o *DtcPoolServers) SetRatio(v int64) {
	o.Ratio = &v
}

func (o DtcPoolServers) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtcPoolServers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Server) {
		toSerialize["server"] = o.Server
	}
	if !IsNil(o.Ratio) {
		toSerialize["ratio"] = o.Ratio
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DtcPoolServers) UnmarshalJSON(data []byte) (err error) {
	varDtcPoolServers := _DtcPoolServers{}

	err = json.Unmarshal(data, &varDtcPoolServers)

	if err != nil {
		return err
	}

	*o = DtcPoolServers(varDtcPoolServers)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "server")
		delete(additionalProperties, "ratio")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDtcPoolServers struct {
	value *DtcPoolServers
	isSet bool
}

func (v NullableDtcPoolServers) Get() *DtcPoolServers {
	return v.value
}

func (v *NullableDtcPoolServers) Set(val *DtcPoolServers) {
	v.value = val
	v.isSet = true
}

func (v NullableDtcPoolServers) IsSet() bool {
	return v.isSet
}

func (v *NullableDtcPoolServers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtcPoolServers(val *DtcPoolServers) *NullableDtcPoolServers {
	return &NullableDtcPoolServers{value: val, isSet: true}
}

func (v NullableDtcPoolServers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtcPoolServers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
