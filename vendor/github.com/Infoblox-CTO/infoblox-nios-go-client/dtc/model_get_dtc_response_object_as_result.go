/*
Infoblox DTC API

OpenAPI specification for Infoblox NIOS WAPI DTC objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dtc

import (
	"encoding/json"
)

// checks if the GetDtcResponseObjectAsResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetDtcResponseObjectAsResult{}

// GetDtcResponseObjectAsResult The response format to retrieve __Dtc__ objects.
type GetDtcResponseObjectAsResult struct {
	Result *Dtc `json:"result,omitempty"`
}

// NewGetDtcResponseObjectAsResult instantiates a new GetDtcResponseObjectAsResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDtcResponseObjectAsResult() *GetDtcResponseObjectAsResult {
	this := GetDtcResponseObjectAsResult{}
	return &this
}

// NewGetDtcResponseObjectAsResultWithDefaults instantiates a new GetDtcResponseObjectAsResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDtcResponseObjectAsResultWithDefaults() *GetDtcResponseObjectAsResult {
	this := GetDtcResponseObjectAsResult{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *GetDtcResponseObjectAsResult) GetResult() Dtc {
	if o == nil || IsNil(o.Result) {
		var ret Dtc
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDtcResponseObjectAsResult) GetResultOk() (*Dtc, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *GetDtcResponseObjectAsResult) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given Dtc and assigns it to the Result field.
func (o *GetDtcResponseObjectAsResult) SetResult(v Dtc) {
	o.Result = &v
}

func (o GetDtcResponseObjectAsResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetDtcResponseObjectAsResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	return toSerialize, nil
}

type NullableGetDtcResponseObjectAsResult struct {
	value *GetDtcResponseObjectAsResult
	isSet bool
}

func (v NullableGetDtcResponseObjectAsResult) Get() *GetDtcResponseObjectAsResult {
	return v.value
}

func (v *NullableGetDtcResponseObjectAsResult) Set(val *GetDtcResponseObjectAsResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDtcResponseObjectAsResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDtcResponseObjectAsResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDtcResponseObjectAsResult(val *GetDtcResponseObjectAsResult) *NullableGetDtcResponseObjectAsResult {
	return &NullableGetDtcResponseObjectAsResult{value: val, isSet: true}
}

func (v NullableGetDtcResponseObjectAsResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDtcResponseObjectAsResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
