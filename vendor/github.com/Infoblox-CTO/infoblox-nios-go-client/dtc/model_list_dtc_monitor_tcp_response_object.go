/*
Infoblox DTC API

OpenAPI specification for Infoblox NIOS WAPI DTC objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dtc

import (
	"encoding/json"
)

// checks if the ListDtcMonitorTcpResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListDtcMonitorTcpResponseObject{}

// ListDtcMonitorTcpResponseObject The response format to retrieve __DtcMonitorTcp__ objects.
type ListDtcMonitorTcpResponseObject struct {
	Result               []DtcMonitorTcp `json:"result,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListDtcMonitorTcpResponseObject ListDtcMonitorTcpResponseObject

// NewListDtcMonitorTcpResponseObject instantiates a new ListDtcMonitorTcpResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListDtcMonitorTcpResponseObject() *ListDtcMonitorTcpResponseObject {
	this := ListDtcMonitorTcpResponseObject{}
	return &this
}

// NewListDtcMonitorTcpResponseObjectWithDefaults instantiates a new ListDtcMonitorTcpResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListDtcMonitorTcpResponseObjectWithDefaults() *ListDtcMonitorTcpResponseObject {
	this := ListDtcMonitorTcpResponseObject{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *ListDtcMonitorTcpResponseObject) GetResult() []DtcMonitorTcp {
	if o == nil || IsNil(o.Result) {
		var ret []DtcMonitorTcp
		return ret
	}
	return o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDtcMonitorTcpResponseObject) GetResultOk() ([]DtcMonitorTcp, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *ListDtcMonitorTcpResponseObject) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given []DtcMonitorTcp and assigns it to the Result field.
func (o *ListDtcMonitorTcpResponseObject) SetResult(v []DtcMonitorTcp) {
	o.Result = v
}

func (o ListDtcMonitorTcpResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListDtcMonitorTcpResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListDtcMonitorTcpResponseObject) UnmarshalJSON(data []byte) (err error) {
	varListDtcMonitorTcpResponseObject := _ListDtcMonitorTcpResponseObject{}

	err = json.Unmarshal(data, &varListDtcMonitorTcpResponseObject)

	if err != nil {
		return err
	}

	*o = ListDtcMonitorTcpResponseObject(varListDtcMonitorTcpResponseObject)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "result")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListDtcMonitorTcpResponseObject struct {
	value *ListDtcMonitorTcpResponseObject
	isSet bool
}

func (v NullableListDtcMonitorTcpResponseObject) Get() *ListDtcMonitorTcpResponseObject {
	return v.value
}

func (v *NullableListDtcMonitorTcpResponseObject) Set(val *ListDtcMonitorTcpResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableListDtcMonitorTcpResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableListDtcMonitorTcpResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListDtcMonitorTcpResponseObject(val *ListDtcMonitorTcpResponseObject) *NullableListDtcMonitorTcpResponseObject {
	return &NullableListDtcMonitorTcpResponseObject{value: val, isSet: true}
}

func (v NullableListDtcMonitorTcpResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListDtcMonitorTcpResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
