/*
Infoblox DTC API

OpenAPI specification for Infoblox NIOS WAPI DTC objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dtc

import (
	"encoding/json"
)

// checks if the UpdateDtcTopologyRuleResponseAsObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateDtcTopologyRuleResponseAsObject{}

// UpdateDtcTopologyRuleResponseAsObject The response format to update __DtcTopologyRule__ in object format.
type UpdateDtcTopologyRuleResponseAsObject struct {
	Result               *DtcTopologyRule `json:"result,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateDtcTopologyRuleResponseAsObject UpdateDtcTopologyRuleResponseAsObject

// NewUpdateDtcTopologyRuleResponseAsObject instantiates a new UpdateDtcTopologyRuleResponseAsObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateDtcTopologyRuleResponseAsObject() *UpdateDtcTopologyRuleResponseAsObject {
	this := UpdateDtcTopologyRuleResponseAsObject{}
	return &this
}

// NewUpdateDtcTopologyRuleResponseAsObjectWithDefaults instantiates a new UpdateDtcTopologyRuleResponseAsObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateDtcTopologyRuleResponseAsObjectWithDefaults() *UpdateDtcTopologyRuleResponseAsObject {
	this := UpdateDtcTopologyRuleResponseAsObject{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *UpdateDtcTopologyRuleResponseAsObject) GetResult() DtcTopologyRule {
	if o == nil || IsNil(o.Result) {
		var ret DtcTopologyRule
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDtcTopologyRuleResponseAsObject) GetResultOk() (*DtcTopologyRule, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *UpdateDtcTopologyRuleResponseAsObject) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given DtcTopologyRule and assigns it to the Result field.
func (o *UpdateDtcTopologyRuleResponseAsObject) SetResult(v DtcTopologyRule) {
	o.Result = &v
}

func (o UpdateDtcTopologyRuleResponseAsObject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateDtcTopologyRuleResponseAsObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateDtcTopologyRuleResponseAsObject) UnmarshalJSON(data []byte) (err error) {
	varUpdateDtcTopologyRuleResponseAsObject := _UpdateDtcTopologyRuleResponseAsObject{}

	err = json.Unmarshal(data, &varUpdateDtcTopologyRuleResponseAsObject)

	if err != nil {
		return err
	}

	*o = UpdateDtcTopologyRuleResponseAsObject(varUpdateDtcTopologyRuleResponseAsObject)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "result")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateDtcTopologyRuleResponseAsObject struct {
	value *UpdateDtcTopologyRuleResponseAsObject
	isSet bool
}

func (v NullableUpdateDtcTopologyRuleResponseAsObject) Get() *UpdateDtcTopologyRuleResponseAsObject {
	return v.value
}

func (v *NullableUpdateDtcTopologyRuleResponseAsObject) Set(val *UpdateDtcTopologyRuleResponseAsObject) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateDtcTopologyRuleResponseAsObject) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateDtcTopologyRuleResponseAsObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateDtcTopologyRuleResponseAsObject(val *UpdateDtcTopologyRuleResponseAsObject) *NullableUpdateDtcTopologyRuleResponseAsObject {
	return &NullableUpdateDtcTopologyRuleResponseAsObject{value: val, isSet: true}
}

func (v NullableUpdateDtcTopologyRuleResponseAsObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateDtcTopologyRuleResponseAsObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
