/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"bytes"
	"context"
	"io"
	"net/http"
	"net/url"
	"strings"

	"github.com/Infoblox-CTO/infoblox-nios-go-client/internal"
)

type MemberParentalcontrolAPI interface {
	/*
		List Retrieve member:parentalcontrol objects

		Returns a list of member:parentalcontrol objects matching the search criteria

		@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
		@return MemberParentalcontrolAPIListRequest
	*/
	List(ctx context.Context) MemberParentalcontrolAPIListRequest

	// ListExecute executes the request
	//  @return ListMemberParentalcontrolResponse
	ListExecute(r MemberParentalcontrolAPIListRequest) (*ListMemberParentalcontrolResponse, *http.Response, error)
	/*
		Read Get a specific member:parentalcontrol object

		Returns a specific member:parentalcontrol object by reference

		@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
		@param reference Reference of the member:parentalcontrol object
		@return MemberParentalcontrolAPIReadRequest
	*/
	Read(ctx context.Context, reference string) MemberParentalcontrolAPIReadRequest

	// ReadExecute executes the request
	//  @return GetMemberParentalcontrolResponse
	ReadExecute(r MemberParentalcontrolAPIReadRequest) (*GetMemberParentalcontrolResponse, *http.Response, error)
	/*
		Update Update a member:parentalcontrol object

		Updates a specific member:parentalcontrol object by reference

		@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
		@param reference Reference of the member:parentalcontrol object
		@return MemberParentalcontrolAPIUpdateRequest
	*/
	Update(ctx context.Context, reference string) MemberParentalcontrolAPIUpdateRequest

	// UpdateExecute executes the request
	//  @return UpdateMemberParentalcontrolResponse
	UpdateExecute(r MemberParentalcontrolAPIUpdateRequest) (*UpdateMemberParentalcontrolResponse, *http.Response, error)
}

// MemberParentalcontrolAPIService MemberParentalcontrolAPI service
type MemberParentalcontrolAPIService internal.Service

type MemberParentalcontrolAPIListRequest struct {
	ctx              context.Context
	ApiService       MemberParentalcontrolAPI
	returnFields     *string
	returnFieldsPlus *string
	maxResults       *int32
	returnAsObject   *int32
	paging           *int32
	pageId           *string
	filters          *map[string]interface{}
	extattrfilter    *map[string]interface{}
}

// Enter the field names followed by comma
func (r MemberParentalcontrolAPIListRequest) ReturnFields(returnFields string) MemberParentalcontrolAPIListRequest {
	r.returnFields = &returnFields
	return r
}

// Enter the field names followed by comma, this returns the required fields along with the default fields
func (r MemberParentalcontrolAPIListRequest) ReturnFieldsPlus(returnFieldsPlus string) MemberParentalcontrolAPIListRequest {
	r.returnFieldsPlus = &returnFieldsPlus
	return r
}

// Enter the number of results to be fetched
func (r MemberParentalcontrolAPIListRequest) MaxResults(maxResults int32) MemberParentalcontrolAPIListRequest {
	r.maxResults = &maxResults
	return r
}

// Select 1 if result is required as an object
func (r MemberParentalcontrolAPIListRequest) ReturnAsObject(returnAsObject int32) MemberParentalcontrolAPIListRequest {
	r.returnAsObject = &returnAsObject
	return r
}

// Control paging of results
func (r MemberParentalcontrolAPIListRequest) Paging(paging int32) MemberParentalcontrolAPIListRequest {
	r.paging = &paging
	return r
}

// Page id for retrieving next page of results
func (r MemberParentalcontrolAPIListRequest) PageId(pageId string) MemberParentalcontrolAPIListRequest {
	r.pageId = &pageId
	return r
}

func (r MemberParentalcontrolAPIListRequest) Filters(filters map[string]interface{}) MemberParentalcontrolAPIListRequest {
	r.filters = &filters
	return r
}

func (r MemberParentalcontrolAPIListRequest) Extattrfilter(extattrfilter map[string]interface{}) MemberParentalcontrolAPIListRequest {
	r.extattrfilter = &extattrfilter
	return r
}

func (r MemberParentalcontrolAPIListRequest) Execute() (*ListMemberParentalcontrolResponse, *http.Response, error) {
	return r.ApiService.ListExecute(r)
}

/*
List Retrieve member:parentalcontrol objects

Returns a list of member:parentalcontrol objects matching the search criteria

	@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	@return MemberParentalcontrolAPIListRequest
*/
func (a *MemberParentalcontrolAPIService) List(ctx context.Context) MemberParentalcontrolAPIListRequest {
	return MemberParentalcontrolAPIListRequest{
		ApiService: a,
		ctx:        ctx,
	}
}

// Execute executes the request
//
//	@return ListMemberParentalcontrolResponse
func (a *MemberParentalcontrolAPIService) ListExecute(r MemberParentalcontrolAPIListRequest) (*ListMemberParentalcontrolResponse, *http.Response, error) {
	var (
		localVarHTTPMethod  = http.MethodGet
		localVarPostBody    interface{}
		formFiles           []internal.FormFile
		localVarReturnValue *ListMemberParentalcontrolResponse
	)

	localBasePath, err := a.Client.Cfg.ServerURLWithContext(r.ctx, "MemberParentalcontrolAPIService.List")
	if err != nil {
		return localVarReturnValue, nil, internal.NewGenericOpenAPIError(err.Error())
	}

	localVarPath := localBasePath + "/member:parentalcontrol"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}

	if r.returnFields != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields", r.returnFields, "form", "")
	}
	if r.returnFieldsPlus != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields+", r.returnFieldsPlus, "form", "")
	}
	if r.maxResults != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_max_results", r.maxResults, "form", "")
	}
	if r.returnAsObject != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_as_object", r.returnAsObject, "form", "")
	}
	if r.paging != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_paging", r.paging, "form", "")
	}
	if r.pageId != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_page_id", r.pageId, "form", "")
	}
	if r.filters != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "filters", r.filters, "form", "")
	}
	if r.extattrfilter != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "extattrfilter", r.extattrfilter, "form", "")
	}
	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{}

	// set Content-Type header
	localVarHTTPContentType := internal.SelectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := internal.SelectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	req, err := a.Client.PrepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.Client.CallAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	localVarHTTPResponse.Body = io.NopCloser(bytes.NewBuffer(localVarBody))
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := internal.NewGenericOpenAPIErrorWithBody(localVarHTTPResponse.Status, localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.Client.Decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := internal.NewGenericOpenAPIErrorWithBody(err.Error(), localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}
	return localVarReturnValue, localVarHTTPResponse, nil
}

type MemberParentalcontrolAPIReadRequest struct {
	ctx              context.Context
	ApiService       MemberParentalcontrolAPI
	reference        string
	returnFields     *string
	returnFieldsPlus *string
	returnAsObject   *int32
}

// Enter the field names followed by comma
func (r MemberParentalcontrolAPIReadRequest) ReturnFields(returnFields string) MemberParentalcontrolAPIReadRequest {
	r.returnFields = &returnFields
	return r
}

// Enter the field names followed by comma, this returns the required fields along with the default fields
func (r MemberParentalcontrolAPIReadRequest) ReturnFieldsPlus(returnFieldsPlus string) MemberParentalcontrolAPIReadRequest {
	r.returnFieldsPlus = &returnFieldsPlus
	return r
}

// Select 1 if result is required as an object
func (r MemberParentalcontrolAPIReadRequest) ReturnAsObject(returnAsObject int32) MemberParentalcontrolAPIReadRequest {
	r.returnAsObject = &returnAsObject
	return r
}

func (r MemberParentalcontrolAPIReadRequest) Execute() (*GetMemberParentalcontrolResponse, *http.Response, error) {
	return r.ApiService.ReadExecute(r)
}

/*
Read Get a specific member:parentalcontrol object

Returns a specific member:parentalcontrol object by reference

	@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	@param reference Reference of the member:parentalcontrol object
	@return MemberParentalcontrolAPIReadRequest
*/
func (a *MemberParentalcontrolAPIService) Read(ctx context.Context, reference string) MemberParentalcontrolAPIReadRequest {
	return MemberParentalcontrolAPIReadRequest{
		ApiService: a,
		ctx:        ctx,
		reference:  reference,
	}
}

// Execute executes the request
//
//	@return GetMemberParentalcontrolResponse
func (a *MemberParentalcontrolAPIService) ReadExecute(r MemberParentalcontrolAPIReadRequest) (*GetMemberParentalcontrolResponse, *http.Response, error) {
	var (
		localVarHTTPMethod  = http.MethodGet
		localVarPostBody    interface{}
		formFiles           []internal.FormFile
		localVarReturnValue *GetMemberParentalcontrolResponse
	)

	localBasePath, err := a.Client.Cfg.ServerURLWithContext(r.ctx, "MemberParentalcontrolAPIService.Read")
	if err != nil {
		return localVarReturnValue, nil, internal.NewGenericOpenAPIError(err.Error())
	}

	localVarPath := localBasePath + "/member:parentalcontrol/{reference}"
	localVarPath = strings.Replace(localVarPath, "{"+"reference"+"}", url.PathEscape(internal.ParameterValueToString(r.reference, "reference")), -1)

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}

	if r.returnFields != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields", r.returnFields, "form", "")
	}
	if r.returnFieldsPlus != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields+", r.returnFieldsPlus, "form", "")
	}
	if r.returnAsObject != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_as_object", r.returnAsObject, "form", "")
	}
	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{}

	// set Content-Type header
	localVarHTTPContentType := internal.SelectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := internal.SelectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	req, err := a.Client.PrepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.Client.CallAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	localVarHTTPResponse.Body = io.NopCloser(bytes.NewBuffer(localVarBody))
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := internal.NewGenericOpenAPIErrorWithBody(localVarHTTPResponse.Status, localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.Client.Decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := internal.NewGenericOpenAPIErrorWithBody(err.Error(), localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}
	return localVarReturnValue, localVarHTTPResponse, nil
}

type MemberParentalcontrolAPIUpdateRequest struct {
	ctx                   context.Context
	ApiService            MemberParentalcontrolAPI
	reference             string
	memberParentalcontrol *MemberParentalcontrol
	returnFields          *string
	returnFieldsPlus      *string
	returnAsObject        *int32
}

// Object data to update
func (r MemberParentalcontrolAPIUpdateRequest) MemberParentalcontrol(memberParentalcontrol MemberParentalcontrol) MemberParentalcontrolAPIUpdateRequest {
	r.memberParentalcontrol = &memberParentalcontrol
	return r
}

// Enter the field names followed by comma
func (r MemberParentalcontrolAPIUpdateRequest) ReturnFields(returnFields string) MemberParentalcontrolAPIUpdateRequest {
	r.returnFields = &returnFields
	return r
}

// Enter the field names followed by comma, this returns the required fields along with the default fields
func (r MemberParentalcontrolAPIUpdateRequest) ReturnFieldsPlus(returnFieldsPlus string) MemberParentalcontrolAPIUpdateRequest {
	r.returnFieldsPlus = &returnFieldsPlus
	return r
}

// Select 1 if result is required as an object
func (r MemberParentalcontrolAPIUpdateRequest) ReturnAsObject(returnAsObject int32) MemberParentalcontrolAPIUpdateRequest {
	r.returnAsObject = &returnAsObject
	return r
}

func (r MemberParentalcontrolAPIUpdateRequest) Execute() (*UpdateMemberParentalcontrolResponse, *http.Response, error) {
	return r.ApiService.UpdateExecute(r)
}

/*
Update Update a member:parentalcontrol object

Updates a specific member:parentalcontrol object by reference

	@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	@param reference Reference of the member:parentalcontrol object
	@return MemberParentalcontrolAPIUpdateRequest
*/
func (a *MemberParentalcontrolAPIService) Update(ctx context.Context, reference string) MemberParentalcontrolAPIUpdateRequest {
	return MemberParentalcontrolAPIUpdateRequest{
		ApiService: a,
		ctx:        ctx,
		reference:  reference,
	}
}

// Execute executes the request
//
//	@return UpdateMemberParentalcontrolResponse
func (a *MemberParentalcontrolAPIService) UpdateExecute(r MemberParentalcontrolAPIUpdateRequest) (*UpdateMemberParentalcontrolResponse, *http.Response, error) {
	var (
		localVarHTTPMethod  = http.MethodPut
		localVarPostBody    interface{}
		formFiles           []internal.FormFile
		localVarReturnValue *UpdateMemberParentalcontrolResponse
	)

	localBasePath, err := a.Client.Cfg.ServerURLWithContext(r.ctx, "MemberParentalcontrolAPIService.Update")
	if err != nil {
		return localVarReturnValue, nil, internal.NewGenericOpenAPIError(err.Error())
	}

	localVarPath := localBasePath + "/member:parentalcontrol/{reference}"
	localVarPath = strings.Replace(localVarPath, "{"+"reference"+"}", url.PathEscape(internal.ParameterValueToString(r.reference, "reference")), -1)

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}
	if r.memberParentalcontrol == nil {
		return localVarReturnValue, nil, internal.ReportError("memberParentalcontrol is required and must be specified")
	}

	if r.returnFields != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields", r.returnFields, "form", "")
	}
	if r.returnFieldsPlus != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields+", r.returnFieldsPlus, "form", "")
	}
	if r.returnAsObject != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_as_object", r.returnAsObject, "form", "")
	}
	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := internal.SelectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := internal.SelectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.memberParentalcontrol
	req, err := a.Client.PrepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.Client.CallAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	localVarHTTPResponse.Body = io.NopCloser(bytes.NewBuffer(localVarBody))
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := internal.NewGenericOpenAPIErrorWithBody(localVarHTTPResponse.Status, localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.Client.Decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := internal.NewGenericOpenAPIErrorWithBody(err.Error(), localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}
	return localVarReturnValue, localVarHTTPResponse, nil
}
