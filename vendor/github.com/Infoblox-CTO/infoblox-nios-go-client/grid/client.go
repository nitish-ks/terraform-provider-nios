/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"github.com/Infoblox-CTO/infoblox-nios-go-client/internal"
	"github.com/Infoblox-CTO/infoblox-nios-go-client/option"
)

const serviceBasePath = "/wapi/v2.13.6"

// APIClient manages communication with the Infoblox GRID API 2.13.6
// In most cases there should be only one, shared, APIClient.
type APIClient struct {
	*internal.APIClient

	// API Services
	GridAPI GridAPI
	GriddashboardAPI GriddashboardAPI
	GriddnsAPI GriddnsAPI
	GridfiledistributionAPI GridfiledistributionAPI
	GridlicensePoolAPI GridlicensePoolAPI
	GridservicerestartgroupAPI GridservicerestartgroupAPI
	GridservicerestartrequestAPI GridservicerestartrequestAPI
	GridservicerestartstatusAPI GridservicerestartstatusAPI
	GridthreatinsightAPI GridthreatinsightAPI
	GridthreatprotectionAPI GridthreatprotectionAPI
	Gridx509certificateAPI Gridx509certificateAPI
	MastergridAPI MastergridAPI
	MemberAPI MemberAPI
	MemberdnsAPI MemberdnsAPI
	MemberfiledistributionAPI MemberfiledistributionAPI
	MemberlicenseAPI MemberlicenseAPI
	MemberthreatprotectionAPI MemberthreatprotectionAPI
}

// NewAPIClient creates a new API client.
// The client can be configured with a variadic option. The following options are available:
// - WithClientName(string) sets the name of the client using the SDK.
// - WithNIOSHostUrl(string) sets the URL for NIOS Portal.
// - WithNIOSAuth(string) sets the NIOSAuth for accessing the NIOS Portal.
// - WithHTTPClient(*http.Client) sets the HTTPClient to use for the SDK.
// - WithDefaultExtAttrs(map[string]struct{ Value string }) sets the tags the client can set by default for objects that has tags support.
// - WithDebug() sets the debug mode.
func NewAPIClient(options ...option.ClientOption) *APIClient {
	cfg := internal.NewConfiguration()
	for _, o := range options {
		o(cfg)
	}

	c := &APIClient{}
	c.APIClient = internal.NewAPIClient(serviceBasePath, cfg)

	// API Services
	c.GridAPI = (*GridAPIService)(&c.Common)
	c.GriddashboardAPI = (*GriddashboardAPIService)(&c.Common)
	c.GriddnsAPI = (*GriddnsAPIService)(&c.Common)
	c.GridfiledistributionAPI = (*GridfiledistributionAPIService)(&c.Common)
	c.GridlicensePoolAPI = (*GridlicensePoolAPIService)(&c.Common)
	c.GridservicerestartgroupAPI = (*GridservicerestartgroupAPIService)(&c.Common)
	c.GridservicerestartrequestAPI = (*GridservicerestartrequestAPIService)(&c.Common)
	c.GridservicerestartstatusAPI = (*GridservicerestartstatusAPIService)(&c.Common)
	c.GridthreatinsightAPI = (*GridthreatinsightAPIService)(&c.Common)
	c.GridthreatprotectionAPI = (*GridthreatprotectionAPIService)(&c.Common)
	c.Gridx509certificateAPI = (*Gridx509certificateAPIService)(&c.Common)
	c.MastergridAPI = (*MastergridAPIService)(&c.Common)
	c.MemberAPI = (*MemberAPIService)(&c.Common)
	c.MemberdnsAPI = (*MemberdnsAPIService)(&c.Common)
	c.MemberfiledistributionAPI = (*MemberfiledistributionAPIService)(&c.Common)
	c.MemberlicenseAPI = (*MemberlicenseAPIService)(&c.Common)
	c.MemberthreatprotectionAPI = (*MemberthreatprotectionAPIService)(&c.Common)

	return c
}