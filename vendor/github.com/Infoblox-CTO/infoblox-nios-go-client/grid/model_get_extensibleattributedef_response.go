/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
	"fmt"
)

// GetExtensibleattributedefResponse - struct for GetExtensibleattributedefResponse
type GetExtensibleattributedefResponse struct {
	Extensibleattributedef                          *Extensibleattributedef
	GetExtensibleattributedefResponseObjectAsResult *GetExtensibleattributedefResponseObjectAsResult
}

// ExtensibleattributedefAsGetExtensibleattributedefResponse is a convenience function that returns Extensibleattributedef wrapped in GetExtensibleattributedefResponse
func ExtensibleattributedefAsGetExtensibleattributedefResponse(v *Extensibleattributedef) GetExtensibleattributedefResponse {
	return GetExtensibleattributedefResponse{
		Extensibleattributedef: v,
	}
}

// GetExtensibleattributedefResponseObjectAsResultAsGetExtensibleattributedefResponse is a convenience function that returns GetExtensibleattributedefResponseObjectAsResult wrapped in GetExtensibleattributedefResponse
func GetExtensibleattributedefResponseObjectAsResultAsGetExtensibleattributedefResponse(v *GetExtensibleattributedefResponseObjectAsResult) GetExtensibleattributedefResponse {
	return GetExtensibleattributedefResponse{
		GetExtensibleattributedefResponseObjectAsResult: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetExtensibleattributedefResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into Extensibleattributedef
	err = newStrictDecoder(data).Decode(&dst.Extensibleattributedef)
	if err == nil {
		jsonExtensibleattributedef, _ := json.Marshal(dst.Extensibleattributedef)
		if string(jsonExtensibleattributedef) == "{}" { // empty struct
			dst.Extensibleattributedef = nil
		} else {
			match++
		}
	} else {
		dst.Extensibleattributedef = nil
	}

	// try to unmarshal data into GetExtensibleattributedefResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetExtensibleattributedefResponseObjectAsResult)
	if err == nil {
		jsonGetExtensibleattributedefResponseObjectAsResult, _ := json.Marshal(dst.GetExtensibleattributedefResponseObjectAsResult)
		if string(jsonGetExtensibleattributedefResponseObjectAsResult) == "{}" { // empty struct
			dst.GetExtensibleattributedefResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetExtensibleattributedefResponseObjectAsResult = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.Extensibleattributedef = nil
		dst.GetExtensibleattributedefResponseObjectAsResult = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetExtensibleattributedefResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetExtensibleattributedefResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetExtensibleattributedefResponse) MarshalJSON() ([]byte, error) {
	if src.Extensibleattributedef != nil {
		return json.Marshal(&src.Extensibleattributedef)
	}

	if src.GetExtensibleattributedefResponseObjectAsResult != nil {
		return json.Marshal(&src.GetExtensibleattributedefResponseObjectAsResult)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetExtensibleattributedefResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.Extensibleattributedef != nil {
		return obj.Extensibleattributedef
	}

	if obj.GetExtensibleattributedefResponseObjectAsResult != nil {
		return obj.GetExtensibleattributedefResponseObjectAsResult
	}

	// all schemas are nil
	return nil
}

type NullableGetExtensibleattributedefResponse struct {
	value *GetExtensibleattributedefResponse
	isSet bool
}

func (v NullableGetExtensibleattributedefResponse) Get() *GetExtensibleattributedefResponse {
	return v.value
}

func (v *NullableGetExtensibleattributedefResponse) Set(val *GetExtensibleattributedefResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetExtensibleattributedefResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetExtensibleattributedefResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetExtensibleattributedefResponse(val *GetExtensibleattributedefResponse) *NullableGetExtensibleattributedefResponse {
	return &NullableGetExtensibleattributedefResponse{value: val, isSet: true}
}

func (v NullableGetExtensibleattributedefResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetExtensibleattributedefResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
