/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
	"fmt"
)

// GetGridServicerestartGroupResponse - struct for GetGridServicerestartGroupResponse
type GetGridServicerestartGroupResponse struct {
	GetGridServicerestartGroupResponseObjectAsResult *GetGridServicerestartGroupResponseObjectAsResult
	GridServicerestartGroup                          *GridServicerestartGroup
}

// GetGridServicerestartGroupResponseObjectAsResultAsGetGridServicerestartGroupResponse is a convenience function that returns GetGridServicerestartGroupResponseObjectAsResult wrapped in GetGridServicerestartGroupResponse
func GetGridServicerestartGroupResponseObjectAsResultAsGetGridServicerestartGroupResponse(v *GetGridServicerestartGroupResponseObjectAsResult) GetGridServicerestartGroupResponse {
	return GetGridServicerestartGroupResponse{
		GetGridServicerestartGroupResponseObjectAsResult: v,
	}
}

// GridServicerestartGroupAsGetGridServicerestartGroupResponse is a convenience function that returns GridServicerestartGroup wrapped in GetGridServicerestartGroupResponse
func GridServicerestartGroupAsGetGridServicerestartGroupResponse(v *GridServicerestartGroup) GetGridServicerestartGroupResponse {
	return GetGridServicerestartGroupResponse{
		GridServicerestartGroup: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetGridServicerestartGroupResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetGridServicerestartGroupResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetGridServicerestartGroupResponseObjectAsResult)
	if err == nil {
		jsonGetGridServicerestartGroupResponseObjectAsResult, _ := json.Marshal(dst.GetGridServicerestartGroupResponseObjectAsResult)
		if string(jsonGetGridServicerestartGroupResponseObjectAsResult) == "{}" { // empty struct
			dst.GetGridServicerestartGroupResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetGridServicerestartGroupResponseObjectAsResult = nil
	}

	// try to unmarshal data into GridServicerestartGroup
	err = newStrictDecoder(data).Decode(&dst.GridServicerestartGroup)
	if err == nil {
		jsonGridServicerestartGroup, _ := json.Marshal(dst.GridServicerestartGroup)
		if string(jsonGridServicerestartGroup) == "{}" { // empty struct
			dst.GridServicerestartGroup = nil
		} else {
			match++
		}
	} else {
		dst.GridServicerestartGroup = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetGridServicerestartGroupResponseObjectAsResult = nil
		dst.GridServicerestartGroup = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetGridServicerestartGroupResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetGridServicerestartGroupResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetGridServicerestartGroupResponse) MarshalJSON() ([]byte, error) {
	if src.GetGridServicerestartGroupResponseObjectAsResult != nil {
		return json.Marshal(&src.GetGridServicerestartGroupResponseObjectAsResult)
	}

	if src.GridServicerestartGroup != nil {
		return json.Marshal(&src.GridServicerestartGroup)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetGridServicerestartGroupResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GetGridServicerestartGroupResponseObjectAsResult != nil {
		return obj.GetGridServicerestartGroupResponseObjectAsResult
	}

	if obj.GridServicerestartGroup != nil {
		return obj.GridServicerestartGroup
	}

	// all schemas are nil
	return nil
}

type NullableGetGridServicerestartGroupResponse struct {
	value *GetGridServicerestartGroupResponse
	isSet bool
}

func (v NullableGetGridServicerestartGroupResponse) Get() *GetGridServicerestartGroupResponse {
	return v.value
}

func (v *NullableGetGridServicerestartGroupResponse) Set(val *GetGridServicerestartGroupResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetGridServicerestartGroupResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetGridServicerestartGroupResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetGridServicerestartGroupResponse(val *GetGridServicerestartGroupResponse) *NullableGetGridServicerestartGroupResponse {
	return &NullableGetGridServicerestartGroupResponse{value: val, isSet: true}
}

func (v NullableGetGridServicerestartGroupResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetGridServicerestartGroupResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
