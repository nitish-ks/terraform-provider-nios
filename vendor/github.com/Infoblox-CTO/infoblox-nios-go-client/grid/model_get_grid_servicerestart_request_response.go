/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
	"fmt"
)

// GetGridServicerestartRequestResponse - struct for GetGridServicerestartRequestResponse
type GetGridServicerestartRequestResponse struct {
	GetGridServicerestartRequestResponseObjectAsResult *GetGridServicerestartRequestResponseObjectAsResult
	GridServicerestartRequest                          *GridServicerestartRequest
}

// GetGridServicerestartRequestResponseObjectAsResultAsGetGridServicerestartRequestResponse is a convenience function that returns GetGridServicerestartRequestResponseObjectAsResult wrapped in GetGridServicerestartRequestResponse
func GetGridServicerestartRequestResponseObjectAsResultAsGetGridServicerestartRequestResponse(v *GetGridServicerestartRequestResponseObjectAsResult) GetGridServicerestartRequestResponse {
	return GetGridServicerestartRequestResponse{
		GetGridServicerestartRequestResponseObjectAsResult: v,
	}
}

// GridServicerestartRequestAsGetGridServicerestartRequestResponse is a convenience function that returns GridServicerestartRequest wrapped in GetGridServicerestartRequestResponse
func GridServicerestartRequestAsGetGridServicerestartRequestResponse(v *GridServicerestartRequest) GetGridServicerestartRequestResponse {
	return GetGridServicerestartRequestResponse{
		GridServicerestartRequest: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetGridServicerestartRequestResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetGridServicerestartRequestResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetGridServicerestartRequestResponseObjectAsResult)
	if err == nil {
		jsonGetGridServicerestartRequestResponseObjectAsResult, _ := json.Marshal(dst.GetGridServicerestartRequestResponseObjectAsResult)
		if string(jsonGetGridServicerestartRequestResponseObjectAsResult) == "{}" { // empty struct
			dst.GetGridServicerestartRequestResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetGridServicerestartRequestResponseObjectAsResult = nil
	}

	// try to unmarshal data into GridServicerestartRequest
	err = newStrictDecoder(data).Decode(&dst.GridServicerestartRequest)
	if err == nil {
		jsonGridServicerestartRequest, _ := json.Marshal(dst.GridServicerestartRequest)
		if string(jsonGridServicerestartRequest) == "{}" { // empty struct
			dst.GridServicerestartRequest = nil
		} else {
			match++
		}
	} else {
		dst.GridServicerestartRequest = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetGridServicerestartRequestResponseObjectAsResult = nil
		dst.GridServicerestartRequest = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetGridServicerestartRequestResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetGridServicerestartRequestResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetGridServicerestartRequestResponse) MarshalJSON() ([]byte, error) {
	if src.GetGridServicerestartRequestResponseObjectAsResult != nil {
		return json.Marshal(&src.GetGridServicerestartRequestResponseObjectAsResult)
	}

	if src.GridServicerestartRequest != nil {
		return json.Marshal(&src.GridServicerestartRequest)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetGridServicerestartRequestResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GetGridServicerestartRequestResponseObjectAsResult != nil {
		return obj.GetGridServicerestartRequestResponseObjectAsResult
	}

	if obj.GridServicerestartRequest != nil {
		return obj.GridServicerestartRequest
	}

	// all schemas are nil
	return nil
}

type NullableGetGridServicerestartRequestResponse struct {
	value *GetGridServicerestartRequestResponse
	isSet bool
}

func (v NullableGetGridServicerestartRequestResponse) Get() *GetGridServicerestartRequestResponse {
	return v.value
}

func (v *NullableGetGridServicerestartRequestResponse) Set(val *GetGridServicerestartRequestResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetGridServicerestartRequestResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetGridServicerestartRequestResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetGridServicerestartRequestResponse(val *GetGridServicerestartRequestResponse) *NullableGetGridServicerestartRequestResponse {
	return &NullableGetGridServicerestartRequestResponse{value: val, isSet: true}
}

func (v NullableGetGridServicerestartRequestResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetGridServicerestartRequestResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
