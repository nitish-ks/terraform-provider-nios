/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
	"fmt"
)

// GetGridServicerestartStatusResponse - struct for GetGridServicerestartStatusResponse
type GetGridServicerestartStatusResponse struct {
	GetGridServicerestartStatusResponseObjectAsResult *GetGridServicerestartStatusResponseObjectAsResult
	GridServicerestartStatus                          *GridServicerestartStatus
}

// GetGridServicerestartStatusResponseObjectAsResultAsGetGridServicerestartStatusResponse is a convenience function that returns GetGridServicerestartStatusResponseObjectAsResult wrapped in GetGridServicerestartStatusResponse
func GetGridServicerestartStatusResponseObjectAsResultAsGetGridServicerestartStatusResponse(v *GetGridServicerestartStatusResponseObjectAsResult) GetGridServicerestartStatusResponse {
	return GetGridServicerestartStatusResponse{
		GetGridServicerestartStatusResponseObjectAsResult: v,
	}
}

// GridServicerestartStatusAsGetGridServicerestartStatusResponse is a convenience function that returns GridServicerestartStatus wrapped in GetGridServicerestartStatusResponse
func GridServicerestartStatusAsGetGridServicerestartStatusResponse(v *GridServicerestartStatus) GetGridServicerestartStatusResponse {
	return GetGridServicerestartStatusResponse{
		GridServicerestartStatus: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetGridServicerestartStatusResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetGridServicerestartStatusResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetGridServicerestartStatusResponseObjectAsResult)
	if err == nil {
		jsonGetGridServicerestartStatusResponseObjectAsResult, _ := json.Marshal(dst.GetGridServicerestartStatusResponseObjectAsResult)
		if string(jsonGetGridServicerestartStatusResponseObjectAsResult) == "{}" { // empty struct
			dst.GetGridServicerestartStatusResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetGridServicerestartStatusResponseObjectAsResult = nil
	}

	// try to unmarshal data into GridServicerestartStatus
	err = newStrictDecoder(data).Decode(&dst.GridServicerestartStatus)
	if err == nil {
		jsonGridServicerestartStatus, _ := json.Marshal(dst.GridServicerestartStatus)
		if string(jsonGridServicerestartStatus) == "{}" { // empty struct
			dst.GridServicerestartStatus = nil
		} else {
			match++
		}
	} else {
		dst.GridServicerestartStatus = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetGridServicerestartStatusResponseObjectAsResult = nil
		dst.GridServicerestartStatus = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetGridServicerestartStatusResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetGridServicerestartStatusResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetGridServicerestartStatusResponse) MarshalJSON() ([]byte, error) {
	if src.GetGridServicerestartStatusResponseObjectAsResult != nil {
		return json.Marshal(&src.GetGridServicerestartStatusResponseObjectAsResult)
	}

	if src.GridServicerestartStatus != nil {
		return json.Marshal(&src.GridServicerestartStatus)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetGridServicerestartStatusResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GetGridServicerestartStatusResponseObjectAsResult != nil {
		return obj.GetGridServicerestartStatusResponseObjectAsResult
	}

	if obj.GridServicerestartStatus != nil {
		return obj.GridServicerestartStatus
	}

	// all schemas are nil
	return nil
}

type NullableGetGridServicerestartStatusResponse struct {
	value *GetGridServicerestartStatusResponse
	isSet bool
}

func (v NullableGetGridServicerestartStatusResponse) Get() *GetGridServicerestartStatusResponse {
	return v.value
}

func (v *NullableGetGridServicerestartStatusResponse) Set(val *GetGridServicerestartStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetGridServicerestartStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetGridServicerestartStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetGridServicerestartStatusResponse(val *GetGridServicerestartStatusResponse) *NullableGetGridServicerestartStatusResponse {
	return &NullableGetGridServicerestartStatusResponse{value: val, isSet: true}
}

func (v NullableGetGridServicerestartStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetGridServicerestartStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
