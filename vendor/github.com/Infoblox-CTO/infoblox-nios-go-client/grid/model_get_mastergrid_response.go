/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
	"fmt"
)

// GetMastergridResponse - struct for GetMastergridResponse
type GetMastergridResponse struct {
	GetMastergridResponseObjectAsResult *GetMastergridResponseObjectAsResult
	Mastergrid                          *Mastergrid
}

// GetMastergridResponseObjectAsResultAsGetMastergridResponse is a convenience function that returns GetMastergridResponseObjectAsResult wrapped in GetMastergridResponse
func GetMastergridResponseObjectAsResultAsGetMastergridResponse(v *GetMastergridResponseObjectAsResult) GetMastergridResponse {
	return GetMastergridResponse{
		GetMastergridResponseObjectAsResult: v,
	}
}

// MastergridAsGetMastergridResponse is a convenience function that returns Mastergrid wrapped in GetMastergridResponse
func MastergridAsGetMastergridResponse(v *Mastergrid) GetMastergridResponse {
	return GetMastergridResponse{
		Mastergrid: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetMastergridResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetMastergridResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetMastergridResponseObjectAsResult)
	if err == nil {
		jsonGetMastergridResponseObjectAsResult, _ := json.Marshal(dst.GetMastergridResponseObjectAsResult)
		if string(jsonGetMastergridResponseObjectAsResult) == "{}" { // empty struct
			dst.GetMastergridResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetMastergridResponseObjectAsResult = nil
	}

	// try to unmarshal data into Mastergrid
	err = newStrictDecoder(data).Decode(&dst.Mastergrid)
	if err == nil {
		jsonMastergrid, _ := json.Marshal(dst.Mastergrid)
		if string(jsonMastergrid) == "{}" { // empty struct
			dst.Mastergrid = nil
		} else {
			match++
		}
	} else {
		dst.Mastergrid = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetMastergridResponseObjectAsResult = nil
		dst.Mastergrid = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetMastergridResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetMastergridResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetMastergridResponse) MarshalJSON() ([]byte, error) {
	if src.GetMastergridResponseObjectAsResult != nil {
		return json.Marshal(&src.GetMastergridResponseObjectAsResult)
	}

	if src.Mastergrid != nil {
		return json.Marshal(&src.Mastergrid)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetMastergridResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GetMastergridResponseObjectAsResult != nil {
		return obj.GetMastergridResponseObjectAsResult
	}

	if obj.Mastergrid != nil {
		return obj.Mastergrid
	}

	// all schemas are nil
	return nil
}

type NullableGetMastergridResponse struct {
	value *GetMastergridResponse
	isSet bool
}

func (v NullableGetMastergridResponse) Get() *GetMastergridResponse {
	return v.value
}

func (v *NullableGetMastergridResponse) Set(val *GetMastergridResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMastergridResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMastergridResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMastergridResponse(val *GetMastergridResponse) *NullableGetMastergridResponse {
	return &NullableGetMastergridResponse{value: val, isSet: true}
}

func (v NullableGetMastergridResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMastergridResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
