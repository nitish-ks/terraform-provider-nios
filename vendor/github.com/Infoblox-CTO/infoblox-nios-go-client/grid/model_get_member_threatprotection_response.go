/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
	"fmt"
)

// GetMemberThreatprotectionResponse - struct for GetMemberThreatprotectionResponse
type GetMemberThreatprotectionResponse struct {
	GetMemberThreatprotectionResponseObjectAsResult *GetMemberThreatprotectionResponseObjectAsResult
	MemberThreatprotection                          *MemberThreatprotection
}

// GetMemberThreatprotectionResponseObjectAsResultAsGetMemberThreatprotectionResponse is a convenience function that returns GetMemberThreatprotectionResponseObjectAsResult wrapped in GetMemberThreatprotectionResponse
func GetMemberThreatprotectionResponseObjectAsResultAsGetMemberThreatprotectionResponse(v *GetMemberThreatprotectionResponseObjectAsResult) GetMemberThreatprotectionResponse {
	return GetMemberThreatprotectionResponse{
		GetMemberThreatprotectionResponseObjectAsResult: v,
	}
}

// MemberThreatprotectionAsGetMemberThreatprotectionResponse is a convenience function that returns MemberThreatprotection wrapped in GetMemberThreatprotectionResponse
func MemberThreatprotectionAsGetMemberThreatprotectionResponse(v *MemberThreatprotection) GetMemberThreatprotectionResponse {
	return GetMemberThreatprotectionResponse{
		MemberThreatprotection: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetMemberThreatprotectionResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetMemberThreatprotectionResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetMemberThreatprotectionResponseObjectAsResult)
	if err == nil {
		jsonGetMemberThreatprotectionResponseObjectAsResult, _ := json.Marshal(dst.GetMemberThreatprotectionResponseObjectAsResult)
		if string(jsonGetMemberThreatprotectionResponseObjectAsResult) == "{}" { // empty struct
			dst.GetMemberThreatprotectionResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetMemberThreatprotectionResponseObjectAsResult = nil
	}

	// try to unmarshal data into MemberThreatprotection
	err = newStrictDecoder(data).Decode(&dst.MemberThreatprotection)
	if err == nil {
		jsonMemberThreatprotection, _ := json.Marshal(dst.MemberThreatprotection)
		if string(jsonMemberThreatprotection) == "{}" { // empty struct
			dst.MemberThreatprotection = nil
		} else {
			match++
		}
	} else {
		dst.MemberThreatprotection = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetMemberThreatprotectionResponseObjectAsResult = nil
		dst.MemberThreatprotection = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetMemberThreatprotectionResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetMemberThreatprotectionResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetMemberThreatprotectionResponse) MarshalJSON() ([]byte, error) {
	if src.GetMemberThreatprotectionResponseObjectAsResult != nil {
		return json.Marshal(&src.GetMemberThreatprotectionResponseObjectAsResult)
	}

	if src.MemberThreatprotection != nil {
		return json.Marshal(&src.MemberThreatprotection)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetMemberThreatprotectionResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GetMemberThreatprotectionResponseObjectAsResult != nil {
		return obj.GetMemberThreatprotectionResponseObjectAsResult
	}

	if obj.MemberThreatprotection != nil {
		return obj.MemberThreatprotection
	}

	// all schemas are nil
	return nil
}

type NullableGetMemberThreatprotectionResponse struct {
	value *GetMemberThreatprotectionResponse
	isSet bool
}

func (v NullableGetMemberThreatprotectionResponse) Get() *GetMemberThreatprotectionResponse {
	return v.value
}

func (v *NullableGetMemberThreatprotectionResponse) Set(val *GetMemberThreatprotectionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMemberThreatprotectionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMemberThreatprotectionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMemberThreatprotectionResponse(val *GetMemberThreatprotectionResponse) *NullableGetMemberThreatprotectionResponse {
	return &NullableGetMemberThreatprotectionResponse{value: val, isSet: true}
}

func (v NullableGetMemberThreatprotectionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMemberThreatprotectionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
