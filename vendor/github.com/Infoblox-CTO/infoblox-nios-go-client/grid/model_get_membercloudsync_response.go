/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
	"fmt"
)

// GetMembercloudsyncResponse - struct for GetMembercloudsyncResponse
type GetMembercloudsyncResponse struct {
	GetMembercloudsyncResponseObjectAsResult *GetMembercloudsyncResponseObjectAsResult
	Membercloudsync                          *Membercloudsync
}

// GetMembercloudsyncResponseObjectAsResultAsGetMembercloudsyncResponse is a convenience function that returns GetMembercloudsyncResponseObjectAsResult wrapped in GetMembercloudsyncResponse
func GetMembercloudsyncResponseObjectAsResultAsGetMembercloudsyncResponse(v *GetMembercloudsyncResponseObjectAsResult) GetMembercloudsyncResponse {
	return GetMembercloudsyncResponse{
		GetMembercloudsyncResponseObjectAsResult: v,
	}
}

// MembercloudsyncAsGetMembercloudsyncResponse is a convenience function that returns Membercloudsync wrapped in GetMembercloudsyncResponse
func MembercloudsyncAsGetMembercloudsyncResponse(v *Membercloudsync) GetMembercloudsyncResponse {
	return GetMembercloudsyncResponse{
		Membercloudsync: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetMembercloudsyncResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetMembercloudsyncResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetMembercloudsyncResponseObjectAsResult)
	if err == nil {
		jsonGetMembercloudsyncResponseObjectAsResult, _ := json.Marshal(dst.GetMembercloudsyncResponseObjectAsResult)
		if string(jsonGetMembercloudsyncResponseObjectAsResult) == "{}" { // empty struct
			dst.GetMembercloudsyncResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetMembercloudsyncResponseObjectAsResult = nil
	}

	// try to unmarshal data into Membercloudsync
	err = newStrictDecoder(data).Decode(&dst.Membercloudsync)
	if err == nil {
		jsonMembercloudsync, _ := json.Marshal(dst.Membercloudsync)
		if string(jsonMembercloudsync) == "{}" { // empty struct
			dst.Membercloudsync = nil
		} else {
			match++
		}
	} else {
		dst.Membercloudsync = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetMembercloudsyncResponseObjectAsResult = nil
		dst.Membercloudsync = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetMembercloudsyncResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetMembercloudsyncResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetMembercloudsyncResponse) MarshalJSON() ([]byte, error) {
	if src.GetMembercloudsyncResponseObjectAsResult != nil {
		return json.Marshal(&src.GetMembercloudsyncResponseObjectAsResult)
	}

	if src.Membercloudsync != nil {
		return json.Marshal(&src.Membercloudsync)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetMembercloudsyncResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GetMembercloudsyncResponseObjectAsResult != nil {
		return obj.GetMembercloudsyncResponseObjectAsResult
	}

	if obj.Membercloudsync != nil {
		return obj.Membercloudsync
	}

	// all schemas are nil
	return nil
}

type NullableGetMembercloudsyncResponse struct {
	value *GetMembercloudsyncResponse
	isSet bool
}

func (v NullableGetMembercloudsyncResponse) Get() *GetMembercloudsyncResponse {
	return v.value
}

func (v *NullableGetMembercloudsyncResponse) Set(val *GetMembercloudsyncResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMembercloudsyncResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMembercloudsyncResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMembercloudsyncResponse(val *GetMembercloudsyncResponse) *NullableGetMembercloudsyncResponse {
	return &NullableGetMembercloudsyncResponse{value: val, isSet: true}
}

func (v NullableGetMembercloudsyncResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMembercloudsyncResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
