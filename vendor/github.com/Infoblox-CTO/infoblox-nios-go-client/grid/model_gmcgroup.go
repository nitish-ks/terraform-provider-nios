/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the Gmcgroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Gmcgroup{}

// Gmcgroup struct for Gmcgroup
type Gmcgroup struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// Description of the group
	Comment *string `json:"comment,omitempty"`
	// This field decides whether the members join back at the same time or sequentially with time gap of 30 seconds.
	GmcPromotionPolicy *string `json:"gmc_promotion_policy,omitempty"`
	// gmcgroup members
	Members []GmcgroupMembers `json:"members,omitempty"`
	// Group name
	Name *string `json:"name,omitempty"`
	// Absolute time at which the reconnect starts
	ScheduledTime *int64 `json:"scheduled_time,omitempty"`
	// The time zone for scheduling operations.
	TimeZone *string `json:"time_zone,omitempty"`
}

// NewGmcgroup instantiates a new Gmcgroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGmcgroup() *Gmcgroup {
	this := Gmcgroup{}
	return &this
}

// NewGmcgroupWithDefaults instantiates a new Gmcgroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGmcgroupWithDefaults() *Gmcgroup {
	this := Gmcgroup{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *Gmcgroup) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gmcgroup) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *Gmcgroup) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *Gmcgroup) SetRef(v string) {
	o.Ref = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *Gmcgroup) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gmcgroup) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *Gmcgroup) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *Gmcgroup) SetComment(v string) {
	o.Comment = &v
}

// GetGmcPromotionPolicy returns the GmcPromotionPolicy field value if set, zero value otherwise.
func (o *Gmcgroup) GetGmcPromotionPolicy() string {
	if o == nil || IsNil(o.GmcPromotionPolicy) {
		var ret string
		return ret
	}
	return *o.GmcPromotionPolicy
}

// GetGmcPromotionPolicyOk returns a tuple with the GmcPromotionPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gmcgroup) GetGmcPromotionPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.GmcPromotionPolicy) {
		return nil, false
	}
	return o.GmcPromotionPolicy, true
}

// HasGmcPromotionPolicy returns a boolean if a field has been set.
func (o *Gmcgroup) HasGmcPromotionPolicy() bool {
	if o != nil && !IsNil(o.GmcPromotionPolicy) {
		return true
	}

	return false
}

// SetGmcPromotionPolicy gets a reference to the given string and assigns it to the GmcPromotionPolicy field.
func (o *Gmcgroup) SetGmcPromotionPolicy(v string) {
	o.GmcPromotionPolicy = &v
}

// GetMembers returns the Members field value if set, zero value otherwise.
func (o *Gmcgroup) GetMembers() []GmcgroupMembers {
	if o == nil || IsNil(o.Members) {
		var ret []GmcgroupMembers
		return ret
	}
	return o.Members
}

// GetMembersOk returns a tuple with the Members field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gmcgroup) GetMembersOk() ([]GmcgroupMembers, bool) {
	if o == nil || IsNil(o.Members) {
		return nil, false
	}
	return o.Members, true
}

// HasMembers returns a boolean if a field has been set.
func (o *Gmcgroup) HasMembers() bool {
	if o != nil && !IsNil(o.Members) {
		return true
	}

	return false
}

// SetMembers gets a reference to the given []GmcgroupMembers and assigns it to the Members field.
func (o *Gmcgroup) SetMembers(v []GmcgroupMembers) {
	o.Members = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Gmcgroup) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gmcgroup) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Gmcgroup) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Gmcgroup) SetName(v string) {
	o.Name = &v
}

// GetScheduledTime returns the ScheduledTime field value if set, zero value otherwise.
func (o *Gmcgroup) GetScheduledTime() int64 {
	if o == nil || IsNil(o.ScheduledTime) {
		var ret int64
		return ret
	}
	return *o.ScheduledTime
}

// GetScheduledTimeOk returns a tuple with the ScheduledTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gmcgroup) GetScheduledTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.ScheduledTime) {
		return nil, false
	}
	return o.ScheduledTime, true
}

// HasScheduledTime returns a boolean if a field has been set.
func (o *Gmcgroup) HasScheduledTime() bool {
	if o != nil && !IsNil(o.ScheduledTime) {
		return true
	}

	return false
}

// SetScheduledTime gets a reference to the given int64 and assigns it to the ScheduledTime field.
func (o *Gmcgroup) SetScheduledTime(v int64) {
	o.ScheduledTime = &v
}

// GetTimeZone returns the TimeZone field value if set, zero value otherwise.
func (o *Gmcgroup) GetTimeZone() string {
	if o == nil || IsNil(o.TimeZone) {
		var ret string
		return ret
	}
	return *o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gmcgroup) GetTimeZoneOk() (*string, bool) {
	if o == nil || IsNil(o.TimeZone) {
		return nil, false
	}
	return o.TimeZone, true
}

// HasTimeZone returns a boolean if a field has been set.
func (o *Gmcgroup) HasTimeZone() bool {
	if o != nil && !IsNil(o.TimeZone) {
		return true
	}

	return false
}

// SetTimeZone gets a reference to the given string and assigns it to the TimeZone field.
func (o *Gmcgroup) SetTimeZone(v string) {
	o.TimeZone = &v
}

func (o Gmcgroup) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Gmcgroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.GmcPromotionPolicy) {
		toSerialize["gmc_promotion_policy"] = o.GmcPromotionPolicy
	}
	if !IsNil(o.Members) {
		toSerialize["members"] = o.Members
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ScheduledTime) {
		toSerialize["scheduled_time"] = o.ScheduledTime
	}
	if !IsNil(o.TimeZone) {
		toSerialize["time_zone"] = o.TimeZone
	}
	return toSerialize, nil
}

type NullableGmcgroup struct {
	value *Gmcgroup
	isSet bool
}

func (v NullableGmcgroup) Get() *Gmcgroup {
	return v.value
}

func (v *NullableGmcgroup) Set(val *Gmcgroup) {
	v.value = val
	v.isSet = true
}

func (v NullableGmcgroup) IsSet() bool {
	return v.isSet
}

func (v *NullableGmcgroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGmcgroup(val *Gmcgroup) *NullableGmcgroup {
	return &NullableGmcgroup{value: val, isSet: true}
}

func (v NullableGmcgroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGmcgroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
