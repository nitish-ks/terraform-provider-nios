/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the Grid type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Grid{}

// Grid struct for Grid
type Grid struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// The property to allow recursive deletion. Determines the users who can choose to perform recursive deletion on networks or zones from the GUI only.
	AllowRecursiveDeletion *string `json:"allow_recursive_deletion,omitempty"`
	// Determines the audit log format.
	AuditLogFormat *string `json:"audit_log_format,omitempty"`
	// If set to True, audit log messages are also copied to the syslog.
	AuditToSyslogEnable            *bool                               `json:"audit_to_syslog_enable,omitempty"`
	AutomatedTrafficCaptureSetting *GridAutomatedTrafficCaptureSetting `json:"automated_traffic_capture_setting,omitempty"`
	ConsentBannerSetting           *GridConsentBannerSetting           `json:"consent_banner_setting,omitempty"`
	ControlIpAddress               map[string]interface{}              `json:"control_ip_address,omitempty"`
	CspApiConfig                   *GridCspApiConfig                   `json:"csp_api_config,omitempty"`
	CspGridSetting                 *GridCspGridSetting                 `json:"csp_grid_setting,omitempty"`
	// If set to True, the managed Grid will not send snapshots to the Multi-Grid Master.
	DenyMgmSnapshots   *bool                   `json:"deny_mgm_snapshots,omitempty"`
	DescendantsAction  *GridDescendantsAction  `json:"descendants_action,omitempty"`
	DnsResolverSetting *GridDnsResolverSetting `json:"dns_resolver_setting,omitempty"`
	// The DSCP value. Valid values are integers between 0 and 63 inclusive.
	Dscp            *int64                 `json:"dscp,omitempty"`
	EmailSetting    *GridEmailSetting      `json:"email_setting,omitempty"`
	EmptyRecycleBin map[string]interface{} `json:"empty_recycle_bin,omitempty"`
	// Determines if the federation feature is enabled or not. Test Setting will be performed for any change in enable_federation.
	EnableFederation *bool `json:"enable_federation,omitempty"`
	// Determines if the force sync join token from GM to GMC is enabled or not.
	EnableForceSyncJoinTokenToGmc *bool `json:"enable_force_sync_join_token_to_gmc,omitempty"`
	// If set to True, GUI and API access are enabled on the LAN/VIP port and MGMT port (if configured).
	EnableGuiApiForLanVip *bool `json:"enable_gui_api_for_lan_vip,omitempty"`
	// Determines if the LOM functionality is enabled or not.
	EnableLom *bool `json:"enable_lom,omitempty"`
	// Determines redirections is enabled or not for members.
	EnableMemberRedirect *bool `json:"enable_member_redirect,omitempty"`
	// Determines if the Recycle Bin is enabled or not.
	EnableRecycleBin *bool `json:"enable_recycle_bin,omitempty"`
	// Determines if the RIR/SWIP support is enabled or not.
	EnableRirSwip *bool `json:"enable_rir_swip,omitempty"`
	// The list of external backup syslog servers.
	ExternalSyslogBackupServers []GridExternalSyslogBackupServers `json:"external_syslog_backup_servers,omitempty"`
	// If set to True, external syslog servers are enabled.
	ExternalSyslogServerEnable *bool                           `json:"external_syslog_server_enable,omitempty"`
	GenerateTsigKey            map[string]interface{}          `json:"generate_tsig_key,omitempty"`
	GetAllTemplateVendorId     map[string]interface{}          `json:"get_all_template_vendor_id,omitempty"`
	GetGridRevertStatus        map[string]interface{}          `json:"get_grid_revert_status,omitempty"`
	GetRpzThreatDetails        map[string]interface{}          `json:"get_rpz_threat_details,omitempty"`
	GetTemplateSchemaVersions  map[string]interface{}          `json:"get_template_schema_versions,omitempty"`
	HttpProxyServerSetting     *GridHttpProxyServerSetting     `json:"http_proxy_server_setting,omitempty"`
	InformationalBannerSetting *GridInformationalBannerSetting `json:"informational_banner_setting,omitempty"`
	// If set to True, graphical visualization of the Grid is enabled.
	IsGridVisualizationVisible *bool                  `json:"is_grid_visualization_visible,omitempty"`
	Join                       map[string]interface{} `json:"join,omitempty"`
	JoinMgm                    map[string]interface{} `json:"join_mgm,omitempty"`
	JoinMgmMod2                map[string]interface{} `json:"join_mgm_mod2,omitempty"`
	LeaveMgm                   map[string]interface{} `json:"leave_mgm,omitempty"`
	LockoutSetting             *GridLockoutSetting    `json:"lockout_setting,omitempty"`
	// The list of LOM users.
	LomUsers      []GridLomUsers         `json:"lom_users,omitempty"`
	MemberUpgrade map[string]interface{} `json:"member_upgrade,omitempty"`
	// Determines if strict delegate mode for the Grid managed by the Master Grid is enabled or not.
	MgmStrictDelegateMode *bool          `json:"mgm_strict_delegate_mode,omitempty"`
	MsSetting             *GridMsSetting `json:"ms_setting,omitempty"`
	// The grid name.
	Name *string `json:"name,omitempty"`
	// The list of all Network Address Translation (NAT) groups configured on the Grid.
	NatGroups                     []string                           `json:"nat_groups,omitempty"`
	NtpSetting                    *GridNtpSetting                    `json:"ntp_setting,omitempty"`
	ObjectsChangesTrackingSetting *GridObjectsChangesTrackingSetting `json:"objects_changes_tracking_setting,omitempty"`
	PasswordSetting               *GridPasswordSetting               `json:"password_setting,omitempty"`
	PublishChanges                map[string]interface{}             `json:"publish_changes,omitempty"`
	QueryFqdnOnMember             map[string]interface{}             `json:"query_fqdn_on_member,omitempty"`
	Requestrestartservicestatus   map[string]interface{}             `json:"requestrestartservicestatus,omitempty"`
	RestartBannerSetting          *GridRestartBannerSetting          `json:"restart_banner_setting,omitempty"`
	// The restart status for the Grid.
	RestartStatus   *string                `json:"restart_status,omitempty"`
	Restartservices map[string]interface{} `json:"restartservices,omitempty"`
	// The time interval (in seconds) that determines how often the appliance calculates the RPZ hit rate.
	RpzHitRateInterval *int64 `json:"rpz_hit_rate_interval,omitempty"`
	// The maximum number of incoming queries between the RPZ hit rate checks.
	RpzHitRateMaxQuery *int64 `json:"rpz_hit_rate_max_query,omitempty"`
	// The minimum number of incoming queries between the RPZ hit rate checks.
	RpzHitRateMinQuery *int64               `json:"rpz_hit_rate_min_query,omitempty"`
	ScheduledBackup    *GridScheduledBackup `json:"scheduled_backup,omitempty"`
	// The shared secret of the Grid. This is a write-only attribute.
	Secret                *string                    `json:"secret,omitempty"`
	SecurityBannerSetting *GridSecurityBannerSetting `json:"security_banner_setting,omitempty"`
	SecuritySetting       *GridSecuritySetting       `json:"security_setting,omitempty"`
	// Determines overall service status of the Grid.
	ServiceStatus     *string                `json:"service_status,omitempty"`
	SkipMemberUpgrade map[string]interface{} `json:"skip_member_upgrade,omitempty"`
	SnmpSetting       *GridSnmpSetting       `json:"snmp_setting,omitempty"`
	StartDiscovery    map[string]interface{} `json:"start_discovery,omitempty"`
	// Support bundle download timeout in seconds.
	SupportBundleDownloadTimeout *int64 `json:"support_bundle_download_timeout,omitempty"`
	// If 'audit_to_syslog_enable' is set to True, the facility that determines the processes and daemons from which the log messages are generated.
	SyslogFacility *string `json:"syslog_facility,omitempty"`
	// The list of external syslog servers.
	SyslogServers []GridSyslogServers `json:"syslog_servers,omitempty"`
	// The maximum size for the syslog file expressed in megabytes.
	SyslogSize                       *int64                 `json:"syslog_size,omitempty"`
	TestSyslogBackupServerConnection map[string]interface{} `json:"test_syslog_backup_server_connection,omitempty"`
	TestSyslogConnection             map[string]interface{} `json:"test_syslog_connection,omitempty"`
	// Determines the list of threshold traps. The user can only change the values for each trap or remove traps.
	ThresholdTraps []GridThresholdTraps `json:"threshold_traps,omitempty"`
	// The time zone of the Grid. The UTC string that represents the time zone, such as \"US/Eastern\".
	TimeZone *string `json:"time_zone,omitempty"`
	// The delayed usage (in minutes) of a permission token.
	TokenUsageDelay                 *int64                               `json:"token_usage_delay,omitempty"`
	TrafficCaptureAuthDnsSetting    *GridTrafficCaptureAuthDnsSetting    `json:"traffic_capture_auth_dns_setting,omitempty"`
	TrafficCaptureChrSetting        *GridTrafficCaptureChrSetting        `json:"traffic_capture_chr_setting,omitempty"`
	TrafficCaptureQpsSetting        *GridTrafficCaptureQpsSetting        `json:"traffic_capture_qps_setting,omitempty"`
	TrafficCaptureRecDnsSetting     *GridTrafficCaptureRecDnsSetting     `json:"traffic_capture_rec_dns_setting,omitempty"`
	TrafficCaptureRecQueriesSetting *GridTrafficCaptureRecQueriesSetting `json:"traffic_capture_rec_queries_setting,omitempty"`
	// Determines configuration of the trap notifications.
	TrapNotifications []GridTrapNotifications `json:"trap_notifications,omitempty"`
	// The list of member configuration structures, which provides information and settings for configuring the member that is responsible for downloading updates.
	UpdatesDownloadMemberConfig []GridUpdatesDownloadMemberConfig `json:"updates_download_member_config,omitempty"`
	Upgrade                     map[string]interface{}            `json:"upgrade,omitempty"`
	UpgradeGroupNow             map[string]interface{}            `json:"upgrade_group_now,omitempty"`
	UploadKeytab                map[string]interface{}            `json:"upload_keytab,omitempty"`
	Validatecertificates        map[string]interface{}            `json:"validatecertificates,omitempty"`
	// The VPN port.
	VpnPort *int64 `json:"vpn_port,omitempty"`
}

// NewGrid instantiates a new Grid object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGrid() *Grid {
	this := Grid{}
	return &this
}

// NewGridWithDefaults instantiates a new Grid object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGridWithDefaults() *Grid {
	this := Grid{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *Grid) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *Grid) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *Grid) SetRef(v string) {
	o.Ref = &v
}

// GetAllowRecursiveDeletion returns the AllowRecursiveDeletion field value if set, zero value otherwise.
func (o *Grid) GetAllowRecursiveDeletion() string {
	if o == nil || IsNil(o.AllowRecursiveDeletion) {
		var ret string
		return ret
	}
	return *o.AllowRecursiveDeletion
}

// GetAllowRecursiveDeletionOk returns a tuple with the AllowRecursiveDeletion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetAllowRecursiveDeletionOk() (*string, bool) {
	if o == nil || IsNil(o.AllowRecursiveDeletion) {
		return nil, false
	}
	return o.AllowRecursiveDeletion, true
}

// HasAllowRecursiveDeletion returns a boolean if a field has been set.
func (o *Grid) HasAllowRecursiveDeletion() bool {
	if o != nil && !IsNil(o.AllowRecursiveDeletion) {
		return true
	}

	return false
}

// SetAllowRecursiveDeletion gets a reference to the given string and assigns it to the AllowRecursiveDeletion field.
func (o *Grid) SetAllowRecursiveDeletion(v string) {
	o.AllowRecursiveDeletion = &v
}

// GetAuditLogFormat returns the AuditLogFormat field value if set, zero value otherwise.
func (o *Grid) GetAuditLogFormat() string {
	if o == nil || IsNil(o.AuditLogFormat) {
		var ret string
		return ret
	}
	return *o.AuditLogFormat
}

// GetAuditLogFormatOk returns a tuple with the AuditLogFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetAuditLogFormatOk() (*string, bool) {
	if o == nil || IsNil(o.AuditLogFormat) {
		return nil, false
	}
	return o.AuditLogFormat, true
}

// HasAuditLogFormat returns a boolean if a field has been set.
func (o *Grid) HasAuditLogFormat() bool {
	if o != nil && !IsNil(o.AuditLogFormat) {
		return true
	}

	return false
}

// SetAuditLogFormat gets a reference to the given string and assigns it to the AuditLogFormat field.
func (o *Grid) SetAuditLogFormat(v string) {
	o.AuditLogFormat = &v
}

// GetAuditToSyslogEnable returns the AuditToSyslogEnable field value if set, zero value otherwise.
func (o *Grid) GetAuditToSyslogEnable() bool {
	if o == nil || IsNil(o.AuditToSyslogEnable) {
		var ret bool
		return ret
	}
	return *o.AuditToSyslogEnable
}

// GetAuditToSyslogEnableOk returns a tuple with the AuditToSyslogEnable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetAuditToSyslogEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.AuditToSyslogEnable) {
		return nil, false
	}
	return o.AuditToSyslogEnable, true
}

// HasAuditToSyslogEnable returns a boolean if a field has been set.
func (o *Grid) HasAuditToSyslogEnable() bool {
	if o != nil && !IsNil(o.AuditToSyslogEnable) {
		return true
	}

	return false
}

// SetAuditToSyslogEnable gets a reference to the given bool and assigns it to the AuditToSyslogEnable field.
func (o *Grid) SetAuditToSyslogEnable(v bool) {
	o.AuditToSyslogEnable = &v
}

// GetAutomatedTrafficCaptureSetting returns the AutomatedTrafficCaptureSetting field value if set, zero value otherwise.
func (o *Grid) GetAutomatedTrafficCaptureSetting() GridAutomatedTrafficCaptureSetting {
	if o == nil || IsNil(o.AutomatedTrafficCaptureSetting) {
		var ret GridAutomatedTrafficCaptureSetting
		return ret
	}
	return *o.AutomatedTrafficCaptureSetting
}

// GetAutomatedTrafficCaptureSettingOk returns a tuple with the AutomatedTrafficCaptureSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetAutomatedTrafficCaptureSettingOk() (*GridAutomatedTrafficCaptureSetting, bool) {
	if o == nil || IsNil(o.AutomatedTrafficCaptureSetting) {
		return nil, false
	}
	return o.AutomatedTrafficCaptureSetting, true
}

// HasAutomatedTrafficCaptureSetting returns a boolean if a field has been set.
func (o *Grid) HasAutomatedTrafficCaptureSetting() bool {
	if o != nil && !IsNil(o.AutomatedTrafficCaptureSetting) {
		return true
	}

	return false
}

// SetAutomatedTrafficCaptureSetting gets a reference to the given GridAutomatedTrafficCaptureSetting and assigns it to the AutomatedTrafficCaptureSetting field.
func (o *Grid) SetAutomatedTrafficCaptureSetting(v GridAutomatedTrafficCaptureSetting) {
	o.AutomatedTrafficCaptureSetting = &v
}

// GetConsentBannerSetting returns the ConsentBannerSetting field value if set, zero value otherwise.
func (o *Grid) GetConsentBannerSetting() GridConsentBannerSetting {
	if o == nil || IsNil(o.ConsentBannerSetting) {
		var ret GridConsentBannerSetting
		return ret
	}
	return *o.ConsentBannerSetting
}

// GetConsentBannerSettingOk returns a tuple with the ConsentBannerSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetConsentBannerSettingOk() (*GridConsentBannerSetting, bool) {
	if o == nil || IsNil(o.ConsentBannerSetting) {
		return nil, false
	}
	return o.ConsentBannerSetting, true
}

// HasConsentBannerSetting returns a boolean if a field has been set.
func (o *Grid) HasConsentBannerSetting() bool {
	if o != nil && !IsNil(o.ConsentBannerSetting) {
		return true
	}

	return false
}

// SetConsentBannerSetting gets a reference to the given GridConsentBannerSetting and assigns it to the ConsentBannerSetting field.
func (o *Grid) SetConsentBannerSetting(v GridConsentBannerSetting) {
	o.ConsentBannerSetting = &v
}

// GetControlIpAddress returns the ControlIpAddress field value if set, zero value otherwise.
func (o *Grid) GetControlIpAddress() map[string]interface{} {
	if o == nil || IsNil(o.ControlIpAddress) {
		var ret map[string]interface{}
		return ret
	}
	return o.ControlIpAddress
}

// GetControlIpAddressOk returns a tuple with the ControlIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetControlIpAddressOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ControlIpAddress) {
		return map[string]interface{}{}, false
	}
	return o.ControlIpAddress, true
}

// HasControlIpAddress returns a boolean if a field has been set.
func (o *Grid) HasControlIpAddress() bool {
	if o != nil && !IsNil(o.ControlIpAddress) {
		return true
	}

	return false
}

// SetControlIpAddress gets a reference to the given map[string]interface{} and assigns it to the ControlIpAddress field.
func (o *Grid) SetControlIpAddress(v map[string]interface{}) {
	o.ControlIpAddress = v
}

// GetCspApiConfig returns the CspApiConfig field value if set, zero value otherwise.
func (o *Grid) GetCspApiConfig() GridCspApiConfig {
	if o == nil || IsNil(o.CspApiConfig) {
		var ret GridCspApiConfig
		return ret
	}
	return *o.CspApiConfig
}

// GetCspApiConfigOk returns a tuple with the CspApiConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetCspApiConfigOk() (*GridCspApiConfig, bool) {
	if o == nil || IsNil(o.CspApiConfig) {
		return nil, false
	}
	return o.CspApiConfig, true
}

// HasCspApiConfig returns a boolean if a field has been set.
func (o *Grid) HasCspApiConfig() bool {
	if o != nil && !IsNil(o.CspApiConfig) {
		return true
	}

	return false
}

// SetCspApiConfig gets a reference to the given GridCspApiConfig and assigns it to the CspApiConfig field.
func (o *Grid) SetCspApiConfig(v GridCspApiConfig) {
	o.CspApiConfig = &v
}

// GetCspGridSetting returns the CspGridSetting field value if set, zero value otherwise.
func (o *Grid) GetCspGridSetting() GridCspGridSetting {
	if o == nil || IsNil(o.CspGridSetting) {
		var ret GridCspGridSetting
		return ret
	}
	return *o.CspGridSetting
}

// GetCspGridSettingOk returns a tuple with the CspGridSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetCspGridSettingOk() (*GridCspGridSetting, bool) {
	if o == nil || IsNil(o.CspGridSetting) {
		return nil, false
	}
	return o.CspGridSetting, true
}

// HasCspGridSetting returns a boolean if a field has been set.
func (o *Grid) HasCspGridSetting() bool {
	if o != nil && !IsNil(o.CspGridSetting) {
		return true
	}

	return false
}

// SetCspGridSetting gets a reference to the given GridCspGridSetting and assigns it to the CspGridSetting field.
func (o *Grid) SetCspGridSetting(v GridCspGridSetting) {
	o.CspGridSetting = &v
}

// GetDenyMgmSnapshots returns the DenyMgmSnapshots field value if set, zero value otherwise.
func (o *Grid) GetDenyMgmSnapshots() bool {
	if o == nil || IsNil(o.DenyMgmSnapshots) {
		var ret bool
		return ret
	}
	return *o.DenyMgmSnapshots
}

// GetDenyMgmSnapshotsOk returns a tuple with the DenyMgmSnapshots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetDenyMgmSnapshotsOk() (*bool, bool) {
	if o == nil || IsNil(o.DenyMgmSnapshots) {
		return nil, false
	}
	return o.DenyMgmSnapshots, true
}

// HasDenyMgmSnapshots returns a boolean if a field has been set.
func (o *Grid) HasDenyMgmSnapshots() bool {
	if o != nil && !IsNil(o.DenyMgmSnapshots) {
		return true
	}

	return false
}

// SetDenyMgmSnapshots gets a reference to the given bool and assigns it to the DenyMgmSnapshots field.
func (o *Grid) SetDenyMgmSnapshots(v bool) {
	o.DenyMgmSnapshots = &v
}

// GetDescendantsAction returns the DescendantsAction field value if set, zero value otherwise.
func (o *Grid) GetDescendantsAction() GridDescendantsAction {
	if o == nil || IsNil(o.DescendantsAction) {
		var ret GridDescendantsAction
		return ret
	}
	return *o.DescendantsAction
}

// GetDescendantsActionOk returns a tuple with the DescendantsAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetDescendantsActionOk() (*GridDescendantsAction, bool) {
	if o == nil || IsNil(o.DescendantsAction) {
		return nil, false
	}
	return o.DescendantsAction, true
}

// HasDescendantsAction returns a boolean if a field has been set.
func (o *Grid) HasDescendantsAction() bool {
	if o != nil && !IsNil(o.DescendantsAction) {
		return true
	}

	return false
}

// SetDescendantsAction gets a reference to the given GridDescendantsAction and assigns it to the DescendantsAction field.
func (o *Grid) SetDescendantsAction(v GridDescendantsAction) {
	o.DescendantsAction = &v
}

// GetDnsResolverSetting returns the DnsResolverSetting field value if set, zero value otherwise.
func (o *Grid) GetDnsResolverSetting() GridDnsResolverSetting {
	if o == nil || IsNil(o.DnsResolverSetting) {
		var ret GridDnsResolverSetting
		return ret
	}
	return *o.DnsResolverSetting
}

// GetDnsResolverSettingOk returns a tuple with the DnsResolverSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetDnsResolverSettingOk() (*GridDnsResolverSetting, bool) {
	if o == nil || IsNil(o.DnsResolverSetting) {
		return nil, false
	}
	return o.DnsResolverSetting, true
}

// HasDnsResolverSetting returns a boolean if a field has been set.
func (o *Grid) HasDnsResolverSetting() bool {
	if o != nil && !IsNil(o.DnsResolverSetting) {
		return true
	}

	return false
}

// SetDnsResolverSetting gets a reference to the given GridDnsResolverSetting and assigns it to the DnsResolverSetting field.
func (o *Grid) SetDnsResolverSetting(v GridDnsResolverSetting) {
	o.DnsResolverSetting = &v
}

// GetDscp returns the Dscp field value if set, zero value otherwise.
func (o *Grid) GetDscp() int64 {
	if o == nil || IsNil(o.Dscp) {
		var ret int64
		return ret
	}
	return *o.Dscp
}

// GetDscpOk returns a tuple with the Dscp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetDscpOk() (*int64, bool) {
	if o == nil || IsNil(o.Dscp) {
		return nil, false
	}
	return o.Dscp, true
}

// HasDscp returns a boolean if a field has been set.
func (o *Grid) HasDscp() bool {
	if o != nil && !IsNil(o.Dscp) {
		return true
	}

	return false
}

// SetDscp gets a reference to the given int64 and assigns it to the Dscp field.
func (o *Grid) SetDscp(v int64) {
	o.Dscp = &v
}

// GetEmailSetting returns the EmailSetting field value if set, zero value otherwise.
func (o *Grid) GetEmailSetting() GridEmailSetting {
	if o == nil || IsNil(o.EmailSetting) {
		var ret GridEmailSetting
		return ret
	}
	return *o.EmailSetting
}

// GetEmailSettingOk returns a tuple with the EmailSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetEmailSettingOk() (*GridEmailSetting, bool) {
	if o == nil || IsNil(o.EmailSetting) {
		return nil, false
	}
	return o.EmailSetting, true
}

// HasEmailSetting returns a boolean if a field has been set.
func (o *Grid) HasEmailSetting() bool {
	if o != nil && !IsNil(o.EmailSetting) {
		return true
	}

	return false
}

// SetEmailSetting gets a reference to the given GridEmailSetting and assigns it to the EmailSetting field.
func (o *Grid) SetEmailSetting(v GridEmailSetting) {
	o.EmailSetting = &v
}

// GetEmptyRecycleBin returns the EmptyRecycleBin field value if set, zero value otherwise.
func (o *Grid) GetEmptyRecycleBin() map[string]interface{} {
	if o == nil || IsNil(o.EmptyRecycleBin) {
		var ret map[string]interface{}
		return ret
	}
	return o.EmptyRecycleBin
}

// GetEmptyRecycleBinOk returns a tuple with the EmptyRecycleBin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetEmptyRecycleBinOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.EmptyRecycleBin) {
		return map[string]interface{}{}, false
	}
	return o.EmptyRecycleBin, true
}

// HasEmptyRecycleBin returns a boolean if a field has been set.
func (o *Grid) HasEmptyRecycleBin() bool {
	if o != nil && !IsNil(o.EmptyRecycleBin) {
		return true
	}

	return false
}

// SetEmptyRecycleBin gets a reference to the given map[string]interface{} and assigns it to the EmptyRecycleBin field.
func (o *Grid) SetEmptyRecycleBin(v map[string]interface{}) {
	o.EmptyRecycleBin = v
}

// GetEnableFederation returns the EnableFederation field value if set, zero value otherwise.
func (o *Grid) GetEnableFederation() bool {
	if o == nil || IsNil(o.EnableFederation) {
		var ret bool
		return ret
	}
	return *o.EnableFederation
}

// GetEnableFederationOk returns a tuple with the EnableFederation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetEnableFederationOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableFederation) {
		return nil, false
	}
	return o.EnableFederation, true
}

// HasEnableFederation returns a boolean if a field has been set.
func (o *Grid) HasEnableFederation() bool {
	if o != nil && !IsNil(o.EnableFederation) {
		return true
	}

	return false
}

// SetEnableFederation gets a reference to the given bool and assigns it to the EnableFederation field.
func (o *Grid) SetEnableFederation(v bool) {
	o.EnableFederation = &v
}

// GetEnableForceSyncJoinTokenToGmc returns the EnableForceSyncJoinTokenToGmc field value if set, zero value otherwise.
func (o *Grid) GetEnableForceSyncJoinTokenToGmc() bool {
	if o == nil || IsNil(o.EnableForceSyncJoinTokenToGmc) {
		var ret bool
		return ret
	}
	return *o.EnableForceSyncJoinTokenToGmc
}

// GetEnableForceSyncJoinTokenToGmcOk returns a tuple with the EnableForceSyncJoinTokenToGmc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetEnableForceSyncJoinTokenToGmcOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableForceSyncJoinTokenToGmc) {
		return nil, false
	}
	return o.EnableForceSyncJoinTokenToGmc, true
}

// HasEnableForceSyncJoinTokenToGmc returns a boolean if a field has been set.
func (o *Grid) HasEnableForceSyncJoinTokenToGmc() bool {
	if o != nil && !IsNil(o.EnableForceSyncJoinTokenToGmc) {
		return true
	}

	return false
}

// SetEnableForceSyncJoinTokenToGmc gets a reference to the given bool and assigns it to the EnableForceSyncJoinTokenToGmc field.
func (o *Grid) SetEnableForceSyncJoinTokenToGmc(v bool) {
	o.EnableForceSyncJoinTokenToGmc = &v
}

// GetEnableGuiApiForLanVip returns the EnableGuiApiForLanVip field value if set, zero value otherwise.
func (o *Grid) GetEnableGuiApiForLanVip() bool {
	if o == nil || IsNil(o.EnableGuiApiForLanVip) {
		var ret bool
		return ret
	}
	return *o.EnableGuiApiForLanVip
}

// GetEnableGuiApiForLanVipOk returns a tuple with the EnableGuiApiForLanVip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetEnableGuiApiForLanVipOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableGuiApiForLanVip) {
		return nil, false
	}
	return o.EnableGuiApiForLanVip, true
}

// HasEnableGuiApiForLanVip returns a boolean if a field has been set.
func (o *Grid) HasEnableGuiApiForLanVip() bool {
	if o != nil && !IsNil(o.EnableGuiApiForLanVip) {
		return true
	}

	return false
}

// SetEnableGuiApiForLanVip gets a reference to the given bool and assigns it to the EnableGuiApiForLanVip field.
func (o *Grid) SetEnableGuiApiForLanVip(v bool) {
	o.EnableGuiApiForLanVip = &v
}

// GetEnableLom returns the EnableLom field value if set, zero value otherwise.
func (o *Grid) GetEnableLom() bool {
	if o == nil || IsNil(o.EnableLom) {
		var ret bool
		return ret
	}
	return *o.EnableLom
}

// GetEnableLomOk returns a tuple with the EnableLom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetEnableLomOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableLom) {
		return nil, false
	}
	return o.EnableLom, true
}

// HasEnableLom returns a boolean if a field has been set.
func (o *Grid) HasEnableLom() bool {
	if o != nil && !IsNil(o.EnableLom) {
		return true
	}

	return false
}

// SetEnableLom gets a reference to the given bool and assigns it to the EnableLom field.
func (o *Grid) SetEnableLom(v bool) {
	o.EnableLom = &v
}

// GetEnableMemberRedirect returns the EnableMemberRedirect field value if set, zero value otherwise.
func (o *Grid) GetEnableMemberRedirect() bool {
	if o == nil || IsNil(o.EnableMemberRedirect) {
		var ret bool
		return ret
	}
	return *o.EnableMemberRedirect
}

// GetEnableMemberRedirectOk returns a tuple with the EnableMemberRedirect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetEnableMemberRedirectOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableMemberRedirect) {
		return nil, false
	}
	return o.EnableMemberRedirect, true
}

// HasEnableMemberRedirect returns a boolean if a field has been set.
func (o *Grid) HasEnableMemberRedirect() bool {
	if o != nil && !IsNil(o.EnableMemberRedirect) {
		return true
	}

	return false
}

// SetEnableMemberRedirect gets a reference to the given bool and assigns it to the EnableMemberRedirect field.
func (o *Grid) SetEnableMemberRedirect(v bool) {
	o.EnableMemberRedirect = &v
}

// GetEnableRecycleBin returns the EnableRecycleBin field value if set, zero value otherwise.
func (o *Grid) GetEnableRecycleBin() bool {
	if o == nil || IsNil(o.EnableRecycleBin) {
		var ret bool
		return ret
	}
	return *o.EnableRecycleBin
}

// GetEnableRecycleBinOk returns a tuple with the EnableRecycleBin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetEnableRecycleBinOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableRecycleBin) {
		return nil, false
	}
	return o.EnableRecycleBin, true
}

// HasEnableRecycleBin returns a boolean if a field has been set.
func (o *Grid) HasEnableRecycleBin() bool {
	if o != nil && !IsNil(o.EnableRecycleBin) {
		return true
	}

	return false
}

// SetEnableRecycleBin gets a reference to the given bool and assigns it to the EnableRecycleBin field.
func (o *Grid) SetEnableRecycleBin(v bool) {
	o.EnableRecycleBin = &v
}

// GetEnableRirSwip returns the EnableRirSwip field value if set, zero value otherwise.
func (o *Grid) GetEnableRirSwip() bool {
	if o == nil || IsNil(o.EnableRirSwip) {
		var ret bool
		return ret
	}
	return *o.EnableRirSwip
}

// GetEnableRirSwipOk returns a tuple with the EnableRirSwip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetEnableRirSwipOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableRirSwip) {
		return nil, false
	}
	return o.EnableRirSwip, true
}

// HasEnableRirSwip returns a boolean if a field has been set.
func (o *Grid) HasEnableRirSwip() bool {
	if o != nil && !IsNil(o.EnableRirSwip) {
		return true
	}

	return false
}

// SetEnableRirSwip gets a reference to the given bool and assigns it to the EnableRirSwip field.
func (o *Grid) SetEnableRirSwip(v bool) {
	o.EnableRirSwip = &v
}

// GetExternalSyslogBackupServers returns the ExternalSyslogBackupServers field value if set, zero value otherwise.
func (o *Grid) GetExternalSyslogBackupServers() []GridExternalSyslogBackupServers {
	if o == nil || IsNil(o.ExternalSyslogBackupServers) {
		var ret []GridExternalSyslogBackupServers
		return ret
	}
	return o.ExternalSyslogBackupServers
}

// GetExternalSyslogBackupServersOk returns a tuple with the ExternalSyslogBackupServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetExternalSyslogBackupServersOk() ([]GridExternalSyslogBackupServers, bool) {
	if o == nil || IsNil(o.ExternalSyslogBackupServers) {
		return nil, false
	}
	return o.ExternalSyslogBackupServers, true
}

// HasExternalSyslogBackupServers returns a boolean if a field has been set.
func (o *Grid) HasExternalSyslogBackupServers() bool {
	if o != nil && !IsNil(o.ExternalSyslogBackupServers) {
		return true
	}

	return false
}

// SetExternalSyslogBackupServers gets a reference to the given []GridExternalSyslogBackupServers and assigns it to the ExternalSyslogBackupServers field.
func (o *Grid) SetExternalSyslogBackupServers(v []GridExternalSyslogBackupServers) {
	o.ExternalSyslogBackupServers = v
}

// GetExternalSyslogServerEnable returns the ExternalSyslogServerEnable field value if set, zero value otherwise.
func (o *Grid) GetExternalSyslogServerEnable() bool {
	if o == nil || IsNil(o.ExternalSyslogServerEnable) {
		var ret bool
		return ret
	}
	return *o.ExternalSyslogServerEnable
}

// GetExternalSyslogServerEnableOk returns a tuple with the ExternalSyslogServerEnable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetExternalSyslogServerEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.ExternalSyslogServerEnable) {
		return nil, false
	}
	return o.ExternalSyslogServerEnable, true
}

// HasExternalSyslogServerEnable returns a boolean if a field has been set.
func (o *Grid) HasExternalSyslogServerEnable() bool {
	if o != nil && !IsNil(o.ExternalSyslogServerEnable) {
		return true
	}

	return false
}

// SetExternalSyslogServerEnable gets a reference to the given bool and assigns it to the ExternalSyslogServerEnable field.
func (o *Grid) SetExternalSyslogServerEnable(v bool) {
	o.ExternalSyslogServerEnable = &v
}

// GetGenerateTsigKey returns the GenerateTsigKey field value if set, zero value otherwise.
func (o *Grid) GetGenerateTsigKey() map[string]interface{} {
	if o == nil || IsNil(o.GenerateTsigKey) {
		var ret map[string]interface{}
		return ret
	}
	return o.GenerateTsigKey
}

// GetGenerateTsigKeyOk returns a tuple with the GenerateTsigKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetGenerateTsigKeyOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.GenerateTsigKey) {
		return map[string]interface{}{}, false
	}
	return o.GenerateTsigKey, true
}

// HasGenerateTsigKey returns a boolean if a field has been set.
func (o *Grid) HasGenerateTsigKey() bool {
	if o != nil && !IsNil(o.GenerateTsigKey) {
		return true
	}

	return false
}

// SetGenerateTsigKey gets a reference to the given map[string]interface{} and assigns it to the GenerateTsigKey field.
func (o *Grid) SetGenerateTsigKey(v map[string]interface{}) {
	o.GenerateTsigKey = v
}

// GetGetAllTemplateVendorId returns the GetAllTemplateVendorId field value if set, zero value otherwise.
func (o *Grid) GetGetAllTemplateVendorId() map[string]interface{} {
	if o == nil || IsNil(o.GetAllTemplateVendorId) {
		var ret map[string]interface{}
		return ret
	}
	return o.GetAllTemplateVendorId
}

// GetGetAllTemplateVendorIdOk returns a tuple with the GetAllTemplateVendorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetGetAllTemplateVendorIdOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.GetAllTemplateVendorId) {
		return map[string]interface{}{}, false
	}
	return o.GetAllTemplateVendorId, true
}

// HasGetAllTemplateVendorId returns a boolean if a field has been set.
func (o *Grid) HasGetAllTemplateVendorId() bool {
	if o != nil && !IsNil(o.GetAllTemplateVendorId) {
		return true
	}

	return false
}

// SetGetAllTemplateVendorId gets a reference to the given map[string]interface{} and assigns it to the GetAllTemplateVendorId field.
func (o *Grid) SetGetAllTemplateVendorId(v map[string]interface{}) {
	o.GetAllTemplateVendorId = v
}

// GetGetGridRevertStatus returns the GetGridRevertStatus field value if set, zero value otherwise.
func (o *Grid) GetGetGridRevertStatus() map[string]interface{} {
	if o == nil || IsNil(o.GetGridRevertStatus) {
		var ret map[string]interface{}
		return ret
	}
	return o.GetGridRevertStatus
}

// GetGetGridRevertStatusOk returns a tuple with the GetGridRevertStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetGetGridRevertStatusOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.GetGridRevertStatus) {
		return map[string]interface{}{}, false
	}
	return o.GetGridRevertStatus, true
}

// HasGetGridRevertStatus returns a boolean if a field has been set.
func (o *Grid) HasGetGridRevertStatus() bool {
	if o != nil && !IsNil(o.GetGridRevertStatus) {
		return true
	}

	return false
}

// SetGetGridRevertStatus gets a reference to the given map[string]interface{} and assigns it to the GetGridRevertStatus field.
func (o *Grid) SetGetGridRevertStatus(v map[string]interface{}) {
	o.GetGridRevertStatus = v
}

// GetGetRpzThreatDetails returns the GetRpzThreatDetails field value if set, zero value otherwise.
func (o *Grid) GetGetRpzThreatDetails() map[string]interface{} {
	if o == nil || IsNil(o.GetRpzThreatDetails) {
		var ret map[string]interface{}
		return ret
	}
	return o.GetRpzThreatDetails
}

// GetGetRpzThreatDetailsOk returns a tuple with the GetRpzThreatDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetGetRpzThreatDetailsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.GetRpzThreatDetails) {
		return map[string]interface{}{}, false
	}
	return o.GetRpzThreatDetails, true
}

// HasGetRpzThreatDetails returns a boolean if a field has been set.
func (o *Grid) HasGetRpzThreatDetails() bool {
	if o != nil && !IsNil(o.GetRpzThreatDetails) {
		return true
	}

	return false
}

// SetGetRpzThreatDetails gets a reference to the given map[string]interface{} and assigns it to the GetRpzThreatDetails field.
func (o *Grid) SetGetRpzThreatDetails(v map[string]interface{}) {
	o.GetRpzThreatDetails = v
}

// GetGetTemplateSchemaVersions returns the GetTemplateSchemaVersions field value if set, zero value otherwise.
func (o *Grid) GetGetTemplateSchemaVersions() map[string]interface{} {
	if o == nil || IsNil(o.GetTemplateSchemaVersions) {
		var ret map[string]interface{}
		return ret
	}
	return o.GetTemplateSchemaVersions
}

// GetGetTemplateSchemaVersionsOk returns a tuple with the GetTemplateSchemaVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetGetTemplateSchemaVersionsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.GetTemplateSchemaVersions) {
		return map[string]interface{}{}, false
	}
	return o.GetTemplateSchemaVersions, true
}

// HasGetTemplateSchemaVersions returns a boolean if a field has been set.
func (o *Grid) HasGetTemplateSchemaVersions() bool {
	if o != nil && !IsNil(o.GetTemplateSchemaVersions) {
		return true
	}

	return false
}

// SetGetTemplateSchemaVersions gets a reference to the given map[string]interface{} and assigns it to the GetTemplateSchemaVersions field.
func (o *Grid) SetGetTemplateSchemaVersions(v map[string]interface{}) {
	o.GetTemplateSchemaVersions = v
}

// GetHttpProxyServerSetting returns the HttpProxyServerSetting field value if set, zero value otherwise.
func (o *Grid) GetHttpProxyServerSetting() GridHttpProxyServerSetting {
	if o == nil || IsNil(o.HttpProxyServerSetting) {
		var ret GridHttpProxyServerSetting
		return ret
	}
	return *o.HttpProxyServerSetting
}

// GetHttpProxyServerSettingOk returns a tuple with the HttpProxyServerSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetHttpProxyServerSettingOk() (*GridHttpProxyServerSetting, bool) {
	if o == nil || IsNil(o.HttpProxyServerSetting) {
		return nil, false
	}
	return o.HttpProxyServerSetting, true
}

// HasHttpProxyServerSetting returns a boolean if a field has been set.
func (o *Grid) HasHttpProxyServerSetting() bool {
	if o != nil && !IsNil(o.HttpProxyServerSetting) {
		return true
	}

	return false
}

// SetHttpProxyServerSetting gets a reference to the given GridHttpProxyServerSetting and assigns it to the HttpProxyServerSetting field.
func (o *Grid) SetHttpProxyServerSetting(v GridHttpProxyServerSetting) {
	o.HttpProxyServerSetting = &v
}

// GetInformationalBannerSetting returns the InformationalBannerSetting field value if set, zero value otherwise.
func (o *Grid) GetInformationalBannerSetting() GridInformationalBannerSetting {
	if o == nil || IsNil(o.InformationalBannerSetting) {
		var ret GridInformationalBannerSetting
		return ret
	}
	return *o.InformationalBannerSetting
}

// GetInformationalBannerSettingOk returns a tuple with the InformationalBannerSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetInformationalBannerSettingOk() (*GridInformationalBannerSetting, bool) {
	if o == nil || IsNil(o.InformationalBannerSetting) {
		return nil, false
	}
	return o.InformationalBannerSetting, true
}

// HasInformationalBannerSetting returns a boolean if a field has been set.
func (o *Grid) HasInformationalBannerSetting() bool {
	if o != nil && !IsNil(o.InformationalBannerSetting) {
		return true
	}

	return false
}

// SetInformationalBannerSetting gets a reference to the given GridInformationalBannerSetting and assigns it to the InformationalBannerSetting field.
func (o *Grid) SetInformationalBannerSetting(v GridInformationalBannerSetting) {
	o.InformationalBannerSetting = &v
}

// GetIsGridVisualizationVisible returns the IsGridVisualizationVisible field value if set, zero value otherwise.
func (o *Grid) GetIsGridVisualizationVisible() bool {
	if o == nil || IsNil(o.IsGridVisualizationVisible) {
		var ret bool
		return ret
	}
	return *o.IsGridVisualizationVisible
}

// GetIsGridVisualizationVisibleOk returns a tuple with the IsGridVisualizationVisible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetIsGridVisualizationVisibleOk() (*bool, bool) {
	if o == nil || IsNil(o.IsGridVisualizationVisible) {
		return nil, false
	}
	return o.IsGridVisualizationVisible, true
}

// HasIsGridVisualizationVisible returns a boolean if a field has been set.
func (o *Grid) HasIsGridVisualizationVisible() bool {
	if o != nil && !IsNil(o.IsGridVisualizationVisible) {
		return true
	}

	return false
}

// SetIsGridVisualizationVisible gets a reference to the given bool and assigns it to the IsGridVisualizationVisible field.
func (o *Grid) SetIsGridVisualizationVisible(v bool) {
	o.IsGridVisualizationVisible = &v
}

// GetJoin returns the Join field value if set, zero value otherwise.
func (o *Grid) GetJoin() map[string]interface{} {
	if o == nil || IsNil(o.Join) {
		var ret map[string]interface{}
		return ret
	}
	return o.Join
}

// GetJoinOk returns a tuple with the Join field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetJoinOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Join) {
		return map[string]interface{}{}, false
	}
	return o.Join, true
}

// HasJoin returns a boolean if a field has been set.
func (o *Grid) HasJoin() bool {
	if o != nil && !IsNil(o.Join) {
		return true
	}

	return false
}

// SetJoin gets a reference to the given map[string]interface{} and assigns it to the Join field.
func (o *Grid) SetJoin(v map[string]interface{}) {
	o.Join = v
}

// GetJoinMgm returns the JoinMgm field value if set, zero value otherwise.
func (o *Grid) GetJoinMgm() map[string]interface{} {
	if o == nil || IsNil(o.JoinMgm) {
		var ret map[string]interface{}
		return ret
	}
	return o.JoinMgm
}

// GetJoinMgmOk returns a tuple with the JoinMgm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetJoinMgmOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.JoinMgm) {
		return map[string]interface{}{}, false
	}
	return o.JoinMgm, true
}

// HasJoinMgm returns a boolean if a field has been set.
func (o *Grid) HasJoinMgm() bool {
	if o != nil && !IsNil(o.JoinMgm) {
		return true
	}

	return false
}

// SetJoinMgm gets a reference to the given map[string]interface{} and assigns it to the JoinMgm field.
func (o *Grid) SetJoinMgm(v map[string]interface{}) {
	o.JoinMgm = v
}

// GetJoinMgmMod2 returns the JoinMgmMod2 field value if set, zero value otherwise.
func (o *Grid) GetJoinMgmMod2() map[string]interface{} {
	if o == nil || IsNil(o.JoinMgmMod2) {
		var ret map[string]interface{}
		return ret
	}
	return o.JoinMgmMod2
}

// GetJoinMgmMod2Ok returns a tuple with the JoinMgmMod2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetJoinMgmMod2Ok() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.JoinMgmMod2) {
		return map[string]interface{}{}, false
	}
	return o.JoinMgmMod2, true
}

// HasJoinMgmMod2 returns a boolean if a field has been set.
func (o *Grid) HasJoinMgmMod2() bool {
	if o != nil && !IsNil(o.JoinMgmMod2) {
		return true
	}

	return false
}

// SetJoinMgmMod2 gets a reference to the given map[string]interface{} and assigns it to the JoinMgmMod2 field.
func (o *Grid) SetJoinMgmMod2(v map[string]interface{}) {
	o.JoinMgmMod2 = v
}

// GetLeaveMgm returns the LeaveMgm field value if set, zero value otherwise.
func (o *Grid) GetLeaveMgm() map[string]interface{} {
	if o == nil || IsNil(o.LeaveMgm) {
		var ret map[string]interface{}
		return ret
	}
	return o.LeaveMgm
}

// GetLeaveMgmOk returns a tuple with the LeaveMgm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetLeaveMgmOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.LeaveMgm) {
		return map[string]interface{}{}, false
	}
	return o.LeaveMgm, true
}

// HasLeaveMgm returns a boolean if a field has been set.
func (o *Grid) HasLeaveMgm() bool {
	if o != nil && !IsNil(o.LeaveMgm) {
		return true
	}

	return false
}

// SetLeaveMgm gets a reference to the given map[string]interface{} and assigns it to the LeaveMgm field.
func (o *Grid) SetLeaveMgm(v map[string]interface{}) {
	o.LeaveMgm = v
}

// GetLockoutSetting returns the LockoutSetting field value if set, zero value otherwise.
func (o *Grid) GetLockoutSetting() GridLockoutSetting {
	if o == nil || IsNil(o.LockoutSetting) {
		var ret GridLockoutSetting
		return ret
	}
	return *o.LockoutSetting
}

// GetLockoutSettingOk returns a tuple with the LockoutSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetLockoutSettingOk() (*GridLockoutSetting, bool) {
	if o == nil || IsNil(o.LockoutSetting) {
		return nil, false
	}
	return o.LockoutSetting, true
}

// HasLockoutSetting returns a boolean if a field has been set.
func (o *Grid) HasLockoutSetting() bool {
	if o != nil && !IsNil(o.LockoutSetting) {
		return true
	}

	return false
}

// SetLockoutSetting gets a reference to the given GridLockoutSetting and assigns it to the LockoutSetting field.
func (o *Grid) SetLockoutSetting(v GridLockoutSetting) {
	o.LockoutSetting = &v
}

// GetLomUsers returns the LomUsers field value if set, zero value otherwise.
func (o *Grid) GetLomUsers() []GridLomUsers {
	if o == nil || IsNil(o.LomUsers) {
		var ret []GridLomUsers
		return ret
	}
	return o.LomUsers
}

// GetLomUsersOk returns a tuple with the LomUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetLomUsersOk() ([]GridLomUsers, bool) {
	if o == nil || IsNil(o.LomUsers) {
		return nil, false
	}
	return o.LomUsers, true
}

// HasLomUsers returns a boolean if a field has been set.
func (o *Grid) HasLomUsers() bool {
	if o != nil && !IsNil(o.LomUsers) {
		return true
	}

	return false
}

// SetLomUsers gets a reference to the given []GridLomUsers and assigns it to the LomUsers field.
func (o *Grid) SetLomUsers(v []GridLomUsers) {
	o.LomUsers = v
}

// GetMemberUpgrade returns the MemberUpgrade field value if set, zero value otherwise.
func (o *Grid) GetMemberUpgrade() map[string]interface{} {
	if o == nil || IsNil(o.MemberUpgrade) {
		var ret map[string]interface{}
		return ret
	}
	return o.MemberUpgrade
}

// GetMemberUpgradeOk returns a tuple with the MemberUpgrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetMemberUpgradeOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.MemberUpgrade) {
		return map[string]interface{}{}, false
	}
	return o.MemberUpgrade, true
}

// HasMemberUpgrade returns a boolean if a field has been set.
func (o *Grid) HasMemberUpgrade() bool {
	if o != nil && !IsNil(o.MemberUpgrade) {
		return true
	}

	return false
}

// SetMemberUpgrade gets a reference to the given map[string]interface{} and assigns it to the MemberUpgrade field.
func (o *Grid) SetMemberUpgrade(v map[string]interface{}) {
	o.MemberUpgrade = v
}

// GetMgmStrictDelegateMode returns the MgmStrictDelegateMode field value if set, zero value otherwise.
func (o *Grid) GetMgmStrictDelegateMode() bool {
	if o == nil || IsNil(o.MgmStrictDelegateMode) {
		var ret bool
		return ret
	}
	return *o.MgmStrictDelegateMode
}

// GetMgmStrictDelegateModeOk returns a tuple with the MgmStrictDelegateMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetMgmStrictDelegateModeOk() (*bool, bool) {
	if o == nil || IsNil(o.MgmStrictDelegateMode) {
		return nil, false
	}
	return o.MgmStrictDelegateMode, true
}

// HasMgmStrictDelegateMode returns a boolean if a field has been set.
func (o *Grid) HasMgmStrictDelegateMode() bool {
	if o != nil && !IsNil(o.MgmStrictDelegateMode) {
		return true
	}

	return false
}

// SetMgmStrictDelegateMode gets a reference to the given bool and assigns it to the MgmStrictDelegateMode field.
func (o *Grid) SetMgmStrictDelegateMode(v bool) {
	o.MgmStrictDelegateMode = &v
}

// GetMsSetting returns the MsSetting field value if set, zero value otherwise.
func (o *Grid) GetMsSetting() GridMsSetting {
	if o == nil || IsNil(o.MsSetting) {
		var ret GridMsSetting
		return ret
	}
	return *o.MsSetting
}

// GetMsSettingOk returns a tuple with the MsSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetMsSettingOk() (*GridMsSetting, bool) {
	if o == nil || IsNil(o.MsSetting) {
		return nil, false
	}
	return o.MsSetting, true
}

// HasMsSetting returns a boolean if a field has been set.
func (o *Grid) HasMsSetting() bool {
	if o != nil && !IsNil(o.MsSetting) {
		return true
	}

	return false
}

// SetMsSetting gets a reference to the given GridMsSetting and assigns it to the MsSetting field.
func (o *Grid) SetMsSetting(v GridMsSetting) {
	o.MsSetting = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Grid) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Grid) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Grid) SetName(v string) {
	o.Name = &v
}

// GetNatGroups returns the NatGroups field value if set, zero value otherwise.
func (o *Grid) GetNatGroups() []string {
	if o == nil || IsNil(o.NatGroups) {
		var ret []string
		return ret
	}
	return o.NatGroups
}

// GetNatGroupsOk returns a tuple with the NatGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetNatGroupsOk() ([]string, bool) {
	if o == nil || IsNil(o.NatGroups) {
		return nil, false
	}
	return o.NatGroups, true
}

// HasNatGroups returns a boolean if a field has been set.
func (o *Grid) HasNatGroups() bool {
	if o != nil && !IsNil(o.NatGroups) {
		return true
	}

	return false
}

// SetNatGroups gets a reference to the given []string and assigns it to the NatGroups field.
func (o *Grid) SetNatGroups(v []string) {
	o.NatGroups = v
}

// GetNtpSetting returns the NtpSetting field value if set, zero value otherwise.
func (o *Grid) GetNtpSetting() GridNtpSetting {
	if o == nil || IsNil(o.NtpSetting) {
		var ret GridNtpSetting
		return ret
	}
	return *o.NtpSetting
}

// GetNtpSettingOk returns a tuple with the NtpSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetNtpSettingOk() (*GridNtpSetting, bool) {
	if o == nil || IsNil(o.NtpSetting) {
		return nil, false
	}
	return o.NtpSetting, true
}

// HasNtpSetting returns a boolean if a field has been set.
func (o *Grid) HasNtpSetting() bool {
	if o != nil && !IsNil(o.NtpSetting) {
		return true
	}

	return false
}

// SetNtpSetting gets a reference to the given GridNtpSetting and assigns it to the NtpSetting field.
func (o *Grid) SetNtpSetting(v GridNtpSetting) {
	o.NtpSetting = &v
}

// GetObjectsChangesTrackingSetting returns the ObjectsChangesTrackingSetting field value if set, zero value otherwise.
func (o *Grid) GetObjectsChangesTrackingSetting() GridObjectsChangesTrackingSetting {
	if o == nil || IsNil(o.ObjectsChangesTrackingSetting) {
		var ret GridObjectsChangesTrackingSetting
		return ret
	}
	return *o.ObjectsChangesTrackingSetting
}

// GetObjectsChangesTrackingSettingOk returns a tuple with the ObjectsChangesTrackingSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetObjectsChangesTrackingSettingOk() (*GridObjectsChangesTrackingSetting, bool) {
	if o == nil || IsNil(o.ObjectsChangesTrackingSetting) {
		return nil, false
	}
	return o.ObjectsChangesTrackingSetting, true
}

// HasObjectsChangesTrackingSetting returns a boolean if a field has been set.
func (o *Grid) HasObjectsChangesTrackingSetting() bool {
	if o != nil && !IsNil(o.ObjectsChangesTrackingSetting) {
		return true
	}

	return false
}

// SetObjectsChangesTrackingSetting gets a reference to the given GridObjectsChangesTrackingSetting and assigns it to the ObjectsChangesTrackingSetting field.
func (o *Grid) SetObjectsChangesTrackingSetting(v GridObjectsChangesTrackingSetting) {
	o.ObjectsChangesTrackingSetting = &v
}

// GetPasswordSetting returns the PasswordSetting field value if set, zero value otherwise.
func (o *Grid) GetPasswordSetting() GridPasswordSetting {
	if o == nil || IsNil(o.PasswordSetting) {
		var ret GridPasswordSetting
		return ret
	}
	return *o.PasswordSetting
}

// GetPasswordSettingOk returns a tuple with the PasswordSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetPasswordSettingOk() (*GridPasswordSetting, bool) {
	if o == nil || IsNil(o.PasswordSetting) {
		return nil, false
	}
	return o.PasswordSetting, true
}

// HasPasswordSetting returns a boolean if a field has been set.
func (o *Grid) HasPasswordSetting() bool {
	if o != nil && !IsNil(o.PasswordSetting) {
		return true
	}

	return false
}

// SetPasswordSetting gets a reference to the given GridPasswordSetting and assigns it to the PasswordSetting field.
func (o *Grid) SetPasswordSetting(v GridPasswordSetting) {
	o.PasswordSetting = &v
}

// GetPublishChanges returns the PublishChanges field value if set, zero value otherwise.
func (o *Grid) GetPublishChanges() map[string]interface{} {
	if o == nil || IsNil(o.PublishChanges) {
		var ret map[string]interface{}
		return ret
	}
	return o.PublishChanges
}

// GetPublishChangesOk returns a tuple with the PublishChanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetPublishChangesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.PublishChanges) {
		return map[string]interface{}{}, false
	}
	return o.PublishChanges, true
}

// HasPublishChanges returns a boolean if a field has been set.
func (o *Grid) HasPublishChanges() bool {
	if o != nil && !IsNil(o.PublishChanges) {
		return true
	}

	return false
}

// SetPublishChanges gets a reference to the given map[string]interface{} and assigns it to the PublishChanges field.
func (o *Grid) SetPublishChanges(v map[string]interface{}) {
	o.PublishChanges = v
}

// GetQueryFqdnOnMember returns the QueryFqdnOnMember field value if set, zero value otherwise.
func (o *Grid) GetQueryFqdnOnMember() map[string]interface{} {
	if o == nil || IsNil(o.QueryFqdnOnMember) {
		var ret map[string]interface{}
		return ret
	}
	return o.QueryFqdnOnMember
}

// GetQueryFqdnOnMemberOk returns a tuple with the QueryFqdnOnMember field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetQueryFqdnOnMemberOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.QueryFqdnOnMember) {
		return map[string]interface{}{}, false
	}
	return o.QueryFqdnOnMember, true
}

// HasQueryFqdnOnMember returns a boolean if a field has been set.
func (o *Grid) HasQueryFqdnOnMember() bool {
	if o != nil && !IsNil(o.QueryFqdnOnMember) {
		return true
	}

	return false
}

// SetQueryFqdnOnMember gets a reference to the given map[string]interface{} and assigns it to the QueryFqdnOnMember field.
func (o *Grid) SetQueryFqdnOnMember(v map[string]interface{}) {
	o.QueryFqdnOnMember = v
}

// GetRequestrestartservicestatus returns the Requestrestartservicestatus field value if set, zero value otherwise.
func (o *Grid) GetRequestrestartservicestatus() map[string]interface{} {
	if o == nil || IsNil(o.Requestrestartservicestatus) {
		var ret map[string]interface{}
		return ret
	}
	return o.Requestrestartservicestatus
}

// GetRequestrestartservicestatusOk returns a tuple with the Requestrestartservicestatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetRequestrestartservicestatusOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Requestrestartservicestatus) {
		return map[string]interface{}{}, false
	}
	return o.Requestrestartservicestatus, true
}

// HasRequestrestartservicestatus returns a boolean if a field has been set.
func (o *Grid) HasRequestrestartservicestatus() bool {
	if o != nil && !IsNil(o.Requestrestartservicestatus) {
		return true
	}

	return false
}

// SetRequestrestartservicestatus gets a reference to the given map[string]interface{} and assigns it to the Requestrestartservicestatus field.
func (o *Grid) SetRequestrestartservicestatus(v map[string]interface{}) {
	o.Requestrestartservicestatus = v
}

// GetRestartBannerSetting returns the RestartBannerSetting field value if set, zero value otherwise.
func (o *Grid) GetRestartBannerSetting() GridRestartBannerSetting {
	if o == nil || IsNil(o.RestartBannerSetting) {
		var ret GridRestartBannerSetting
		return ret
	}
	return *o.RestartBannerSetting
}

// GetRestartBannerSettingOk returns a tuple with the RestartBannerSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetRestartBannerSettingOk() (*GridRestartBannerSetting, bool) {
	if o == nil || IsNil(o.RestartBannerSetting) {
		return nil, false
	}
	return o.RestartBannerSetting, true
}

// HasRestartBannerSetting returns a boolean if a field has been set.
func (o *Grid) HasRestartBannerSetting() bool {
	if o != nil && !IsNil(o.RestartBannerSetting) {
		return true
	}

	return false
}

// SetRestartBannerSetting gets a reference to the given GridRestartBannerSetting and assigns it to the RestartBannerSetting field.
func (o *Grid) SetRestartBannerSetting(v GridRestartBannerSetting) {
	o.RestartBannerSetting = &v
}

// GetRestartStatus returns the RestartStatus field value if set, zero value otherwise.
func (o *Grid) GetRestartStatus() string {
	if o == nil || IsNil(o.RestartStatus) {
		var ret string
		return ret
	}
	return *o.RestartStatus
}

// GetRestartStatusOk returns a tuple with the RestartStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetRestartStatusOk() (*string, bool) {
	if o == nil || IsNil(o.RestartStatus) {
		return nil, false
	}
	return o.RestartStatus, true
}

// HasRestartStatus returns a boolean if a field has been set.
func (o *Grid) HasRestartStatus() bool {
	if o != nil && !IsNil(o.RestartStatus) {
		return true
	}

	return false
}

// SetRestartStatus gets a reference to the given string and assigns it to the RestartStatus field.
func (o *Grid) SetRestartStatus(v string) {
	o.RestartStatus = &v
}

// GetRestartservices returns the Restartservices field value if set, zero value otherwise.
func (o *Grid) GetRestartservices() map[string]interface{} {
	if o == nil || IsNil(o.Restartservices) {
		var ret map[string]interface{}
		return ret
	}
	return o.Restartservices
}

// GetRestartservicesOk returns a tuple with the Restartservices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetRestartservicesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Restartservices) {
		return map[string]interface{}{}, false
	}
	return o.Restartservices, true
}

// HasRestartservices returns a boolean if a field has been set.
func (o *Grid) HasRestartservices() bool {
	if o != nil && !IsNil(o.Restartservices) {
		return true
	}

	return false
}

// SetRestartservices gets a reference to the given map[string]interface{} and assigns it to the Restartservices field.
func (o *Grid) SetRestartservices(v map[string]interface{}) {
	o.Restartservices = v
}

// GetRpzHitRateInterval returns the RpzHitRateInterval field value if set, zero value otherwise.
func (o *Grid) GetRpzHitRateInterval() int64 {
	if o == nil || IsNil(o.RpzHitRateInterval) {
		var ret int64
		return ret
	}
	return *o.RpzHitRateInterval
}

// GetRpzHitRateIntervalOk returns a tuple with the RpzHitRateInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetRpzHitRateIntervalOk() (*int64, bool) {
	if o == nil || IsNil(o.RpzHitRateInterval) {
		return nil, false
	}
	return o.RpzHitRateInterval, true
}

// HasRpzHitRateInterval returns a boolean if a field has been set.
func (o *Grid) HasRpzHitRateInterval() bool {
	if o != nil && !IsNil(o.RpzHitRateInterval) {
		return true
	}

	return false
}

// SetRpzHitRateInterval gets a reference to the given int64 and assigns it to the RpzHitRateInterval field.
func (o *Grid) SetRpzHitRateInterval(v int64) {
	o.RpzHitRateInterval = &v
}

// GetRpzHitRateMaxQuery returns the RpzHitRateMaxQuery field value if set, zero value otherwise.
func (o *Grid) GetRpzHitRateMaxQuery() int64 {
	if o == nil || IsNil(o.RpzHitRateMaxQuery) {
		var ret int64
		return ret
	}
	return *o.RpzHitRateMaxQuery
}

// GetRpzHitRateMaxQueryOk returns a tuple with the RpzHitRateMaxQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetRpzHitRateMaxQueryOk() (*int64, bool) {
	if o == nil || IsNil(o.RpzHitRateMaxQuery) {
		return nil, false
	}
	return o.RpzHitRateMaxQuery, true
}

// HasRpzHitRateMaxQuery returns a boolean if a field has been set.
func (o *Grid) HasRpzHitRateMaxQuery() bool {
	if o != nil && !IsNil(o.RpzHitRateMaxQuery) {
		return true
	}

	return false
}

// SetRpzHitRateMaxQuery gets a reference to the given int64 and assigns it to the RpzHitRateMaxQuery field.
func (o *Grid) SetRpzHitRateMaxQuery(v int64) {
	o.RpzHitRateMaxQuery = &v
}

// GetRpzHitRateMinQuery returns the RpzHitRateMinQuery field value if set, zero value otherwise.
func (o *Grid) GetRpzHitRateMinQuery() int64 {
	if o == nil || IsNil(o.RpzHitRateMinQuery) {
		var ret int64
		return ret
	}
	return *o.RpzHitRateMinQuery
}

// GetRpzHitRateMinQueryOk returns a tuple with the RpzHitRateMinQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetRpzHitRateMinQueryOk() (*int64, bool) {
	if o == nil || IsNil(o.RpzHitRateMinQuery) {
		return nil, false
	}
	return o.RpzHitRateMinQuery, true
}

// HasRpzHitRateMinQuery returns a boolean if a field has been set.
func (o *Grid) HasRpzHitRateMinQuery() bool {
	if o != nil && !IsNil(o.RpzHitRateMinQuery) {
		return true
	}

	return false
}

// SetRpzHitRateMinQuery gets a reference to the given int64 and assigns it to the RpzHitRateMinQuery field.
func (o *Grid) SetRpzHitRateMinQuery(v int64) {
	o.RpzHitRateMinQuery = &v
}

// GetScheduledBackup returns the ScheduledBackup field value if set, zero value otherwise.
func (o *Grid) GetScheduledBackup() GridScheduledBackup {
	if o == nil || IsNil(o.ScheduledBackup) {
		var ret GridScheduledBackup
		return ret
	}
	return *o.ScheduledBackup
}

// GetScheduledBackupOk returns a tuple with the ScheduledBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetScheduledBackupOk() (*GridScheduledBackup, bool) {
	if o == nil || IsNil(o.ScheduledBackup) {
		return nil, false
	}
	return o.ScheduledBackup, true
}

// HasScheduledBackup returns a boolean if a field has been set.
func (o *Grid) HasScheduledBackup() bool {
	if o != nil && !IsNil(o.ScheduledBackup) {
		return true
	}

	return false
}

// SetScheduledBackup gets a reference to the given GridScheduledBackup and assigns it to the ScheduledBackup field.
func (o *Grid) SetScheduledBackup(v GridScheduledBackup) {
	o.ScheduledBackup = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *Grid) GetSecret() string {
	if o == nil || IsNil(o.Secret) {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetSecretOk() (*string, bool) {
	if o == nil || IsNil(o.Secret) {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *Grid) HasSecret() bool {
	if o != nil && !IsNil(o.Secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *Grid) SetSecret(v string) {
	o.Secret = &v
}

// GetSecurityBannerSetting returns the SecurityBannerSetting field value if set, zero value otherwise.
func (o *Grid) GetSecurityBannerSetting() GridSecurityBannerSetting {
	if o == nil || IsNil(o.SecurityBannerSetting) {
		var ret GridSecurityBannerSetting
		return ret
	}
	return *o.SecurityBannerSetting
}

// GetSecurityBannerSettingOk returns a tuple with the SecurityBannerSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetSecurityBannerSettingOk() (*GridSecurityBannerSetting, bool) {
	if o == nil || IsNil(o.SecurityBannerSetting) {
		return nil, false
	}
	return o.SecurityBannerSetting, true
}

// HasSecurityBannerSetting returns a boolean if a field has been set.
func (o *Grid) HasSecurityBannerSetting() bool {
	if o != nil && !IsNil(o.SecurityBannerSetting) {
		return true
	}

	return false
}

// SetSecurityBannerSetting gets a reference to the given GridSecurityBannerSetting and assigns it to the SecurityBannerSetting field.
func (o *Grid) SetSecurityBannerSetting(v GridSecurityBannerSetting) {
	o.SecurityBannerSetting = &v
}

// GetSecuritySetting returns the SecuritySetting field value if set, zero value otherwise.
func (o *Grid) GetSecuritySetting() GridSecuritySetting {
	if o == nil || IsNil(o.SecuritySetting) {
		var ret GridSecuritySetting
		return ret
	}
	return *o.SecuritySetting
}

// GetSecuritySettingOk returns a tuple with the SecuritySetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetSecuritySettingOk() (*GridSecuritySetting, bool) {
	if o == nil || IsNil(o.SecuritySetting) {
		return nil, false
	}
	return o.SecuritySetting, true
}

// HasSecuritySetting returns a boolean if a field has been set.
func (o *Grid) HasSecuritySetting() bool {
	if o != nil && !IsNil(o.SecuritySetting) {
		return true
	}

	return false
}

// SetSecuritySetting gets a reference to the given GridSecuritySetting and assigns it to the SecuritySetting field.
func (o *Grid) SetSecuritySetting(v GridSecuritySetting) {
	o.SecuritySetting = &v
}

// GetServiceStatus returns the ServiceStatus field value if set, zero value otherwise.
func (o *Grid) GetServiceStatus() string {
	if o == nil || IsNil(o.ServiceStatus) {
		var ret string
		return ret
	}
	return *o.ServiceStatus
}

// GetServiceStatusOk returns a tuple with the ServiceStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetServiceStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceStatus) {
		return nil, false
	}
	return o.ServiceStatus, true
}

// HasServiceStatus returns a boolean if a field has been set.
func (o *Grid) HasServiceStatus() bool {
	if o != nil && !IsNil(o.ServiceStatus) {
		return true
	}

	return false
}

// SetServiceStatus gets a reference to the given string and assigns it to the ServiceStatus field.
func (o *Grid) SetServiceStatus(v string) {
	o.ServiceStatus = &v
}

// GetSkipMemberUpgrade returns the SkipMemberUpgrade field value if set, zero value otherwise.
func (o *Grid) GetSkipMemberUpgrade() map[string]interface{} {
	if o == nil || IsNil(o.SkipMemberUpgrade) {
		var ret map[string]interface{}
		return ret
	}
	return o.SkipMemberUpgrade
}

// GetSkipMemberUpgradeOk returns a tuple with the SkipMemberUpgrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetSkipMemberUpgradeOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.SkipMemberUpgrade) {
		return map[string]interface{}{}, false
	}
	return o.SkipMemberUpgrade, true
}

// HasSkipMemberUpgrade returns a boolean if a field has been set.
func (o *Grid) HasSkipMemberUpgrade() bool {
	if o != nil && !IsNil(o.SkipMemberUpgrade) {
		return true
	}

	return false
}

// SetSkipMemberUpgrade gets a reference to the given map[string]interface{} and assigns it to the SkipMemberUpgrade field.
func (o *Grid) SetSkipMemberUpgrade(v map[string]interface{}) {
	o.SkipMemberUpgrade = v
}

// GetSnmpSetting returns the SnmpSetting field value if set, zero value otherwise.
func (o *Grid) GetSnmpSetting() GridSnmpSetting {
	if o == nil || IsNil(o.SnmpSetting) {
		var ret GridSnmpSetting
		return ret
	}
	return *o.SnmpSetting
}

// GetSnmpSettingOk returns a tuple with the SnmpSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetSnmpSettingOk() (*GridSnmpSetting, bool) {
	if o == nil || IsNil(o.SnmpSetting) {
		return nil, false
	}
	return o.SnmpSetting, true
}

// HasSnmpSetting returns a boolean if a field has been set.
func (o *Grid) HasSnmpSetting() bool {
	if o != nil && !IsNil(o.SnmpSetting) {
		return true
	}

	return false
}

// SetSnmpSetting gets a reference to the given GridSnmpSetting and assigns it to the SnmpSetting field.
func (o *Grid) SetSnmpSetting(v GridSnmpSetting) {
	o.SnmpSetting = &v
}

// GetStartDiscovery returns the StartDiscovery field value if set, zero value otherwise.
func (o *Grid) GetStartDiscovery() map[string]interface{} {
	if o == nil || IsNil(o.StartDiscovery) {
		var ret map[string]interface{}
		return ret
	}
	return o.StartDiscovery
}

// GetStartDiscoveryOk returns a tuple with the StartDiscovery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetStartDiscoveryOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.StartDiscovery) {
		return map[string]interface{}{}, false
	}
	return o.StartDiscovery, true
}

// HasStartDiscovery returns a boolean if a field has been set.
func (o *Grid) HasStartDiscovery() bool {
	if o != nil && !IsNil(o.StartDiscovery) {
		return true
	}

	return false
}

// SetStartDiscovery gets a reference to the given map[string]interface{} and assigns it to the StartDiscovery field.
func (o *Grid) SetStartDiscovery(v map[string]interface{}) {
	o.StartDiscovery = v
}

// GetSupportBundleDownloadTimeout returns the SupportBundleDownloadTimeout field value if set, zero value otherwise.
func (o *Grid) GetSupportBundleDownloadTimeout() int64 {
	if o == nil || IsNil(o.SupportBundleDownloadTimeout) {
		var ret int64
		return ret
	}
	return *o.SupportBundleDownloadTimeout
}

// GetSupportBundleDownloadTimeoutOk returns a tuple with the SupportBundleDownloadTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetSupportBundleDownloadTimeoutOk() (*int64, bool) {
	if o == nil || IsNil(o.SupportBundleDownloadTimeout) {
		return nil, false
	}
	return o.SupportBundleDownloadTimeout, true
}

// HasSupportBundleDownloadTimeout returns a boolean if a field has been set.
func (o *Grid) HasSupportBundleDownloadTimeout() bool {
	if o != nil && !IsNil(o.SupportBundleDownloadTimeout) {
		return true
	}

	return false
}

// SetSupportBundleDownloadTimeout gets a reference to the given int64 and assigns it to the SupportBundleDownloadTimeout field.
func (o *Grid) SetSupportBundleDownloadTimeout(v int64) {
	o.SupportBundleDownloadTimeout = &v
}

// GetSyslogFacility returns the SyslogFacility field value if set, zero value otherwise.
func (o *Grid) GetSyslogFacility() string {
	if o == nil || IsNil(o.SyslogFacility) {
		var ret string
		return ret
	}
	return *o.SyslogFacility
}

// GetSyslogFacilityOk returns a tuple with the SyslogFacility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetSyslogFacilityOk() (*string, bool) {
	if o == nil || IsNil(o.SyslogFacility) {
		return nil, false
	}
	return o.SyslogFacility, true
}

// HasSyslogFacility returns a boolean if a field has been set.
func (o *Grid) HasSyslogFacility() bool {
	if o != nil && !IsNil(o.SyslogFacility) {
		return true
	}

	return false
}

// SetSyslogFacility gets a reference to the given string and assigns it to the SyslogFacility field.
func (o *Grid) SetSyslogFacility(v string) {
	o.SyslogFacility = &v
}

// GetSyslogServers returns the SyslogServers field value if set, zero value otherwise.
func (o *Grid) GetSyslogServers() []GridSyslogServers {
	if o == nil || IsNil(o.SyslogServers) {
		var ret []GridSyslogServers
		return ret
	}
	return o.SyslogServers
}

// GetSyslogServersOk returns a tuple with the SyslogServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetSyslogServersOk() ([]GridSyslogServers, bool) {
	if o == nil || IsNil(o.SyslogServers) {
		return nil, false
	}
	return o.SyslogServers, true
}

// HasSyslogServers returns a boolean if a field has been set.
func (o *Grid) HasSyslogServers() bool {
	if o != nil && !IsNil(o.SyslogServers) {
		return true
	}

	return false
}

// SetSyslogServers gets a reference to the given []GridSyslogServers and assigns it to the SyslogServers field.
func (o *Grid) SetSyslogServers(v []GridSyslogServers) {
	o.SyslogServers = v
}

// GetSyslogSize returns the SyslogSize field value if set, zero value otherwise.
func (o *Grid) GetSyslogSize() int64 {
	if o == nil || IsNil(o.SyslogSize) {
		var ret int64
		return ret
	}
	return *o.SyslogSize
}

// GetSyslogSizeOk returns a tuple with the SyslogSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetSyslogSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.SyslogSize) {
		return nil, false
	}
	return o.SyslogSize, true
}

// HasSyslogSize returns a boolean if a field has been set.
func (o *Grid) HasSyslogSize() bool {
	if o != nil && !IsNil(o.SyslogSize) {
		return true
	}

	return false
}

// SetSyslogSize gets a reference to the given int64 and assigns it to the SyslogSize field.
func (o *Grid) SetSyslogSize(v int64) {
	o.SyslogSize = &v
}

// GetTestSyslogBackupServerConnection returns the TestSyslogBackupServerConnection field value if set, zero value otherwise.
func (o *Grid) GetTestSyslogBackupServerConnection() map[string]interface{} {
	if o == nil || IsNil(o.TestSyslogBackupServerConnection) {
		var ret map[string]interface{}
		return ret
	}
	return o.TestSyslogBackupServerConnection
}

// GetTestSyslogBackupServerConnectionOk returns a tuple with the TestSyslogBackupServerConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetTestSyslogBackupServerConnectionOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.TestSyslogBackupServerConnection) {
		return map[string]interface{}{}, false
	}
	return o.TestSyslogBackupServerConnection, true
}

// HasTestSyslogBackupServerConnection returns a boolean if a field has been set.
func (o *Grid) HasTestSyslogBackupServerConnection() bool {
	if o != nil && !IsNil(o.TestSyslogBackupServerConnection) {
		return true
	}

	return false
}

// SetTestSyslogBackupServerConnection gets a reference to the given map[string]interface{} and assigns it to the TestSyslogBackupServerConnection field.
func (o *Grid) SetTestSyslogBackupServerConnection(v map[string]interface{}) {
	o.TestSyslogBackupServerConnection = v
}

// GetTestSyslogConnection returns the TestSyslogConnection field value if set, zero value otherwise.
func (o *Grid) GetTestSyslogConnection() map[string]interface{} {
	if o == nil || IsNil(o.TestSyslogConnection) {
		var ret map[string]interface{}
		return ret
	}
	return o.TestSyslogConnection
}

// GetTestSyslogConnectionOk returns a tuple with the TestSyslogConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetTestSyslogConnectionOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.TestSyslogConnection) {
		return map[string]interface{}{}, false
	}
	return o.TestSyslogConnection, true
}

// HasTestSyslogConnection returns a boolean if a field has been set.
func (o *Grid) HasTestSyslogConnection() bool {
	if o != nil && !IsNil(o.TestSyslogConnection) {
		return true
	}

	return false
}

// SetTestSyslogConnection gets a reference to the given map[string]interface{} and assigns it to the TestSyslogConnection field.
func (o *Grid) SetTestSyslogConnection(v map[string]interface{}) {
	o.TestSyslogConnection = v
}

// GetThresholdTraps returns the ThresholdTraps field value if set, zero value otherwise.
func (o *Grid) GetThresholdTraps() []GridThresholdTraps {
	if o == nil || IsNil(o.ThresholdTraps) {
		var ret []GridThresholdTraps
		return ret
	}
	return o.ThresholdTraps
}

// GetThresholdTrapsOk returns a tuple with the ThresholdTraps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetThresholdTrapsOk() ([]GridThresholdTraps, bool) {
	if o == nil || IsNil(o.ThresholdTraps) {
		return nil, false
	}
	return o.ThresholdTraps, true
}

// HasThresholdTraps returns a boolean if a field has been set.
func (o *Grid) HasThresholdTraps() bool {
	if o != nil && !IsNil(o.ThresholdTraps) {
		return true
	}

	return false
}

// SetThresholdTraps gets a reference to the given []GridThresholdTraps and assigns it to the ThresholdTraps field.
func (o *Grid) SetThresholdTraps(v []GridThresholdTraps) {
	o.ThresholdTraps = v
}

// GetTimeZone returns the TimeZone field value if set, zero value otherwise.
func (o *Grid) GetTimeZone() string {
	if o == nil || IsNil(o.TimeZone) {
		var ret string
		return ret
	}
	return *o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetTimeZoneOk() (*string, bool) {
	if o == nil || IsNil(o.TimeZone) {
		return nil, false
	}
	return o.TimeZone, true
}

// HasTimeZone returns a boolean if a field has been set.
func (o *Grid) HasTimeZone() bool {
	if o != nil && !IsNil(o.TimeZone) {
		return true
	}

	return false
}

// SetTimeZone gets a reference to the given string and assigns it to the TimeZone field.
func (o *Grid) SetTimeZone(v string) {
	o.TimeZone = &v
}

// GetTokenUsageDelay returns the TokenUsageDelay field value if set, zero value otherwise.
func (o *Grid) GetTokenUsageDelay() int64 {
	if o == nil || IsNil(o.TokenUsageDelay) {
		var ret int64
		return ret
	}
	return *o.TokenUsageDelay
}

// GetTokenUsageDelayOk returns a tuple with the TokenUsageDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetTokenUsageDelayOk() (*int64, bool) {
	if o == nil || IsNil(o.TokenUsageDelay) {
		return nil, false
	}
	return o.TokenUsageDelay, true
}

// HasTokenUsageDelay returns a boolean if a field has been set.
func (o *Grid) HasTokenUsageDelay() bool {
	if o != nil && !IsNil(o.TokenUsageDelay) {
		return true
	}

	return false
}

// SetTokenUsageDelay gets a reference to the given int64 and assigns it to the TokenUsageDelay field.
func (o *Grid) SetTokenUsageDelay(v int64) {
	o.TokenUsageDelay = &v
}

// GetTrafficCaptureAuthDnsSetting returns the TrafficCaptureAuthDnsSetting field value if set, zero value otherwise.
func (o *Grid) GetTrafficCaptureAuthDnsSetting() GridTrafficCaptureAuthDnsSetting {
	if o == nil || IsNil(o.TrafficCaptureAuthDnsSetting) {
		var ret GridTrafficCaptureAuthDnsSetting
		return ret
	}
	return *o.TrafficCaptureAuthDnsSetting
}

// GetTrafficCaptureAuthDnsSettingOk returns a tuple with the TrafficCaptureAuthDnsSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetTrafficCaptureAuthDnsSettingOk() (*GridTrafficCaptureAuthDnsSetting, bool) {
	if o == nil || IsNil(o.TrafficCaptureAuthDnsSetting) {
		return nil, false
	}
	return o.TrafficCaptureAuthDnsSetting, true
}

// HasTrafficCaptureAuthDnsSetting returns a boolean if a field has been set.
func (o *Grid) HasTrafficCaptureAuthDnsSetting() bool {
	if o != nil && !IsNil(o.TrafficCaptureAuthDnsSetting) {
		return true
	}

	return false
}

// SetTrafficCaptureAuthDnsSetting gets a reference to the given GridTrafficCaptureAuthDnsSetting and assigns it to the TrafficCaptureAuthDnsSetting field.
func (o *Grid) SetTrafficCaptureAuthDnsSetting(v GridTrafficCaptureAuthDnsSetting) {
	o.TrafficCaptureAuthDnsSetting = &v
}

// GetTrafficCaptureChrSetting returns the TrafficCaptureChrSetting field value if set, zero value otherwise.
func (o *Grid) GetTrafficCaptureChrSetting() GridTrafficCaptureChrSetting {
	if o == nil || IsNil(o.TrafficCaptureChrSetting) {
		var ret GridTrafficCaptureChrSetting
		return ret
	}
	return *o.TrafficCaptureChrSetting
}

// GetTrafficCaptureChrSettingOk returns a tuple with the TrafficCaptureChrSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetTrafficCaptureChrSettingOk() (*GridTrafficCaptureChrSetting, bool) {
	if o == nil || IsNil(o.TrafficCaptureChrSetting) {
		return nil, false
	}
	return o.TrafficCaptureChrSetting, true
}

// HasTrafficCaptureChrSetting returns a boolean if a field has been set.
func (o *Grid) HasTrafficCaptureChrSetting() bool {
	if o != nil && !IsNil(o.TrafficCaptureChrSetting) {
		return true
	}

	return false
}

// SetTrafficCaptureChrSetting gets a reference to the given GridTrafficCaptureChrSetting and assigns it to the TrafficCaptureChrSetting field.
func (o *Grid) SetTrafficCaptureChrSetting(v GridTrafficCaptureChrSetting) {
	o.TrafficCaptureChrSetting = &v
}

// GetTrafficCaptureQpsSetting returns the TrafficCaptureQpsSetting field value if set, zero value otherwise.
func (o *Grid) GetTrafficCaptureQpsSetting() GridTrafficCaptureQpsSetting {
	if o == nil || IsNil(o.TrafficCaptureQpsSetting) {
		var ret GridTrafficCaptureQpsSetting
		return ret
	}
	return *o.TrafficCaptureQpsSetting
}

// GetTrafficCaptureQpsSettingOk returns a tuple with the TrafficCaptureQpsSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetTrafficCaptureQpsSettingOk() (*GridTrafficCaptureQpsSetting, bool) {
	if o == nil || IsNil(o.TrafficCaptureQpsSetting) {
		return nil, false
	}
	return o.TrafficCaptureQpsSetting, true
}

// HasTrafficCaptureQpsSetting returns a boolean if a field has been set.
func (o *Grid) HasTrafficCaptureQpsSetting() bool {
	if o != nil && !IsNil(o.TrafficCaptureQpsSetting) {
		return true
	}

	return false
}

// SetTrafficCaptureQpsSetting gets a reference to the given GridTrafficCaptureQpsSetting and assigns it to the TrafficCaptureQpsSetting field.
func (o *Grid) SetTrafficCaptureQpsSetting(v GridTrafficCaptureQpsSetting) {
	o.TrafficCaptureQpsSetting = &v
}

// GetTrafficCaptureRecDnsSetting returns the TrafficCaptureRecDnsSetting field value if set, zero value otherwise.
func (o *Grid) GetTrafficCaptureRecDnsSetting() GridTrafficCaptureRecDnsSetting {
	if o == nil || IsNil(o.TrafficCaptureRecDnsSetting) {
		var ret GridTrafficCaptureRecDnsSetting
		return ret
	}
	return *o.TrafficCaptureRecDnsSetting
}

// GetTrafficCaptureRecDnsSettingOk returns a tuple with the TrafficCaptureRecDnsSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetTrafficCaptureRecDnsSettingOk() (*GridTrafficCaptureRecDnsSetting, bool) {
	if o == nil || IsNil(o.TrafficCaptureRecDnsSetting) {
		return nil, false
	}
	return o.TrafficCaptureRecDnsSetting, true
}

// HasTrafficCaptureRecDnsSetting returns a boolean if a field has been set.
func (o *Grid) HasTrafficCaptureRecDnsSetting() bool {
	if o != nil && !IsNil(o.TrafficCaptureRecDnsSetting) {
		return true
	}

	return false
}

// SetTrafficCaptureRecDnsSetting gets a reference to the given GridTrafficCaptureRecDnsSetting and assigns it to the TrafficCaptureRecDnsSetting field.
func (o *Grid) SetTrafficCaptureRecDnsSetting(v GridTrafficCaptureRecDnsSetting) {
	o.TrafficCaptureRecDnsSetting = &v
}

// GetTrafficCaptureRecQueriesSetting returns the TrafficCaptureRecQueriesSetting field value if set, zero value otherwise.
func (o *Grid) GetTrafficCaptureRecQueriesSetting() GridTrafficCaptureRecQueriesSetting {
	if o == nil || IsNil(o.TrafficCaptureRecQueriesSetting) {
		var ret GridTrafficCaptureRecQueriesSetting
		return ret
	}
	return *o.TrafficCaptureRecQueriesSetting
}

// GetTrafficCaptureRecQueriesSettingOk returns a tuple with the TrafficCaptureRecQueriesSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetTrafficCaptureRecQueriesSettingOk() (*GridTrafficCaptureRecQueriesSetting, bool) {
	if o == nil || IsNil(o.TrafficCaptureRecQueriesSetting) {
		return nil, false
	}
	return o.TrafficCaptureRecQueriesSetting, true
}

// HasTrafficCaptureRecQueriesSetting returns a boolean if a field has been set.
func (o *Grid) HasTrafficCaptureRecQueriesSetting() bool {
	if o != nil && !IsNil(o.TrafficCaptureRecQueriesSetting) {
		return true
	}

	return false
}

// SetTrafficCaptureRecQueriesSetting gets a reference to the given GridTrafficCaptureRecQueriesSetting and assigns it to the TrafficCaptureRecQueriesSetting field.
func (o *Grid) SetTrafficCaptureRecQueriesSetting(v GridTrafficCaptureRecQueriesSetting) {
	o.TrafficCaptureRecQueriesSetting = &v
}

// GetTrapNotifications returns the TrapNotifications field value if set, zero value otherwise.
func (o *Grid) GetTrapNotifications() []GridTrapNotifications {
	if o == nil || IsNil(o.TrapNotifications) {
		var ret []GridTrapNotifications
		return ret
	}
	return o.TrapNotifications
}

// GetTrapNotificationsOk returns a tuple with the TrapNotifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetTrapNotificationsOk() ([]GridTrapNotifications, bool) {
	if o == nil || IsNil(o.TrapNotifications) {
		return nil, false
	}
	return o.TrapNotifications, true
}

// HasTrapNotifications returns a boolean if a field has been set.
func (o *Grid) HasTrapNotifications() bool {
	if o != nil && !IsNil(o.TrapNotifications) {
		return true
	}

	return false
}

// SetTrapNotifications gets a reference to the given []GridTrapNotifications and assigns it to the TrapNotifications field.
func (o *Grid) SetTrapNotifications(v []GridTrapNotifications) {
	o.TrapNotifications = v
}

// GetUpdatesDownloadMemberConfig returns the UpdatesDownloadMemberConfig field value if set, zero value otherwise.
func (o *Grid) GetUpdatesDownloadMemberConfig() []GridUpdatesDownloadMemberConfig {
	if o == nil || IsNil(o.UpdatesDownloadMemberConfig) {
		var ret []GridUpdatesDownloadMemberConfig
		return ret
	}
	return o.UpdatesDownloadMemberConfig
}

// GetUpdatesDownloadMemberConfigOk returns a tuple with the UpdatesDownloadMemberConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetUpdatesDownloadMemberConfigOk() ([]GridUpdatesDownloadMemberConfig, bool) {
	if o == nil || IsNil(o.UpdatesDownloadMemberConfig) {
		return nil, false
	}
	return o.UpdatesDownloadMemberConfig, true
}

// HasUpdatesDownloadMemberConfig returns a boolean if a field has been set.
func (o *Grid) HasUpdatesDownloadMemberConfig() bool {
	if o != nil && !IsNil(o.UpdatesDownloadMemberConfig) {
		return true
	}

	return false
}

// SetUpdatesDownloadMemberConfig gets a reference to the given []GridUpdatesDownloadMemberConfig and assigns it to the UpdatesDownloadMemberConfig field.
func (o *Grid) SetUpdatesDownloadMemberConfig(v []GridUpdatesDownloadMemberConfig) {
	o.UpdatesDownloadMemberConfig = v
}

// GetUpgrade returns the Upgrade field value if set, zero value otherwise.
func (o *Grid) GetUpgrade() map[string]interface{} {
	if o == nil || IsNil(o.Upgrade) {
		var ret map[string]interface{}
		return ret
	}
	return o.Upgrade
}

// GetUpgradeOk returns a tuple with the Upgrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetUpgradeOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Upgrade) {
		return map[string]interface{}{}, false
	}
	return o.Upgrade, true
}

// HasUpgrade returns a boolean if a field has been set.
func (o *Grid) HasUpgrade() bool {
	if o != nil && !IsNil(o.Upgrade) {
		return true
	}

	return false
}

// SetUpgrade gets a reference to the given map[string]interface{} and assigns it to the Upgrade field.
func (o *Grid) SetUpgrade(v map[string]interface{}) {
	o.Upgrade = v
}

// GetUpgradeGroupNow returns the UpgradeGroupNow field value if set, zero value otherwise.
func (o *Grid) GetUpgradeGroupNow() map[string]interface{} {
	if o == nil || IsNil(o.UpgradeGroupNow) {
		var ret map[string]interface{}
		return ret
	}
	return o.UpgradeGroupNow
}

// GetUpgradeGroupNowOk returns a tuple with the UpgradeGroupNow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetUpgradeGroupNowOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.UpgradeGroupNow) {
		return map[string]interface{}{}, false
	}
	return o.UpgradeGroupNow, true
}

// HasUpgradeGroupNow returns a boolean if a field has been set.
func (o *Grid) HasUpgradeGroupNow() bool {
	if o != nil && !IsNil(o.UpgradeGroupNow) {
		return true
	}

	return false
}

// SetUpgradeGroupNow gets a reference to the given map[string]interface{} and assigns it to the UpgradeGroupNow field.
func (o *Grid) SetUpgradeGroupNow(v map[string]interface{}) {
	o.UpgradeGroupNow = v
}

// GetUploadKeytab returns the UploadKeytab field value if set, zero value otherwise.
func (o *Grid) GetUploadKeytab() map[string]interface{} {
	if o == nil || IsNil(o.UploadKeytab) {
		var ret map[string]interface{}
		return ret
	}
	return o.UploadKeytab
}

// GetUploadKeytabOk returns a tuple with the UploadKeytab field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetUploadKeytabOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.UploadKeytab) {
		return map[string]interface{}{}, false
	}
	return o.UploadKeytab, true
}

// HasUploadKeytab returns a boolean if a field has been set.
func (o *Grid) HasUploadKeytab() bool {
	if o != nil && !IsNil(o.UploadKeytab) {
		return true
	}

	return false
}

// SetUploadKeytab gets a reference to the given map[string]interface{} and assigns it to the UploadKeytab field.
func (o *Grid) SetUploadKeytab(v map[string]interface{}) {
	o.UploadKeytab = v
}

// GetValidatecertificates returns the Validatecertificates field value if set, zero value otherwise.
func (o *Grid) GetValidatecertificates() map[string]interface{} {
	if o == nil || IsNil(o.Validatecertificates) {
		var ret map[string]interface{}
		return ret
	}
	return o.Validatecertificates
}

// GetValidatecertificatesOk returns a tuple with the Validatecertificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetValidatecertificatesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Validatecertificates) {
		return map[string]interface{}{}, false
	}
	return o.Validatecertificates, true
}

// HasValidatecertificates returns a boolean if a field has been set.
func (o *Grid) HasValidatecertificates() bool {
	if o != nil && !IsNil(o.Validatecertificates) {
		return true
	}

	return false
}

// SetValidatecertificates gets a reference to the given map[string]interface{} and assigns it to the Validatecertificates field.
func (o *Grid) SetValidatecertificates(v map[string]interface{}) {
	o.Validatecertificates = v
}

// GetVpnPort returns the VpnPort field value if set, zero value otherwise.
func (o *Grid) GetVpnPort() int64 {
	if o == nil || IsNil(o.VpnPort) {
		var ret int64
		return ret
	}
	return *o.VpnPort
}

// GetVpnPortOk returns a tuple with the VpnPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Grid) GetVpnPortOk() (*int64, bool) {
	if o == nil || IsNil(o.VpnPort) {
		return nil, false
	}
	return o.VpnPort, true
}

// HasVpnPort returns a boolean if a field has been set.
func (o *Grid) HasVpnPort() bool {
	if o != nil && !IsNil(o.VpnPort) {
		return true
	}

	return false
}

// SetVpnPort gets a reference to the given int64 and assigns it to the VpnPort field.
func (o *Grid) SetVpnPort(v int64) {
	o.VpnPort = &v
}

func (o Grid) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Grid) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.AllowRecursiveDeletion) {
		toSerialize["allow_recursive_deletion"] = o.AllowRecursiveDeletion
	}
	if !IsNil(o.AuditLogFormat) {
		toSerialize["audit_log_format"] = o.AuditLogFormat
	}
	if !IsNil(o.AuditToSyslogEnable) {
		toSerialize["audit_to_syslog_enable"] = o.AuditToSyslogEnable
	}
	if !IsNil(o.AutomatedTrafficCaptureSetting) {
		toSerialize["automated_traffic_capture_setting"] = o.AutomatedTrafficCaptureSetting
	}
	if !IsNil(o.ConsentBannerSetting) {
		toSerialize["consent_banner_setting"] = o.ConsentBannerSetting
	}
	if !IsNil(o.ControlIpAddress) {
		toSerialize["control_ip_address"] = o.ControlIpAddress
	}
	if !IsNil(o.CspApiConfig) {
		toSerialize["csp_api_config"] = o.CspApiConfig
	}
	if !IsNil(o.CspGridSetting) {
		toSerialize["csp_grid_setting"] = o.CspGridSetting
	}
	if !IsNil(o.DenyMgmSnapshots) {
		toSerialize["deny_mgm_snapshots"] = o.DenyMgmSnapshots
	}
	if !IsNil(o.DescendantsAction) {
		toSerialize["descendants_action"] = o.DescendantsAction
	}
	if !IsNil(o.DnsResolverSetting) {
		toSerialize["dns_resolver_setting"] = o.DnsResolverSetting
	}
	if !IsNil(o.Dscp) {
		toSerialize["dscp"] = o.Dscp
	}
	if !IsNil(o.EmailSetting) {
		toSerialize["email_setting"] = o.EmailSetting
	}
	if !IsNil(o.EmptyRecycleBin) {
		toSerialize["empty_recycle_bin"] = o.EmptyRecycleBin
	}
	if !IsNil(o.EnableFederation) {
		toSerialize["enable_federation"] = o.EnableFederation
	}
	if !IsNil(o.EnableForceSyncJoinTokenToGmc) {
		toSerialize["enable_force_sync_join_token_to_gmc"] = o.EnableForceSyncJoinTokenToGmc
	}
	if !IsNil(o.EnableGuiApiForLanVip) {
		toSerialize["enable_gui_api_for_lan_vip"] = o.EnableGuiApiForLanVip
	}
	if !IsNil(o.EnableLom) {
		toSerialize["enable_lom"] = o.EnableLom
	}
	if !IsNil(o.EnableMemberRedirect) {
		toSerialize["enable_member_redirect"] = o.EnableMemberRedirect
	}
	if !IsNil(o.EnableRecycleBin) {
		toSerialize["enable_recycle_bin"] = o.EnableRecycleBin
	}
	if !IsNil(o.EnableRirSwip) {
		toSerialize["enable_rir_swip"] = o.EnableRirSwip
	}
	if !IsNil(o.ExternalSyslogBackupServers) {
		toSerialize["external_syslog_backup_servers"] = o.ExternalSyslogBackupServers
	}
	if !IsNil(o.ExternalSyslogServerEnable) {
		toSerialize["external_syslog_server_enable"] = o.ExternalSyslogServerEnable
	}
	if !IsNil(o.GenerateTsigKey) {
		toSerialize["generate_tsig_key"] = o.GenerateTsigKey
	}
	if !IsNil(o.GetAllTemplateVendorId) {
		toSerialize["get_all_template_vendor_id"] = o.GetAllTemplateVendorId
	}
	if !IsNil(o.GetGridRevertStatus) {
		toSerialize["get_grid_revert_status"] = o.GetGridRevertStatus
	}
	if !IsNil(o.GetRpzThreatDetails) {
		toSerialize["get_rpz_threat_details"] = o.GetRpzThreatDetails
	}
	if !IsNil(o.GetTemplateSchemaVersions) {
		toSerialize["get_template_schema_versions"] = o.GetTemplateSchemaVersions
	}
	if !IsNil(o.HttpProxyServerSetting) {
		toSerialize["http_proxy_server_setting"] = o.HttpProxyServerSetting
	}
	if !IsNil(o.InformationalBannerSetting) {
		toSerialize["informational_banner_setting"] = o.InformationalBannerSetting
	}
	if !IsNil(o.IsGridVisualizationVisible) {
		toSerialize["is_grid_visualization_visible"] = o.IsGridVisualizationVisible
	}
	if !IsNil(o.Join) {
		toSerialize["join"] = o.Join
	}
	if !IsNil(o.JoinMgm) {
		toSerialize["join_mgm"] = o.JoinMgm
	}
	if !IsNil(o.JoinMgmMod2) {
		toSerialize["join_mgm_mod2"] = o.JoinMgmMod2
	}
	if !IsNil(o.LeaveMgm) {
		toSerialize["leave_mgm"] = o.LeaveMgm
	}
	if !IsNil(o.LockoutSetting) {
		toSerialize["lockout_setting"] = o.LockoutSetting
	}
	if !IsNil(o.LomUsers) {
		toSerialize["lom_users"] = o.LomUsers
	}
	if !IsNil(o.MemberUpgrade) {
		toSerialize["member_upgrade"] = o.MemberUpgrade
	}
	if !IsNil(o.MgmStrictDelegateMode) {
		toSerialize["mgm_strict_delegate_mode"] = o.MgmStrictDelegateMode
	}
	if !IsNil(o.MsSetting) {
		toSerialize["ms_setting"] = o.MsSetting
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NatGroups) {
		toSerialize["nat_groups"] = o.NatGroups
	}
	if !IsNil(o.NtpSetting) {
		toSerialize["ntp_setting"] = o.NtpSetting
	}
	if !IsNil(o.ObjectsChangesTrackingSetting) {
		toSerialize["objects_changes_tracking_setting"] = o.ObjectsChangesTrackingSetting
	}
	if !IsNil(o.PasswordSetting) {
		toSerialize["password_setting"] = o.PasswordSetting
	}
	if !IsNil(o.PublishChanges) {
		toSerialize["publish_changes"] = o.PublishChanges
	}
	if !IsNil(o.QueryFqdnOnMember) {
		toSerialize["query_fqdn_on_member"] = o.QueryFqdnOnMember
	}
	if !IsNil(o.Requestrestartservicestatus) {
		toSerialize["requestrestartservicestatus"] = o.Requestrestartservicestatus
	}
	if !IsNil(o.RestartBannerSetting) {
		toSerialize["restart_banner_setting"] = o.RestartBannerSetting
	}
	if !IsNil(o.RestartStatus) {
		toSerialize["restart_status"] = o.RestartStatus
	}
	if !IsNil(o.Restartservices) {
		toSerialize["restartservices"] = o.Restartservices
	}
	if !IsNil(o.RpzHitRateInterval) {
		toSerialize["rpz_hit_rate_interval"] = o.RpzHitRateInterval
	}
	if !IsNil(o.RpzHitRateMaxQuery) {
		toSerialize["rpz_hit_rate_max_query"] = o.RpzHitRateMaxQuery
	}
	if !IsNil(o.RpzHitRateMinQuery) {
		toSerialize["rpz_hit_rate_min_query"] = o.RpzHitRateMinQuery
	}
	if !IsNil(o.ScheduledBackup) {
		toSerialize["scheduled_backup"] = o.ScheduledBackup
	}
	if !IsNil(o.Secret) {
		toSerialize["secret"] = o.Secret
	}
	if !IsNil(o.SecurityBannerSetting) {
		toSerialize["security_banner_setting"] = o.SecurityBannerSetting
	}
	if !IsNil(o.SecuritySetting) {
		toSerialize["security_setting"] = o.SecuritySetting
	}
	if !IsNil(o.ServiceStatus) {
		toSerialize["service_status"] = o.ServiceStatus
	}
	if !IsNil(o.SkipMemberUpgrade) {
		toSerialize["skip_member_upgrade"] = o.SkipMemberUpgrade
	}
	if !IsNil(o.SnmpSetting) {
		toSerialize["snmp_setting"] = o.SnmpSetting
	}
	if !IsNil(o.StartDiscovery) {
		toSerialize["start_discovery"] = o.StartDiscovery
	}
	if !IsNil(o.SupportBundleDownloadTimeout) {
		toSerialize["support_bundle_download_timeout"] = o.SupportBundleDownloadTimeout
	}
	if !IsNil(o.SyslogFacility) {
		toSerialize["syslog_facility"] = o.SyslogFacility
	}
	if !IsNil(o.SyslogServers) {
		toSerialize["syslog_servers"] = o.SyslogServers
	}
	if !IsNil(o.SyslogSize) {
		toSerialize["syslog_size"] = o.SyslogSize
	}
	if !IsNil(o.TestSyslogBackupServerConnection) {
		toSerialize["test_syslog_backup_server_connection"] = o.TestSyslogBackupServerConnection
	}
	if !IsNil(o.TestSyslogConnection) {
		toSerialize["test_syslog_connection"] = o.TestSyslogConnection
	}
	if !IsNil(o.ThresholdTraps) {
		toSerialize["threshold_traps"] = o.ThresholdTraps
	}
	if !IsNil(o.TimeZone) {
		toSerialize["time_zone"] = o.TimeZone
	}
	if !IsNil(o.TokenUsageDelay) {
		toSerialize["token_usage_delay"] = o.TokenUsageDelay
	}
	if !IsNil(o.TrafficCaptureAuthDnsSetting) {
		toSerialize["traffic_capture_auth_dns_setting"] = o.TrafficCaptureAuthDnsSetting
	}
	if !IsNil(o.TrafficCaptureChrSetting) {
		toSerialize["traffic_capture_chr_setting"] = o.TrafficCaptureChrSetting
	}
	if !IsNil(o.TrafficCaptureQpsSetting) {
		toSerialize["traffic_capture_qps_setting"] = o.TrafficCaptureQpsSetting
	}
	if !IsNil(o.TrafficCaptureRecDnsSetting) {
		toSerialize["traffic_capture_rec_dns_setting"] = o.TrafficCaptureRecDnsSetting
	}
	if !IsNil(o.TrafficCaptureRecQueriesSetting) {
		toSerialize["traffic_capture_rec_queries_setting"] = o.TrafficCaptureRecQueriesSetting
	}
	if !IsNil(o.TrapNotifications) {
		toSerialize["trap_notifications"] = o.TrapNotifications
	}
	if !IsNil(o.UpdatesDownloadMemberConfig) {
		toSerialize["updates_download_member_config"] = o.UpdatesDownloadMemberConfig
	}
	if !IsNil(o.Upgrade) {
		toSerialize["upgrade"] = o.Upgrade
	}
	if !IsNil(o.UpgradeGroupNow) {
		toSerialize["upgrade_group_now"] = o.UpgradeGroupNow
	}
	if !IsNil(o.UploadKeytab) {
		toSerialize["upload_keytab"] = o.UploadKeytab
	}
	if !IsNil(o.Validatecertificates) {
		toSerialize["validatecertificates"] = o.Validatecertificates
	}
	if !IsNil(o.VpnPort) {
		toSerialize["vpn_port"] = o.VpnPort
	}
	return toSerialize, nil
}

type NullableGrid struct {
	value *Grid
	isSet bool
}

func (v NullableGrid) Get() *Grid {
	return v.value
}

func (v *NullableGrid) Set(val *Grid) {
	v.value = val
	v.isSet = true
}

func (v NullableGrid) IsSet() bool {
	return v.isSet
}

func (v *NullableGrid) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGrid(val *Grid) *NullableGrid {
	return &NullableGrid{value: val, isSet: true}
}

func (v NullableGrid) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGrid) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
