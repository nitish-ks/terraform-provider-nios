/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the GridCspApiConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GridCspApiConfig{}

// GridCspApiConfig struct for GridCspApiConfig
type GridCspApiConfig struct {
	// The url for the CspApiConfig.
	Url *string `json:"url,omitempty"`
	// The user name for the CspApiConfig.
	Username *string `json:"username,omitempty"`
	// The password for the CspApiConfig.
	Password             *string `json:"password,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GridCspApiConfig GridCspApiConfig

// NewGridCspApiConfig instantiates a new GridCspApiConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGridCspApiConfig() *GridCspApiConfig {
	this := GridCspApiConfig{}
	return &this
}

// NewGridCspApiConfigWithDefaults instantiates a new GridCspApiConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGridCspApiConfigWithDefaults() *GridCspApiConfig {
	this := GridCspApiConfig{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *GridCspApiConfig) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridCspApiConfig) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *GridCspApiConfig) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *GridCspApiConfig) SetUrl(v string) {
	o.Url = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *GridCspApiConfig) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridCspApiConfig) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *GridCspApiConfig) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *GridCspApiConfig) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *GridCspApiConfig) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridCspApiConfig) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *GridCspApiConfig) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *GridCspApiConfig) SetPassword(v string) {
	o.Password = &v
}

func (o GridCspApiConfig) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GridCspApiConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GridCspApiConfig) UnmarshalJSON(data []byte) (err error) {
	varGridCspApiConfig := _GridCspApiConfig{}

	err = json.Unmarshal(data, &varGridCspApiConfig)

	if err != nil {
		return err
	}

	*o = GridCspApiConfig(varGridCspApiConfig)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "url")
		delete(additionalProperties, "username")
		delete(additionalProperties, "password")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGridCspApiConfig struct {
	value *GridCspApiConfig
	isSet bool
}

func (v NullableGridCspApiConfig) Get() *GridCspApiConfig {
	return v.value
}

func (v *NullableGridCspApiConfig) Set(val *GridCspApiConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableGridCspApiConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableGridCspApiConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGridCspApiConfig(val *GridCspApiConfig) *NullableGridCspApiConfig {
	return &NullableGridCspApiConfig{value: val, isSet: true}
}

func (v NullableGridCspApiConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGridCspApiConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
