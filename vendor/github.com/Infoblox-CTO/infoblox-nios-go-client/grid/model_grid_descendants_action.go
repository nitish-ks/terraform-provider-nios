/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the GridDescendantsAction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GridDescendantsAction{}

// GridDescendantsAction struct for GridDescendantsAction
type GridDescendantsAction struct {
	// This option describes which action must be taken if the extensible attribute exists for both the parent and descendant objects: * INHERIT: inherit the extensible attribute from the parent object. * RETAIN: retain the value of an extensible attribute that was set for the child object. * CONVERT: the value of the extensible attribute must be copied from the parent object.
	OptionWithEa *string `json:"option_with_ea,omitempty"`
	// This option describes which action must be taken if the extensible attribute exists for the parent, but is absent from the descendant object: * INHERIT: inherit the extensible attribute from the parent object. * NOT_INHERIT: do nothing.
	OptionWithoutEa *string `json:"option_without_ea,omitempty"`
	// This option describes which action must be taken if the extensible attribute exists for the descendant, but is absent for the parent object: * RETAIN: retain the extensible attribute value for the descendant object. * REMOVE: remove this extensible attribute from the descendant object.
	OptionDeleteEa       *string `json:"option_delete_ea,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GridDescendantsAction GridDescendantsAction

// NewGridDescendantsAction instantiates a new GridDescendantsAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGridDescendantsAction() *GridDescendantsAction {
	this := GridDescendantsAction{}
	return &this
}

// NewGridDescendantsActionWithDefaults instantiates a new GridDescendantsAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGridDescendantsActionWithDefaults() *GridDescendantsAction {
	this := GridDescendantsAction{}
	return &this
}

// GetOptionWithEa returns the OptionWithEa field value if set, zero value otherwise.
func (o *GridDescendantsAction) GetOptionWithEa() string {
	if o == nil || IsNil(o.OptionWithEa) {
		var ret string
		return ret
	}
	return *o.OptionWithEa
}

// GetOptionWithEaOk returns a tuple with the OptionWithEa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDescendantsAction) GetOptionWithEaOk() (*string, bool) {
	if o == nil || IsNil(o.OptionWithEa) {
		return nil, false
	}
	return o.OptionWithEa, true
}

// HasOptionWithEa returns a boolean if a field has been set.
func (o *GridDescendantsAction) HasOptionWithEa() bool {
	if o != nil && !IsNil(o.OptionWithEa) {
		return true
	}

	return false
}

// SetOptionWithEa gets a reference to the given string and assigns it to the OptionWithEa field.
func (o *GridDescendantsAction) SetOptionWithEa(v string) {
	o.OptionWithEa = &v
}

// GetOptionWithoutEa returns the OptionWithoutEa field value if set, zero value otherwise.
func (o *GridDescendantsAction) GetOptionWithoutEa() string {
	if o == nil || IsNil(o.OptionWithoutEa) {
		var ret string
		return ret
	}
	return *o.OptionWithoutEa
}

// GetOptionWithoutEaOk returns a tuple with the OptionWithoutEa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDescendantsAction) GetOptionWithoutEaOk() (*string, bool) {
	if o == nil || IsNil(o.OptionWithoutEa) {
		return nil, false
	}
	return o.OptionWithoutEa, true
}

// HasOptionWithoutEa returns a boolean if a field has been set.
func (o *GridDescendantsAction) HasOptionWithoutEa() bool {
	if o != nil && !IsNil(o.OptionWithoutEa) {
		return true
	}

	return false
}

// SetOptionWithoutEa gets a reference to the given string and assigns it to the OptionWithoutEa field.
func (o *GridDescendantsAction) SetOptionWithoutEa(v string) {
	o.OptionWithoutEa = &v
}

// GetOptionDeleteEa returns the OptionDeleteEa field value if set, zero value otherwise.
func (o *GridDescendantsAction) GetOptionDeleteEa() string {
	if o == nil || IsNil(o.OptionDeleteEa) {
		var ret string
		return ret
	}
	return *o.OptionDeleteEa
}

// GetOptionDeleteEaOk returns a tuple with the OptionDeleteEa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDescendantsAction) GetOptionDeleteEaOk() (*string, bool) {
	if o == nil || IsNil(o.OptionDeleteEa) {
		return nil, false
	}
	return o.OptionDeleteEa, true
}

// HasOptionDeleteEa returns a boolean if a field has been set.
func (o *GridDescendantsAction) HasOptionDeleteEa() bool {
	if o != nil && !IsNil(o.OptionDeleteEa) {
		return true
	}

	return false
}

// SetOptionDeleteEa gets a reference to the given string and assigns it to the OptionDeleteEa field.
func (o *GridDescendantsAction) SetOptionDeleteEa(v string) {
	o.OptionDeleteEa = &v
}

func (o GridDescendantsAction) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GridDescendantsAction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OptionWithEa) {
		toSerialize["option_with_ea"] = o.OptionWithEa
	}
	if !IsNil(o.OptionWithoutEa) {
		toSerialize["option_without_ea"] = o.OptionWithoutEa
	}
	if !IsNil(o.OptionDeleteEa) {
		toSerialize["option_delete_ea"] = o.OptionDeleteEa
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GridDescendantsAction) UnmarshalJSON(data []byte) (err error) {
	varGridDescendantsAction := _GridDescendantsAction{}

	err = json.Unmarshal(data, &varGridDescendantsAction)

	if err != nil {
		return err
	}

	*o = GridDescendantsAction(varGridDescendantsAction)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "option_with_ea")
		delete(additionalProperties, "option_without_ea")
		delete(additionalProperties, "option_delete_ea")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGridDescendantsAction struct {
	value *GridDescendantsAction
	isSet bool
}

func (v NullableGridDescendantsAction) Get() *GridDescendantsAction {
	return v.value
}

func (v *NullableGridDescendantsAction) Set(val *GridDescendantsAction) {
	v.value = val
	v.isSet = true
}

func (v NullableGridDescendantsAction) IsSet() bool {
	return v.isSet
}

func (v *NullableGridDescendantsAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGridDescendantsAction(val *GridDescendantsAction) *NullableGridDescendantsAction {
	return &NullableGridDescendantsAction{value: val, isSet: true}
}

func (v NullableGridDescendantsAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGridDescendantsAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
