/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the GridDnsAllowQuery type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GridDnsAllowQuery{}

// GridDnsAllowQuery struct for GridDnsAllowQuery
type GridDnsAllowQuery struct {
	// The address this rule applies to or \"Any\".
	Address *string `json:"address,omitempty"`
	// The permission to use for this address.
	Permission *string `json:"permission,omitempty"`
	// A generated TSIG key. If the external primary server is a NIOS appliance running DNS One 2.x code, this can be set to :2xCOMPAT.
	TsigKey *string `json:"tsig_key,omitempty"`
	// The TSIG key algorithm.
	TsigKeyAlg *string `json:"tsig_key_alg,omitempty"`
	// The name of the TSIG key. If 2.x TSIG compatibility is used, this is set to 'tsig_xfer' on retrieval, and ignored on insert or update.
	TsigKeyName *string `json:"tsig_key_name,omitempty"`
	// Use flag for: tsig_key_name
	UseTsigKeyName       *bool `json:"use_tsig_key_name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GridDnsAllowQuery GridDnsAllowQuery

// NewGridDnsAllowQuery instantiates a new GridDnsAllowQuery object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGridDnsAllowQuery() *GridDnsAllowQuery {
	this := GridDnsAllowQuery{}
	return &this
}

// NewGridDnsAllowQueryWithDefaults instantiates a new GridDnsAllowQuery object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGridDnsAllowQueryWithDefaults() *GridDnsAllowQuery {
	this := GridDnsAllowQuery{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *GridDnsAllowQuery) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsAllowQuery) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *GridDnsAllowQuery) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *GridDnsAllowQuery) SetAddress(v string) {
	o.Address = &v
}

// GetPermission returns the Permission field value if set, zero value otherwise.
func (o *GridDnsAllowQuery) GetPermission() string {
	if o == nil || IsNil(o.Permission) {
		var ret string
		return ret
	}
	return *o.Permission
}

// GetPermissionOk returns a tuple with the Permission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsAllowQuery) GetPermissionOk() (*string, bool) {
	if o == nil || IsNil(o.Permission) {
		return nil, false
	}
	return o.Permission, true
}

// HasPermission returns a boolean if a field has been set.
func (o *GridDnsAllowQuery) HasPermission() bool {
	if o != nil && !IsNil(o.Permission) {
		return true
	}

	return false
}

// SetPermission gets a reference to the given string and assigns it to the Permission field.
func (o *GridDnsAllowQuery) SetPermission(v string) {
	o.Permission = &v
}

// GetTsigKey returns the TsigKey field value if set, zero value otherwise.
func (o *GridDnsAllowQuery) GetTsigKey() string {
	if o == nil || IsNil(o.TsigKey) {
		var ret string
		return ret
	}
	return *o.TsigKey
}

// GetTsigKeyOk returns a tuple with the TsigKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsAllowQuery) GetTsigKeyOk() (*string, bool) {
	if o == nil || IsNil(o.TsigKey) {
		return nil, false
	}
	return o.TsigKey, true
}

// HasTsigKey returns a boolean if a field has been set.
func (o *GridDnsAllowQuery) HasTsigKey() bool {
	if o != nil && !IsNil(o.TsigKey) {
		return true
	}

	return false
}

// SetTsigKey gets a reference to the given string and assigns it to the TsigKey field.
func (o *GridDnsAllowQuery) SetTsigKey(v string) {
	o.TsigKey = &v
}

// GetTsigKeyAlg returns the TsigKeyAlg field value if set, zero value otherwise.
func (o *GridDnsAllowQuery) GetTsigKeyAlg() string {
	if o == nil || IsNil(o.TsigKeyAlg) {
		var ret string
		return ret
	}
	return *o.TsigKeyAlg
}

// GetTsigKeyAlgOk returns a tuple with the TsigKeyAlg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsAllowQuery) GetTsigKeyAlgOk() (*string, bool) {
	if o == nil || IsNil(o.TsigKeyAlg) {
		return nil, false
	}
	return o.TsigKeyAlg, true
}

// HasTsigKeyAlg returns a boolean if a field has been set.
func (o *GridDnsAllowQuery) HasTsigKeyAlg() bool {
	if o != nil && !IsNil(o.TsigKeyAlg) {
		return true
	}

	return false
}

// SetTsigKeyAlg gets a reference to the given string and assigns it to the TsigKeyAlg field.
func (o *GridDnsAllowQuery) SetTsigKeyAlg(v string) {
	o.TsigKeyAlg = &v
}

// GetTsigKeyName returns the TsigKeyName field value if set, zero value otherwise.
func (o *GridDnsAllowQuery) GetTsigKeyName() string {
	if o == nil || IsNil(o.TsigKeyName) {
		var ret string
		return ret
	}
	return *o.TsigKeyName
}

// GetTsigKeyNameOk returns a tuple with the TsigKeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsAllowQuery) GetTsigKeyNameOk() (*string, bool) {
	if o == nil || IsNil(o.TsigKeyName) {
		return nil, false
	}
	return o.TsigKeyName, true
}

// HasTsigKeyName returns a boolean if a field has been set.
func (o *GridDnsAllowQuery) HasTsigKeyName() bool {
	if o != nil && !IsNil(o.TsigKeyName) {
		return true
	}

	return false
}

// SetTsigKeyName gets a reference to the given string and assigns it to the TsigKeyName field.
func (o *GridDnsAllowQuery) SetTsigKeyName(v string) {
	o.TsigKeyName = &v
}

// GetUseTsigKeyName returns the UseTsigKeyName field value if set, zero value otherwise.
func (o *GridDnsAllowQuery) GetUseTsigKeyName() bool {
	if o == nil || IsNil(o.UseTsigKeyName) {
		var ret bool
		return ret
	}
	return *o.UseTsigKeyName
}

// GetUseTsigKeyNameOk returns a tuple with the UseTsigKeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsAllowQuery) GetUseTsigKeyNameOk() (*bool, bool) {
	if o == nil || IsNil(o.UseTsigKeyName) {
		return nil, false
	}
	return o.UseTsigKeyName, true
}

// HasUseTsigKeyName returns a boolean if a field has been set.
func (o *GridDnsAllowQuery) HasUseTsigKeyName() bool {
	if o != nil && !IsNil(o.UseTsigKeyName) {
		return true
	}

	return false
}

// SetUseTsigKeyName gets a reference to the given bool and assigns it to the UseTsigKeyName field.
func (o *GridDnsAllowQuery) SetUseTsigKeyName(v bool) {
	o.UseTsigKeyName = &v
}

func (o GridDnsAllowQuery) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GridDnsAllowQuery) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Permission) {
		toSerialize["permission"] = o.Permission
	}
	if !IsNil(o.TsigKey) {
		toSerialize["tsig_key"] = o.TsigKey
	}
	if !IsNil(o.TsigKeyAlg) {
		toSerialize["tsig_key_alg"] = o.TsigKeyAlg
	}
	if !IsNil(o.TsigKeyName) {
		toSerialize["tsig_key_name"] = o.TsigKeyName
	}
	if !IsNil(o.UseTsigKeyName) {
		toSerialize["use_tsig_key_name"] = o.UseTsigKeyName
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GridDnsAllowQuery) UnmarshalJSON(data []byte) (err error) {
	varGridDnsAllowQuery := _GridDnsAllowQuery{}

	err = json.Unmarshal(data, &varGridDnsAllowQuery)

	if err != nil {
		return err
	}

	*o = GridDnsAllowQuery(varGridDnsAllowQuery)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "address")
		delete(additionalProperties, "permission")
		delete(additionalProperties, "tsig_key")
		delete(additionalProperties, "tsig_key_alg")
		delete(additionalProperties, "tsig_key_name")
		delete(additionalProperties, "use_tsig_key_name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGridDnsAllowQuery struct {
	value *GridDnsAllowQuery
	isSet bool
}

func (v NullableGridDnsAllowQuery) Get() *GridDnsAllowQuery {
	return v.value
}

func (v *NullableGridDnsAllowQuery) Set(val *GridDnsAllowQuery) {
	v.value = val
	v.isSet = true
}

func (v NullableGridDnsAllowQuery) IsSet() bool {
	return v.isSet
}

func (v *NullableGridDnsAllowQuery) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGridDnsAllowQuery(val *GridDnsAllowQuery) *NullableGridDnsAllowQuery {
	return &NullableGridDnsAllowQuery{value: val, isSet: true}
}

func (v NullableGridDnsAllowQuery) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGridDnsAllowQuery) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
