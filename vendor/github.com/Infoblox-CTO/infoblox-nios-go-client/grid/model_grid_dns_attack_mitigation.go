/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the GridDnsAttackMitigation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GridDnsAttackMitigation{}

// GridDnsAttackMitigation struct for GridDnsAttackMitigation
type GridDnsAttackMitigation struct {
	DetectChr *GriddnsattackmitigationDetectChr `json:"detect_chr,omitempty"`
	// The cache utilization (in percentage) when Cache Hit Ratio (CHR) starts.
	DetectChrGrace          *int64                                          `json:"detect_chr_grace,omitempty"`
	DetectNxdomainResponses *GriddnsattackmitigationDetectNxdomainResponses `json:"detect_nxdomain_responses,omitempty"`
	DetectUdpDrop           *GriddnsattackmitigationDetectUdpDrop           `json:"detect_udp_drop,omitempty"`
	// The minimum time interval (in seconds) between changes in attack status.
	Interval             *int64 `json:"interval,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GridDnsAttackMitigation GridDnsAttackMitigation

// NewGridDnsAttackMitigation instantiates a new GridDnsAttackMitigation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGridDnsAttackMitigation() *GridDnsAttackMitigation {
	this := GridDnsAttackMitigation{}
	return &this
}

// NewGridDnsAttackMitigationWithDefaults instantiates a new GridDnsAttackMitigation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGridDnsAttackMitigationWithDefaults() *GridDnsAttackMitigation {
	this := GridDnsAttackMitigation{}
	return &this
}

// GetDetectChr returns the DetectChr field value if set, zero value otherwise.
func (o *GridDnsAttackMitigation) GetDetectChr() GriddnsattackmitigationDetectChr {
	if o == nil || IsNil(o.DetectChr) {
		var ret GriddnsattackmitigationDetectChr
		return ret
	}
	return *o.DetectChr
}

// GetDetectChrOk returns a tuple with the DetectChr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsAttackMitigation) GetDetectChrOk() (*GriddnsattackmitigationDetectChr, bool) {
	if o == nil || IsNil(o.DetectChr) {
		return nil, false
	}
	return o.DetectChr, true
}

// HasDetectChr returns a boolean if a field has been set.
func (o *GridDnsAttackMitigation) HasDetectChr() bool {
	if o != nil && !IsNil(o.DetectChr) {
		return true
	}

	return false
}

// SetDetectChr gets a reference to the given GriddnsattackmitigationDetectChr and assigns it to the DetectChr field.
func (o *GridDnsAttackMitigation) SetDetectChr(v GriddnsattackmitigationDetectChr) {
	o.DetectChr = &v
}

// GetDetectChrGrace returns the DetectChrGrace field value if set, zero value otherwise.
func (o *GridDnsAttackMitigation) GetDetectChrGrace() int64 {
	if o == nil || IsNil(o.DetectChrGrace) {
		var ret int64
		return ret
	}
	return *o.DetectChrGrace
}

// GetDetectChrGraceOk returns a tuple with the DetectChrGrace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsAttackMitigation) GetDetectChrGraceOk() (*int64, bool) {
	if o == nil || IsNil(o.DetectChrGrace) {
		return nil, false
	}
	return o.DetectChrGrace, true
}

// HasDetectChrGrace returns a boolean if a field has been set.
func (o *GridDnsAttackMitigation) HasDetectChrGrace() bool {
	if o != nil && !IsNil(o.DetectChrGrace) {
		return true
	}

	return false
}

// SetDetectChrGrace gets a reference to the given int64 and assigns it to the DetectChrGrace field.
func (o *GridDnsAttackMitigation) SetDetectChrGrace(v int64) {
	o.DetectChrGrace = &v
}

// GetDetectNxdomainResponses returns the DetectNxdomainResponses field value if set, zero value otherwise.
func (o *GridDnsAttackMitigation) GetDetectNxdomainResponses() GriddnsattackmitigationDetectNxdomainResponses {
	if o == nil || IsNil(o.DetectNxdomainResponses) {
		var ret GriddnsattackmitigationDetectNxdomainResponses
		return ret
	}
	return *o.DetectNxdomainResponses
}

// GetDetectNxdomainResponsesOk returns a tuple with the DetectNxdomainResponses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsAttackMitigation) GetDetectNxdomainResponsesOk() (*GriddnsattackmitigationDetectNxdomainResponses, bool) {
	if o == nil || IsNil(o.DetectNxdomainResponses) {
		return nil, false
	}
	return o.DetectNxdomainResponses, true
}

// HasDetectNxdomainResponses returns a boolean if a field has been set.
func (o *GridDnsAttackMitigation) HasDetectNxdomainResponses() bool {
	if o != nil && !IsNil(o.DetectNxdomainResponses) {
		return true
	}

	return false
}

// SetDetectNxdomainResponses gets a reference to the given GriddnsattackmitigationDetectNxdomainResponses and assigns it to the DetectNxdomainResponses field.
func (o *GridDnsAttackMitigation) SetDetectNxdomainResponses(v GriddnsattackmitigationDetectNxdomainResponses) {
	o.DetectNxdomainResponses = &v
}

// GetDetectUdpDrop returns the DetectUdpDrop field value if set, zero value otherwise.
func (o *GridDnsAttackMitigation) GetDetectUdpDrop() GriddnsattackmitigationDetectUdpDrop {
	if o == nil || IsNil(o.DetectUdpDrop) {
		var ret GriddnsattackmitigationDetectUdpDrop
		return ret
	}
	return *o.DetectUdpDrop
}

// GetDetectUdpDropOk returns a tuple with the DetectUdpDrop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsAttackMitigation) GetDetectUdpDropOk() (*GriddnsattackmitigationDetectUdpDrop, bool) {
	if o == nil || IsNil(o.DetectUdpDrop) {
		return nil, false
	}
	return o.DetectUdpDrop, true
}

// HasDetectUdpDrop returns a boolean if a field has been set.
func (o *GridDnsAttackMitigation) HasDetectUdpDrop() bool {
	if o != nil && !IsNil(o.DetectUdpDrop) {
		return true
	}

	return false
}

// SetDetectUdpDrop gets a reference to the given GriddnsattackmitigationDetectUdpDrop and assigns it to the DetectUdpDrop field.
func (o *GridDnsAttackMitigation) SetDetectUdpDrop(v GriddnsattackmitigationDetectUdpDrop) {
	o.DetectUdpDrop = &v
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *GridDnsAttackMitigation) GetInterval() int64 {
	if o == nil || IsNil(o.Interval) {
		var ret int64
		return ret
	}
	return *o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsAttackMitigation) GetIntervalOk() (*int64, bool) {
	if o == nil || IsNil(o.Interval) {
		return nil, false
	}
	return o.Interval, true
}

// HasInterval returns a boolean if a field has been set.
func (o *GridDnsAttackMitigation) HasInterval() bool {
	if o != nil && !IsNil(o.Interval) {
		return true
	}

	return false
}

// SetInterval gets a reference to the given int64 and assigns it to the Interval field.
func (o *GridDnsAttackMitigation) SetInterval(v int64) {
	o.Interval = &v
}

func (o GridDnsAttackMitigation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GridDnsAttackMitigation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DetectChr) {
		toSerialize["detect_chr"] = o.DetectChr
	}
	if !IsNil(o.DetectChrGrace) {
		toSerialize["detect_chr_grace"] = o.DetectChrGrace
	}
	if !IsNil(o.DetectNxdomainResponses) {
		toSerialize["detect_nxdomain_responses"] = o.DetectNxdomainResponses
	}
	if !IsNil(o.DetectUdpDrop) {
		toSerialize["detect_udp_drop"] = o.DetectUdpDrop
	}
	if !IsNil(o.Interval) {
		toSerialize["interval"] = o.Interval
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GridDnsAttackMitigation) UnmarshalJSON(data []byte) (err error) {
	varGridDnsAttackMitigation := _GridDnsAttackMitigation{}

	err = json.Unmarshal(data, &varGridDnsAttackMitigation)

	if err != nil {
		return err
	}

	*o = GridDnsAttackMitigation(varGridDnsAttackMitigation)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "detect_chr")
		delete(additionalProperties, "detect_chr_grace")
		delete(additionalProperties, "detect_nxdomain_responses")
		delete(additionalProperties, "detect_udp_drop")
		delete(additionalProperties, "interval")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGridDnsAttackMitigation struct {
	value *GridDnsAttackMitigation
	isSet bool
}

func (v NullableGridDnsAttackMitigation) Get() *GridDnsAttackMitigation {
	return v.value
}

func (v *NullableGridDnsAttackMitigation) Set(val *GridDnsAttackMitigation) {
	v.value = val
	v.isSet = true
}

func (v NullableGridDnsAttackMitigation) IsSet() bool {
	return v.isSet
}

func (v *NullableGridDnsAttackMitigation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGridDnsAttackMitigation(val *GridDnsAttackMitigation) *NullableGridDnsAttackMitigation {
	return &NullableGridDnsAttackMitigation{value: val, isSet: true}
}

func (v NullableGridDnsAttackMitigation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGridDnsAttackMitigation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
