/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the GridDnsDnstapSetting type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GridDnsDnstapSetting{}

// GridDnsDnstapSetting struct for GridDnsDnstapSetting
type GridDnsDnstapSetting struct {
	// DNSTAP receiver port number.
	DnstapReceiverPort *int64 `json:"dnstap_receiver_port,omitempty"`
	// DNSTAP id string.
	DnstapIdentity *string `json:"dnstap_identity,omitempty"`
	// DNSTAP version.
	DnstapVersion *string `json:"dnstap_version,omitempty"`
	// Address or FQDN of DNSTAP receiver.
	DnstapReceiverAddress *string `json:"dnstap_receiver_address,omitempty"`
	AdditionalProperties  map[string]interface{}
}

type _GridDnsDnstapSetting GridDnsDnstapSetting

// NewGridDnsDnstapSetting instantiates a new GridDnsDnstapSetting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGridDnsDnstapSetting() *GridDnsDnstapSetting {
	this := GridDnsDnstapSetting{}
	return &this
}

// NewGridDnsDnstapSettingWithDefaults instantiates a new GridDnsDnstapSetting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGridDnsDnstapSettingWithDefaults() *GridDnsDnstapSetting {
	this := GridDnsDnstapSetting{}
	return &this
}

// GetDnstapReceiverPort returns the DnstapReceiverPort field value if set, zero value otherwise.
func (o *GridDnsDnstapSetting) GetDnstapReceiverPort() int64 {
	if o == nil || IsNil(o.DnstapReceiverPort) {
		var ret int64
		return ret
	}
	return *o.DnstapReceiverPort
}

// GetDnstapReceiverPortOk returns a tuple with the DnstapReceiverPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsDnstapSetting) GetDnstapReceiverPortOk() (*int64, bool) {
	if o == nil || IsNil(o.DnstapReceiverPort) {
		return nil, false
	}
	return o.DnstapReceiverPort, true
}

// HasDnstapReceiverPort returns a boolean if a field has been set.
func (o *GridDnsDnstapSetting) HasDnstapReceiverPort() bool {
	if o != nil && !IsNil(o.DnstapReceiverPort) {
		return true
	}

	return false
}

// SetDnstapReceiverPort gets a reference to the given int64 and assigns it to the DnstapReceiverPort field.
func (o *GridDnsDnstapSetting) SetDnstapReceiverPort(v int64) {
	o.DnstapReceiverPort = &v
}

// GetDnstapIdentity returns the DnstapIdentity field value if set, zero value otherwise.
func (o *GridDnsDnstapSetting) GetDnstapIdentity() string {
	if o == nil || IsNil(o.DnstapIdentity) {
		var ret string
		return ret
	}
	return *o.DnstapIdentity
}

// GetDnstapIdentityOk returns a tuple with the DnstapIdentity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsDnstapSetting) GetDnstapIdentityOk() (*string, bool) {
	if o == nil || IsNil(o.DnstapIdentity) {
		return nil, false
	}
	return o.DnstapIdentity, true
}

// HasDnstapIdentity returns a boolean if a field has been set.
func (o *GridDnsDnstapSetting) HasDnstapIdentity() bool {
	if o != nil && !IsNil(o.DnstapIdentity) {
		return true
	}

	return false
}

// SetDnstapIdentity gets a reference to the given string and assigns it to the DnstapIdentity field.
func (o *GridDnsDnstapSetting) SetDnstapIdentity(v string) {
	o.DnstapIdentity = &v
}

// GetDnstapVersion returns the DnstapVersion field value if set, zero value otherwise.
func (o *GridDnsDnstapSetting) GetDnstapVersion() string {
	if o == nil || IsNil(o.DnstapVersion) {
		var ret string
		return ret
	}
	return *o.DnstapVersion
}

// GetDnstapVersionOk returns a tuple with the DnstapVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsDnstapSetting) GetDnstapVersionOk() (*string, bool) {
	if o == nil || IsNil(o.DnstapVersion) {
		return nil, false
	}
	return o.DnstapVersion, true
}

// HasDnstapVersion returns a boolean if a field has been set.
func (o *GridDnsDnstapSetting) HasDnstapVersion() bool {
	if o != nil && !IsNil(o.DnstapVersion) {
		return true
	}

	return false
}

// SetDnstapVersion gets a reference to the given string and assigns it to the DnstapVersion field.
func (o *GridDnsDnstapSetting) SetDnstapVersion(v string) {
	o.DnstapVersion = &v
}

// GetDnstapReceiverAddress returns the DnstapReceiverAddress field value if set, zero value otherwise.
func (o *GridDnsDnstapSetting) GetDnstapReceiverAddress() string {
	if o == nil || IsNil(o.DnstapReceiverAddress) {
		var ret string
		return ret
	}
	return *o.DnstapReceiverAddress
}

// GetDnstapReceiverAddressOk returns a tuple with the DnstapReceiverAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsDnstapSetting) GetDnstapReceiverAddressOk() (*string, bool) {
	if o == nil || IsNil(o.DnstapReceiverAddress) {
		return nil, false
	}
	return o.DnstapReceiverAddress, true
}

// HasDnstapReceiverAddress returns a boolean if a field has been set.
func (o *GridDnsDnstapSetting) HasDnstapReceiverAddress() bool {
	if o != nil && !IsNil(o.DnstapReceiverAddress) {
		return true
	}

	return false
}

// SetDnstapReceiverAddress gets a reference to the given string and assigns it to the DnstapReceiverAddress field.
func (o *GridDnsDnstapSetting) SetDnstapReceiverAddress(v string) {
	o.DnstapReceiverAddress = &v
}

func (o GridDnsDnstapSetting) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GridDnsDnstapSetting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DnstapReceiverPort) {
		toSerialize["dnstap_receiver_port"] = o.DnstapReceiverPort
	}
	if !IsNil(o.DnstapIdentity) {
		toSerialize["dnstap_identity"] = o.DnstapIdentity
	}
	if !IsNil(o.DnstapVersion) {
		toSerialize["dnstap_version"] = o.DnstapVersion
	}
	if !IsNil(o.DnstapReceiverAddress) {
		toSerialize["dnstap_receiver_address"] = o.DnstapReceiverAddress
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GridDnsDnstapSetting) UnmarshalJSON(data []byte) (err error) {
	varGridDnsDnstapSetting := _GridDnsDnstapSetting{}

	err = json.Unmarshal(data, &varGridDnsDnstapSetting)

	if err != nil {
		return err
	}

	*o = GridDnsDnstapSetting(varGridDnsDnstapSetting)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "dnstap_receiver_port")
		delete(additionalProperties, "dnstap_identity")
		delete(additionalProperties, "dnstap_version")
		delete(additionalProperties, "dnstap_receiver_address")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGridDnsDnstapSetting struct {
	value *GridDnsDnstapSetting
	isSet bool
}

func (v NullableGridDnsDnstapSetting) Get() *GridDnsDnstapSetting {
	return v.value
}

func (v *NullableGridDnsDnstapSetting) Set(val *GridDnsDnstapSetting) {
	v.value = val
	v.isSet = true
}

func (v NullableGridDnsDnstapSetting) IsSet() bool {
	return v.isSet
}

func (v *NullableGridDnsDnstapSetting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGridDnsDnstapSetting(val *GridDnsDnstapSetting) *NullableGridDnsDnstapSetting {
	return &NullableGridDnsDnstapSetting{value: val, isSet: true}
}

func (v NullableGridDnsDnstapSetting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGridDnsDnstapSetting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
