/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the GridHttpProxyServerSetting type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GridHttpProxyServerSetting{}

// GridHttpProxyServerSetting struct for GridHttpProxyServerSetting
type GridHttpProxyServerSetting struct {
	// The address of the HTTP proxy server.
	Address *string `json:"address,omitempty"`
	// The port on which the HTTP proxy server listens.
	Port *int64 `json:"port,omitempty"`
	// Determines if the HTTP proxy server is enabled or not.
	EnableProxy *bool `json:"enable_proxy,omitempty"`
	// Determines if HTTPS content inspection by the HTTP proxy server is enabled or not.
	EnableContentInspection *bool `json:"enable_content_inspection,omitempty"`
	// Determines if the CNAME record query verification is enabled or not.
	VerifyCname *bool `json:"verify_cname,omitempty"`
	// The descriptive comment for the HTTP proxy server configuration.
	Comment *string `json:"comment,omitempty"`
	// The user name for the HTTP proxy server.
	Username *string `json:"username,omitempty"`
	// The password for the HTTP proxy server.
	Password *string `json:"password,omitempty"`
	// The token returned by the uploadinit function call in object fileop for the CA certificate file used in the content inspection by an HTTP proxy server.
	Certificate *string `json:"certificate,omitempty"`
	// Determines if username and password for HTTP Proxy Server connectivity is used or not.
	EnableUsernameAndPassword *bool `json:"enable_username_and_password,omitempty"`
	AdditionalProperties      map[string]interface{}
}

type _GridHttpProxyServerSetting GridHttpProxyServerSetting

// NewGridHttpProxyServerSetting instantiates a new GridHttpProxyServerSetting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGridHttpProxyServerSetting() *GridHttpProxyServerSetting {
	this := GridHttpProxyServerSetting{}
	return &this
}

// NewGridHttpProxyServerSettingWithDefaults instantiates a new GridHttpProxyServerSetting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGridHttpProxyServerSettingWithDefaults() *GridHttpProxyServerSetting {
	this := GridHttpProxyServerSetting{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *GridHttpProxyServerSetting) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridHttpProxyServerSetting) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *GridHttpProxyServerSetting) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *GridHttpProxyServerSetting) SetAddress(v string) {
	o.Address = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *GridHttpProxyServerSetting) GetPort() int64 {
	if o == nil || IsNil(o.Port) {
		var ret int64
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridHttpProxyServerSetting) GetPortOk() (*int64, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *GridHttpProxyServerSetting) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int64 and assigns it to the Port field.
func (o *GridHttpProxyServerSetting) SetPort(v int64) {
	o.Port = &v
}

// GetEnableProxy returns the EnableProxy field value if set, zero value otherwise.
func (o *GridHttpProxyServerSetting) GetEnableProxy() bool {
	if o == nil || IsNil(o.EnableProxy) {
		var ret bool
		return ret
	}
	return *o.EnableProxy
}

// GetEnableProxyOk returns a tuple with the EnableProxy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridHttpProxyServerSetting) GetEnableProxyOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableProxy) {
		return nil, false
	}
	return o.EnableProxy, true
}

// HasEnableProxy returns a boolean if a field has been set.
func (o *GridHttpProxyServerSetting) HasEnableProxy() bool {
	if o != nil && !IsNil(o.EnableProxy) {
		return true
	}

	return false
}

// SetEnableProxy gets a reference to the given bool and assigns it to the EnableProxy field.
func (o *GridHttpProxyServerSetting) SetEnableProxy(v bool) {
	o.EnableProxy = &v
}

// GetEnableContentInspection returns the EnableContentInspection field value if set, zero value otherwise.
func (o *GridHttpProxyServerSetting) GetEnableContentInspection() bool {
	if o == nil || IsNil(o.EnableContentInspection) {
		var ret bool
		return ret
	}
	return *o.EnableContentInspection
}

// GetEnableContentInspectionOk returns a tuple with the EnableContentInspection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridHttpProxyServerSetting) GetEnableContentInspectionOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableContentInspection) {
		return nil, false
	}
	return o.EnableContentInspection, true
}

// HasEnableContentInspection returns a boolean if a field has been set.
func (o *GridHttpProxyServerSetting) HasEnableContentInspection() bool {
	if o != nil && !IsNil(o.EnableContentInspection) {
		return true
	}

	return false
}

// SetEnableContentInspection gets a reference to the given bool and assigns it to the EnableContentInspection field.
func (o *GridHttpProxyServerSetting) SetEnableContentInspection(v bool) {
	o.EnableContentInspection = &v
}

// GetVerifyCname returns the VerifyCname field value if set, zero value otherwise.
func (o *GridHttpProxyServerSetting) GetVerifyCname() bool {
	if o == nil || IsNil(o.VerifyCname) {
		var ret bool
		return ret
	}
	return *o.VerifyCname
}

// GetVerifyCnameOk returns a tuple with the VerifyCname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridHttpProxyServerSetting) GetVerifyCnameOk() (*bool, bool) {
	if o == nil || IsNil(o.VerifyCname) {
		return nil, false
	}
	return o.VerifyCname, true
}

// HasVerifyCname returns a boolean if a field has been set.
func (o *GridHttpProxyServerSetting) HasVerifyCname() bool {
	if o != nil && !IsNil(o.VerifyCname) {
		return true
	}

	return false
}

// SetVerifyCname gets a reference to the given bool and assigns it to the VerifyCname field.
func (o *GridHttpProxyServerSetting) SetVerifyCname(v bool) {
	o.VerifyCname = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *GridHttpProxyServerSetting) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridHttpProxyServerSetting) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *GridHttpProxyServerSetting) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *GridHttpProxyServerSetting) SetComment(v string) {
	o.Comment = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *GridHttpProxyServerSetting) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridHttpProxyServerSetting) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *GridHttpProxyServerSetting) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *GridHttpProxyServerSetting) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *GridHttpProxyServerSetting) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridHttpProxyServerSetting) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *GridHttpProxyServerSetting) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *GridHttpProxyServerSetting) SetPassword(v string) {
	o.Password = &v
}

// GetCertificate returns the Certificate field value if set, zero value otherwise.
func (o *GridHttpProxyServerSetting) GetCertificate() string {
	if o == nil || IsNil(o.Certificate) {
		var ret string
		return ret
	}
	return *o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridHttpProxyServerSetting) GetCertificateOk() (*string, bool) {
	if o == nil || IsNil(o.Certificate) {
		return nil, false
	}
	return o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *GridHttpProxyServerSetting) HasCertificate() bool {
	if o != nil && !IsNil(o.Certificate) {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given string and assigns it to the Certificate field.
func (o *GridHttpProxyServerSetting) SetCertificate(v string) {
	o.Certificate = &v
}

// GetEnableUsernameAndPassword returns the EnableUsernameAndPassword field value if set, zero value otherwise.
func (o *GridHttpProxyServerSetting) GetEnableUsernameAndPassword() bool {
	if o == nil || IsNil(o.EnableUsernameAndPassword) {
		var ret bool
		return ret
	}
	return *o.EnableUsernameAndPassword
}

// GetEnableUsernameAndPasswordOk returns a tuple with the EnableUsernameAndPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridHttpProxyServerSetting) GetEnableUsernameAndPasswordOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableUsernameAndPassword) {
		return nil, false
	}
	return o.EnableUsernameAndPassword, true
}

// HasEnableUsernameAndPassword returns a boolean if a field has been set.
func (o *GridHttpProxyServerSetting) HasEnableUsernameAndPassword() bool {
	if o != nil && !IsNil(o.EnableUsernameAndPassword) {
		return true
	}

	return false
}

// SetEnableUsernameAndPassword gets a reference to the given bool and assigns it to the EnableUsernameAndPassword field.
func (o *GridHttpProxyServerSetting) SetEnableUsernameAndPassword(v bool) {
	o.EnableUsernameAndPassword = &v
}

func (o GridHttpProxyServerSetting) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GridHttpProxyServerSetting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.EnableProxy) {
		toSerialize["enable_proxy"] = o.EnableProxy
	}
	if !IsNil(o.EnableContentInspection) {
		toSerialize["enable_content_inspection"] = o.EnableContentInspection
	}
	if !IsNil(o.VerifyCname) {
		toSerialize["verify_cname"] = o.VerifyCname
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Certificate) {
		toSerialize["certificate"] = o.Certificate
	}
	if !IsNil(o.EnableUsernameAndPassword) {
		toSerialize["enable_username_and_password"] = o.EnableUsernameAndPassword
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GridHttpProxyServerSetting) UnmarshalJSON(data []byte) (err error) {
	varGridHttpProxyServerSetting := _GridHttpProxyServerSetting{}

	err = json.Unmarshal(data, &varGridHttpProxyServerSetting)

	if err != nil {
		return err
	}

	*o = GridHttpProxyServerSetting(varGridHttpProxyServerSetting)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "address")
		delete(additionalProperties, "port")
		delete(additionalProperties, "enable_proxy")
		delete(additionalProperties, "enable_content_inspection")
		delete(additionalProperties, "verify_cname")
		delete(additionalProperties, "comment")
		delete(additionalProperties, "username")
		delete(additionalProperties, "password")
		delete(additionalProperties, "certificate")
		delete(additionalProperties, "enable_username_and_password")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGridHttpProxyServerSetting struct {
	value *GridHttpProxyServerSetting
	isSet bool
}

func (v NullableGridHttpProxyServerSetting) Get() *GridHttpProxyServerSetting {
	return v.value
}

func (v *NullableGridHttpProxyServerSetting) Set(val *GridHttpProxyServerSetting) {
	v.value = val
	v.isSet = true
}

func (v NullableGridHttpProxyServerSetting) IsSet() bool {
	return v.isSet
}

func (v *NullableGridHttpProxyServerSetting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGridHttpProxyServerSetting(val *GridHttpProxyServerSetting) *NullableGridHttpProxyServerSetting {
	return &NullableGridHttpProxyServerSetting{value: val, isSet: true}
}

func (v NullableGridHttpProxyServerSetting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGridHttpProxyServerSetting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
