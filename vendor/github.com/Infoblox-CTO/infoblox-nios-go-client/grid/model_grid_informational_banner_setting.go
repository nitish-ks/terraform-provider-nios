/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the GridInformationalBannerSetting type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GridInformationalBannerSetting{}

// GridInformationalBannerSetting struct for GridInformationalBannerSetting
type GridInformationalBannerSetting struct {
	// Determines whether the display of the informational level banner is enabled.
	Enable *bool `json:"enable,omitempty"`
	// The message included in the informational level banner.
	Message *string `json:"message,omitempty"`
	// The color for the informational level banner.
	Color                *string `json:"color,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GridInformationalBannerSetting GridInformationalBannerSetting

// NewGridInformationalBannerSetting instantiates a new GridInformationalBannerSetting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGridInformationalBannerSetting() *GridInformationalBannerSetting {
	this := GridInformationalBannerSetting{}
	return &this
}

// NewGridInformationalBannerSettingWithDefaults instantiates a new GridInformationalBannerSetting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGridInformationalBannerSettingWithDefaults() *GridInformationalBannerSetting {
	this := GridInformationalBannerSetting{}
	return &this
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *GridInformationalBannerSetting) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridInformationalBannerSetting) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *GridInformationalBannerSetting) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *GridInformationalBannerSetting) SetEnable(v bool) {
	o.Enable = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *GridInformationalBannerSetting) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridInformationalBannerSetting) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *GridInformationalBannerSetting) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *GridInformationalBannerSetting) SetMessage(v string) {
	o.Message = &v
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *GridInformationalBannerSetting) GetColor() string {
	if o == nil || IsNil(o.Color) {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridInformationalBannerSetting) GetColorOk() (*string, bool) {
	if o == nil || IsNil(o.Color) {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *GridInformationalBannerSetting) HasColor() bool {
	if o != nil && !IsNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *GridInformationalBannerSetting) SetColor(v string) {
	o.Color = &v
}

func (o GridInformationalBannerSetting) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GridInformationalBannerSetting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Color) {
		toSerialize["color"] = o.Color
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GridInformationalBannerSetting) UnmarshalJSON(data []byte) (err error) {
	varGridInformationalBannerSetting := _GridInformationalBannerSetting{}

	err = json.Unmarshal(data, &varGridInformationalBannerSetting)

	if err != nil {
		return err
	}

	*o = GridInformationalBannerSetting(varGridInformationalBannerSetting)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "enable")
		delete(additionalProperties, "message")
		delete(additionalProperties, "color")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGridInformationalBannerSetting struct {
	value *GridInformationalBannerSetting
	isSet bool
}

func (v NullableGridInformationalBannerSetting) Get() *GridInformationalBannerSetting {
	return v.value
}

func (v *NullableGridInformationalBannerSetting) Set(val *GridInformationalBannerSetting) {
	v.value = val
	v.isSet = true
}

func (v NullableGridInformationalBannerSetting) IsSet() bool {
	return v.isSet
}

func (v *NullableGridInformationalBannerSetting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGridInformationalBannerSetting(val *GridInformationalBannerSetting) *NullableGridInformationalBannerSetting {
	return &NullableGridInformationalBannerSetting{value: val, isSet: true}
}

func (v NullableGridInformationalBannerSetting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGridInformationalBannerSetting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
