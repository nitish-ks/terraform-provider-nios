/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the GridRestartBannerSetting type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GridRestartBannerSetting{}

// GridRestartBannerSetting struct for GridRestartBannerSetting
type GridRestartBannerSetting struct {
	// If set to True, the restart banner is enabled.
	Enabled *bool `json:"enabled,omitempty"`
	// If set to True, the user is required to input name before restarting the services.
	EnableDoubleConfirmation *bool `json:"enable_double_confirmation,omitempty"`
	AdditionalProperties     map[string]interface{}
}

type _GridRestartBannerSetting GridRestartBannerSetting

// NewGridRestartBannerSetting instantiates a new GridRestartBannerSetting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGridRestartBannerSetting() *GridRestartBannerSetting {
	this := GridRestartBannerSetting{}
	return &this
}

// NewGridRestartBannerSettingWithDefaults instantiates a new GridRestartBannerSetting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGridRestartBannerSettingWithDefaults() *GridRestartBannerSetting {
	this := GridRestartBannerSetting{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *GridRestartBannerSetting) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridRestartBannerSetting) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *GridRestartBannerSetting) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *GridRestartBannerSetting) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetEnableDoubleConfirmation returns the EnableDoubleConfirmation field value if set, zero value otherwise.
func (o *GridRestartBannerSetting) GetEnableDoubleConfirmation() bool {
	if o == nil || IsNil(o.EnableDoubleConfirmation) {
		var ret bool
		return ret
	}
	return *o.EnableDoubleConfirmation
}

// GetEnableDoubleConfirmationOk returns a tuple with the EnableDoubleConfirmation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridRestartBannerSetting) GetEnableDoubleConfirmationOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableDoubleConfirmation) {
		return nil, false
	}
	return o.EnableDoubleConfirmation, true
}

// HasEnableDoubleConfirmation returns a boolean if a field has been set.
func (o *GridRestartBannerSetting) HasEnableDoubleConfirmation() bool {
	if o != nil && !IsNil(o.EnableDoubleConfirmation) {
		return true
	}

	return false
}

// SetEnableDoubleConfirmation gets a reference to the given bool and assigns it to the EnableDoubleConfirmation field.
func (o *GridRestartBannerSetting) SetEnableDoubleConfirmation(v bool) {
	o.EnableDoubleConfirmation = &v
}

func (o GridRestartBannerSetting) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GridRestartBannerSetting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.EnableDoubleConfirmation) {
		toSerialize["enable_double_confirmation"] = o.EnableDoubleConfirmation
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GridRestartBannerSetting) UnmarshalJSON(data []byte) (err error) {
	varGridRestartBannerSetting := _GridRestartBannerSetting{}

	err = json.Unmarshal(data, &varGridRestartBannerSetting)

	if err != nil {
		return err
	}

	*o = GridRestartBannerSetting(varGridRestartBannerSetting)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "enabled")
		delete(additionalProperties, "enable_double_confirmation")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGridRestartBannerSetting struct {
	value *GridRestartBannerSetting
	isSet bool
}

func (v NullableGridRestartBannerSetting) Get() *GridRestartBannerSetting {
	return v.value
}

func (v *NullableGridRestartBannerSetting) Set(val *GridRestartBannerSetting) {
	v.value = val
	v.isSet = true
}

func (v NullableGridRestartBannerSetting) IsSet() bool {
	return v.isSet
}

func (v *NullableGridRestartBannerSetting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGridRestartBannerSetting(val *GridRestartBannerSetting) *NullableGridRestartBannerSetting {
	return &NullableGridRestartBannerSetting{value: val, isSet: true}
}

func (v NullableGridRestartBannerSetting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGridRestartBannerSetting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
