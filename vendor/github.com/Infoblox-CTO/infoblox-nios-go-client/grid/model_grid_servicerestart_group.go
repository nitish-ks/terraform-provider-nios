/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the GridServicerestartGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GridServicerestartGroup{}

// GridServicerestartGroup struct for GridServicerestartGroup
type GridServicerestartGroup struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// Comment for the Restart Group; maximum 256 characters.
	Comment *string `json:"comment,omitempty"`
	// Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.
	Extattrs *map[string]ExtAttrs `json:"extattrs,omitempty"`
	// Determines if this Restart Group is the default group.
	IsDefault *bool `json:"is_default,omitempty"`
	// The timestamp when the status of the latest request has changed.
	LastUpdatedTime *int64 `json:"last_updated_time,omitempty"`
	// The list of members belonging to the group.
	Members []string `json:"members,omitempty"`
	// The default restart method for this Restart Group.
	Mode *string `json:"mode,omitempty"`
	// The name of this Restart Group.
	Name *string `json:"name,omitempty"`
	// The order to restart.
	Position          *int64                                    `json:"position,omitempty"`
	RecurringSchedule *GridServicerestartGroupRecurringSchedule `json:"recurring_schedule,omitempty"`
	// The list of requests associated with a restart group.
	Requests []string `json:"requests,omitempty"`
	// The applicable service for this Restart Group.
	Service *string `json:"service,omitempty"`
	// The restart status for a restart group.
	Status *string `json:"status,omitempty"`
}

// NewGridServicerestartGroup instantiates a new GridServicerestartGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGridServicerestartGroup() *GridServicerestartGroup {
	this := GridServicerestartGroup{}
	return &this
}

// NewGridServicerestartGroupWithDefaults instantiates a new GridServicerestartGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGridServicerestartGroupWithDefaults() *GridServicerestartGroup {
	this := GridServicerestartGroup{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *GridServicerestartGroup) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridServicerestartGroup) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *GridServicerestartGroup) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *GridServicerestartGroup) SetRef(v string) {
	o.Ref = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *GridServicerestartGroup) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridServicerestartGroup) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *GridServicerestartGroup) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *GridServicerestartGroup) SetComment(v string) {
	o.Comment = &v
}

// GetExtattrs returns the Extattrs field value if set, zero value otherwise.
func (o *GridServicerestartGroup) GetExtattrs() map[string]ExtAttrs {
	if o == nil || IsNil(o.Extattrs) {
		var ret map[string]ExtAttrs
		return ret
	}
	return *o.Extattrs
}

// GetExtattrsOk returns a tuple with the Extattrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridServicerestartGroup) GetExtattrsOk() (*map[string]ExtAttrs, bool) {
	if o == nil || IsNil(o.Extattrs) {
		return nil, false
	}
	return o.Extattrs, true
}

// HasExtattrs returns a boolean if a field has been set.
func (o *GridServicerestartGroup) HasExtattrs() bool {
	if o != nil && !IsNil(o.Extattrs) {
		return true
	}

	return false
}

// SetExtattrs gets a reference to the given map[string]ExtAttrs and assigns it to the Extattrs field.
func (o *GridServicerestartGroup) SetExtattrs(v map[string]ExtAttrs) {
	o.Extattrs = &v
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *GridServicerestartGroup) GetIsDefault() bool {
	if o == nil || IsNil(o.IsDefault) {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridServicerestartGroup) GetIsDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDefault) {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *GridServicerestartGroup) HasIsDefault() bool {
	if o != nil && !IsNil(o.IsDefault) {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *GridServicerestartGroup) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetLastUpdatedTime returns the LastUpdatedTime field value if set, zero value otherwise.
func (o *GridServicerestartGroup) GetLastUpdatedTime() int64 {
	if o == nil || IsNil(o.LastUpdatedTime) {
		var ret int64
		return ret
	}
	return *o.LastUpdatedTime
}

// GetLastUpdatedTimeOk returns a tuple with the LastUpdatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridServicerestartGroup) GetLastUpdatedTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.LastUpdatedTime) {
		return nil, false
	}
	return o.LastUpdatedTime, true
}

// HasLastUpdatedTime returns a boolean if a field has been set.
func (o *GridServicerestartGroup) HasLastUpdatedTime() bool {
	if o != nil && !IsNil(o.LastUpdatedTime) {
		return true
	}

	return false
}

// SetLastUpdatedTime gets a reference to the given int64 and assigns it to the LastUpdatedTime field.
func (o *GridServicerestartGroup) SetLastUpdatedTime(v int64) {
	o.LastUpdatedTime = &v
}

// GetMembers returns the Members field value if set, zero value otherwise.
func (o *GridServicerestartGroup) GetMembers() []string {
	if o == nil || IsNil(o.Members) {
		var ret []string
		return ret
	}
	return o.Members
}

// GetMembersOk returns a tuple with the Members field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridServicerestartGroup) GetMembersOk() ([]string, bool) {
	if o == nil || IsNil(o.Members) {
		return nil, false
	}
	return o.Members, true
}

// HasMembers returns a boolean if a field has been set.
func (o *GridServicerestartGroup) HasMembers() bool {
	if o != nil && !IsNil(o.Members) {
		return true
	}

	return false
}

// SetMembers gets a reference to the given []string and assigns it to the Members field.
func (o *GridServicerestartGroup) SetMembers(v []string) {
	o.Members = v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *GridServicerestartGroup) GetMode() string {
	if o == nil || IsNil(o.Mode) {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridServicerestartGroup) GetModeOk() (*string, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *GridServicerestartGroup) HasMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *GridServicerestartGroup) SetMode(v string) {
	o.Mode = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GridServicerestartGroup) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridServicerestartGroup) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GridServicerestartGroup) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GridServicerestartGroup) SetName(v string) {
	o.Name = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *GridServicerestartGroup) GetPosition() int64 {
	if o == nil || IsNil(o.Position) {
		var ret int64
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridServicerestartGroup) GetPositionOk() (*int64, bool) {
	if o == nil || IsNil(o.Position) {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *GridServicerestartGroup) HasPosition() bool {
	if o != nil && !IsNil(o.Position) {
		return true
	}

	return false
}

// SetPosition gets a reference to the given int64 and assigns it to the Position field.
func (o *GridServicerestartGroup) SetPosition(v int64) {
	o.Position = &v
}

// GetRecurringSchedule returns the RecurringSchedule field value if set, zero value otherwise.
func (o *GridServicerestartGroup) GetRecurringSchedule() GridServicerestartGroupRecurringSchedule {
	if o == nil || IsNil(o.RecurringSchedule) {
		var ret GridServicerestartGroupRecurringSchedule
		return ret
	}
	return *o.RecurringSchedule
}

// GetRecurringScheduleOk returns a tuple with the RecurringSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridServicerestartGroup) GetRecurringScheduleOk() (*GridServicerestartGroupRecurringSchedule, bool) {
	if o == nil || IsNil(o.RecurringSchedule) {
		return nil, false
	}
	return o.RecurringSchedule, true
}

// HasRecurringSchedule returns a boolean if a field has been set.
func (o *GridServicerestartGroup) HasRecurringSchedule() bool {
	if o != nil && !IsNil(o.RecurringSchedule) {
		return true
	}

	return false
}

// SetRecurringSchedule gets a reference to the given GridServicerestartGroupRecurringSchedule and assigns it to the RecurringSchedule field.
func (o *GridServicerestartGroup) SetRecurringSchedule(v GridServicerestartGroupRecurringSchedule) {
	o.RecurringSchedule = &v
}

// GetRequests returns the Requests field value if set, zero value otherwise.
func (o *GridServicerestartGroup) GetRequests() []string {
	if o == nil || IsNil(o.Requests) {
		var ret []string
		return ret
	}
	return o.Requests
}

// GetRequestsOk returns a tuple with the Requests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridServicerestartGroup) GetRequestsOk() ([]string, bool) {
	if o == nil || IsNil(o.Requests) {
		return nil, false
	}
	return o.Requests, true
}

// HasRequests returns a boolean if a field has been set.
func (o *GridServicerestartGroup) HasRequests() bool {
	if o != nil && !IsNil(o.Requests) {
		return true
	}

	return false
}

// SetRequests gets a reference to the given []string and assigns it to the Requests field.
func (o *GridServicerestartGroup) SetRequests(v []string) {
	o.Requests = v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *GridServicerestartGroup) GetService() string {
	if o == nil || IsNil(o.Service) {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridServicerestartGroup) GetServiceOk() (*string, bool) {
	if o == nil || IsNil(o.Service) {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *GridServicerestartGroup) HasService() bool {
	if o != nil && !IsNil(o.Service) {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *GridServicerestartGroup) SetService(v string) {
	o.Service = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GridServicerestartGroup) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridServicerestartGroup) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GridServicerestartGroup) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GridServicerestartGroup) SetStatus(v string) {
	o.Status = &v
}

func (o GridServicerestartGroup) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GridServicerestartGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.Extattrs) {
		toSerialize["extattrs"] = o.Extattrs
	}
	if !IsNil(o.IsDefault) {
		toSerialize["is_default"] = o.IsDefault
	}
	if !IsNil(o.LastUpdatedTime) {
		toSerialize["last_updated_time"] = o.LastUpdatedTime
	}
	if !IsNil(o.Members) {
		toSerialize["members"] = o.Members
	}
	if !IsNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Position) {
		toSerialize["position"] = o.Position
	}
	if !IsNil(o.RecurringSchedule) {
		toSerialize["recurring_schedule"] = o.RecurringSchedule
	}
	if !IsNil(o.Requests) {
		toSerialize["requests"] = o.Requests
	}
	if !IsNil(o.Service) {
		toSerialize["service"] = o.Service
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableGridServicerestartGroup struct {
	value *GridServicerestartGroup
	isSet bool
}

func (v NullableGridServicerestartGroup) Get() *GridServicerestartGroup {
	return v.value
}

func (v *NullableGridServicerestartGroup) Set(val *GridServicerestartGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableGridServicerestartGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableGridServicerestartGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGridServicerestartGroup(val *GridServicerestartGroup) *NullableGridServicerestartGroup {
	return &NullableGridServicerestartGroup{value: val, isSet: true}
}

func (v NullableGridServicerestartGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGridServicerestartGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
