/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the GridServicerestartGroupOrder type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GridServicerestartGroupOrder{}

// GridServicerestartGroupOrder struct for GridServicerestartGroupOrder
type GridServicerestartGroupOrder struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// The ordered list of the Service Restart Group.
	Groups []string `json:"groups,omitempty"`
}

// NewGridServicerestartGroupOrder instantiates a new GridServicerestartGroupOrder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGridServicerestartGroupOrder() *GridServicerestartGroupOrder {
	this := GridServicerestartGroupOrder{}
	return &this
}

// NewGridServicerestartGroupOrderWithDefaults instantiates a new GridServicerestartGroupOrder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGridServicerestartGroupOrderWithDefaults() *GridServicerestartGroupOrder {
	this := GridServicerestartGroupOrder{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *GridServicerestartGroupOrder) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridServicerestartGroupOrder) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *GridServicerestartGroupOrder) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *GridServicerestartGroupOrder) SetRef(v string) {
	o.Ref = &v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *GridServicerestartGroupOrder) GetGroups() []string {
	if o == nil || IsNil(o.Groups) {
		var ret []string
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridServicerestartGroupOrder) GetGroupsOk() ([]string, bool) {
	if o == nil || IsNil(o.Groups) {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *GridServicerestartGroupOrder) HasGroups() bool {
	if o != nil && !IsNil(o.Groups) {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []string and assigns it to the Groups field.
func (o *GridServicerestartGroupOrder) SetGroups(v []string) {
	o.Groups = v
}

func (o GridServicerestartGroupOrder) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GridServicerestartGroupOrder) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.Groups) {
		toSerialize["groups"] = o.Groups
	}
	return toSerialize, nil
}

type NullableGridServicerestartGroupOrder struct {
	value *GridServicerestartGroupOrder
	isSet bool
}

func (v NullableGridServicerestartGroupOrder) Get() *GridServicerestartGroupOrder {
	return v.value
}

func (v *NullableGridServicerestartGroupOrder) Set(val *GridServicerestartGroupOrder) {
	v.value = val
	v.isSet = true
}

func (v NullableGridServicerestartGroupOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableGridServicerestartGroupOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGridServicerestartGroupOrder(val *GridServicerestartGroupOrder) *NullableGridServicerestartGroupOrder {
	return &NullableGridServicerestartGroupOrder{value: val, isSet: true}
}

func (v NullableGridServicerestartGroupOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGridServicerestartGroupOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
