/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the GridServicerestartRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GridServicerestartRequest{}

// GridServicerestartRequest struct for GridServicerestartRequest
type GridServicerestartRequest struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// The error message if restart has failed.
	Error *string `json:"error,omitempty"`
	// Indicates if this is a force restart.
	Forced *bool `json:"forced,omitempty"`
	// The name of the Restart Group associated with the request.
	Group *string `json:"group,omitempty"`
	// The timestamp when the status of the request has changed.
	LastUpdatedTime *int64 `json:"last_updated_time,omitempty"`
	// The member to restart.
	Member *string `json:"member,omitempty"`
	// Indicates if restart is needed.
	Needed *string `json:"needed,omitempty"`
	// The order to restart.
	Order *int32 `json:"order,omitempty"`
	// The result of the restart operation.
	Result *string `json:"result,omitempty"`
	// The service to restart.
	Service *string `json:"service,omitempty"`
	// The state of the request.
	State *string `json:"state,omitempty"`
}

// NewGridServicerestartRequest instantiates a new GridServicerestartRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGridServicerestartRequest() *GridServicerestartRequest {
	this := GridServicerestartRequest{}
	return &this
}

// NewGridServicerestartRequestWithDefaults instantiates a new GridServicerestartRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGridServicerestartRequestWithDefaults() *GridServicerestartRequest {
	this := GridServicerestartRequest{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *GridServicerestartRequest) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridServicerestartRequest) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *GridServicerestartRequest) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *GridServicerestartRequest) SetRef(v string) {
	o.Ref = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *GridServicerestartRequest) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridServicerestartRequest) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *GridServicerestartRequest) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *GridServicerestartRequest) SetError(v string) {
	o.Error = &v
}

// GetForced returns the Forced field value if set, zero value otherwise.
func (o *GridServicerestartRequest) GetForced() bool {
	if o == nil || IsNil(o.Forced) {
		var ret bool
		return ret
	}
	return *o.Forced
}

// GetForcedOk returns a tuple with the Forced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridServicerestartRequest) GetForcedOk() (*bool, bool) {
	if o == nil || IsNil(o.Forced) {
		return nil, false
	}
	return o.Forced, true
}

// HasForced returns a boolean if a field has been set.
func (o *GridServicerestartRequest) HasForced() bool {
	if o != nil && !IsNil(o.Forced) {
		return true
	}

	return false
}

// SetForced gets a reference to the given bool and assigns it to the Forced field.
func (o *GridServicerestartRequest) SetForced(v bool) {
	o.Forced = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *GridServicerestartRequest) GetGroup() string {
	if o == nil || IsNil(o.Group) {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridServicerestartRequest) GetGroupOk() (*string, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *GridServicerestartRequest) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *GridServicerestartRequest) SetGroup(v string) {
	o.Group = &v
}

// GetLastUpdatedTime returns the LastUpdatedTime field value if set, zero value otherwise.
func (o *GridServicerestartRequest) GetLastUpdatedTime() int64 {
	if o == nil || IsNil(o.LastUpdatedTime) {
		var ret int64
		return ret
	}
	return *o.LastUpdatedTime
}

// GetLastUpdatedTimeOk returns a tuple with the LastUpdatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridServicerestartRequest) GetLastUpdatedTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.LastUpdatedTime) {
		return nil, false
	}
	return o.LastUpdatedTime, true
}

// HasLastUpdatedTime returns a boolean if a field has been set.
func (o *GridServicerestartRequest) HasLastUpdatedTime() bool {
	if o != nil && !IsNil(o.LastUpdatedTime) {
		return true
	}

	return false
}

// SetLastUpdatedTime gets a reference to the given int64 and assigns it to the LastUpdatedTime field.
func (o *GridServicerestartRequest) SetLastUpdatedTime(v int64) {
	o.LastUpdatedTime = &v
}

// GetMember returns the Member field value if set, zero value otherwise.
func (o *GridServicerestartRequest) GetMember() string {
	if o == nil || IsNil(o.Member) {
		var ret string
		return ret
	}
	return *o.Member
}

// GetMemberOk returns a tuple with the Member field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridServicerestartRequest) GetMemberOk() (*string, bool) {
	if o == nil || IsNil(o.Member) {
		return nil, false
	}
	return o.Member, true
}

// HasMember returns a boolean if a field has been set.
func (o *GridServicerestartRequest) HasMember() bool {
	if o != nil && !IsNil(o.Member) {
		return true
	}

	return false
}

// SetMember gets a reference to the given string and assigns it to the Member field.
func (o *GridServicerestartRequest) SetMember(v string) {
	o.Member = &v
}

// GetNeeded returns the Needed field value if set, zero value otherwise.
func (o *GridServicerestartRequest) GetNeeded() string {
	if o == nil || IsNil(o.Needed) {
		var ret string
		return ret
	}
	return *o.Needed
}

// GetNeededOk returns a tuple with the Needed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridServicerestartRequest) GetNeededOk() (*string, bool) {
	if o == nil || IsNil(o.Needed) {
		return nil, false
	}
	return o.Needed, true
}

// HasNeeded returns a boolean if a field has been set.
func (o *GridServicerestartRequest) HasNeeded() bool {
	if o != nil && !IsNil(o.Needed) {
		return true
	}

	return false
}

// SetNeeded gets a reference to the given string and assigns it to the Needed field.
func (o *GridServicerestartRequest) SetNeeded(v string) {
	o.Needed = &v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *GridServicerestartRequest) GetOrder() int32 {
	if o == nil || IsNil(o.Order) {
		var ret int32
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridServicerestartRequest) GetOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *GridServicerestartRequest) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given int32 and assigns it to the Order field.
func (o *GridServicerestartRequest) SetOrder(v int32) {
	o.Order = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *GridServicerestartRequest) GetResult() string {
	if o == nil || IsNil(o.Result) {
		var ret string
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridServicerestartRequest) GetResultOk() (*string, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *GridServicerestartRequest) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given string and assigns it to the Result field.
func (o *GridServicerestartRequest) SetResult(v string) {
	o.Result = &v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *GridServicerestartRequest) GetService() string {
	if o == nil || IsNil(o.Service) {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridServicerestartRequest) GetServiceOk() (*string, bool) {
	if o == nil || IsNil(o.Service) {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *GridServicerestartRequest) HasService() bool {
	if o != nil && !IsNil(o.Service) {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *GridServicerestartRequest) SetService(v string) {
	o.Service = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *GridServicerestartRequest) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridServicerestartRequest) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *GridServicerestartRequest) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *GridServicerestartRequest) SetState(v string) {
	o.State = &v
}

func (o GridServicerestartRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GridServicerestartRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.Forced) {
		toSerialize["forced"] = o.Forced
	}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.LastUpdatedTime) {
		toSerialize["last_updated_time"] = o.LastUpdatedTime
	}
	if !IsNil(o.Member) {
		toSerialize["member"] = o.Member
	}
	if !IsNil(o.Needed) {
		toSerialize["needed"] = o.Needed
	}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !IsNil(o.Service) {
		toSerialize["service"] = o.Service
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	return toSerialize, nil
}

type NullableGridServicerestartRequest struct {
	value *GridServicerestartRequest
	isSet bool
}

func (v NullableGridServicerestartRequest) Get() *GridServicerestartRequest {
	return v.value
}

func (v *NullableGridServicerestartRequest) Set(val *GridServicerestartRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGridServicerestartRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGridServicerestartRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGridServicerestartRequest(val *GridServicerestartRequest) *NullableGridServicerestartRequest {
	return &NullableGridServicerestartRequest{value: val, isSet: true}
}

func (v NullableGridServicerestartRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGridServicerestartRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
