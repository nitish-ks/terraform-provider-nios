/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the GridSyslogServers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GridSyslogServers{}

// GridSyslogServers struct for GridSyslogServers
type GridSyslogServers struct {
	// Reference to the underlying X509Certificate object grid:x509certificate.
	Certificate *string `json:"certificate,omitempty"`
	// The token returned by the uploadinit function call in object fileop.
	CertificateToken *string `json:"certificate_token,omitempty"`
	// The connection type for communicating with this server.
	ConnectionType *string `json:"connection_type,omitempty"`
	// The port this server listens on.
	Port *int64 `json:"port,omitempty"`
	// The local interface through which the appliance sends syslog messages to the syslog server.
	LocalInterface *string `json:"local_interface,omitempty"`
	// The source of syslog messages to be sent to the external syslog server. If set to 'INTERNAL', only messages the appliance generates will be sent to the syslog server. If set to 'EXTERNAL', the appliance sends syslog messages that it receives from other devices, such as syslog servers and routers. If set to 'ANY', the appliance sends both internal and external syslog messages.
	MessageSource *string `json:"message_source,omitempty"`
	// Identify the node in the syslog message.
	MessageNodeId *string `json:"message_node_id,omitempty"`
	// The severity filter. The appliance sends log messages of the specified severity and above to the external syslog server.
	Severity *string `json:"severity,omitempty"`
	// The list of all syslog logging categories.
	CategoryList []string `json:"category_list,omitempty"`
	// The list of selected syslog logging categories. The appliance forwards syslog messages that belong to the selected categories.
	OnlyCategoryList *bool `json:"only_category_list,omitempty"`
	// The server address or FQDN.
	Address              *string `json:"address,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GridSyslogServers GridSyslogServers

// NewGridSyslogServers instantiates a new GridSyslogServers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGridSyslogServers() *GridSyslogServers {
	this := GridSyslogServers{}
	return &this
}

// NewGridSyslogServersWithDefaults instantiates a new GridSyslogServers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGridSyslogServersWithDefaults() *GridSyslogServers {
	this := GridSyslogServers{}
	return &this
}

// GetCertificate returns the Certificate field value if set, zero value otherwise.
func (o *GridSyslogServers) GetCertificate() string {
	if o == nil || IsNil(o.Certificate) {
		var ret string
		return ret
	}
	return *o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridSyslogServers) GetCertificateOk() (*string, bool) {
	if o == nil || IsNil(o.Certificate) {
		return nil, false
	}
	return o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *GridSyslogServers) HasCertificate() bool {
	if o != nil && !IsNil(o.Certificate) {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given string and assigns it to the Certificate field.
func (o *GridSyslogServers) SetCertificate(v string) {
	o.Certificate = &v
}

// GetCertificateToken returns the CertificateToken field value if set, zero value otherwise.
func (o *GridSyslogServers) GetCertificateToken() string {
	if o == nil || IsNil(o.CertificateToken) {
		var ret string
		return ret
	}
	return *o.CertificateToken
}

// GetCertificateTokenOk returns a tuple with the CertificateToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridSyslogServers) GetCertificateTokenOk() (*string, bool) {
	if o == nil || IsNil(o.CertificateToken) {
		return nil, false
	}
	return o.CertificateToken, true
}

// HasCertificateToken returns a boolean if a field has been set.
func (o *GridSyslogServers) HasCertificateToken() bool {
	if o != nil && !IsNil(o.CertificateToken) {
		return true
	}

	return false
}

// SetCertificateToken gets a reference to the given string and assigns it to the CertificateToken field.
func (o *GridSyslogServers) SetCertificateToken(v string) {
	o.CertificateToken = &v
}

// GetConnectionType returns the ConnectionType field value if set, zero value otherwise.
func (o *GridSyslogServers) GetConnectionType() string {
	if o == nil || IsNil(o.ConnectionType) {
		var ret string
		return ret
	}
	return *o.ConnectionType
}

// GetConnectionTypeOk returns a tuple with the ConnectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridSyslogServers) GetConnectionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionType) {
		return nil, false
	}
	return o.ConnectionType, true
}

// HasConnectionType returns a boolean if a field has been set.
func (o *GridSyslogServers) HasConnectionType() bool {
	if o != nil && !IsNil(o.ConnectionType) {
		return true
	}

	return false
}

// SetConnectionType gets a reference to the given string and assigns it to the ConnectionType field.
func (o *GridSyslogServers) SetConnectionType(v string) {
	o.ConnectionType = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *GridSyslogServers) GetPort() int64 {
	if o == nil || IsNil(o.Port) {
		var ret int64
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridSyslogServers) GetPortOk() (*int64, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *GridSyslogServers) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int64 and assigns it to the Port field.
func (o *GridSyslogServers) SetPort(v int64) {
	o.Port = &v
}

// GetLocalInterface returns the LocalInterface field value if set, zero value otherwise.
func (o *GridSyslogServers) GetLocalInterface() string {
	if o == nil || IsNil(o.LocalInterface) {
		var ret string
		return ret
	}
	return *o.LocalInterface
}

// GetLocalInterfaceOk returns a tuple with the LocalInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridSyslogServers) GetLocalInterfaceOk() (*string, bool) {
	if o == nil || IsNil(o.LocalInterface) {
		return nil, false
	}
	return o.LocalInterface, true
}

// HasLocalInterface returns a boolean if a field has been set.
func (o *GridSyslogServers) HasLocalInterface() bool {
	if o != nil && !IsNil(o.LocalInterface) {
		return true
	}

	return false
}

// SetLocalInterface gets a reference to the given string and assigns it to the LocalInterface field.
func (o *GridSyslogServers) SetLocalInterface(v string) {
	o.LocalInterface = &v
}

// GetMessageSource returns the MessageSource field value if set, zero value otherwise.
func (o *GridSyslogServers) GetMessageSource() string {
	if o == nil || IsNil(o.MessageSource) {
		var ret string
		return ret
	}
	return *o.MessageSource
}

// GetMessageSourceOk returns a tuple with the MessageSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridSyslogServers) GetMessageSourceOk() (*string, bool) {
	if o == nil || IsNil(o.MessageSource) {
		return nil, false
	}
	return o.MessageSource, true
}

// HasMessageSource returns a boolean if a field has been set.
func (o *GridSyslogServers) HasMessageSource() bool {
	if o != nil && !IsNil(o.MessageSource) {
		return true
	}

	return false
}

// SetMessageSource gets a reference to the given string and assigns it to the MessageSource field.
func (o *GridSyslogServers) SetMessageSource(v string) {
	o.MessageSource = &v
}

// GetMessageNodeId returns the MessageNodeId field value if set, zero value otherwise.
func (o *GridSyslogServers) GetMessageNodeId() string {
	if o == nil || IsNil(o.MessageNodeId) {
		var ret string
		return ret
	}
	return *o.MessageNodeId
}

// GetMessageNodeIdOk returns a tuple with the MessageNodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridSyslogServers) GetMessageNodeIdOk() (*string, bool) {
	if o == nil || IsNil(o.MessageNodeId) {
		return nil, false
	}
	return o.MessageNodeId, true
}

// HasMessageNodeId returns a boolean if a field has been set.
func (o *GridSyslogServers) HasMessageNodeId() bool {
	if o != nil && !IsNil(o.MessageNodeId) {
		return true
	}

	return false
}

// SetMessageNodeId gets a reference to the given string and assigns it to the MessageNodeId field.
func (o *GridSyslogServers) SetMessageNodeId(v string) {
	o.MessageNodeId = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *GridSyslogServers) GetSeverity() string {
	if o == nil || IsNil(o.Severity) {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridSyslogServers) GetSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *GridSyslogServers) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *GridSyslogServers) SetSeverity(v string) {
	o.Severity = &v
}

// GetCategoryList returns the CategoryList field value if set, zero value otherwise.
func (o *GridSyslogServers) GetCategoryList() []string {
	if o == nil || IsNil(o.CategoryList) {
		var ret []string
		return ret
	}
	return o.CategoryList
}

// GetCategoryListOk returns a tuple with the CategoryList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridSyslogServers) GetCategoryListOk() ([]string, bool) {
	if o == nil || IsNil(o.CategoryList) {
		return nil, false
	}
	return o.CategoryList, true
}

// HasCategoryList returns a boolean if a field has been set.
func (o *GridSyslogServers) HasCategoryList() bool {
	if o != nil && !IsNil(o.CategoryList) {
		return true
	}

	return false
}

// SetCategoryList gets a reference to the given []string and assigns it to the CategoryList field.
func (o *GridSyslogServers) SetCategoryList(v []string) {
	o.CategoryList = v
}

// GetOnlyCategoryList returns the OnlyCategoryList field value if set, zero value otherwise.
func (o *GridSyslogServers) GetOnlyCategoryList() bool {
	if o == nil || IsNil(o.OnlyCategoryList) {
		var ret bool
		return ret
	}
	return *o.OnlyCategoryList
}

// GetOnlyCategoryListOk returns a tuple with the OnlyCategoryList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridSyslogServers) GetOnlyCategoryListOk() (*bool, bool) {
	if o == nil || IsNil(o.OnlyCategoryList) {
		return nil, false
	}
	return o.OnlyCategoryList, true
}

// HasOnlyCategoryList returns a boolean if a field has been set.
func (o *GridSyslogServers) HasOnlyCategoryList() bool {
	if o != nil && !IsNil(o.OnlyCategoryList) {
		return true
	}

	return false
}

// SetOnlyCategoryList gets a reference to the given bool and assigns it to the OnlyCategoryList field.
func (o *GridSyslogServers) SetOnlyCategoryList(v bool) {
	o.OnlyCategoryList = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *GridSyslogServers) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridSyslogServers) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *GridSyslogServers) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *GridSyslogServers) SetAddress(v string) {
	o.Address = &v
}

func (o GridSyslogServers) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GridSyslogServers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Certificate) {
		toSerialize["certificate"] = o.Certificate
	}
	if !IsNil(o.CertificateToken) {
		toSerialize["certificate_token"] = o.CertificateToken
	}
	if !IsNil(o.ConnectionType) {
		toSerialize["connection_type"] = o.ConnectionType
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.LocalInterface) {
		toSerialize["local_interface"] = o.LocalInterface
	}
	if !IsNil(o.MessageSource) {
		toSerialize["message_source"] = o.MessageSource
	}
	if !IsNil(o.MessageNodeId) {
		toSerialize["message_node_id"] = o.MessageNodeId
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	if !IsNil(o.CategoryList) {
		toSerialize["category_list"] = o.CategoryList
	}
	if !IsNil(o.OnlyCategoryList) {
		toSerialize["only_category_list"] = o.OnlyCategoryList
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GridSyslogServers) UnmarshalJSON(data []byte) (err error) {
	varGridSyslogServers := _GridSyslogServers{}

	err = json.Unmarshal(data, &varGridSyslogServers)

	if err != nil {
		return err
	}

	*o = GridSyslogServers(varGridSyslogServers)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "certificate")
		delete(additionalProperties, "certificate_token")
		delete(additionalProperties, "connection_type")
		delete(additionalProperties, "port")
		delete(additionalProperties, "local_interface")
		delete(additionalProperties, "message_source")
		delete(additionalProperties, "message_node_id")
		delete(additionalProperties, "severity")
		delete(additionalProperties, "category_list")
		delete(additionalProperties, "only_category_list")
		delete(additionalProperties, "address")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGridSyslogServers struct {
	value *GridSyslogServers
	isSet bool
}

func (v NullableGridSyslogServers) Get() *GridSyslogServers {
	return v.value
}

func (v *NullableGridSyslogServers) Set(val *GridSyslogServers) {
	v.value = val
	v.isSet = true
}

func (v NullableGridSyslogServers) IsSet() bool {
	return v.isSet
}

func (v *NullableGridSyslogServers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGridSyslogServers(val *GridSyslogServers) *NullableGridSyslogServers {
	return &NullableGridSyslogServers{value: val, isSet: true}
}

func (v NullableGridSyslogServers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGridSyslogServers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
