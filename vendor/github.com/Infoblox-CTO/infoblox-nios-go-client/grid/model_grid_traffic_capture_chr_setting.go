/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the GridTrafficCaptureChrSetting type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GridTrafficCaptureChrSetting{}

// GridTrafficCaptureChrSetting struct for GridTrafficCaptureChrSetting
type GridTrafficCaptureChrSetting struct {
	// Enable triggering automated traffic capture based on cache hit ratio thresholds.
	ChrTriggerEnable *bool `json:"chr_trigger_enable,omitempty"`
	// DNS Cache hit ratio threshold(%) below which traffic capture will be triggered.
	ChrThreshold *int64 `json:"chr_threshold,omitempty"`
	// DNS Cache hit ratio threshold(%) above which traffic capture will be triggered.
	ChrReset *int64 `json:"chr_reset,omitempty"`
	// Minimum DNS cache utilization threshold(%) for triggering traffic capture based on DNS cache hit ratio.
	ChrMinCacheUtilization *int64 `json:"chr_min_cache_utilization,omitempty"`
	AdditionalProperties   map[string]interface{}
}

type _GridTrafficCaptureChrSetting GridTrafficCaptureChrSetting

// NewGridTrafficCaptureChrSetting instantiates a new GridTrafficCaptureChrSetting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGridTrafficCaptureChrSetting() *GridTrafficCaptureChrSetting {
	this := GridTrafficCaptureChrSetting{}
	return &this
}

// NewGridTrafficCaptureChrSettingWithDefaults instantiates a new GridTrafficCaptureChrSetting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGridTrafficCaptureChrSettingWithDefaults() *GridTrafficCaptureChrSetting {
	this := GridTrafficCaptureChrSetting{}
	return &this
}

// GetChrTriggerEnable returns the ChrTriggerEnable field value if set, zero value otherwise.
func (o *GridTrafficCaptureChrSetting) GetChrTriggerEnable() bool {
	if o == nil || IsNil(o.ChrTriggerEnable) {
		var ret bool
		return ret
	}
	return *o.ChrTriggerEnable
}

// GetChrTriggerEnableOk returns a tuple with the ChrTriggerEnable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridTrafficCaptureChrSetting) GetChrTriggerEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.ChrTriggerEnable) {
		return nil, false
	}
	return o.ChrTriggerEnable, true
}

// HasChrTriggerEnable returns a boolean if a field has been set.
func (o *GridTrafficCaptureChrSetting) HasChrTriggerEnable() bool {
	if o != nil && !IsNil(o.ChrTriggerEnable) {
		return true
	}

	return false
}

// SetChrTriggerEnable gets a reference to the given bool and assigns it to the ChrTriggerEnable field.
func (o *GridTrafficCaptureChrSetting) SetChrTriggerEnable(v bool) {
	o.ChrTriggerEnable = &v
}

// GetChrThreshold returns the ChrThreshold field value if set, zero value otherwise.
func (o *GridTrafficCaptureChrSetting) GetChrThreshold() int64 {
	if o == nil || IsNil(o.ChrThreshold) {
		var ret int64
		return ret
	}
	return *o.ChrThreshold
}

// GetChrThresholdOk returns a tuple with the ChrThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridTrafficCaptureChrSetting) GetChrThresholdOk() (*int64, bool) {
	if o == nil || IsNil(o.ChrThreshold) {
		return nil, false
	}
	return o.ChrThreshold, true
}

// HasChrThreshold returns a boolean if a field has been set.
func (o *GridTrafficCaptureChrSetting) HasChrThreshold() bool {
	if o != nil && !IsNil(o.ChrThreshold) {
		return true
	}

	return false
}

// SetChrThreshold gets a reference to the given int64 and assigns it to the ChrThreshold field.
func (o *GridTrafficCaptureChrSetting) SetChrThreshold(v int64) {
	o.ChrThreshold = &v
}

// GetChrReset returns the ChrReset field value if set, zero value otherwise.
func (o *GridTrafficCaptureChrSetting) GetChrReset() int64 {
	if o == nil || IsNil(o.ChrReset) {
		var ret int64
		return ret
	}
	return *o.ChrReset
}

// GetChrResetOk returns a tuple with the ChrReset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridTrafficCaptureChrSetting) GetChrResetOk() (*int64, bool) {
	if o == nil || IsNil(o.ChrReset) {
		return nil, false
	}
	return o.ChrReset, true
}

// HasChrReset returns a boolean if a field has been set.
func (o *GridTrafficCaptureChrSetting) HasChrReset() bool {
	if o != nil && !IsNil(o.ChrReset) {
		return true
	}

	return false
}

// SetChrReset gets a reference to the given int64 and assigns it to the ChrReset field.
func (o *GridTrafficCaptureChrSetting) SetChrReset(v int64) {
	o.ChrReset = &v
}

// GetChrMinCacheUtilization returns the ChrMinCacheUtilization field value if set, zero value otherwise.
func (o *GridTrafficCaptureChrSetting) GetChrMinCacheUtilization() int64 {
	if o == nil || IsNil(o.ChrMinCacheUtilization) {
		var ret int64
		return ret
	}
	return *o.ChrMinCacheUtilization
}

// GetChrMinCacheUtilizationOk returns a tuple with the ChrMinCacheUtilization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridTrafficCaptureChrSetting) GetChrMinCacheUtilizationOk() (*int64, bool) {
	if o == nil || IsNil(o.ChrMinCacheUtilization) {
		return nil, false
	}
	return o.ChrMinCacheUtilization, true
}

// HasChrMinCacheUtilization returns a boolean if a field has been set.
func (o *GridTrafficCaptureChrSetting) HasChrMinCacheUtilization() bool {
	if o != nil && !IsNil(o.ChrMinCacheUtilization) {
		return true
	}

	return false
}

// SetChrMinCacheUtilization gets a reference to the given int64 and assigns it to the ChrMinCacheUtilization field.
func (o *GridTrafficCaptureChrSetting) SetChrMinCacheUtilization(v int64) {
	o.ChrMinCacheUtilization = &v
}

func (o GridTrafficCaptureChrSetting) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GridTrafficCaptureChrSetting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChrTriggerEnable) {
		toSerialize["chr_trigger_enable"] = o.ChrTriggerEnable
	}
	if !IsNil(o.ChrThreshold) {
		toSerialize["chr_threshold"] = o.ChrThreshold
	}
	if !IsNil(o.ChrReset) {
		toSerialize["chr_reset"] = o.ChrReset
	}
	if !IsNil(o.ChrMinCacheUtilization) {
		toSerialize["chr_min_cache_utilization"] = o.ChrMinCacheUtilization
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GridTrafficCaptureChrSetting) UnmarshalJSON(data []byte) (err error) {
	varGridTrafficCaptureChrSetting := _GridTrafficCaptureChrSetting{}

	err = json.Unmarshal(data, &varGridTrafficCaptureChrSetting)

	if err != nil {
		return err
	}

	*o = GridTrafficCaptureChrSetting(varGridTrafficCaptureChrSetting)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "chr_trigger_enable")
		delete(additionalProperties, "chr_threshold")
		delete(additionalProperties, "chr_reset")
		delete(additionalProperties, "chr_min_cache_utilization")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGridTrafficCaptureChrSetting struct {
	value *GridTrafficCaptureChrSetting
	isSet bool
}

func (v NullableGridTrafficCaptureChrSetting) Get() *GridTrafficCaptureChrSetting {
	return v.value
}

func (v *NullableGridTrafficCaptureChrSetting) Set(val *GridTrafficCaptureChrSetting) {
	v.value = val
	v.isSet = true
}

func (v NullableGridTrafficCaptureChrSetting) IsSet() bool {
	return v.isSet
}

func (v *NullableGridTrafficCaptureChrSetting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGridTrafficCaptureChrSetting(val *GridTrafficCaptureChrSetting) *NullableGridTrafficCaptureChrSetting {
	return &NullableGridTrafficCaptureChrSetting{value: val, isSet: true}
}

func (v NullableGridTrafficCaptureChrSetting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGridTrafficCaptureChrSetting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
