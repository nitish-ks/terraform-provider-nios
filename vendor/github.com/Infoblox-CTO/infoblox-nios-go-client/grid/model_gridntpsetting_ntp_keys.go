/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the GridntpsettingNtpKeys type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GridntpsettingNtpKeys{}

// GridntpsettingNtpKeys struct for GridntpsettingNtpKeys
type GridntpsettingNtpKeys struct {
	// The NTP authentication key identifier.
	Number *int64 `json:"number,omitempty"`
	// The NTP authentication key string.
	String *string `json:"string,omitempty"`
	// The NTP authentication key type.
	Type                 *string `json:"type,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GridntpsettingNtpKeys GridntpsettingNtpKeys

// NewGridntpsettingNtpKeys instantiates a new GridntpsettingNtpKeys object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGridntpsettingNtpKeys() *GridntpsettingNtpKeys {
	this := GridntpsettingNtpKeys{}
	return &this
}

// NewGridntpsettingNtpKeysWithDefaults instantiates a new GridntpsettingNtpKeys object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGridntpsettingNtpKeysWithDefaults() *GridntpsettingNtpKeys {
	this := GridntpsettingNtpKeys{}
	return &this
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *GridntpsettingNtpKeys) GetNumber() int64 {
	if o == nil || IsNil(o.Number) {
		var ret int64
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridntpsettingNtpKeys) GetNumberOk() (*int64, bool) {
	if o == nil || IsNil(o.Number) {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *GridntpsettingNtpKeys) HasNumber() bool {
	if o != nil && !IsNil(o.Number) {
		return true
	}

	return false
}

// SetNumber gets a reference to the given int64 and assigns it to the Number field.
func (o *GridntpsettingNtpKeys) SetNumber(v int64) {
	o.Number = &v
}

// GetString returns the String field value if set, zero value otherwise.
func (o *GridntpsettingNtpKeys) GetString() string {
	if o == nil || IsNil(o.String) {
		var ret string
		return ret
	}
	return *o.String
}

// GetStringOk returns a tuple with the String field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridntpsettingNtpKeys) GetStringOk() (*string, bool) {
	if o == nil || IsNil(o.String) {
		return nil, false
	}
	return o.String, true
}

// HasString returns a boolean if a field has been set.
func (o *GridntpsettingNtpKeys) HasString() bool {
	if o != nil && !IsNil(o.String) {
		return true
	}

	return false
}

// SetString gets a reference to the given string and assigns it to the String field.
func (o *GridntpsettingNtpKeys) SetString(v string) {
	o.String = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GridntpsettingNtpKeys) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridntpsettingNtpKeys) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GridntpsettingNtpKeys) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GridntpsettingNtpKeys) SetType(v string) {
	o.Type = &v
}

func (o GridntpsettingNtpKeys) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GridntpsettingNtpKeys) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Number) {
		toSerialize["number"] = o.Number
	}
	if !IsNil(o.String) {
		toSerialize["string"] = o.String
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GridntpsettingNtpKeys) UnmarshalJSON(data []byte) (err error) {
	varGridntpsettingNtpKeys := _GridntpsettingNtpKeys{}

	err = json.Unmarshal(data, &varGridntpsettingNtpKeys)

	if err != nil {
		return err
	}

	*o = GridntpsettingNtpKeys(varGridntpsettingNtpKeys)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "number")
		delete(additionalProperties, "string")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGridntpsettingNtpKeys struct {
	value *GridntpsettingNtpKeys
	isSet bool
}

func (v NullableGridntpsettingNtpKeys) Get() *GridntpsettingNtpKeys {
	return v.value
}

func (v *NullableGridntpsettingNtpKeys) Set(val *GridntpsettingNtpKeys) {
	v.value = val
	v.isSet = true
}

func (v NullableGridntpsettingNtpKeys) IsSet() bool {
	return v.isSet
}

func (v *NullableGridntpsettingNtpKeys) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGridntpsettingNtpKeys(val *GridntpsettingNtpKeys) *NullableGridntpsettingNtpKeys {
	return &NullableGridntpsettingNtpKeys{value: val, isSet: true}
}

func (v NullableGridntpsettingNtpKeys) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGridntpsettingNtpKeys) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
