/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
	"fmt"
)

// ListExtensibleattributedefResponse - struct for ListExtensibleattributedefResponse
type ListExtensibleattributedefResponse struct {
	ListExtensibleattributedefResponseObject *ListExtensibleattributedefResponseObject
	ArrayOfExtensibleattributedef            *[]Extensibleattributedef
}

// ListExtensibleattributedefResponseObjectAsListExtensibleattributedefResponse is a convenience function that returns ListExtensibleattributedefResponseObject wrapped in ListExtensibleattributedefResponse
func ListExtensibleattributedefResponseObjectAsListExtensibleattributedefResponse(v *ListExtensibleattributedefResponseObject) ListExtensibleattributedefResponse {
	return ListExtensibleattributedefResponse{
		ListExtensibleattributedefResponseObject: v,
	}
}

// []ExtensibleattributedefAsListExtensibleattributedefResponse is a convenience function that returns []Extensibleattributedef wrapped in ListExtensibleattributedefResponse
func ArrayOfExtensibleattributedefAsListExtensibleattributedefResponse(v *[]Extensibleattributedef) ListExtensibleattributedefResponse {
	return ListExtensibleattributedefResponse{
		ArrayOfExtensibleattributedef: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListExtensibleattributedefResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListExtensibleattributedefResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListExtensibleattributedefResponseObject)
	if err == nil {
		jsonListExtensibleattributedefResponseObject, _ := json.Marshal(dst.ListExtensibleattributedefResponseObject)
		if string(jsonListExtensibleattributedefResponseObject) == "{}" { // empty struct
			dst.ListExtensibleattributedefResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListExtensibleattributedefResponseObject = nil
	}

	// try to unmarshal data into ArrayOfExtensibleattributedef
	err = newStrictDecoder(data).Decode(&dst.ArrayOfExtensibleattributedef)
	if err == nil {
		jsonArrayOfExtensibleattributedef, _ := json.Marshal(dst.ArrayOfExtensibleattributedef)
		if string(jsonArrayOfExtensibleattributedef) == "{}" { // empty struct
			dst.ArrayOfExtensibleattributedef = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfExtensibleattributedef = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListExtensibleattributedefResponseObject = nil
		dst.ArrayOfExtensibleattributedef = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListExtensibleattributedefResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListExtensibleattributedefResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListExtensibleattributedefResponse) MarshalJSON() ([]byte, error) {
	if src.ListExtensibleattributedefResponseObject != nil {
		return json.Marshal(&src.ListExtensibleattributedefResponseObject)
	}

	if src.ArrayOfExtensibleattributedef != nil {
		return json.Marshal(&src.ArrayOfExtensibleattributedef)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListExtensibleattributedefResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListExtensibleattributedefResponseObject != nil {
		return obj.ListExtensibleattributedefResponseObject
	}

	if obj.ArrayOfExtensibleattributedef != nil {
		return obj.ArrayOfExtensibleattributedef
	}

	// all schemas are nil
	return nil
}

type NullableListExtensibleattributedefResponse struct {
	value *ListExtensibleattributedefResponse
	isSet bool
}

func (v NullableListExtensibleattributedefResponse) Get() *ListExtensibleattributedefResponse {
	return v.value
}

func (v *NullableListExtensibleattributedefResponse) Set(val *ListExtensibleattributedefResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListExtensibleattributedefResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListExtensibleattributedefResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListExtensibleattributedefResponse(val *ListExtensibleattributedefResponse) *NullableListExtensibleattributedefResponse {
	return &NullableListExtensibleattributedefResponse{value: val, isSet: true}
}

func (v NullableListExtensibleattributedefResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListExtensibleattributedefResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
