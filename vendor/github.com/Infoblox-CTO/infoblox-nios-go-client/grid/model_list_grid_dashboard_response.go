/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
	"fmt"
)

// ListGridDashboardResponse - struct for ListGridDashboardResponse
type ListGridDashboardResponse struct {
	ListGridDashboardResponseObject *ListGridDashboardResponseObject
	ArrayOfGridDashboard            *[]GridDashboard
}

// ListGridDashboardResponseObjectAsListGridDashboardResponse is a convenience function that returns ListGridDashboardResponseObject wrapped in ListGridDashboardResponse
func ListGridDashboardResponseObjectAsListGridDashboardResponse(v *ListGridDashboardResponseObject) ListGridDashboardResponse {
	return ListGridDashboardResponse{
		ListGridDashboardResponseObject: v,
	}
}

// []GridDashboardAsListGridDashboardResponse is a convenience function that returns []GridDashboard wrapped in ListGridDashboardResponse
func ArrayOfGridDashboardAsListGridDashboardResponse(v *[]GridDashboard) ListGridDashboardResponse {
	return ListGridDashboardResponse{
		ArrayOfGridDashboard: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListGridDashboardResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListGridDashboardResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListGridDashboardResponseObject)
	if err == nil {
		jsonListGridDashboardResponseObject, _ := json.Marshal(dst.ListGridDashboardResponseObject)
		if string(jsonListGridDashboardResponseObject) == "{}" { // empty struct
			dst.ListGridDashboardResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListGridDashboardResponseObject = nil
	}

	// try to unmarshal data into ArrayOfGridDashboard
	err = newStrictDecoder(data).Decode(&dst.ArrayOfGridDashboard)
	if err == nil {
		jsonArrayOfGridDashboard, _ := json.Marshal(dst.ArrayOfGridDashboard)
		if string(jsonArrayOfGridDashboard) == "{}" { // empty struct
			dst.ArrayOfGridDashboard = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfGridDashboard = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListGridDashboardResponseObject = nil
		dst.ArrayOfGridDashboard = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListGridDashboardResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListGridDashboardResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListGridDashboardResponse) MarshalJSON() ([]byte, error) {
	if src.ListGridDashboardResponseObject != nil {
		return json.Marshal(&src.ListGridDashboardResponseObject)
	}

	if src.ArrayOfGridDashboard != nil {
		return json.Marshal(&src.ArrayOfGridDashboard)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListGridDashboardResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListGridDashboardResponseObject != nil {
		return obj.ListGridDashboardResponseObject
	}

	if obj.ArrayOfGridDashboard != nil {
		return obj.ArrayOfGridDashboard
	}

	// all schemas are nil
	return nil
}

type NullableListGridDashboardResponse struct {
	value *ListGridDashboardResponse
	isSet bool
}

func (v NullableListGridDashboardResponse) Get() *ListGridDashboardResponse {
	return v.value
}

func (v *NullableListGridDashboardResponse) Set(val *ListGridDashboardResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListGridDashboardResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListGridDashboardResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListGridDashboardResponse(val *ListGridDashboardResponse) *NullableListGridDashboardResponse {
	return &NullableListGridDashboardResponse{value: val, isSet: true}
}

func (v NullableListGridDashboardResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListGridDashboardResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
