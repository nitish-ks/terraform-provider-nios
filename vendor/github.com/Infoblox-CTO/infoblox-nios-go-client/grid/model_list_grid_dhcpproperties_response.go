/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
	"fmt"
)

// ListGridDhcppropertiesResponse - struct for ListGridDhcppropertiesResponse
type ListGridDhcppropertiesResponse struct {
	ListGridDhcppropertiesResponseObject *ListGridDhcppropertiesResponseObject
	ArrayOfGridDhcpproperties            *[]GridDhcpproperties
}

// ListGridDhcppropertiesResponseObjectAsListGridDhcppropertiesResponse is a convenience function that returns ListGridDhcppropertiesResponseObject wrapped in ListGridDhcppropertiesResponse
func ListGridDhcppropertiesResponseObjectAsListGridDhcppropertiesResponse(v *ListGridDhcppropertiesResponseObject) ListGridDhcppropertiesResponse {
	return ListGridDhcppropertiesResponse{
		ListGridDhcppropertiesResponseObject: v,
	}
}

// []GridDhcppropertiesAsListGridDhcppropertiesResponse is a convenience function that returns []GridDhcpproperties wrapped in ListGridDhcppropertiesResponse
func ArrayOfGridDhcppropertiesAsListGridDhcppropertiesResponse(v *[]GridDhcpproperties) ListGridDhcppropertiesResponse {
	return ListGridDhcppropertiesResponse{
		ArrayOfGridDhcpproperties: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListGridDhcppropertiesResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListGridDhcppropertiesResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListGridDhcppropertiesResponseObject)
	if err == nil {
		jsonListGridDhcppropertiesResponseObject, _ := json.Marshal(dst.ListGridDhcppropertiesResponseObject)
		if string(jsonListGridDhcppropertiesResponseObject) == "{}" { // empty struct
			dst.ListGridDhcppropertiesResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListGridDhcppropertiesResponseObject = nil
	}

	// try to unmarshal data into ArrayOfGridDhcpproperties
	err = newStrictDecoder(data).Decode(&dst.ArrayOfGridDhcpproperties)
	if err == nil {
		jsonArrayOfGridDhcpproperties, _ := json.Marshal(dst.ArrayOfGridDhcpproperties)
		if string(jsonArrayOfGridDhcpproperties) == "{}" { // empty struct
			dst.ArrayOfGridDhcpproperties = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfGridDhcpproperties = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListGridDhcppropertiesResponseObject = nil
		dst.ArrayOfGridDhcpproperties = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListGridDhcppropertiesResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListGridDhcppropertiesResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListGridDhcppropertiesResponse) MarshalJSON() ([]byte, error) {
	if src.ListGridDhcppropertiesResponseObject != nil {
		return json.Marshal(&src.ListGridDhcppropertiesResponseObject)
	}

	if src.ArrayOfGridDhcpproperties != nil {
		return json.Marshal(&src.ArrayOfGridDhcpproperties)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListGridDhcppropertiesResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListGridDhcppropertiesResponseObject != nil {
		return obj.ListGridDhcppropertiesResponseObject
	}

	if obj.ArrayOfGridDhcpproperties != nil {
		return obj.ArrayOfGridDhcpproperties
	}

	// all schemas are nil
	return nil
}

type NullableListGridDhcppropertiesResponse struct {
	value *ListGridDhcppropertiesResponse
	isSet bool
}

func (v NullableListGridDhcppropertiesResponse) Get() *ListGridDhcppropertiesResponse {
	return v.value
}

func (v *NullableListGridDhcppropertiesResponse) Set(val *ListGridDhcppropertiesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListGridDhcppropertiesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListGridDhcppropertiesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListGridDhcppropertiesResponse(val *ListGridDhcppropertiesResponse) *NullableListGridDhcppropertiesResponse {
	return &NullableListGridDhcppropertiesResponse{value: val, isSet: true}
}

func (v NullableListGridDhcppropertiesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListGridDhcppropertiesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
