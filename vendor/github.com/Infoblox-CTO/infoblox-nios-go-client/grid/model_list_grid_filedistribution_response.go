/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
	"fmt"
)

// ListGridFiledistributionResponse - struct for ListGridFiledistributionResponse
type ListGridFiledistributionResponse struct {
	ListGridFiledistributionResponseObject *ListGridFiledistributionResponseObject
	ArrayOfGridFiledistribution            *[]GridFiledistribution
}

// ListGridFiledistributionResponseObjectAsListGridFiledistributionResponse is a convenience function that returns ListGridFiledistributionResponseObject wrapped in ListGridFiledistributionResponse
func ListGridFiledistributionResponseObjectAsListGridFiledistributionResponse(v *ListGridFiledistributionResponseObject) ListGridFiledistributionResponse {
	return ListGridFiledistributionResponse{
		ListGridFiledistributionResponseObject: v,
	}
}

// []GridFiledistributionAsListGridFiledistributionResponse is a convenience function that returns []GridFiledistribution wrapped in ListGridFiledistributionResponse
func ArrayOfGridFiledistributionAsListGridFiledistributionResponse(v *[]GridFiledistribution) ListGridFiledistributionResponse {
	return ListGridFiledistributionResponse{
		ArrayOfGridFiledistribution: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListGridFiledistributionResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListGridFiledistributionResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListGridFiledistributionResponseObject)
	if err == nil {
		jsonListGridFiledistributionResponseObject, _ := json.Marshal(dst.ListGridFiledistributionResponseObject)
		if string(jsonListGridFiledistributionResponseObject) == "{}" { // empty struct
			dst.ListGridFiledistributionResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListGridFiledistributionResponseObject = nil
	}

	// try to unmarshal data into ArrayOfGridFiledistribution
	err = newStrictDecoder(data).Decode(&dst.ArrayOfGridFiledistribution)
	if err == nil {
		jsonArrayOfGridFiledistribution, _ := json.Marshal(dst.ArrayOfGridFiledistribution)
		if string(jsonArrayOfGridFiledistribution) == "{}" { // empty struct
			dst.ArrayOfGridFiledistribution = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfGridFiledistribution = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListGridFiledistributionResponseObject = nil
		dst.ArrayOfGridFiledistribution = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListGridFiledistributionResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListGridFiledistributionResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListGridFiledistributionResponse) MarshalJSON() ([]byte, error) {
	if src.ListGridFiledistributionResponseObject != nil {
		return json.Marshal(&src.ListGridFiledistributionResponseObject)
	}

	if src.ArrayOfGridFiledistribution != nil {
		return json.Marshal(&src.ArrayOfGridFiledistribution)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListGridFiledistributionResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListGridFiledistributionResponseObject != nil {
		return obj.ListGridFiledistributionResponseObject
	}

	if obj.ArrayOfGridFiledistribution != nil {
		return obj.ArrayOfGridFiledistribution
	}

	// all schemas are nil
	return nil
}

type NullableListGridFiledistributionResponse struct {
	value *ListGridFiledistributionResponse
	isSet bool
}

func (v NullableListGridFiledistributionResponse) Get() *ListGridFiledistributionResponse {
	return v.value
}

func (v *NullableListGridFiledistributionResponse) Set(val *ListGridFiledistributionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListGridFiledistributionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListGridFiledistributionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListGridFiledistributionResponse(val *ListGridFiledistributionResponse) *NullableListGridFiledistributionResponse {
	return &NullableListGridFiledistributionResponse{value: val, isSet: true}
}

func (v NullableListGridFiledistributionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListGridFiledistributionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
