/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
	"fmt"
)

// ListGridLicensePoolResponse - struct for ListGridLicensePoolResponse
type ListGridLicensePoolResponse struct {
	ListGridLicensePoolResponseObject *ListGridLicensePoolResponseObject
	ArrayOfGridLicensePool            *[]GridLicensePool
}

// ListGridLicensePoolResponseObjectAsListGridLicensePoolResponse is a convenience function that returns ListGridLicensePoolResponseObject wrapped in ListGridLicensePoolResponse
func ListGridLicensePoolResponseObjectAsListGridLicensePoolResponse(v *ListGridLicensePoolResponseObject) ListGridLicensePoolResponse {
	return ListGridLicensePoolResponse{
		ListGridLicensePoolResponseObject: v,
	}
}

// []GridLicensePoolAsListGridLicensePoolResponse is a convenience function that returns []GridLicensePool wrapped in ListGridLicensePoolResponse
func ArrayOfGridLicensePoolAsListGridLicensePoolResponse(v *[]GridLicensePool) ListGridLicensePoolResponse {
	return ListGridLicensePoolResponse{
		ArrayOfGridLicensePool: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListGridLicensePoolResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListGridLicensePoolResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListGridLicensePoolResponseObject)
	if err == nil {
		jsonListGridLicensePoolResponseObject, _ := json.Marshal(dst.ListGridLicensePoolResponseObject)
		if string(jsonListGridLicensePoolResponseObject) == "{}" { // empty struct
			dst.ListGridLicensePoolResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListGridLicensePoolResponseObject = nil
	}

	// try to unmarshal data into ArrayOfGridLicensePool
	err = newStrictDecoder(data).Decode(&dst.ArrayOfGridLicensePool)
	if err == nil {
		jsonArrayOfGridLicensePool, _ := json.Marshal(dst.ArrayOfGridLicensePool)
		if string(jsonArrayOfGridLicensePool) == "{}" { // empty struct
			dst.ArrayOfGridLicensePool = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfGridLicensePool = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListGridLicensePoolResponseObject = nil
		dst.ArrayOfGridLicensePool = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListGridLicensePoolResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListGridLicensePoolResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListGridLicensePoolResponse) MarshalJSON() ([]byte, error) {
	if src.ListGridLicensePoolResponseObject != nil {
		return json.Marshal(&src.ListGridLicensePoolResponseObject)
	}

	if src.ArrayOfGridLicensePool != nil {
		return json.Marshal(&src.ArrayOfGridLicensePool)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListGridLicensePoolResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListGridLicensePoolResponseObject != nil {
		return obj.ListGridLicensePoolResponseObject
	}

	if obj.ArrayOfGridLicensePool != nil {
		return obj.ArrayOfGridLicensePool
	}

	// all schemas are nil
	return nil
}

type NullableListGridLicensePoolResponse struct {
	value *ListGridLicensePoolResponse
	isSet bool
}

func (v NullableListGridLicensePoolResponse) Get() *ListGridLicensePoolResponse {
	return v.value
}

func (v *NullableListGridLicensePoolResponse) Set(val *ListGridLicensePoolResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListGridLicensePoolResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListGridLicensePoolResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListGridLicensePoolResponse(val *ListGridLicensePoolResponse) *NullableListGridLicensePoolResponse {
	return &NullableListGridLicensePoolResponse{value: val, isSet: true}
}

func (v NullableListGridLicensePoolResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListGridLicensePoolResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
