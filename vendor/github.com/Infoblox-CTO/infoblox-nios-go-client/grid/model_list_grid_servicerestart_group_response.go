/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
	"fmt"
)

// ListGridServicerestartGroupResponse - struct for ListGridServicerestartGroupResponse
type ListGridServicerestartGroupResponse struct {
	ListGridServicerestartGroupResponseObject *ListGridServicerestartGroupResponseObject
	ArrayOfGridServicerestartGroup            *[]GridServicerestartGroup
}

// ListGridServicerestartGroupResponseObjectAsListGridServicerestartGroupResponse is a convenience function that returns ListGridServicerestartGroupResponseObject wrapped in ListGridServicerestartGroupResponse
func ListGridServicerestartGroupResponseObjectAsListGridServicerestartGroupResponse(v *ListGridServicerestartGroupResponseObject) ListGridServicerestartGroupResponse {
	return ListGridServicerestartGroupResponse{
		ListGridServicerestartGroupResponseObject: v,
	}
}

// []GridServicerestartGroupAsListGridServicerestartGroupResponse is a convenience function that returns []GridServicerestartGroup wrapped in ListGridServicerestartGroupResponse
func ArrayOfGridServicerestartGroupAsListGridServicerestartGroupResponse(v *[]GridServicerestartGroup) ListGridServicerestartGroupResponse {
	return ListGridServicerestartGroupResponse{
		ArrayOfGridServicerestartGroup: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListGridServicerestartGroupResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListGridServicerestartGroupResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListGridServicerestartGroupResponseObject)
	if err == nil {
		jsonListGridServicerestartGroupResponseObject, _ := json.Marshal(dst.ListGridServicerestartGroupResponseObject)
		if string(jsonListGridServicerestartGroupResponseObject) == "{}" { // empty struct
			dst.ListGridServicerestartGroupResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListGridServicerestartGroupResponseObject = nil
	}

	// try to unmarshal data into ArrayOfGridServicerestartGroup
	err = newStrictDecoder(data).Decode(&dst.ArrayOfGridServicerestartGroup)
	if err == nil {
		jsonArrayOfGridServicerestartGroup, _ := json.Marshal(dst.ArrayOfGridServicerestartGroup)
		if string(jsonArrayOfGridServicerestartGroup) == "{}" { // empty struct
			dst.ArrayOfGridServicerestartGroup = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfGridServicerestartGroup = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListGridServicerestartGroupResponseObject = nil
		dst.ArrayOfGridServicerestartGroup = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListGridServicerestartGroupResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListGridServicerestartGroupResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListGridServicerestartGroupResponse) MarshalJSON() ([]byte, error) {
	if src.ListGridServicerestartGroupResponseObject != nil {
		return json.Marshal(&src.ListGridServicerestartGroupResponseObject)
	}

	if src.ArrayOfGridServicerestartGroup != nil {
		return json.Marshal(&src.ArrayOfGridServicerestartGroup)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListGridServicerestartGroupResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListGridServicerestartGroupResponseObject != nil {
		return obj.ListGridServicerestartGroupResponseObject
	}

	if obj.ArrayOfGridServicerestartGroup != nil {
		return obj.ArrayOfGridServicerestartGroup
	}

	// all schemas are nil
	return nil
}

type NullableListGridServicerestartGroupResponse struct {
	value *ListGridServicerestartGroupResponse
	isSet bool
}

func (v NullableListGridServicerestartGroupResponse) Get() *ListGridServicerestartGroupResponse {
	return v.value
}

func (v *NullableListGridServicerestartGroupResponse) Set(val *ListGridServicerestartGroupResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListGridServicerestartGroupResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListGridServicerestartGroupResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListGridServicerestartGroupResponse(val *ListGridServicerestartGroupResponse) *NullableListGridServicerestartGroupResponse {
	return &NullableListGridServicerestartGroupResponse{value: val, isSet: true}
}

func (v NullableListGridServicerestartGroupResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListGridServicerestartGroupResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
