/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
	"fmt"
)

// ListGridServicerestartStatusResponse - struct for ListGridServicerestartStatusResponse
type ListGridServicerestartStatusResponse struct {
	ListGridServicerestartStatusResponseObject *ListGridServicerestartStatusResponseObject
	ArrayOfGridServicerestartStatus            *[]GridServicerestartStatus
}

// ListGridServicerestartStatusResponseObjectAsListGridServicerestartStatusResponse is a convenience function that returns ListGridServicerestartStatusResponseObject wrapped in ListGridServicerestartStatusResponse
func ListGridServicerestartStatusResponseObjectAsListGridServicerestartStatusResponse(v *ListGridServicerestartStatusResponseObject) ListGridServicerestartStatusResponse {
	return ListGridServicerestartStatusResponse{
		ListGridServicerestartStatusResponseObject: v,
	}
}

// []GridServicerestartStatusAsListGridServicerestartStatusResponse is a convenience function that returns []GridServicerestartStatus wrapped in ListGridServicerestartStatusResponse
func ArrayOfGridServicerestartStatusAsListGridServicerestartStatusResponse(v *[]GridServicerestartStatus) ListGridServicerestartStatusResponse {
	return ListGridServicerestartStatusResponse{
		ArrayOfGridServicerestartStatus: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListGridServicerestartStatusResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListGridServicerestartStatusResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListGridServicerestartStatusResponseObject)
	if err == nil {
		jsonListGridServicerestartStatusResponseObject, _ := json.Marshal(dst.ListGridServicerestartStatusResponseObject)
		if string(jsonListGridServicerestartStatusResponseObject) == "{}" { // empty struct
			dst.ListGridServicerestartStatusResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListGridServicerestartStatusResponseObject = nil
	}

	// try to unmarshal data into ArrayOfGridServicerestartStatus
	err = newStrictDecoder(data).Decode(&dst.ArrayOfGridServicerestartStatus)
	if err == nil {
		jsonArrayOfGridServicerestartStatus, _ := json.Marshal(dst.ArrayOfGridServicerestartStatus)
		if string(jsonArrayOfGridServicerestartStatus) == "{}" { // empty struct
			dst.ArrayOfGridServicerestartStatus = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfGridServicerestartStatus = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListGridServicerestartStatusResponseObject = nil
		dst.ArrayOfGridServicerestartStatus = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListGridServicerestartStatusResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListGridServicerestartStatusResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListGridServicerestartStatusResponse) MarshalJSON() ([]byte, error) {
	if src.ListGridServicerestartStatusResponseObject != nil {
		return json.Marshal(&src.ListGridServicerestartStatusResponseObject)
	}

	if src.ArrayOfGridServicerestartStatus != nil {
		return json.Marshal(&src.ArrayOfGridServicerestartStatus)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListGridServicerestartStatusResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListGridServicerestartStatusResponseObject != nil {
		return obj.ListGridServicerestartStatusResponseObject
	}

	if obj.ArrayOfGridServicerestartStatus != nil {
		return obj.ArrayOfGridServicerestartStatus
	}

	// all schemas are nil
	return nil
}

type NullableListGridServicerestartStatusResponse struct {
	value *ListGridServicerestartStatusResponse
	isSet bool
}

func (v NullableListGridServicerestartStatusResponse) Get() *ListGridServicerestartStatusResponse {
	return v.value
}

func (v *NullableListGridServicerestartStatusResponse) Set(val *ListGridServicerestartStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListGridServicerestartStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListGridServicerestartStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListGridServicerestartStatusResponse(val *ListGridServicerestartStatusResponse) *NullableListGridServicerestartStatusResponse {
	return &NullableListGridServicerestartStatusResponse{value: val, isSet: true}
}

func (v NullableListGridServicerestartStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListGridServicerestartStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
