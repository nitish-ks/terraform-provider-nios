/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
	"fmt"
)

// ListGridThreatinsightResponse - struct for ListGridThreatinsightResponse
type ListGridThreatinsightResponse struct {
	ListGridThreatinsightResponseObject *ListGridThreatinsightResponseObject
	ArrayOfGridThreatinsight            *[]GridThreatinsight
}

// ListGridThreatinsightResponseObjectAsListGridThreatinsightResponse is a convenience function that returns ListGridThreatinsightResponseObject wrapped in ListGridThreatinsightResponse
func ListGridThreatinsightResponseObjectAsListGridThreatinsightResponse(v *ListGridThreatinsightResponseObject) ListGridThreatinsightResponse {
	return ListGridThreatinsightResponse{
		ListGridThreatinsightResponseObject: v,
	}
}

// []GridThreatinsightAsListGridThreatinsightResponse is a convenience function that returns []GridThreatinsight wrapped in ListGridThreatinsightResponse
func ArrayOfGridThreatinsightAsListGridThreatinsightResponse(v *[]GridThreatinsight) ListGridThreatinsightResponse {
	return ListGridThreatinsightResponse{
		ArrayOfGridThreatinsight: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListGridThreatinsightResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListGridThreatinsightResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListGridThreatinsightResponseObject)
	if err == nil {
		jsonListGridThreatinsightResponseObject, _ := json.Marshal(dst.ListGridThreatinsightResponseObject)
		if string(jsonListGridThreatinsightResponseObject) == "{}" { // empty struct
			dst.ListGridThreatinsightResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListGridThreatinsightResponseObject = nil
	}

	// try to unmarshal data into ArrayOfGridThreatinsight
	err = newStrictDecoder(data).Decode(&dst.ArrayOfGridThreatinsight)
	if err == nil {
		jsonArrayOfGridThreatinsight, _ := json.Marshal(dst.ArrayOfGridThreatinsight)
		if string(jsonArrayOfGridThreatinsight) == "{}" { // empty struct
			dst.ArrayOfGridThreatinsight = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfGridThreatinsight = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListGridThreatinsightResponseObject = nil
		dst.ArrayOfGridThreatinsight = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListGridThreatinsightResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListGridThreatinsightResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListGridThreatinsightResponse) MarshalJSON() ([]byte, error) {
	if src.ListGridThreatinsightResponseObject != nil {
		return json.Marshal(&src.ListGridThreatinsightResponseObject)
	}

	if src.ArrayOfGridThreatinsight != nil {
		return json.Marshal(&src.ArrayOfGridThreatinsight)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListGridThreatinsightResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListGridThreatinsightResponseObject != nil {
		return obj.ListGridThreatinsightResponseObject
	}

	if obj.ArrayOfGridThreatinsight != nil {
		return obj.ArrayOfGridThreatinsight
	}

	// all schemas are nil
	return nil
}

type NullableListGridThreatinsightResponse struct {
	value *ListGridThreatinsightResponse
	isSet bool
}

func (v NullableListGridThreatinsightResponse) Get() *ListGridThreatinsightResponse {
	return v.value
}

func (v *NullableListGridThreatinsightResponse) Set(val *ListGridThreatinsightResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListGridThreatinsightResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListGridThreatinsightResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListGridThreatinsightResponse(val *ListGridThreatinsightResponse) *NullableListGridThreatinsightResponse {
	return &NullableListGridThreatinsightResponse{value: val, isSet: true}
}

func (v NullableListGridThreatinsightResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListGridThreatinsightResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
