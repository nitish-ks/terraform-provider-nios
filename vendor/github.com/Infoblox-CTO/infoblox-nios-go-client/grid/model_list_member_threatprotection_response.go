/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
	"fmt"
)

// ListMemberThreatprotectionResponse - struct for ListMemberThreatprotectionResponse
type ListMemberThreatprotectionResponse struct {
	ListMemberThreatprotectionResponseObject *ListMemberThreatprotectionResponseObject
	ArrayOfMemberThreatprotection            *[]MemberThreatprotection
}

// ListMemberThreatprotectionResponseObjectAsListMemberThreatprotectionResponse is a convenience function that returns ListMemberThreatprotectionResponseObject wrapped in ListMemberThreatprotectionResponse
func ListMemberThreatprotectionResponseObjectAsListMemberThreatprotectionResponse(v *ListMemberThreatprotectionResponseObject) ListMemberThreatprotectionResponse {
	return ListMemberThreatprotectionResponse{
		ListMemberThreatprotectionResponseObject: v,
	}
}

// []MemberThreatprotectionAsListMemberThreatprotectionResponse is a convenience function that returns []MemberThreatprotection wrapped in ListMemberThreatprotectionResponse
func ArrayOfMemberThreatprotectionAsListMemberThreatprotectionResponse(v *[]MemberThreatprotection) ListMemberThreatprotectionResponse {
	return ListMemberThreatprotectionResponse{
		ArrayOfMemberThreatprotection: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListMemberThreatprotectionResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListMemberThreatprotectionResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListMemberThreatprotectionResponseObject)
	if err == nil {
		jsonListMemberThreatprotectionResponseObject, _ := json.Marshal(dst.ListMemberThreatprotectionResponseObject)
		if string(jsonListMemberThreatprotectionResponseObject) == "{}" { // empty struct
			dst.ListMemberThreatprotectionResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListMemberThreatprotectionResponseObject = nil
	}

	// try to unmarshal data into ArrayOfMemberThreatprotection
	err = newStrictDecoder(data).Decode(&dst.ArrayOfMemberThreatprotection)
	if err == nil {
		jsonArrayOfMemberThreatprotection, _ := json.Marshal(dst.ArrayOfMemberThreatprotection)
		if string(jsonArrayOfMemberThreatprotection) == "{}" { // empty struct
			dst.ArrayOfMemberThreatprotection = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfMemberThreatprotection = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListMemberThreatprotectionResponseObject = nil
		dst.ArrayOfMemberThreatprotection = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListMemberThreatprotectionResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListMemberThreatprotectionResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListMemberThreatprotectionResponse) MarshalJSON() ([]byte, error) {
	if src.ListMemberThreatprotectionResponseObject != nil {
		return json.Marshal(&src.ListMemberThreatprotectionResponseObject)
	}

	if src.ArrayOfMemberThreatprotection != nil {
		return json.Marshal(&src.ArrayOfMemberThreatprotection)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListMemberThreatprotectionResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListMemberThreatprotectionResponseObject != nil {
		return obj.ListMemberThreatprotectionResponseObject
	}

	if obj.ArrayOfMemberThreatprotection != nil {
		return obj.ArrayOfMemberThreatprotection
	}

	// all schemas are nil
	return nil
}

type NullableListMemberThreatprotectionResponse struct {
	value *ListMemberThreatprotectionResponse
	isSet bool
}

func (v NullableListMemberThreatprotectionResponse) Get() *ListMemberThreatprotectionResponse {
	return v.value
}

func (v *NullableListMemberThreatprotectionResponse) Set(val *ListMemberThreatprotectionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListMemberThreatprotectionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListMemberThreatprotectionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListMemberThreatprotectionResponse(val *ListMemberThreatprotectionResponse) *NullableListMemberThreatprotectionResponse {
	return &NullableListMemberThreatprotectionResponse{value: val, isSet: true}
}

func (v NullableListMemberThreatprotectionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListMemberThreatprotectionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
