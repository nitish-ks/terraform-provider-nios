/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
	"fmt"
)

// ListMembercloudsyncResponse - struct for ListMembercloudsyncResponse
type ListMembercloudsyncResponse struct {
	ListMembercloudsyncResponseObject *ListMembercloudsyncResponseObject
	ArrayOfMembercloudsync            *[]Membercloudsync
}

// ListMembercloudsyncResponseObjectAsListMembercloudsyncResponse is a convenience function that returns ListMembercloudsyncResponseObject wrapped in ListMembercloudsyncResponse
func ListMembercloudsyncResponseObjectAsListMembercloudsyncResponse(v *ListMembercloudsyncResponseObject) ListMembercloudsyncResponse {
	return ListMembercloudsyncResponse{
		ListMembercloudsyncResponseObject: v,
	}
}

// []MembercloudsyncAsListMembercloudsyncResponse is a convenience function that returns []Membercloudsync wrapped in ListMembercloudsyncResponse
func ArrayOfMembercloudsyncAsListMembercloudsyncResponse(v *[]Membercloudsync) ListMembercloudsyncResponse {
	return ListMembercloudsyncResponse{
		ArrayOfMembercloudsync: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListMembercloudsyncResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListMembercloudsyncResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListMembercloudsyncResponseObject)
	if err == nil {
		jsonListMembercloudsyncResponseObject, _ := json.Marshal(dst.ListMembercloudsyncResponseObject)
		if string(jsonListMembercloudsyncResponseObject) == "{}" { // empty struct
			dst.ListMembercloudsyncResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListMembercloudsyncResponseObject = nil
	}

	// try to unmarshal data into ArrayOfMembercloudsync
	err = newStrictDecoder(data).Decode(&dst.ArrayOfMembercloudsync)
	if err == nil {
		jsonArrayOfMembercloudsync, _ := json.Marshal(dst.ArrayOfMembercloudsync)
		if string(jsonArrayOfMembercloudsync) == "{}" { // empty struct
			dst.ArrayOfMembercloudsync = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfMembercloudsync = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListMembercloudsyncResponseObject = nil
		dst.ArrayOfMembercloudsync = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListMembercloudsyncResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListMembercloudsyncResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListMembercloudsyncResponse) MarshalJSON() ([]byte, error) {
	if src.ListMembercloudsyncResponseObject != nil {
		return json.Marshal(&src.ListMembercloudsyncResponseObject)
	}

	if src.ArrayOfMembercloudsync != nil {
		return json.Marshal(&src.ArrayOfMembercloudsync)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListMembercloudsyncResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListMembercloudsyncResponseObject != nil {
		return obj.ListMembercloudsyncResponseObject
	}

	if obj.ArrayOfMembercloudsync != nil {
		return obj.ArrayOfMembercloudsync
	}

	// all schemas are nil
	return nil
}

type NullableListMembercloudsyncResponse struct {
	value *ListMembercloudsyncResponse
	isSet bool
}

func (v NullableListMembercloudsyncResponse) Get() *ListMembercloudsyncResponse {
	return v.value
}

func (v *NullableListMembercloudsyncResponse) Set(val *ListMembercloudsyncResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListMembercloudsyncResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListMembercloudsyncResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListMembercloudsyncResponse(val *ListMembercloudsyncResponse) *NullableListMembercloudsyncResponse {
	return &NullableListMembercloudsyncResponse{value: val, isSet: true}
}

func (v NullableListMembercloudsyncResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListMembercloudsyncResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
