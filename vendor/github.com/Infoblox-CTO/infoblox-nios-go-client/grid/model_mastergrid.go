/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the Mastergrid type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Mastergrid{}

// Mastergrid struct for Mastergrid
type Mastergrid struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// The domain name or IP address for the Master Grid.
	Address *string `json:"address,omitempty"`
	// Determines if the sub-grid is currently disabled.
	ConnectionDisabled *bool `json:"connection_disabled,omitempty"`
	// The timestamp that indicates when the connection to the Master Grid was established.
	ConnectionTimestamp *int64 `json:"connection_timestamp,omitempty"`
	// The detached flag for the Master Grid.
	Detached *bool `json:"detached,omitempty"`
	// Determines if the Master Grid is enabled.
	Enable *bool `json:"enable,omitempty"`
	// The flag shows if the Grid has joined the Master Grid.
	Joined *bool `json:"joined,omitempty"`
	// The Master Grid's last event.
	LastEvent *string `json:"last_event,omitempty"`
	// The details of the Master Grid's last event.
	LastEventDetails *string `json:"last_event_details,omitempty"`
	// The timestamp or the last synchronization operation with the Master Grid.
	LastSyncTimestamp *int64 `json:"last_sync_timestamp,omitempty"`
	// The Master Grid port to which the Grid connects.
	Port *int64 `json:"port,omitempty"`
	// The Master Grid's status.
	Status *string `json:"status,omitempty"`
	// The flag shows if the MGMT port was used to join the Grid.
	UseMgmtPort *bool `json:"use_mgmt_port,omitempty"`
}

// NewMastergrid instantiates a new Mastergrid object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMastergrid() *Mastergrid {
	this := Mastergrid{}
	return &this
}

// NewMastergridWithDefaults instantiates a new Mastergrid object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMastergridWithDefaults() *Mastergrid {
	this := Mastergrid{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *Mastergrid) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Mastergrid) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *Mastergrid) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *Mastergrid) SetRef(v string) {
	o.Ref = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *Mastergrid) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Mastergrid) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *Mastergrid) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *Mastergrid) SetAddress(v string) {
	o.Address = &v
}

// GetConnectionDisabled returns the ConnectionDisabled field value if set, zero value otherwise.
func (o *Mastergrid) GetConnectionDisabled() bool {
	if o == nil || IsNil(o.ConnectionDisabled) {
		var ret bool
		return ret
	}
	return *o.ConnectionDisabled
}

// GetConnectionDisabledOk returns a tuple with the ConnectionDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Mastergrid) GetConnectionDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ConnectionDisabled) {
		return nil, false
	}
	return o.ConnectionDisabled, true
}

// HasConnectionDisabled returns a boolean if a field has been set.
func (o *Mastergrid) HasConnectionDisabled() bool {
	if o != nil && !IsNil(o.ConnectionDisabled) {
		return true
	}

	return false
}

// SetConnectionDisabled gets a reference to the given bool and assigns it to the ConnectionDisabled field.
func (o *Mastergrid) SetConnectionDisabled(v bool) {
	o.ConnectionDisabled = &v
}

// GetConnectionTimestamp returns the ConnectionTimestamp field value if set, zero value otherwise.
func (o *Mastergrid) GetConnectionTimestamp() int64 {
	if o == nil || IsNil(o.ConnectionTimestamp) {
		var ret int64
		return ret
	}
	return *o.ConnectionTimestamp
}

// GetConnectionTimestampOk returns a tuple with the ConnectionTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Mastergrid) GetConnectionTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.ConnectionTimestamp) {
		return nil, false
	}
	return o.ConnectionTimestamp, true
}

// HasConnectionTimestamp returns a boolean if a field has been set.
func (o *Mastergrid) HasConnectionTimestamp() bool {
	if o != nil && !IsNil(o.ConnectionTimestamp) {
		return true
	}

	return false
}

// SetConnectionTimestamp gets a reference to the given int64 and assigns it to the ConnectionTimestamp field.
func (o *Mastergrid) SetConnectionTimestamp(v int64) {
	o.ConnectionTimestamp = &v
}

// GetDetached returns the Detached field value if set, zero value otherwise.
func (o *Mastergrid) GetDetached() bool {
	if o == nil || IsNil(o.Detached) {
		var ret bool
		return ret
	}
	return *o.Detached
}

// GetDetachedOk returns a tuple with the Detached field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Mastergrid) GetDetachedOk() (*bool, bool) {
	if o == nil || IsNil(o.Detached) {
		return nil, false
	}
	return o.Detached, true
}

// HasDetached returns a boolean if a field has been set.
func (o *Mastergrid) HasDetached() bool {
	if o != nil && !IsNil(o.Detached) {
		return true
	}

	return false
}

// SetDetached gets a reference to the given bool and assigns it to the Detached field.
func (o *Mastergrid) SetDetached(v bool) {
	o.Detached = &v
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *Mastergrid) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Mastergrid) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *Mastergrid) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *Mastergrid) SetEnable(v bool) {
	o.Enable = &v
}

// GetJoined returns the Joined field value if set, zero value otherwise.
func (o *Mastergrid) GetJoined() bool {
	if o == nil || IsNil(o.Joined) {
		var ret bool
		return ret
	}
	return *o.Joined
}

// GetJoinedOk returns a tuple with the Joined field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Mastergrid) GetJoinedOk() (*bool, bool) {
	if o == nil || IsNil(o.Joined) {
		return nil, false
	}
	return o.Joined, true
}

// HasJoined returns a boolean if a field has been set.
func (o *Mastergrid) HasJoined() bool {
	if o != nil && !IsNil(o.Joined) {
		return true
	}

	return false
}

// SetJoined gets a reference to the given bool and assigns it to the Joined field.
func (o *Mastergrid) SetJoined(v bool) {
	o.Joined = &v
}

// GetLastEvent returns the LastEvent field value if set, zero value otherwise.
func (o *Mastergrid) GetLastEvent() string {
	if o == nil || IsNil(o.LastEvent) {
		var ret string
		return ret
	}
	return *o.LastEvent
}

// GetLastEventOk returns a tuple with the LastEvent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Mastergrid) GetLastEventOk() (*string, bool) {
	if o == nil || IsNil(o.LastEvent) {
		return nil, false
	}
	return o.LastEvent, true
}

// HasLastEvent returns a boolean if a field has been set.
func (o *Mastergrid) HasLastEvent() bool {
	if o != nil && !IsNil(o.LastEvent) {
		return true
	}

	return false
}

// SetLastEvent gets a reference to the given string and assigns it to the LastEvent field.
func (o *Mastergrid) SetLastEvent(v string) {
	o.LastEvent = &v
}

// GetLastEventDetails returns the LastEventDetails field value if set, zero value otherwise.
func (o *Mastergrid) GetLastEventDetails() string {
	if o == nil || IsNil(o.LastEventDetails) {
		var ret string
		return ret
	}
	return *o.LastEventDetails
}

// GetLastEventDetailsOk returns a tuple with the LastEventDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Mastergrid) GetLastEventDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.LastEventDetails) {
		return nil, false
	}
	return o.LastEventDetails, true
}

// HasLastEventDetails returns a boolean if a field has been set.
func (o *Mastergrid) HasLastEventDetails() bool {
	if o != nil && !IsNil(o.LastEventDetails) {
		return true
	}

	return false
}

// SetLastEventDetails gets a reference to the given string and assigns it to the LastEventDetails field.
func (o *Mastergrid) SetLastEventDetails(v string) {
	o.LastEventDetails = &v
}

// GetLastSyncTimestamp returns the LastSyncTimestamp field value if set, zero value otherwise.
func (o *Mastergrid) GetLastSyncTimestamp() int64 {
	if o == nil || IsNil(o.LastSyncTimestamp) {
		var ret int64
		return ret
	}
	return *o.LastSyncTimestamp
}

// GetLastSyncTimestampOk returns a tuple with the LastSyncTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Mastergrid) GetLastSyncTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.LastSyncTimestamp) {
		return nil, false
	}
	return o.LastSyncTimestamp, true
}

// HasLastSyncTimestamp returns a boolean if a field has been set.
func (o *Mastergrid) HasLastSyncTimestamp() bool {
	if o != nil && !IsNil(o.LastSyncTimestamp) {
		return true
	}

	return false
}

// SetLastSyncTimestamp gets a reference to the given int64 and assigns it to the LastSyncTimestamp field.
func (o *Mastergrid) SetLastSyncTimestamp(v int64) {
	o.LastSyncTimestamp = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *Mastergrid) GetPort() int64 {
	if o == nil || IsNil(o.Port) {
		var ret int64
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Mastergrid) GetPortOk() (*int64, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *Mastergrid) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int64 and assigns it to the Port field.
func (o *Mastergrid) SetPort(v int64) {
	o.Port = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Mastergrid) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Mastergrid) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Mastergrid) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Mastergrid) SetStatus(v string) {
	o.Status = &v
}

// GetUseMgmtPort returns the UseMgmtPort field value if set, zero value otherwise.
func (o *Mastergrid) GetUseMgmtPort() bool {
	if o == nil || IsNil(o.UseMgmtPort) {
		var ret bool
		return ret
	}
	return *o.UseMgmtPort
}

// GetUseMgmtPortOk returns a tuple with the UseMgmtPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Mastergrid) GetUseMgmtPortOk() (*bool, bool) {
	if o == nil || IsNil(o.UseMgmtPort) {
		return nil, false
	}
	return o.UseMgmtPort, true
}

// HasUseMgmtPort returns a boolean if a field has been set.
func (o *Mastergrid) HasUseMgmtPort() bool {
	if o != nil && !IsNil(o.UseMgmtPort) {
		return true
	}

	return false
}

// SetUseMgmtPort gets a reference to the given bool and assigns it to the UseMgmtPort field.
func (o *Mastergrid) SetUseMgmtPort(v bool) {
	o.UseMgmtPort = &v
}

func (o Mastergrid) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Mastergrid) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.ConnectionDisabled) {
		toSerialize["connection_disabled"] = o.ConnectionDisabled
	}
	if !IsNil(o.ConnectionTimestamp) {
		toSerialize["connection_timestamp"] = o.ConnectionTimestamp
	}
	if !IsNil(o.Detached) {
		toSerialize["detached"] = o.Detached
	}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.Joined) {
		toSerialize["joined"] = o.Joined
	}
	if !IsNil(o.LastEvent) {
		toSerialize["last_event"] = o.LastEvent
	}
	if !IsNil(o.LastEventDetails) {
		toSerialize["last_event_details"] = o.LastEventDetails
	}
	if !IsNil(o.LastSyncTimestamp) {
		toSerialize["last_sync_timestamp"] = o.LastSyncTimestamp
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.UseMgmtPort) {
		toSerialize["use_mgmt_port"] = o.UseMgmtPort
	}
	return toSerialize, nil
}

type NullableMastergrid struct {
	value *Mastergrid
	isSet bool
}

func (v NullableMastergrid) Get() *Mastergrid {
	return v.value
}

func (v *NullableMastergrid) Set(val *Mastergrid) {
	v.value = val
	v.isSet = true
}

func (v NullableMastergrid) IsSet() bool {
	return v.isSet
}

func (v *NullableMastergrid) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMastergrid(val *Mastergrid) *NullableMastergrid {
	return &NullableMastergrid{value: val, isSet: true}
}

func (v NullableMastergrid) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMastergrid) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
