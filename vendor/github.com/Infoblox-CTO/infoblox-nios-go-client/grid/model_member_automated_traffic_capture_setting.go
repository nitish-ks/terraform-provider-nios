/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the MemberAutomatedTrafficCaptureSetting type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberAutomatedTrafficCaptureSetting{}

// MemberAutomatedTrafficCaptureSetting struct for MemberAutomatedTrafficCaptureSetting
type MemberAutomatedTrafficCaptureSetting struct {
	// Enable automated traffic capture based on monitoring thresholds.
	TrafficCaptureEnable *bool `json:"traffic_capture_enable,omitempty"`
	// Destination of traffic capture files. Save traffic capture locally or upload to remote server using FTP or SCP.
	Destination *string `json:"destination,omitempty"`
	// The time interval on which traffic will be captured(in sec).
	Duration *int64 `json:"duration,omitempty"`
	// Enable automatic download for support bundle.
	IncludeSupportBundle *bool `json:"include_support_bundle,omitempty"`
	// Save traffic capture files locally.
	KeepLocalCopy *bool `json:"keep_local_copy,omitempty"`
	// IP Address of the destination host.
	DestinationHost *string `json:"destination_host,omitempty"`
	// Directory to store the traffic capture files on the remote server.
	TrafficCaptureDirectory *string `json:"traffic_capture_directory,omitempty"`
	// Directory to store the support bundle on the remote server.
	SupportBundleDirectory *string `json:"support_bundle_directory,omitempty"`
	// User name for accessing the FTP/SCP server.
	Username *string `json:"username,omitempty"`
	// Password for accessing the FTP/SCP server. This field is not readable.
	Password             *string `json:"password,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MemberAutomatedTrafficCaptureSetting MemberAutomatedTrafficCaptureSetting

// NewMemberAutomatedTrafficCaptureSetting instantiates a new MemberAutomatedTrafficCaptureSetting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberAutomatedTrafficCaptureSetting() *MemberAutomatedTrafficCaptureSetting {
	this := MemberAutomatedTrafficCaptureSetting{}
	return &this
}

// NewMemberAutomatedTrafficCaptureSettingWithDefaults instantiates a new MemberAutomatedTrafficCaptureSetting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberAutomatedTrafficCaptureSettingWithDefaults() *MemberAutomatedTrafficCaptureSetting {
	this := MemberAutomatedTrafficCaptureSetting{}
	return &this
}

// GetTrafficCaptureEnable returns the TrafficCaptureEnable field value if set, zero value otherwise.
func (o *MemberAutomatedTrafficCaptureSetting) GetTrafficCaptureEnable() bool {
	if o == nil || IsNil(o.TrafficCaptureEnable) {
		var ret bool
		return ret
	}
	return *o.TrafficCaptureEnable
}

// GetTrafficCaptureEnableOk returns a tuple with the TrafficCaptureEnable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberAutomatedTrafficCaptureSetting) GetTrafficCaptureEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.TrafficCaptureEnable) {
		return nil, false
	}
	return o.TrafficCaptureEnable, true
}

// HasTrafficCaptureEnable returns a boolean if a field has been set.
func (o *MemberAutomatedTrafficCaptureSetting) HasTrafficCaptureEnable() bool {
	if o != nil && !IsNil(o.TrafficCaptureEnable) {
		return true
	}

	return false
}

// SetTrafficCaptureEnable gets a reference to the given bool and assigns it to the TrafficCaptureEnable field.
func (o *MemberAutomatedTrafficCaptureSetting) SetTrafficCaptureEnable(v bool) {
	o.TrafficCaptureEnable = &v
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *MemberAutomatedTrafficCaptureSetting) GetDestination() string {
	if o == nil || IsNil(o.Destination) {
		var ret string
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberAutomatedTrafficCaptureSetting) GetDestinationOk() (*string, bool) {
	if o == nil || IsNil(o.Destination) {
		return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *MemberAutomatedTrafficCaptureSetting) HasDestination() bool {
	if o != nil && !IsNil(o.Destination) {
		return true
	}

	return false
}

// SetDestination gets a reference to the given string and assigns it to the Destination field.
func (o *MemberAutomatedTrafficCaptureSetting) SetDestination(v string) {
	o.Destination = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *MemberAutomatedTrafficCaptureSetting) GetDuration() int64 {
	if o == nil || IsNil(o.Duration) {
		var ret int64
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberAutomatedTrafficCaptureSetting) GetDurationOk() (*int64, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *MemberAutomatedTrafficCaptureSetting) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int64 and assigns it to the Duration field.
func (o *MemberAutomatedTrafficCaptureSetting) SetDuration(v int64) {
	o.Duration = &v
}

// GetIncludeSupportBundle returns the IncludeSupportBundle field value if set, zero value otherwise.
func (o *MemberAutomatedTrafficCaptureSetting) GetIncludeSupportBundle() bool {
	if o == nil || IsNil(o.IncludeSupportBundle) {
		var ret bool
		return ret
	}
	return *o.IncludeSupportBundle
}

// GetIncludeSupportBundleOk returns a tuple with the IncludeSupportBundle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberAutomatedTrafficCaptureSetting) GetIncludeSupportBundleOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeSupportBundle) {
		return nil, false
	}
	return o.IncludeSupportBundle, true
}

// HasIncludeSupportBundle returns a boolean if a field has been set.
func (o *MemberAutomatedTrafficCaptureSetting) HasIncludeSupportBundle() bool {
	if o != nil && !IsNil(o.IncludeSupportBundle) {
		return true
	}

	return false
}

// SetIncludeSupportBundle gets a reference to the given bool and assigns it to the IncludeSupportBundle field.
func (o *MemberAutomatedTrafficCaptureSetting) SetIncludeSupportBundle(v bool) {
	o.IncludeSupportBundle = &v
}

// GetKeepLocalCopy returns the KeepLocalCopy field value if set, zero value otherwise.
func (o *MemberAutomatedTrafficCaptureSetting) GetKeepLocalCopy() bool {
	if o == nil || IsNil(o.KeepLocalCopy) {
		var ret bool
		return ret
	}
	return *o.KeepLocalCopy
}

// GetKeepLocalCopyOk returns a tuple with the KeepLocalCopy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberAutomatedTrafficCaptureSetting) GetKeepLocalCopyOk() (*bool, bool) {
	if o == nil || IsNil(o.KeepLocalCopy) {
		return nil, false
	}
	return o.KeepLocalCopy, true
}

// HasKeepLocalCopy returns a boolean if a field has been set.
func (o *MemberAutomatedTrafficCaptureSetting) HasKeepLocalCopy() bool {
	if o != nil && !IsNil(o.KeepLocalCopy) {
		return true
	}

	return false
}

// SetKeepLocalCopy gets a reference to the given bool and assigns it to the KeepLocalCopy field.
func (o *MemberAutomatedTrafficCaptureSetting) SetKeepLocalCopy(v bool) {
	o.KeepLocalCopy = &v
}

// GetDestinationHost returns the DestinationHost field value if set, zero value otherwise.
func (o *MemberAutomatedTrafficCaptureSetting) GetDestinationHost() string {
	if o == nil || IsNil(o.DestinationHost) {
		var ret string
		return ret
	}
	return *o.DestinationHost
}

// GetDestinationHostOk returns a tuple with the DestinationHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberAutomatedTrafficCaptureSetting) GetDestinationHostOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationHost) {
		return nil, false
	}
	return o.DestinationHost, true
}

// HasDestinationHost returns a boolean if a field has been set.
func (o *MemberAutomatedTrafficCaptureSetting) HasDestinationHost() bool {
	if o != nil && !IsNil(o.DestinationHost) {
		return true
	}

	return false
}

// SetDestinationHost gets a reference to the given string and assigns it to the DestinationHost field.
func (o *MemberAutomatedTrafficCaptureSetting) SetDestinationHost(v string) {
	o.DestinationHost = &v
}

// GetTrafficCaptureDirectory returns the TrafficCaptureDirectory field value if set, zero value otherwise.
func (o *MemberAutomatedTrafficCaptureSetting) GetTrafficCaptureDirectory() string {
	if o == nil || IsNil(o.TrafficCaptureDirectory) {
		var ret string
		return ret
	}
	return *o.TrafficCaptureDirectory
}

// GetTrafficCaptureDirectoryOk returns a tuple with the TrafficCaptureDirectory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberAutomatedTrafficCaptureSetting) GetTrafficCaptureDirectoryOk() (*string, bool) {
	if o == nil || IsNil(o.TrafficCaptureDirectory) {
		return nil, false
	}
	return o.TrafficCaptureDirectory, true
}

// HasTrafficCaptureDirectory returns a boolean if a field has been set.
func (o *MemberAutomatedTrafficCaptureSetting) HasTrafficCaptureDirectory() bool {
	if o != nil && !IsNil(o.TrafficCaptureDirectory) {
		return true
	}

	return false
}

// SetTrafficCaptureDirectory gets a reference to the given string and assigns it to the TrafficCaptureDirectory field.
func (o *MemberAutomatedTrafficCaptureSetting) SetTrafficCaptureDirectory(v string) {
	o.TrafficCaptureDirectory = &v
}

// GetSupportBundleDirectory returns the SupportBundleDirectory field value if set, zero value otherwise.
func (o *MemberAutomatedTrafficCaptureSetting) GetSupportBundleDirectory() string {
	if o == nil || IsNil(o.SupportBundleDirectory) {
		var ret string
		return ret
	}
	return *o.SupportBundleDirectory
}

// GetSupportBundleDirectoryOk returns a tuple with the SupportBundleDirectory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberAutomatedTrafficCaptureSetting) GetSupportBundleDirectoryOk() (*string, bool) {
	if o == nil || IsNil(o.SupportBundleDirectory) {
		return nil, false
	}
	return o.SupportBundleDirectory, true
}

// HasSupportBundleDirectory returns a boolean if a field has been set.
func (o *MemberAutomatedTrafficCaptureSetting) HasSupportBundleDirectory() bool {
	if o != nil && !IsNil(o.SupportBundleDirectory) {
		return true
	}

	return false
}

// SetSupportBundleDirectory gets a reference to the given string and assigns it to the SupportBundleDirectory field.
func (o *MemberAutomatedTrafficCaptureSetting) SetSupportBundleDirectory(v string) {
	o.SupportBundleDirectory = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *MemberAutomatedTrafficCaptureSetting) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberAutomatedTrafficCaptureSetting) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *MemberAutomatedTrafficCaptureSetting) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *MemberAutomatedTrafficCaptureSetting) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *MemberAutomatedTrafficCaptureSetting) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberAutomatedTrafficCaptureSetting) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *MemberAutomatedTrafficCaptureSetting) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *MemberAutomatedTrafficCaptureSetting) SetPassword(v string) {
	o.Password = &v
}

func (o MemberAutomatedTrafficCaptureSetting) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberAutomatedTrafficCaptureSetting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TrafficCaptureEnable) {
		toSerialize["traffic_capture_enable"] = o.TrafficCaptureEnable
	}
	if !IsNil(o.Destination) {
		toSerialize["destination"] = o.Destination
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.IncludeSupportBundle) {
		toSerialize["include_support_bundle"] = o.IncludeSupportBundle
	}
	if !IsNil(o.KeepLocalCopy) {
		toSerialize["keep_local_copy"] = o.KeepLocalCopy
	}
	if !IsNil(o.DestinationHost) {
		toSerialize["destination_host"] = o.DestinationHost
	}
	if !IsNil(o.TrafficCaptureDirectory) {
		toSerialize["traffic_capture_directory"] = o.TrafficCaptureDirectory
	}
	if !IsNil(o.SupportBundleDirectory) {
		toSerialize["support_bundle_directory"] = o.SupportBundleDirectory
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MemberAutomatedTrafficCaptureSetting) UnmarshalJSON(data []byte) (err error) {
	varMemberAutomatedTrafficCaptureSetting := _MemberAutomatedTrafficCaptureSetting{}

	err = json.Unmarshal(data, &varMemberAutomatedTrafficCaptureSetting)

	if err != nil {
		return err
	}

	*o = MemberAutomatedTrafficCaptureSetting(varMemberAutomatedTrafficCaptureSetting)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "traffic_capture_enable")
		delete(additionalProperties, "destination")
		delete(additionalProperties, "duration")
		delete(additionalProperties, "include_support_bundle")
		delete(additionalProperties, "keep_local_copy")
		delete(additionalProperties, "destination_host")
		delete(additionalProperties, "traffic_capture_directory")
		delete(additionalProperties, "support_bundle_directory")
		delete(additionalProperties, "username")
		delete(additionalProperties, "password")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMemberAutomatedTrafficCaptureSetting struct {
	value *MemberAutomatedTrafficCaptureSetting
	isSet bool
}

func (v NullableMemberAutomatedTrafficCaptureSetting) Get() *MemberAutomatedTrafficCaptureSetting {
	return v.value
}

func (v *NullableMemberAutomatedTrafficCaptureSetting) Set(val *MemberAutomatedTrafficCaptureSetting) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberAutomatedTrafficCaptureSetting) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberAutomatedTrafficCaptureSetting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberAutomatedTrafficCaptureSetting(val *MemberAutomatedTrafficCaptureSetting) *NullableMemberAutomatedTrafficCaptureSetting {
	return &NullableMemberAutomatedTrafficCaptureSetting{value: val, isSet: true}
}

func (v NullableMemberAutomatedTrafficCaptureSetting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberAutomatedTrafficCaptureSetting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
