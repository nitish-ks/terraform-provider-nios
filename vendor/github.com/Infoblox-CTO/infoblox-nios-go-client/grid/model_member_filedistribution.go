/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the MemberFiledistribution type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberFiledistribution{}

// MemberFiledistribution struct for MemberFiledistribution
type MemberFiledistribution struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// Determines whether uploads to the Grid member are allowed.
	AllowUploads *bool `json:"allow_uploads,omitempty"`
	// The Grid member descriptive comment.
	Comment *string `json:"comment,omitempty"`
	// Determines whether the FTP prtocol is enabled for file distribution.
	EnableFtp *bool `json:"enable_ftp,omitempty"`
	// Determines whether the LIST command for FTP is enabled.
	EnableFtpFilelist *bool `json:"enable_ftp_filelist,omitempty"`
	// Determines whether the passive mode for FTP is enabled.
	EnableFtpPassive *bool `json:"enable_ftp_passive,omitempty"`
	// Determines whether the HTTP prtocol is enabled for file distribution.
	EnableHttp *bool `json:"enable_http,omitempty"`
	// Determines whether the HTTP prtocol access control (AC) settings are enabled.
	EnableHttpAcl *bool `json:"enable_http_acl,omitempty"`
	// Determines whether the TFTP prtocol is enabled for file distribution.
	EnableTftp *bool `json:"enable_tftp,omitempty"`
	// Access control (AC) settings for the FTP protocol.
	FtpAcls []MemberFiledistributionFtpAcls `json:"ftp_acls,omitempty"`
	// The network port used by the FTP protocol.
	FtpPort *int64 `json:"ftp_port,omitempty"`
	// The FTP protocol status.
	FtpStatus *string `json:"ftp_status,omitempty"`
	// The Grid member host name.
	HostName *string `json:"host_name,omitempty"`
	// Access control (AC) settings for the HTTP protocol.
	HttpAcls []MemberFiledistributionHttpAcls `json:"http_acls,omitempty"`
	// The HTTP protocol status.
	HttpStatus *string `json:"http_status,omitempty"`
	// The IPv4 address of the Grid member.
	Ipv4Address *string `json:"ipv4_address,omitempty"`
	// The IPv6 address of the Grid member.
	Ipv6Address *string `json:"ipv6_address,omitempty"`
	// The Grid member file distribution status.
	Status *string `json:"status,omitempty"`
	// The access control (AC) settings for the TFTP protocol.
	TftpAcls []MemberFiledistributionTftpAcls `json:"tftp_acls,omitempty"`
	// The network port used by the TFTP protocol.
	TftpPort *int64 `json:"tftp_port,omitempty"`
	// The TFTP protocol status.
	TftpStatus *string `json:"tftp_status,omitempty"`
	// Use flag for: allow_uploads
	UseAllowUploads *bool `json:"use_allow_uploads,omitempty"`
}

// NewMemberFiledistribution instantiates a new MemberFiledistribution object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberFiledistribution() *MemberFiledistribution {
	this := MemberFiledistribution{}
	return &this
}

// NewMemberFiledistributionWithDefaults instantiates a new MemberFiledistribution object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberFiledistributionWithDefaults() *MemberFiledistribution {
	this := MemberFiledistribution{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *MemberFiledistribution) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberFiledistribution) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *MemberFiledistribution) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *MemberFiledistribution) SetRef(v string) {
	o.Ref = &v
}

// GetAllowUploads returns the AllowUploads field value if set, zero value otherwise.
func (o *MemberFiledistribution) GetAllowUploads() bool {
	if o == nil || IsNil(o.AllowUploads) {
		var ret bool
		return ret
	}
	return *o.AllowUploads
}

// GetAllowUploadsOk returns a tuple with the AllowUploads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberFiledistribution) GetAllowUploadsOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowUploads) {
		return nil, false
	}
	return o.AllowUploads, true
}

// HasAllowUploads returns a boolean if a field has been set.
func (o *MemberFiledistribution) HasAllowUploads() bool {
	if o != nil && !IsNil(o.AllowUploads) {
		return true
	}

	return false
}

// SetAllowUploads gets a reference to the given bool and assigns it to the AllowUploads field.
func (o *MemberFiledistribution) SetAllowUploads(v bool) {
	o.AllowUploads = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *MemberFiledistribution) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberFiledistribution) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *MemberFiledistribution) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *MemberFiledistribution) SetComment(v string) {
	o.Comment = &v
}

// GetEnableFtp returns the EnableFtp field value if set, zero value otherwise.
func (o *MemberFiledistribution) GetEnableFtp() bool {
	if o == nil || IsNil(o.EnableFtp) {
		var ret bool
		return ret
	}
	return *o.EnableFtp
}

// GetEnableFtpOk returns a tuple with the EnableFtp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberFiledistribution) GetEnableFtpOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableFtp) {
		return nil, false
	}
	return o.EnableFtp, true
}

// HasEnableFtp returns a boolean if a field has been set.
func (o *MemberFiledistribution) HasEnableFtp() bool {
	if o != nil && !IsNil(o.EnableFtp) {
		return true
	}

	return false
}

// SetEnableFtp gets a reference to the given bool and assigns it to the EnableFtp field.
func (o *MemberFiledistribution) SetEnableFtp(v bool) {
	o.EnableFtp = &v
}

// GetEnableFtpFilelist returns the EnableFtpFilelist field value if set, zero value otherwise.
func (o *MemberFiledistribution) GetEnableFtpFilelist() bool {
	if o == nil || IsNil(o.EnableFtpFilelist) {
		var ret bool
		return ret
	}
	return *o.EnableFtpFilelist
}

// GetEnableFtpFilelistOk returns a tuple with the EnableFtpFilelist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberFiledistribution) GetEnableFtpFilelistOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableFtpFilelist) {
		return nil, false
	}
	return o.EnableFtpFilelist, true
}

// HasEnableFtpFilelist returns a boolean if a field has been set.
func (o *MemberFiledistribution) HasEnableFtpFilelist() bool {
	if o != nil && !IsNil(o.EnableFtpFilelist) {
		return true
	}

	return false
}

// SetEnableFtpFilelist gets a reference to the given bool and assigns it to the EnableFtpFilelist field.
func (o *MemberFiledistribution) SetEnableFtpFilelist(v bool) {
	o.EnableFtpFilelist = &v
}

// GetEnableFtpPassive returns the EnableFtpPassive field value if set, zero value otherwise.
func (o *MemberFiledistribution) GetEnableFtpPassive() bool {
	if o == nil || IsNil(o.EnableFtpPassive) {
		var ret bool
		return ret
	}
	return *o.EnableFtpPassive
}

// GetEnableFtpPassiveOk returns a tuple with the EnableFtpPassive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberFiledistribution) GetEnableFtpPassiveOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableFtpPassive) {
		return nil, false
	}
	return o.EnableFtpPassive, true
}

// HasEnableFtpPassive returns a boolean if a field has been set.
func (o *MemberFiledistribution) HasEnableFtpPassive() bool {
	if o != nil && !IsNil(o.EnableFtpPassive) {
		return true
	}

	return false
}

// SetEnableFtpPassive gets a reference to the given bool and assigns it to the EnableFtpPassive field.
func (o *MemberFiledistribution) SetEnableFtpPassive(v bool) {
	o.EnableFtpPassive = &v
}

// GetEnableHttp returns the EnableHttp field value if set, zero value otherwise.
func (o *MemberFiledistribution) GetEnableHttp() bool {
	if o == nil || IsNil(o.EnableHttp) {
		var ret bool
		return ret
	}
	return *o.EnableHttp
}

// GetEnableHttpOk returns a tuple with the EnableHttp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberFiledistribution) GetEnableHttpOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableHttp) {
		return nil, false
	}
	return o.EnableHttp, true
}

// HasEnableHttp returns a boolean if a field has been set.
func (o *MemberFiledistribution) HasEnableHttp() bool {
	if o != nil && !IsNil(o.EnableHttp) {
		return true
	}

	return false
}

// SetEnableHttp gets a reference to the given bool and assigns it to the EnableHttp field.
func (o *MemberFiledistribution) SetEnableHttp(v bool) {
	o.EnableHttp = &v
}

// GetEnableHttpAcl returns the EnableHttpAcl field value if set, zero value otherwise.
func (o *MemberFiledistribution) GetEnableHttpAcl() bool {
	if o == nil || IsNil(o.EnableHttpAcl) {
		var ret bool
		return ret
	}
	return *o.EnableHttpAcl
}

// GetEnableHttpAclOk returns a tuple with the EnableHttpAcl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberFiledistribution) GetEnableHttpAclOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableHttpAcl) {
		return nil, false
	}
	return o.EnableHttpAcl, true
}

// HasEnableHttpAcl returns a boolean if a field has been set.
func (o *MemberFiledistribution) HasEnableHttpAcl() bool {
	if o != nil && !IsNil(o.EnableHttpAcl) {
		return true
	}

	return false
}

// SetEnableHttpAcl gets a reference to the given bool and assigns it to the EnableHttpAcl field.
func (o *MemberFiledistribution) SetEnableHttpAcl(v bool) {
	o.EnableHttpAcl = &v
}

// GetEnableTftp returns the EnableTftp field value if set, zero value otherwise.
func (o *MemberFiledistribution) GetEnableTftp() bool {
	if o == nil || IsNil(o.EnableTftp) {
		var ret bool
		return ret
	}
	return *o.EnableTftp
}

// GetEnableTftpOk returns a tuple with the EnableTftp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberFiledistribution) GetEnableTftpOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableTftp) {
		return nil, false
	}
	return o.EnableTftp, true
}

// HasEnableTftp returns a boolean if a field has been set.
func (o *MemberFiledistribution) HasEnableTftp() bool {
	if o != nil && !IsNil(o.EnableTftp) {
		return true
	}

	return false
}

// SetEnableTftp gets a reference to the given bool and assigns it to the EnableTftp field.
func (o *MemberFiledistribution) SetEnableTftp(v bool) {
	o.EnableTftp = &v
}

// GetFtpAcls returns the FtpAcls field value if set, zero value otherwise.
func (o *MemberFiledistribution) GetFtpAcls() []MemberFiledistributionFtpAcls {
	if o == nil || IsNil(o.FtpAcls) {
		var ret []MemberFiledistributionFtpAcls
		return ret
	}
	return o.FtpAcls
}

// GetFtpAclsOk returns a tuple with the FtpAcls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberFiledistribution) GetFtpAclsOk() ([]MemberFiledistributionFtpAcls, bool) {
	if o == nil || IsNil(o.FtpAcls) {
		return nil, false
	}
	return o.FtpAcls, true
}

// HasFtpAcls returns a boolean if a field has been set.
func (o *MemberFiledistribution) HasFtpAcls() bool {
	if o != nil && !IsNil(o.FtpAcls) {
		return true
	}

	return false
}

// SetFtpAcls gets a reference to the given []MemberFiledistributionFtpAcls and assigns it to the FtpAcls field.
func (o *MemberFiledistribution) SetFtpAcls(v []MemberFiledistributionFtpAcls) {
	o.FtpAcls = v
}

// GetFtpPort returns the FtpPort field value if set, zero value otherwise.
func (o *MemberFiledistribution) GetFtpPort() int64 {
	if o == nil || IsNil(o.FtpPort) {
		var ret int64
		return ret
	}
	return *o.FtpPort
}

// GetFtpPortOk returns a tuple with the FtpPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberFiledistribution) GetFtpPortOk() (*int64, bool) {
	if o == nil || IsNil(o.FtpPort) {
		return nil, false
	}
	return o.FtpPort, true
}

// HasFtpPort returns a boolean if a field has been set.
func (o *MemberFiledistribution) HasFtpPort() bool {
	if o != nil && !IsNil(o.FtpPort) {
		return true
	}

	return false
}

// SetFtpPort gets a reference to the given int64 and assigns it to the FtpPort field.
func (o *MemberFiledistribution) SetFtpPort(v int64) {
	o.FtpPort = &v
}

// GetFtpStatus returns the FtpStatus field value if set, zero value otherwise.
func (o *MemberFiledistribution) GetFtpStatus() string {
	if o == nil || IsNil(o.FtpStatus) {
		var ret string
		return ret
	}
	return *o.FtpStatus
}

// GetFtpStatusOk returns a tuple with the FtpStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberFiledistribution) GetFtpStatusOk() (*string, bool) {
	if o == nil || IsNil(o.FtpStatus) {
		return nil, false
	}
	return o.FtpStatus, true
}

// HasFtpStatus returns a boolean if a field has been set.
func (o *MemberFiledistribution) HasFtpStatus() bool {
	if o != nil && !IsNil(o.FtpStatus) {
		return true
	}

	return false
}

// SetFtpStatus gets a reference to the given string and assigns it to the FtpStatus field.
func (o *MemberFiledistribution) SetFtpStatus(v string) {
	o.FtpStatus = &v
}

// GetHostName returns the HostName field value if set, zero value otherwise.
func (o *MemberFiledistribution) GetHostName() string {
	if o == nil || IsNil(o.HostName) {
		var ret string
		return ret
	}
	return *o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberFiledistribution) GetHostNameOk() (*string, bool) {
	if o == nil || IsNil(o.HostName) {
		return nil, false
	}
	return o.HostName, true
}

// HasHostName returns a boolean if a field has been set.
func (o *MemberFiledistribution) HasHostName() bool {
	if o != nil && !IsNil(o.HostName) {
		return true
	}

	return false
}

// SetHostName gets a reference to the given string and assigns it to the HostName field.
func (o *MemberFiledistribution) SetHostName(v string) {
	o.HostName = &v
}

// GetHttpAcls returns the HttpAcls field value if set, zero value otherwise.
func (o *MemberFiledistribution) GetHttpAcls() []MemberFiledistributionHttpAcls {
	if o == nil || IsNil(o.HttpAcls) {
		var ret []MemberFiledistributionHttpAcls
		return ret
	}
	return o.HttpAcls
}

// GetHttpAclsOk returns a tuple with the HttpAcls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberFiledistribution) GetHttpAclsOk() ([]MemberFiledistributionHttpAcls, bool) {
	if o == nil || IsNil(o.HttpAcls) {
		return nil, false
	}
	return o.HttpAcls, true
}

// HasHttpAcls returns a boolean if a field has been set.
func (o *MemberFiledistribution) HasHttpAcls() bool {
	if o != nil && !IsNil(o.HttpAcls) {
		return true
	}

	return false
}

// SetHttpAcls gets a reference to the given []MemberFiledistributionHttpAcls and assigns it to the HttpAcls field.
func (o *MemberFiledistribution) SetHttpAcls(v []MemberFiledistributionHttpAcls) {
	o.HttpAcls = v
}

// GetHttpStatus returns the HttpStatus field value if set, zero value otherwise.
func (o *MemberFiledistribution) GetHttpStatus() string {
	if o == nil || IsNil(o.HttpStatus) {
		var ret string
		return ret
	}
	return *o.HttpStatus
}

// GetHttpStatusOk returns a tuple with the HttpStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberFiledistribution) GetHttpStatusOk() (*string, bool) {
	if o == nil || IsNil(o.HttpStatus) {
		return nil, false
	}
	return o.HttpStatus, true
}

// HasHttpStatus returns a boolean if a field has been set.
func (o *MemberFiledistribution) HasHttpStatus() bool {
	if o != nil && !IsNil(o.HttpStatus) {
		return true
	}

	return false
}

// SetHttpStatus gets a reference to the given string and assigns it to the HttpStatus field.
func (o *MemberFiledistribution) SetHttpStatus(v string) {
	o.HttpStatus = &v
}

// GetIpv4Address returns the Ipv4Address field value if set, zero value otherwise.
func (o *MemberFiledistribution) GetIpv4Address() string {
	if o == nil || IsNil(o.Ipv4Address) {
		var ret string
		return ret
	}
	return *o.Ipv4Address
}

// GetIpv4AddressOk returns a tuple with the Ipv4Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberFiledistribution) GetIpv4AddressOk() (*string, bool) {
	if o == nil || IsNil(o.Ipv4Address) {
		return nil, false
	}
	return o.Ipv4Address, true
}

// HasIpv4Address returns a boolean if a field has been set.
func (o *MemberFiledistribution) HasIpv4Address() bool {
	if o != nil && !IsNil(o.Ipv4Address) {
		return true
	}

	return false
}

// SetIpv4Address gets a reference to the given string and assigns it to the Ipv4Address field.
func (o *MemberFiledistribution) SetIpv4Address(v string) {
	o.Ipv4Address = &v
}

// GetIpv6Address returns the Ipv6Address field value if set, zero value otherwise.
func (o *MemberFiledistribution) GetIpv6Address() string {
	if o == nil || IsNil(o.Ipv6Address) {
		var ret string
		return ret
	}
	return *o.Ipv6Address
}

// GetIpv6AddressOk returns a tuple with the Ipv6Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberFiledistribution) GetIpv6AddressOk() (*string, bool) {
	if o == nil || IsNil(o.Ipv6Address) {
		return nil, false
	}
	return o.Ipv6Address, true
}

// HasIpv6Address returns a boolean if a field has been set.
func (o *MemberFiledistribution) HasIpv6Address() bool {
	if o != nil && !IsNil(o.Ipv6Address) {
		return true
	}

	return false
}

// SetIpv6Address gets a reference to the given string and assigns it to the Ipv6Address field.
func (o *MemberFiledistribution) SetIpv6Address(v string) {
	o.Ipv6Address = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *MemberFiledistribution) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberFiledistribution) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MemberFiledistribution) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *MemberFiledistribution) SetStatus(v string) {
	o.Status = &v
}

// GetTftpAcls returns the TftpAcls field value if set, zero value otherwise.
func (o *MemberFiledistribution) GetTftpAcls() []MemberFiledistributionTftpAcls {
	if o == nil || IsNil(o.TftpAcls) {
		var ret []MemberFiledistributionTftpAcls
		return ret
	}
	return o.TftpAcls
}

// GetTftpAclsOk returns a tuple with the TftpAcls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberFiledistribution) GetTftpAclsOk() ([]MemberFiledistributionTftpAcls, bool) {
	if o == nil || IsNil(o.TftpAcls) {
		return nil, false
	}
	return o.TftpAcls, true
}

// HasTftpAcls returns a boolean if a field has been set.
func (o *MemberFiledistribution) HasTftpAcls() bool {
	if o != nil && !IsNil(o.TftpAcls) {
		return true
	}

	return false
}

// SetTftpAcls gets a reference to the given []MemberFiledistributionTftpAcls and assigns it to the TftpAcls field.
func (o *MemberFiledistribution) SetTftpAcls(v []MemberFiledistributionTftpAcls) {
	o.TftpAcls = v
}

// GetTftpPort returns the TftpPort field value if set, zero value otherwise.
func (o *MemberFiledistribution) GetTftpPort() int64 {
	if o == nil || IsNil(o.TftpPort) {
		var ret int64
		return ret
	}
	return *o.TftpPort
}

// GetTftpPortOk returns a tuple with the TftpPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberFiledistribution) GetTftpPortOk() (*int64, bool) {
	if o == nil || IsNil(o.TftpPort) {
		return nil, false
	}
	return o.TftpPort, true
}

// HasTftpPort returns a boolean if a field has been set.
func (o *MemberFiledistribution) HasTftpPort() bool {
	if o != nil && !IsNil(o.TftpPort) {
		return true
	}

	return false
}

// SetTftpPort gets a reference to the given int64 and assigns it to the TftpPort field.
func (o *MemberFiledistribution) SetTftpPort(v int64) {
	o.TftpPort = &v
}

// GetTftpStatus returns the TftpStatus field value if set, zero value otherwise.
func (o *MemberFiledistribution) GetTftpStatus() string {
	if o == nil || IsNil(o.TftpStatus) {
		var ret string
		return ret
	}
	return *o.TftpStatus
}

// GetTftpStatusOk returns a tuple with the TftpStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberFiledistribution) GetTftpStatusOk() (*string, bool) {
	if o == nil || IsNil(o.TftpStatus) {
		return nil, false
	}
	return o.TftpStatus, true
}

// HasTftpStatus returns a boolean if a field has been set.
func (o *MemberFiledistribution) HasTftpStatus() bool {
	if o != nil && !IsNil(o.TftpStatus) {
		return true
	}

	return false
}

// SetTftpStatus gets a reference to the given string and assigns it to the TftpStatus field.
func (o *MemberFiledistribution) SetTftpStatus(v string) {
	o.TftpStatus = &v
}

// GetUseAllowUploads returns the UseAllowUploads field value if set, zero value otherwise.
func (o *MemberFiledistribution) GetUseAllowUploads() bool {
	if o == nil || IsNil(o.UseAllowUploads) {
		var ret bool
		return ret
	}
	return *o.UseAllowUploads
}

// GetUseAllowUploadsOk returns a tuple with the UseAllowUploads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberFiledistribution) GetUseAllowUploadsOk() (*bool, bool) {
	if o == nil || IsNil(o.UseAllowUploads) {
		return nil, false
	}
	return o.UseAllowUploads, true
}

// HasUseAllowUploads returns a boolean if a field has been set.
func (o *MemberFiledistribution) HasUseAllowUploads() bool {
	if o != nil && !IsNil(o.UseAllowUploads) {
		return true
	}

	return false
}

// SetUseAllowUploads gets a reference to the given bool and assigns it to the UseAllowUploads field.
func (o *MemberFiledistribution) SetUseAllowUploads(v bool) {
	o.UseAllowUploads = &v
}

func (o MemberFiledistribution) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberFiledistribution) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.AllowUploads) {
		toSerialize["allow_uploads"] = o.AllowUploads
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.EnableFtp) {
		toSerialize["enable_ftp"] = o.EnableFtp
	}
	if !IsNil(o.EnableFtpFilelist) {
		toSerialize["enable_ftp_filelist"] = o.EnableFtpFilelist
	}
	if !IsNil(o.EnableFtpPassive) {
		toSerialize["enable_ftp_passive"] = o.EnableFtpPassive
	}
	if !IsNil(o.EnableHttp) {
		toSerialize["enable_http"] = o.EnableHttp
	}
	if !IsNil(o.EnableHttpAcl) {
		toSerialize["enable_http_acl"] = o.EnableHttpAcl
	}
	if !IsNil(o.EnableTftp) {
		toSerialize["enable_tftp"] = o.EnableTftp
	}
	if !IsNil(o.FtpAcls) {
		toSerialize["ftp_acls"] = o.FtpAcls
	}
	if !IsNil(o.FtpPort) {
		toSerialize["ftp_port"] = o.FtpPort
	}
	if !IsNil(o.FtpStatus) {
		toSerialize["ftp_status"] = o.FtpStatus
	}
	if !IsNil(o.HostName) {
		toSerialize["host_name"] = o.HostName
	}
	if !IsNil(o.HttpAcls) {
		toSerialize["http_acls"] = o.HttpAcls
	}
	if !IsNil(o.HttpStatus) {
		toSerialize["http_status"] = o.HttpStatus
	}
	if !IsNil(o.Ipv4Address) {
		toSerialize["ipv4_address"] = o.Ipv4Address
	}
	if !IsNil(o.Ipv6Address) {
		toSerialize["ipv6_address"] = o.Ipv6Address
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TftpAcls) {
		toSerialize["tftp_acls"] = o.TftpAcls
	}
	if !IsNil(o.TftpPort) {
		toSerialize["tftp_port"] = o.TftpPort
	}
	if !IsNil(o.TftpStatus) {
		toSerialize["tftp_status"] = o.TftpStatus
	}
	if !IsNil(o.UseAllowUploads) {
		toSerialize["use_allow_uploads"] = o.UseAllowUploads
	}
	return toSerialize, nil
}

type NullableMemberFiledistribution struct {
	value *MemberFiledistribution
	isSet bool
}

func (v NullableMemberFiledistribution) Get() *MemberFiledistribution {
	return v.value
}

func (v *NullableMemberFiledistribution) Set(val *MemberFiledistribution) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberFiledistribution) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberFiledistribution) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberFiledistribution(val *MemberFiledistribution) *NullableMemberFiledistribution {
	return &NullableMemberFiledistribution{value: val, isSet: true}
}

func (v NullableMemberFiledistribution) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberFiledistribution) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
