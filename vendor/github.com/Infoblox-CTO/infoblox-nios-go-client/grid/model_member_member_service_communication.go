/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the MemberMemberServiceCommunication type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberMemberServiceCommunication{}

// MemberMemberServiceCommunication struct for MemberMemberServiceCommunication
type MemberMemberServiceCommunication struct {
	// The service for a Grid member.
	Service *string `json:"service,omitempty"`
	// Communication type.
	Type *string `json:"type,omitempty"`
	// The option for communication type.
	Option               *string `json:"option,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MemberMemberServiceCommunication MemberMemberServiceCommunication

// NewMemberMemberServiceCommunication instantiates a new MemberMemberServiceCommunication object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberMemberServiceCommunication() *MemberMemberServiceCommunication {
	this := MemberMemberServiceCommunication{}
	return &this
}

// NewMemberMemberServiceCommunicationWithDefaults instantiates a new MemberMemberServiceCommunication object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberMemberServiceCommunicationWithDefaults() *MemberMemberServiceCommunication {
	this := MemberMemberServiceCommunication{}
	return &this
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *MemberMemberServiceCommunication) GetService() string {
	if o == nil || IsNil(o.Service) {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberMemberServiceCommunication) GetServiceOk() (*string, bool) {
	if o == nil || IsNil(o.Service) {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *MemberMemberServiceCommunication) HasService() bool {
	if o != nil && !IsNil(o.Service) {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *MemberMemberServiceCommunication) SetService(v string) {
	o.Service = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *MemberMemberServiceCommunication) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberMemberServiceCommunication) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MemberMemberServiceCommunication) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *MemberMemberServiceCommunication) SetType(v string) {
	o.Type = &v
}

// GetOption returns the Option field value if set, zero value otherwise.
func (o *MemberMemberServiceCommunication) GetOption() string {
	if o == nil || IsNil(o.Option) {
		var ret string
		return ret
	}
	return *o.Option
}

// GetOptionOk returns a tuple with the Option field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberMemberServiceCommunication) GetOptionOk() (*string, bool) {
	if o == nil || IsNil(o.Option) {
		return nil, false
	}
	return o.Option, true
}

// HasOption returns a boolean if a field has been set.
func (o *MemberMemberServiceCommunication) HasOption() bool {
	if o != nil && !IsNil(o.Option) {
		return true
	}

	return false
}

// SetOption gets a reference to the given string and assigns it to the Option field.
func (o *MemberMemberServiceCommunication) SetOption(v string) {
	o.Option = &v
}

func (o MemberMemberServiceCommunication) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberMemberServiceCommunication) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Service) {
		toSerialize["service"] = o.Service
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Option) {
		toSerialize["option"] = o.Option
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MemberMemberServiceCommunication) UnmarshalJSON(data []byte) (err error) {
	varMemberMemberServiceCommunication := _MemberMemberServiceCommunication{}

	err = json.Unmarshal(data, &varMemberMemberServiceCommunication)

	if err != nil {
		return err
	}

	*o = MemberMemberServiceCommunication(varMemberMemberServiceCommunication)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "service")
		delete(additionalProperties, "type")
		delete(additionalProperties, "option")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMemberMemberServiceCommunication struct {
	value *MemberMemberServiceCommunication
	isSet bool
}

func (v NullableMemberMemberServiceCommunication) Get() *MemberMemberServiceCommunication {
	return v.value
}

func (v *NullableMemberMemberServiceCommunication) Set(val *MemberMemberServiceCommunication) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberMemberServiceCommunication) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberMemberServiceCommunication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberMemberServiceCommunication(val *MemberMemberServiceCommunication) *NullableMemberMemberServiceCommunication {
	return &NullableMemberMemberServiceCommunication{value: val, isSet: true}
}

func (v NullableMemberMemberServiceCommunication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberMemberServiceCommunication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
