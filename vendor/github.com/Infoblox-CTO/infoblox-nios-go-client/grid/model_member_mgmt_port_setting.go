/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the MemberMgmtPortSetting type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberMgmtPortSetting{}

// MemberMgmtPortSetting struct for MemberMgmtPortSetting
type MemberMgmtPortSetting struct {
	// Determines if MGMT port settings should be enabled.
	Enabled *bool `json:"enabled,omitempty"`
	// Determines if VPN on the MGMT port is enabled or not.
	VpnEnabled *bool `json:"vpn_enabled,omitempty"`
	// Determines if security access on the MGMT port is enabled or not.
	SecurityAccessEnabled *bool `json:"security_access_enabled,omitempty"`
	AdditionalProperties  map[string]interface{}
}

type _MemberMgmtPortSetting MemberMgmtPortSetting

// NewMemberMgmtPortSetting instantiates a new MemberMgmtPortSetting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberMgmtPortSetting() *MemberMgmtPortSetting {
	this := MemberMgmtPortSetting{}
	return &this
}

// NewMemberMgmtPortSettingWithDefaults instantiates a new MemberMgmtPortSetting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberMgmtPortSettingWithDefaults() *MemberMgmtPortSetting {
	this := MemberMgmtPortSetting{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *MemberMgmtPortSetting) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberMgmtPortSetting) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *MemberMgmtPortSetting) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *MemberMgmtPortSetting) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetVpnEnabled returns the VpnEnabled field value if set, zero value otherwise.
func (o *MemberMgmtPortSetting) GetVpnEnabled() bool {
	if o == nil || IsNil(o.VpnEnabled) {
		var ret bool
		return ret
	}
	return *o.VpnEnabled
}

// GetVpnEnabledOk returns a tuple with the VpnEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberMgmtPortSetting) GetVpnEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.VpnEnabled) {
		return nil, false
	}
	return o.VpnEnabled, true
}

// HasVpnEnabled returns a boolean if a field has been set.
func (o *MemberMgmtPortSetting) HasVpnEnabled() bool {
	if o != nil && !IsNil(o.VpnEnabled) {
		return true
	}

	return false
}

// SetVpnEnabled gets a reference to the given bool and assigns it to the VpnEnabled field.
func (o *MemberMgmtPortSetting) SetVpnEnabled(v bool) {
	o.VpnEnabled = &v
}

// GetSecurityAccessEnabled returns the SecurityAccessEnabled field value if set, zero value otherwise.
func (o *MemberMgmtPortSetting) GetSecurityAccessEnabled() bool {
	if o == nil || IsNil(o.SecurityAccessEnabled) {
		var ret bool
		return ret
	}
	return *o.SecurityAccessEnabled
}

// GetSecurityAccessEnabledOk returns a tuple with the SecurityAccessEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberMgmtPortSetting) GetSecurityAccessEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SecurityAccessEnabled) {
		return nil, false
	}
	return o.SecurityAccessEnabled, true
}

// HasSecurityAccessEnabled returns a boolean if a field has been set.
func (o *MemberMgmtPortSetting) HasSecurityAccessEnabled() bool {
	if o != nil && !IsNil(o.SecurityAccessEnabled) {
		return true
	}

	return false
}

// SetSecurityAccessEnabled gets a reference to the given bool and assigns it to the SecurityAccessEnabled field.
func (o *MemberMgmtPortSetting) SetSecurityAccessEnabled(v bool) {
	o.SecurityAccessEnabled = &v
}

func (o MemberMgmtPortSetting) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberMgmtPortSetting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.VpnEnabled) {
		toSerialize["vpn_enabled"] = o.VpnEnabled
	}
	if !IsNil(o.SecurityAccessEnabled) {
		toSerialize["security_access_enabled"] = o.SecurityAccessEnabled
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MemberMgmtPortSetting) UnmarshalJSON(data []byte) (err error) {
	varMemberMgmtPortSetting := _MemberMgmtPortSetting{}

	err = json.Unmarshal(data, &varMemberMgmtPortSetting)

	if err != nil {
		return err
	}

	*o = MemberMgmtPortSetting(varMemberMgmtPortSetting)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "enabled")
		delete(additionalProperties, "vpn_enabled")
		delete(additionalProperties, "security_access_enabled")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMemberMgmtPortSetting struct {
	value *MemberMgmtPortSetting
	isSet bool
}

func (v NullableMemberMgmtPortSetting) Get() *MemberMgmtPortSetting {
	return v.value
}

func (v *NullableMemberMgmtPortSetting) Set(val *MemberMgmtPortSetting) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberMgmtPortSetting) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberMgmtPortSetting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberMgmtPortSetting(val *MemberMgmtPortSetting) *NullableMemberMgmtPortSetting {
	return &NullableMemberMgmtPortSetting{value: val, isSet: true}
}

func (v NullableMemberMgmtPortSetting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberMgmtPortSetting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
