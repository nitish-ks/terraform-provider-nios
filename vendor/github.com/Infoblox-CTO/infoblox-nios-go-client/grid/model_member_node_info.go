/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the MemberNodeInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberNodeInfo{}

// MemberNodeInfo struct for MemberNodeInfo
type MemberNodeInfo struct {
	ServiceStatus *MembernodeinfoServiceStatus `json:"service_status,omitempty"`
	// The OID of the physical node.
	PhysicalOid *string `json:"physical_oid,omitempty"`
	// Status about the node of an HA pair.
	HaStatus *string `json:"ha_status,omitempty"`
	// Hardware ID.
	Hwid *string `json:"hwid,omitempty"`
	// Hardware model.
	Hwmodel *string `json:"hwmodel,omitempty"`
	// Hardware type.
	Hwtype *string `json:"hwtype,omitempty"`
	// Host Platform
	HostPlatform *string `json:"host_platform,omitempty"`
	// Hypervisor
	Hypervisor *string `json:"hypervisor,omitempty"`
	// True if node is Paid NIOS.
	PaidNios            *bool                              `json:"paid_nios,omitempty"`
	MgmtNetworkSetting  *MembernodeinfoMgmtNetworkSetting  `json:"mgmt_network_setting,omitempty"`
	LanHaPortSetting    *MembernodeinfoLanHaPortSetting    `json:"lan_ha_port_setting,omitempty"`
	MgmtPhysicalSetting *MembernodeinfoMgmtPhysicalSetting `json:"mgmt_physical_setting,omitempty"`
	Lan2PhysicalSetting *MembernodeinfoLan2PhysicalSetting `json:"lan2_physical_setting,omitempty"`
	// The NAT external IP address for the node.
	NatExternalIp        *string                             `json:"nat_external_ip,omitempty"`
	V6MgmtNetworkSetting *MembernodeinfoV6MgmtNetworkSetting `json:"v6_mgmt_network_setting,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MemberNodeInfo MemberNodeInfo

// NewMemberNodeInfo instantiates a new MemberNodeInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberNodeInfo() *MemberNodeInfo {
	this := MemberNodeInfo{}
	return &this
}

// NewMemberNodeInfoWithDefaults instantiates a new MemberNodeInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberNodeInfoWithDefaults() *MemberNodeInfo {
	this := MemberNodeInfo{}
	return &this
}

// GetServiceStatus returns the ServiceStatus field value if set, zero value otherwise.
func (o *MemberNodeInfo) GetServiceStatus() MembernodeinfoServiceStatus {
	if o == nil || IsNil(o.ServiceStatus) {
		var ret MembernodeinfoServiceStatus
		return ret
	}
	return *o.ServiceStatus
}

// GetServiceStatusOk returns a tuple with the ServiceStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberNodeInfo) GetServiceStatusOk() (*MembernodeinfoServiceStatus, bool) {
	if o == nil || IsNil(o.ServiceStatus) {
		return nil, false
	}
	return o.ServiceStatus, true
}

// HasServiceStatus returns a boolean if a field has been set.
func (o *MemberNodeInfo) HasServiceStatus() bool {
	if o != nil && !IsNil(o.ServiceStatus) {
		return true
	}

	return false
}

// SetServiceStatus gets a reference to the given MembernodeinfoServiceStatus and assigns it to the ServiceStatus field.
func (o *MemberNodeInfo) SetServiceStatus(v MembernodeinfoServiceStatus) {
	o.ServiceStatus = &v
}

// GetPhysicalOid returns the PhysicalOid field value if set, zero value otherwise.
func (o *MemberNodeInfo) GetPhysicalOid() string {
	if o == nil || IsNil(o.PhysicalOid) {
		var ret string
		return ret
	}
	return *o.PhysicalOid
}

// GetPhysicalOidOk returns a tuple with the PhysicalOid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberNodeInfo) GetPhysicalOidOk() (*string, bool) {
	if o == nil || IsNil(o.PhysicalOid) {
		return nil, false
	}
	return o.PhysicalOid, true
}

// HasPhysicalOid returns a boolean if a field has been set.
func (o *MemberNodeInfo) HasPhysicalOid() bool {
	if o != nil && !IsNil(o.PhysicalOid) {
		return true
	}

	return false
}

// SetPhysicalOid gets a reference to the given string and assigns it to the PhysicalOid field.
func (o *MemberNodeInfo) SetPhysicalOid(v string) {
	o.PhysicalOid = &v
}

// GetHaStatus returns the HaStatus field value if set, zero value otherwise.
func (o *MemberNodeInfo) GetHaStatus() string {
	if o == nil || IsNil(o.HaStatus) {
		var ret string
		return ret
	}
	return *o.HaStatus
}

// GetHaStatusOk returns a tuple with the HaStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberNodeInfo) GetHaStatusOk() (*string, bool) {
	if o == nil || IsNil(o.HaStatus) {
		return nil, false
	}
	return o.HaStatus, true
}

// HasHaStatus returns a boolean if a field has been set.
func (o *MemberNodeInfo) HasHaStatus() bool {
	if o != nil && !IsNil(o.HaStatus) {
		return true
	}

	return false
}

// SetHaStatus gets a reference to the given string and assigns it to the HaStatus field.
func (o *MemberNodeInfo) SetHaStatus(v string) {
	o.HaStatus = &v
}

// GetHwid returns the Hwid field value if set, zero value otherwise.
func (o *MemberNodeInfo) GetHwid() string {
	if o == nil || IsNil(o.Hwid) {
		var ret string
		return ret
	}
	return *o.Hwid
}

// GetHwidOk returns a tuple with the Hwid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberNodeInfo) GetHwidOk() (*string, bool) {
	if o == nil || IsNil(o.Hwid) {
		return nil, false
	}
	return o.Hwid, true
}

// HasHwid returns a boolean if a field has been set.
func (o *MemberNodeInfo) HasHwid() bool {
	if o != nil && !IsNil(o.Hwid) {
		return true
	}

	return false
}

// SetHwid gets a reference to the given string and assigns it to the Hwid field.
func (o *MemberNodeInfo) SetHwid(v string) {
	o.Hwid = &v
}

// GetHwmodel returns the Hwmodel field value if set, zero value otherwise.
func (o *MemberNodeInfo) GetHwmodel() string {
	if o == nil || IsNil(o.Hwmodel) {
		var ret string
		return ret
	}
	return *o.Hwmodel
}

// GetHwmodelOk returns a tuple with the Hwmodel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberNodeInfo) GetHwmodelOk() (*string, bool) {
	if o == nil || IsNil(o.Hwmodel) {
		return nil, false
	}
	return o.Hwmodel, true
}

// HasHwmodel returns a boolean if a field has been set.
func (o *MemberNodeInfo) HasHwmodel() bool {
	if o != nil && !IsNil(o.Hwmodel) {
		return true
	}

	return false
}

// SetHwmodel gets a reference to the given string and assigns it to the Hwmodel field.
func (o *MemberNodeInfo) SetHwmodel(v string) {
	o.Hwmodel = &v
}

// GetHwtype returns the Hwtype field value if set, zero value otherwise.
func (o *MemberNodeInfo) GetHwtype() string {
	if o == nil || IsNil(o.Hwtype) {
		var ret string
		return ret
	}
	return *o.Hwtype
}

// GetHwtypeOk returns a tuple with the Hwtype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberNodeInfo) GetHwtypeOk() (*string, bool) {
	if o == nil || IsNil(o.Hwtype) {
		return nil, false
	}
	return o.Hwtype, true
}

// HasHwtype returns a boolean if a field has been set.
func (o *MemberNodeInfo) HasHwtype() bool {
	if o != nil && !IsNil(o.Hwtype) {
		return true
	}

	return false
}

// SetHwtype gets a reference to the given string and assigns it to the Hwtype field.
func (o *MemberNodeInfo) SetHwtype(v string) {
	o.Hwtype = &v
}

// GetHostPlatform returns the HostPlatform field value if set, zero value otherwise.
func (o *MemberNodeInfo) GetHostPlatform() string {
	if o == nil || IsNil(o.HostPlatform) {
		var ret string
		return ret
	}
	return *o.HostPlatform
}

// GetHostPlatformOk returns a tuple with the HostPlatform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberNodeInfo) GetHostPlatformOk() (*string, bool) {
	if o == nil || IsNil(o.HostPlatform) {
		return nil, false
	}
	return o.HostPlatform, true
}

// HasHostPlatform returns a boolean if a field has been set.
func (o *MemberNodeInfo) HasHostPlatform() bool {
	if o != nil && !IsNil(o.HostPlatform) {
		return true
	}

	return false
}

// SetHostPlatform gets a reference to the given string and assigns it to the HostPlatform field.
func (o *MemberNodeInfo) SetHostPlatform(v string) {
	o.HostPlatform = &v
}

// GetHypervisor returns the Hypervisor field value if set, zero value otherwise.
func (o *MemberNodeInfo) GetHypervisor() string {
	if o == nil || IsNil(o.Hypervisor) {
		var ret string
		return ret
	}
	return *o.Hypervisor
}

// GetHypervisorOk returns a tuple with the Hypervisor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberNodeInfo) GetHypervisorOk() (*string, bool) {
	if o == nil || IsNil(o.Hypervisor) {
		return nil, false
	}
	return o.Hypervisor, true
}

// HasHypervisor returns a boolean if a field has been set.
func (o *MemberNodeInfo) HasHypervisor() bool {
	if o != nil && !IsNil(o.Hypervisor) {
		return true
	}

	return false
}

// SetHypervisor gets a reference to the given string and assigns it to the Hypervisor field.
func (o *MemberNodeInfo) SetHypervisor(v string) {
	o.Hypervisor = &v
}

// GetPaidNios returns the PaidNios field value if set, zero value otherwise.
func (o *MemberNodeInfo) GetPaidNios() bool {
	if o == nil || IsNil(o.PaidNios) {
		var ret bool
		return ret
	}
	return *o.PaidNios
}

// GetPaidNiosOk returns a tuple with the PaidNios field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberNodeInfo) GetPaidNiosOk() (*bool, bool) {
	if o == nil || IsNil(o.PaidNios) {
		return nil, false
	}
	return o.PaidNios, true
}

// HasPaidNios returns a boolean if a field has been set.
func (o *MemberNodeInfo) HasPaidNios() bool {
	if o != nil && !IsNil(o.PaidNios) {
		return true
	}

	return false
}

// SetPaidNios gets a reference to the given bool and assigns it to the PaidNios field.
func (o *MemberNodeInfo) SetPaidNios(v bool) {
	o.PaidNios = &v
}

// GetMgmtNetworkSetting returns the MgmtNetworkSetting field value if set, zero value otherwise.
func (o *MemberNodeInfo) GetMgmtNetworkSetting() MembernodeinfoMgmtNetworkSetting {
	if o == nil || IsNil(o.MgmtNetworkSetting) {
		var ret MembernodeinfoMgmtNetworkSetting
		return ret
	}
	return *o.MgmtNetworkSetting
}

// GetMgmtNetworkSettingOk returns a tuple with the MgmtNetworkSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberNodeInfo) GetMgmtNetworkSettingOk() (*MembernodeinfoMgmtNetworkSetting, bool) {
	if o == nil || IsNil(o.MgmtNetworkSetting) {
		return nil, false
	}
	return o.MgmtNetworkSetting, true
}

// HasMgmtNetworkSetting returns a boolean if a field has been set.
func (o *MemberNodeInfo) HasMgmtNetworkSetting() bool {
	if o != nil && !IsNil(o.MgmtNetworkSetting) {
		return true
	}

	return false
}

// SetMgmtNetworkSetting gets a reference to the given MembernodeinfoMgmtNetworkSetting and assigns it to the MgmtNetworkSetting field.
func (o *MemberNodeInfo) SetMgmtNetworkSetting(v MembernodeinfoMgmtNetworkSetting) {
	o.MgmtNetworkSetting = &v
}

// GetLanHaPortSetting returns the LanHaPortSetting field value if set, zero value otherwise.
func (o *MemberNodeInfo) GetLanHaPortSetting() MembernodeinfoLanHaPortSetting {
	if o == nil || IsNil(o.LanHaPortSetting) {
		var ret MembernodeinfoLanHaPortSetting
		return ret
	}
	return *o.LanHaPortSetting
}

// GetLanHaPortSettingOk returns a tuple with the LanHaPortSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberNodeInfo) GetLanHaPortSettingOk() (*MembernodeinfoLanHaPortSetting, bool) {
	if o == nil || IsNil(o.LanHaPortSetting) {
		return nil, false
	}
	return o.LanHaPortSetting, true
}

// HasLanHaPortSetting returns a boolean if a field has been set.
func (o *MemberNodeInfo) HasLanHaPortSetting() bool {
	if o != nil && !IsNil(o.LanHaPortSetting) {
		return true
	}

	return false
}

// SetLanHaPortSetting gets a reference to the given MembernodeinfoLanHaPortSetting and assigns it to the LanHaPortSetting field.
func (o *MemberNodeInfo) SetLanHaPortSetting(v MembernodeinfoLanHaPortSetting) {
	o.LanHaPortSetting = &v
}

// GetMgmtPhysicalSetting returns the MgmtPhysicalSetting field value if set, zero value otherwise.
func (o *MemberNodeInfo) GetMgmtPhysicalSetting() MembernodeinfoMgmtPhysicalSetting {
	if o == nil || IsNil(o.MgmtPhysicalSetting) {
		var ret MembernodeinfoMgmtPhysicalSetting
		return ret
	}
	return *o.MgmtPhysicalSetting
}

// GetMgmtPhysicalSettingOk returns a tuple with the MgmtPhysicalSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberNodeInfo) GetMgmtPhysicalSettingOk() (*MembernodeinfoMgmtPhysicalSetting, bool) {
	if o == nil || IsNil(o.MgmtPhysicalSetting) {
		return nil, false
	}
	return o.MgmtPhysicalSetting, true
}

// HasMgmtPhysicalSetting returns a boolean if a field has been set.
func (o *MemberNodeInfo) HasMgmtPhysicalSetting() bool {
	if o != nil && !IsNil(o.MgmtPhysicalSetting) {
		return true
	}

	return false
}

// SetMgmtPhysicalSetting gets a reference to the given MembernodeinfoMgmtPhysicalSetting and assigns it to the MgmtPhysicalSetting field.
func (o *MemberNodeInfo) SetMgmtPhysicalSetting(v MembernodeinfoMgmtPhysicalSetting) {
	o.MgmtPhysicalSetting = &v
}

// GetLan2PhysicalSetting returns the Lan2PhysicalSetting field value if set, zero value otherwise.
func (o *MemberNodeInfo) GetLan2PhysicalSetting() MembernodeinfoLan2PhysicalSetting {
	if o == nil || IsNil(o.Lan2PhysicalSetting) {
		var ret MembernodeinfoLan2PhysicalSetting
		return ret
	}
	return *o.Lan2PhysicalSetting
}

// GetLan2PhysicalSettingOk returns a tuple with the Lan2PhysicalSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberNodeInfo) GetLan2PhysicalSettingOk() (*MembernodeinfoLan2PhysicalSetting, bool) {
	if o == nil || IsNil(o.Lan2PhysicalSetting) {
		return nil, false
	}
	return o.Lan2PhysicalSetting, true
}

// HasLan2PhysicalSetting returns a boolean if a field has been set.
func (o *MemberNodeInfo) HasLan2PhysicalSetting() bool {
	if o != nil && !IsNil(o.Lan2PhysicalSetting) {
		return true
	}

	return false
}

// SetLan2PhysicalSetting gets a reference to the given MembernodeinfoLan2PhysicalSetting and assigns it to the Lan2PhysicalSetting field.
func (o *MemberNodeInfo) SetLan2PhysicalSetting(v MembernodeinfoLan2PhysicalSetting) {
	o.Lan2PhysicalSetting = &v
}

// GetNatExternalIp returns the NatExternalIp field value if set, zero value otherwise.
func (o *MemberNodeInfo) GetNatExternalIp() string {
	if o == nil || IsNil(o.NatExternalIp) {
		var ret string
		return ret
	}
	return *o.NatExternalIp
}

// GetNatExternalIpOk returns a tuple with the NatExternalIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberNodeInfo) GetNatExternalIpOk() (*string, bool) {
	if o == nil || IsNil(o.NatExternalIp) {
		return nil, false
	}
	return o.NatExternalIp, true
}

// HasNatExternalIp returns a boolean if a field has been set.
func (o *MemberNodeInfo) HasNatExternalIp() bool {
	if o != nil && !IsNil(o.NatExternalIp) {
		return true
	}

	return false
}

// SetNatExternalIp gets a reference to the given string and assigns it to the NatExternalIp field.
func (o *MemberNodeInfo) SetNatExternalIp(v string) {
	o.NatExternalIp = &v
}

// GetV6MgmtNetworkSetting returns the V6MgmtNetworkSetting field value if set, zero value otherwise.
func (o *MemberNodeInfo) GetV6MgmtNetworkSetting() MembernodeinfoV6MgmtNetworkSetting {
	if o == nil || IsNil(o.V6MgmtNetworkSetting) {
		var ret MembernodeinfoV6MgmtNetworkSetting
		return ret
	}
	return *o.V6MgmtNetworkSetting
}

// GetV6MgmtNetworkSettingOk returns a tuple with the V6MgmtNetworkSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberNodeInfo) GetV6MgmtNetworkSettingOk() (*MembernodeinfoV6MgmtNetworkSetting, bool) {
	if o == nil || IsNil(o.V6MgmtNetworkSetting) {
		return nil, false
	}
	return o.V6MgmtNetworkSetting, true
}

// HasV6MgmtNetworkSetting returns a boolean if a field has been set.
func (o *MemberNodeInfo) HasV6MgmtNetworkSetting() bool {
	if o != nil && !IsNil(o.V6MgmtNetworkSetting) {
		return true
	}

	return false
}

// SetV6MgmtNetworkSetting gets a reference to the given MembernodeinfoV6MgmtNetworkSetting and assigns it to the V6MgmtNetworkSetting field.
func (o *MemberNodeInfo) SetV6MgmtNetworkSetting(v MembernodeinfoV6MgmtNetworkSetting) {
	o.V6MgmtNetworkSetting = &v
}

func (o MemberNodeInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberNodeInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ServiceStatus) {
		toSerialize["service_status"] = o.ServiceStatus
	}
	if !IsNil(o.PhysicalOid) {
		toSerialize["physical_oid"] = o.PhysicalOid
	}
	if !IsNil(o.HaStatus) {
		toSerialize["ha_status"] = o.HaStatus
	}
	if !IsNil(o.Hwid) {
		toSerialize["hwid"] = o.Hwid
	}
	if !IsNil(o.Hwmodel) {
		toSerialize["hwmodel"] = o.Hwmodel
	}
	if !IsNil(o.Hwtype) {
		toSerialize["hwtype"] = o.Hwtype
	}
	if !IsNil(o.HostPlatform) {
		toSerialize["host_platform"] = o.HostPlatform
	}
	if !IsNil(o.Hypervisor) {
		toSerialize["hypervisor"] = o.Hypervisor
	}
	if !IsNil(o.PaidNios) {
		toSerialize["paid_nios"] = o.PaidNios
	}
	if !IsNil(o.MgmtNetworkSetting) {
		toSerialize["mgmt_network_setting"] = o.MgmtNetworkSetting
	}
	if !IsNil(o.LanHaPortSetting) {
		toSerialize["lan_ha_port_setting"] = o.LanHaPortSetting
	}
	if !IsNil(o.MgmtPhysicalSetting) {
		toSerialize["mgmt_physical_setting"] = o.MgmtPhysicalSetting
	}
	if !IsNil(o.Lan2PhysicalSetting) {
		toSerialize["lan2_physical_setting"] = o.Lan2PhysicalSetting
	}
	if !IsNil(o.NatExternalIp) {
		toSerialize["nat_external_ip"] = o.NatExternalIp
	}
	if !IsNil(o.V6MgmtNetworkSetting) {
		toSerialize["v6_mgmt_network_setting"] = o.V6MgmtNetworkSetting
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MemberNodeInfo) UnmarshalJSON(data []byte) (err error) {
	varMemberNodeInfo := _MemberNodeInfo{}

	err = json.Unmarshal(data, &varMemberNodeInfo)

	if err != nil {
		return err
	}

	*o = MemberNodeInfo(varMemberNodeInfo)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "service_status")
		delete(additionalProperties, "physical_oid")
		delete(additionalProperties, "ha_status")
		delete(additionalProperties, "hwid")
		delete(additionalProperties, "hwmodel")
		delete(additionalProperties, "hwtype")
		delete(additionalProperties, "host_platform")
		delete(additionalProperties, "hypervisor")
		delete(additionalProperties, "paid_nios")
		delete(additionalProperties, "mgmt_network_setting")
		delete(additionalProperties, "lan_ha_port_setting")
		delete(additionalProperties, "mgmt_physical_setting")
		delete(additionalProperties, "lan2_physical_setting")
		delete(additionalProperties, "nat_external_ip")
		delete(additionalProperties, "v6_mgmt_network_setting")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMemberNodeInfo struct {
	value *MemberNodeInfo
	isSet bool
}

func (v NullableMemberNodeInfo) Get() *MemberNodeInfo {
	return v.value
}

func (v *NullableMemberNodeInfo) Set(val *MemberNodeInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberNodeInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberNodeInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberNodeInfo(val *MemberNodeInfo) *NullableMemberNodeInfo {
	return &NullableMemberNodeInfo{value: val, isSet: true}
}

func (v NullableMemberNodeInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberNodeInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
