/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the MemberNtpSetting type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberNtpSetting{}

// MemberNtpSetting struct for MemberNtpSetting
type MemberNtpSetting struct {
	// Determines whether the NTP service is enabled on the member.
	EnableNtp  *bool                       `json:"enable_ntp,omitempty"`
	NtpServers *MemberntpsettingNtpServers `json:"ntp_servers,omitempty"`
	NtpKeys    *MemberntpsettingNtpKeys    `json:"ntp_keys,omitempty"`
	NtpAcl     *MemberntpsettingNtpAcl     `json:"ntp_acl,omitempty"`
	// Determines whether the Kiss-o'-Death packets are enabled or disabled.
	NtpKod *bool `json:"ntp_kod,omitempty"`
	// Determines whether the use of the external NTP servers is enabled for the member.
	EnableExternalNtpServers *bool `json:"enable_external_ntp_servers,omitempty"`
	// Determines whether the Grid Master is excluded as an NTP server.
	ExcludeGridMasterNtpServer *bool `json:"exclude_grid_master_ntp_server,omitempty"`
	// Override Grid level NTP stratum.
	UseLocalNtpStratum *bool `json:"use_local_ntp_stratum,omitempty"`
	// Vnode level local NTP stratum.
	LocalNtpStratum *int64 `json:"local_ntp_stratum,omitempty"`
	// Vnode level default stratum.
	UseDefaultStratum *bool `json:"use_default_stratum,omitempty"`
	// Use flag for: ntp_servers
	UseNtpServers *bool `json:"use_ntp_servers,omitempty"`
	// Use flag for: ntp_keys
	UseNtpKeys *bool `json:"use_ntp_keys,omitempty"`
	// Use flag for: ntp_acl
	UseNtpAcl *bool `json:"use_ntp_acl,omitempty"`
	// Use flag for: ntp_kod
	UseNtpKod            *bool `json:"use_ntp_kod,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MemberNtpSetting MemberNtpSetting

// NewMemberNtpSetting instantiates a new MemberNtpSetting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberNtpSetting() *MemberNtpSetting {
	this := MemberNtpSetting{}
	return &this
}

// NewMemberNtpSettingWithDefaults instantiates a new MemberNtpSetting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberNtpSettingWithDefaults() *MemberNtpSetting {
	this := MemberNtpSetting{}
	return &this
}

// GetEnableNtp returns the EnableNtp field value if set, zero value otherwise.
func (o *MemberNtpSetting) GetEnableNtp() bool {
	if o == nil || IsNil(o.EnableNtp) {
		var ret bool
		return ret
	}
	return *o.EnableNtp
}

// GetEnableNtpOk returns a tuple with the EnableNtp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberNtpSetting) GetEnableNtpOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableNtp) {
		return nil, false
	}
	return o.EnableNtp, true
}

// HasEnableNtp returns a boolean if a field has been set.
func (o *MemberNtpSetting) HasEnableNtp() bool {
	if o != nil && !IsNil(o.EnableNtp) {
		return true
	}

	return false
}

// SetEnableNtp gets a reference to the given bool and assigns it to the EnableNtp field.
func (o *MemberNtpSetting) SetEnableNtp(v bool) {
	o.EnableNtp = &v
}

// GetNtpServers returns the NtpServers field value if set, zero value otherwise.
func (o *MemberNtpSetting) GetNtpServers() MemberntpsettingNtpServers {
	if o == nil || IsNil(o.NtpServers) {
		var ret MemberntpsettingNtpServers
		return ret
	}
	return *o.NtpServers
}

// GetNtpServersOk returns a tuple with the NtpServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberNtpSetting) GetNtpServersOk() (*MemberntpsettingNtpServers, bool) {
	if o == nil || IsNil(o.NtpServers) {
		return nil, false
	}
	return o.NtpServers, true
}

// HasNtpServers returns a boolean if a field has been set.
func (o *MemberNtpSetting) HasNtpServers() bool {
	if o != nil && !IsNil(o.NtpServers) {
		return true
	}

	return false
}

// SetNtpServers gets a reference to the given MemberntpsettingNtpServers and assigns it to the NtpServers field.
func (o *MemberNtpSetting) SetNtpServers(v MemberntpsettingNtpServers) {
	o.NtpServers = &v
}

// GetNtpKeys returns the NtpKeys field value if set, zero value otherwise.
func (o *MemberNtpSetting) GetNtpKeys() MemberntpsettingNtpKeys {
	if o == nil || IsNil(o.NtpKeys) {
		var ret MemberntpsettingNtpKeys
		return ret
	}
	return *o.NtpKeys
}

// GetNtpKeysOk returns a tuple with the NtpKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberNtpSetting) GetNtpKeysOk() (*MemberntpsettingNtpKeys, bool) {
	if o == nil || IsNil(o.NtpKeys) {
		return nil, false
	}
	return o.NtpKeys, true
}

// HasNtpKeys returns a boolean if a field has been set.
func (o *MemberNtpSetting) HasNtpKeys() bool {
	if o != nil && !IsNil(o.NtpKeys) {
		return true
	}

	return false
}

// SetNtpKeys gets a reference to the given MemberntpsettingNtpKeys and assigns it to the NtpKeys field.
func (o *MemberNtpSetting) SetNtpKeys(v MemberntpsettingNtpKeys) {
	o.NtpKeys = &v
}

// GetNtpAcl returns the NtpAcl field value if set, zero value otherwise.
func (o *MemberNtpSetting) GetNtpAcl() MemberntpsettingNtpAcl {
	if o == nil || IsNil(o.NtpAcl) {
		var ret MemberntpsettingNtpAcl
		return ret
	}
	return *o.NtpAcl
}

// GetNtpAclOk returns a tuple with the NtpAcl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberNtpSetting) GetNtpAclOk() (*MemberntpsettingNtpAcl, bool) {
	if o == nil || IsNil(o.NtpAcl) {
		return nil, false
	}
	return o.NtpAcl, true
}

// HasNtpAcl returns a boolean if a field has been set.
func (o *MemberNtpSetting) HasNtpAcl() bool {
	if o != nil && !IsNil(o.NtpAcl) {
		return true
	}

	return false
}

// SetNtpAcl gets a reference to the given MemberntpsettingNtpAcl and assigns it to the NtpAcl field.
func (o *MemberNtpSetting) SetNtpAcl(v MemberntpsettingNtpAcl) {
	o.NtpAcl = &v
}

// GetNtpKod returns the NtpKod field value if set, zero value otherwise.
func (o *MemberNtpSetting) GetNtpKod() bool {
	if o == nil || IsNil(o.NtpKod) {
		var ret bool
		return ret
	}
	return *o.NtpKod
}

// GetNtpKodOk returns a tuple with the NtpKod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberNtpSetting) GetNtpKodOk() (*bool, bool) {
	if o == nil || IsNil(o.NtpKod) {
		return nil, false
	}
	return o.NtpKod, true
}

// HasNtpKod returns a boolean if a field has been set.
func (o *MemberNtpSetting) HasNtpKod() bool {
	if o != nil && !IsNil(o.NtpKod) {
		return true
	}

	return false
}

// SetNtpKod gets a reference to the given bool and assigns it to the NtpKod field.
func (o *MemberNtpSetting) SetNtpKod(v bool) {
	o.NtpKod = &v
}

// GetEnableExternalNtpServers returns the EnableExternalNtpServers field value if set, zero value otherwise.
func (o *MemberNtpSetting) GetEnableExternalNtpServers() bool {
	if o == nil || IsNil(o.EnableExternalNtpServers) {
		var ret bool
		return ret
	}
	return *o.EnableExternalNtpServers
}

// GetEnableExternalNtpServersOk returns a tuple with the EnableExternalNtpServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberNtpSetting) GetEnableExternalNtpServersOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableExternalNtpServers) {
		return nil, false
	}
	return o.EnableExternalNtpServers, true
}

// HasEnableExternalNtpServers returns a boolean if a field has been set.
func (o *MemberNtpSetting) HasEnableExternalNtpServers() bool {
	if o != nil && !IsNil(o.EnableExternalNtpServers) {
		return true
	}

	return false
}

// SetEnableExternalNtpServers gets a reference to the given bool and assigns it to the EnableExternalNtpServers field.
func (o *MemberNtpSetting) SetEnableExternalNtpServers(v bool) {
	o.EnableExternalNtpServers = &v
}

// GetExcludeGridMasterNtpServer returns the ExcludeGridMasterNtpServer field value if set, zero value otherwise.
func (o *MemberNtpSetting) GetExcludeGridMasterNtpServer() bool {
	if o == nil || IsNil(o.ExcludeGridMasterNtpServer) {
		var ret bool
		return ret
	}
	return *o.ExcludeGridMasterNtpServer
}

// GetExcludeGridMasterNtpServerOk returns a tuple with the ExcludeGridMasterNtpServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberNtpSetting) GetExcludeGridMasterNtpServerOk() (*bool, bool) {
	if o == nil || IsNil(o.ExcludeGridMasterNtpServer) {
		return nil, false
	}
	return o.ExcludeGridMasterNtpServer, true
}

// HasExcludeGridMasterNtpServer returns a boolean if a field has been set.
func (o *MemberNtpSetting) HasExcludeGridMasterNtpServer() bool {
	if o != nil && !IsNil(o.ExcludeGridMasterNtpServer) {
		return true
	}

	return false
}

// SetExcludeGridMasterNtpServer gets a reference to the given bool and assigns it to the ExcludeGridMasterNtpServer field.
func (o *MemberNtpSetting) SetExcludeGridMasterNtpServer(v bool) {
	o.ExcludeGridMasterNtpServer = &v
}

// GetUseLocalNtpStratum returns the UseLocalNtpStratum field value if set, zero value otherwise.
func (o *MemberNtpSetting) GetUseLocalNtpStratum() bool {
	if o == nil || IsNil(o.UseLocalNtpStratum) {
		var ret bool
		return ret
	}
	return *o.UseLocalNtpStratum
}

// GetUseLocalNtpStratumOk returns a tuple with the UseLocalNtpStratum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberNtpSetting) GetUseLocalNtpStratumOk() (*bool, bool) {
	if o == nil || IsNil(o.UseLocalNtpStratum) {
		return nil, false
	}
	return o.UseLocalNtpStratum, true
}

// HasUseLocalNtpStratum returns a boolean if a field has been set.
func (o *MemberNtpSetting) HasUseLocalNtpStratum() bool {
	if o != nil && !IsNil(o.UseLocalNtpStratum) {
		return true
	}

	return false
}

// SetUseLocalNtpStratum gets a reference to the given bool and assigns it to the UseLocalNtpStratum field.
func (o *MemberNtpSetting) SetUseLocalNtpStratum(v bool) {
	o.UseLocalNtpStratum = &v
}

// GetLocalNtpStratum returns the LocalNtpStratum field value if set, zero value otherwise.
func (o *MemberNtpSetting) GetLocalNtpStratum() int64 {
	if o == nil || IsNil(o.LocalNtpStratum) {
		var ret int64
		return ret
	}
	return *o.LocalNtpStratum
}

// GetLocalNtpStratumOk returns a tuple with the LocalNtpStratum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberNtpSetting) GetLocalNtpStratumOk() (*int64, bool) {
	if o == nil || IsNil(o.LocalNtpStratum) {
		return nil, false
	}
	return o.LocalNtpStratum, true
}

// HasLocalNtpStratum returns a boolean if a field has been set.
func (o *MemberNtpSetting) HasLocalNtpStratum() bool {
	if o != nil && !IsNil(o.LocalNtpStratum) {
		return true
	}

	return false
}

// SetLocalNtpStratum gets a reference to the given int64 and assigns it to the LocalNtpStratum field.
func (o *MemberNtpSetting) SetLocalNtpStratum(v int64) {
	o.LocalNtpStratum = &v
}

// GetUseDefaultStratum returns the UseDefaultStratum field value if set, zero value otherwise.
func (o *MemberNtpSetting) GetUseDefaultStratum() bool {
	if o == nil || IsNil(o.UseDefaultStratum) {
		var ret bool
		return ret
	}
	return *o.UseDefaultStratum
}

// GetUseDefaultStratumOk returns a tuple with the UseDefaultStratum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberNtpSetting) GetUseDefaultStratumOk() (*bool, bool) {
	if o == nil || IsNil(o.UseDefaultStratum) {
		return nil, false
	}
	return o.UseDefaultStratum, true
}

// HasUseDefaultStratum returns a boolean if a field has been set.
func (o *MemberNtpSetting) HasUseDefaultStratum() bool {
	if o != nil && !IsNil(o.UseDefaultStratum) {
		return true
	}

	return false
}

// SetUseDefaultStratum gets a reference to the given bool and assigns it to the UseDefaultStratum field.
func (o *MemberNtpSetting) SetUseDefaultStratum(v bool) {
	o.UseDefaultStratum = &v
}

// GetUseNtpServers returns the UseNtpServers field value if set, zero value otherwise.
func (o *MemberNtpSetting) GetUseNtpServers() bool {
	if o == nil || IsNil(o.UseNtpServers) {
		var ret bool
		return ret
	}
	return *o.UseNtpServers
}

// GetUseNtpServersOk returns a tuple with the UseNtpServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberNtpSetting) GetUseNtpServersOk() (*bool, bool) {
	if o == nil || IsNil(o.UseNtpServers) {
		return nil, false
	}
	return o.UseNtpServers, true
}

// HasUseNtpServers returns a boolean if a field has been set.
func (o *MemberNtpSetting) HasUseNtpServers() bool {
	if o != nil && !IsNil(o.UseNtpServers) {
		return true
	}

	return false
}

// SetUseNtpServers gets a reference to the given bool and assigns it to the UseNtpServers field.
func (o *MemberNtpSetting) SetUseNtpServers(v bool) {
	o.UseNtpServers = &v
}

// GetUseNtpKeys returns the UseNtpKeys field value if set, zero value otherwise.
func (o *MemberNtpSetting) GetUseNtpKeys() bool {
	if o == nil || IsNil(o.UseNtpKeys) {
		var ret bool
		return ret
	}
	return *o.UseNtpKeys
}

// GetUseNtpKeysOk returns a tuple with the UseNtpKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberNtpSetting) GetUseNtpKeysOk() (*bool, bool) {
	if o == nil || IsNil(o.UseNtpKeys) {
		return nil, false
	}
	return o.UseNtpKeys, true
}

// HasUseNtpKeys returns a boolean if a field has been set.
func (o *MemberNtpSetting) HasUseNtpKeys() bool {
	if o != nil && !IsNil(o.UseNtpKeys) {
		return true
	}

	return false
}

// SetUseNtpKeys gets a reference to the given bool and assigns it to the UseNtpKeys field.
func (o *MemberNtpSetting) SetUseNtpKeys(v bool) {
	o.UseNtpKeys = &v
}

// GetUseNtpAcl returns the UseNtpAcl field value if set, zero value otherwise.
func (o *MemberNtpSetting) GetUseNtpAcl() bool {
	if o == nil || IsNil(o.UseNtpAcl) {
		var ret bool
		return ret
	}
	return *o.UseNtpAcl
}

// GetUseNtpAclOk returns a tuple with the UseNtpAcl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberNtpSetting) GetUseNtpAclOk() (*bool, bool) {
	if o == nil || IsNil(o.UseNtpAcl) {
		return nil, false
	}
	return o.UseNtpAcl, true
}

// HasUseNtpAcl returns a boolean if a field has been set.
func (o *MemberNtpSetting) HasUseNtpAcl() bool {
	if o != nil && !IsNil(o.UseNtpAcl) {
		return true
	}

	return false
}

// SetUseNtpAcl gets a reference to the given bool and assigns it to the UseNtpAcl field.
func (o *MemberNtpSetting) SetUseNtpAcl(v bool) {
	o.UseNtpAcl = &v
}

// GetUseNtpKod returns the UseNtpKod field value if set, zero value otherwise.
func (o *MemberNtpSetting) GetUseNtpKod() bool {
	if o == nil || IsNil(o.UseNtpKod) {
		var ret bool
		return ret
	}
	return *o.UseNtpKod
}

// GetUseNtpKodOk returns a tuple with the UseNtpKod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberNtpSetting) GetUseNtpKodOk() (*bool, bool) {
	if o == nil || IsNil(o.UseNtpKod) {
		return nil, false
	}
	return o.UseNtpKod, true
}

// HasUseNtpKod returns a boolean if a field has been set.
func (o *MemberNtpSetting) HasUseNtpKod() bool {
	if o != nil && !IsNil(o.UseNtpKod) {
		return true
	}

	return false
}

// SetUseNtpKod gets a reference to the given bool and assigns it to the UseNtpKod field.
func (o *MemberNtpSetting) SetUseNtpKod(v bool) {
	o.UseNtpKod = &v
}

func (o MemberNtpSetting) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberNtpSetting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnableNtp) {
		toSerialize["enable_ntp"] = o.EnableNtp
	}
	if !IsNil(o.NtpServers) {
		toSerialize["ntp_servers"] = o.NtpServers
	}
	if !IsNil(o.NtpKeys) {
		toSerialize["ntp_keys"] = o.NtpKeys
	}
	if !IsNil(o.NtpAcl) {
		toSerialize["ntp_acl"] = o.NtpAcl
	}
	if !IsNil(o.NtpKod) {
		toSerialize["ntp_kod"] = o.NtpKod
	}
	if !IsNil(o.EnableExternalNtpServers) {
		toSerialize["enable_external_ntp_servers"] = o.EnableExternalNtpServers
	}
	if !IsNil(o.ExcludeGridMasterNtpServer) {
		toSerialize["exclude_grid_master_ntp_server"] = o.ExcludeGridMasterNtpServer
	}
	if !IsNil(o.UseLocalNtpStratum) {
		toSerialize["use_local_ntp_stratum"] = o.UseLocalNtpStratum
	}
	if !IsNil(o.LocalNtpStratum) {
		toSerialize["local_ntp_stratum"] = o.LocalNtpStratum
	}
	if !IsNil(o.UseDefaultStratum) {
		toSerialize["use_default_stratum"] = o.UseDefaultStratum
	}
	if !IsNil(o.UseNtpServers) {
		toSerialize["use_ntp_servers"] = o.UseNtpServers
	}
	if !IsNil(o.UseNtpKeys) {
		toSerialize["use_ntp_keys"] = o.UseNtpKeys
	}
	if !IsNil(o.UseNtpAcl) {
		toSerialize["use_ntp_acl"] = o.UseNtpAcl
	}
	if !IsNil(o.UseNtpKod) {
		toSerialize["use_ntp_kod"] = o.UseNtpKod
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MemberNtpSetting) UnmarshalJSON(data []byte) (err error) {
	varMemberNtpSetting := _MemberNtpSetting{}

	err = json.Unmarshal(data, &varMemberNtpSetting)

	if err != nil {
		return err
	}

	*o = MemberNtpSetting(varMemberNtpSetting)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "enable_ntp")
		delete(additionalProperties, "ntp_servers")
		delete(additionalProperties, "ntp_keys")
		delete(additionalProperties, "ntp_acl")
		delete(additionalProperties, "ntp_kod")
		delete(additionalProperties, "enable_external_ntp_servers")
		delete(additionalProperties, "exclude_grid_master_ntp_server")
		delete(additionalProperties, "use_local_ntp_stratum")
		delete(additionalProperties, "local_ntp_stratum")
		delete(additionalProperties, "use_default_stratum")
		delete(additionalProperties, "use_ntp_servers")
		delete(additionalProperties, "use_ntp_keys")
		delete(additionalProperties, "use_ntp_acl")
		delete(additionalProperties, "use_ntp_kod")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMemberNtpSetting struct {
	value *MemberNtpSetting
	isSet bool
}

func (v NullableMemberNtpSetting) Get() *MemberNtpSetting {
	return v.value
}

func (v *NullableMemberNtpSetting) Set(val *MemberNtpSetting) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberNtpSetting) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberNtpSetting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberNtpSetting(val *MemberNtpSetting) *NullableMemberNtpSetting {
	return &NullableMemberNtpSetting{value: val, isSet: true}
}

func (v NullableMemberNtpSetting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberNtpSetting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
