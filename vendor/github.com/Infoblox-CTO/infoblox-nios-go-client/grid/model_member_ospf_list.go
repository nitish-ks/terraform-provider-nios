/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the MemberOspfList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberOspfList{}

// MemberOspfList struct for MemberOspfList
type MemberOspfList struct {
	// The area ID value of the OSPF settings.
	AreaId *string `json:"area_id,omitempty"`
	// The OSPF area type.
	AreaType *string `json:"area_type,omitempty"`
	// The authentication password to use for OSPF. The authentication key is valid only when authentication type is \"SIMPLE\" or \"MESSAGE_DIGEST\".
	AuthenticationKey *string `json:"authentication_key,omitempty"`
	// The authentication type used for the OSPF advertisement.
	AuthenticationType *string `json:"authentication_type,omitempty"`
	// Determines if auto calculate cost is enabled or not.
	AutoCalcCostEnabled *bool `json:"auto_calc_cost_enabled,omitempty"`
	// A descriptive comment of the OSPF configuration.
	Comment *string `json:"comment,omitempty"`
	// The cost metric associated with the OSPF advertisement.
	Cost *int64 `json:"cost,omitempty"`
	// The dead interval value of OSPF (in seconds). The dead interval describes the time to wait before declaring the device is unavailable and down.
	DeadInterval *int64 `json:"dead_interval,omitempty"`
	// The hello interval value of OSPF. The hello interval specifies how often to send OSPF hello advertisement, in seconds.
	HelloInterval *int64 `json:"hello_interval,omitempty"`
	// The interface that sends out OSPF advertisement information.
	Interface *string `json:"interface,omitempty"`
	// The OSPF protocol version. Specify \"true\" if the IPv4 version of OSPF is used, or \"false\" if the IPv6 version of OSPF is used.
	IsIpv4 *bool `json:"is_ipv4,omitempty"`
	// The hash key identifier to use for \"MESSAGE_DIGEST\" authentication. The hash key identifier is valid only when authentication type is \"MESSAGE_DIGEST\".
	KeyId *int64 `json:"key_id,omitempty"`
	// The retransmit interval time of OSPF (in seconds). The retransmit interval describes the time to wait before retransmitting OSPF advertisement.
	RetransmitInterval *int64 `json:"retransmit_interval,omitempty"`
	// The transmit delay value of OSPF (in seconds). The transmit delay describes the time to wait before sending an advertisement.
	TransmitDelay *int64 `json:"transmit_delay,omitempty"`
	// The VLAN used as the advertising interface for sending OSPF announcements.
	AdvertiseInterfaceVlan *string `json:"advertise_interface_vlan,omitempty"`
	// Determines BFD template name.
	BfdTemplate *string `json:"bfd_template,omitempty"`
	// Determines if the BFD is enabled or not.
	EnableBfd *bool `json:"enable_bfd,omitempty"`
	// Determines if BFD internal DNS monitor is enabled or not.
	EnableBfdDnscheck    *bool `json:"enable_bfd_dnscheck,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MemberOspfList MemberOspfList

// NewMemberOspfList instantiates a new MemberOspfList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberOspfList() *MemberOspfList {
	this := MemberOspfList{}
	return &this
}

// NewMemberOspfListWithDefaults instantiates a new MemberOspfList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberOspfListWithDefaults() *MemberOspfList {
	this := MemberOspfList{}
	return &this
}

// GetAreaId returns the AreaId field value if set, zero value otherwise.
func (o *MemberOspfList) GetAreaId() string {
	if o == nil || IsNil(o.AreaId) {
		var ret string
		return ret
	}
	return *o.AreaId
}

// GetAreaIdOk returns a tuple with the AreaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberOspfList) GetAreaIdOk() (*string, bool) {
	if o == nil || IsNil(o.AreaId) {
		return nil, false
	}
	return o.AreaId, true
}

// HasAreaId returns a boolean if a field has been set.
func (o *MemberOspfList) HasAreaId() bool {
	if o != nil && !IsNil(o.AreaId) {
		return true
	}

	return false
}

// SetAreaId gets a reference to the given string and assigns it to the AreaId field.
func (o *MemberOspfList) SetAreaId(v string) {
	o.AreaId = &v
}

// GetAreaType returns the AreaType field value if set, zero value otherwise.
func (o *MemberOspfList) GetAreaType() string {
	if o == nil || IsNil(o.AreaType) {
		var ret string
		return ret
	}
	return *o.AreaType
}

// GetAreaTypeOk returns a tuple with the AreaType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberOspfList) GetAreaTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AreaType) {
		return nil, false
	}
	return o.AreaType, true
}

// HasAreaType returns a boolean if a field has been set.
func (o *MemberOspfList) HasAreaType() bool {
	if o != nil && !IsNil(o.AreaType) {
		return true
	}

	return false
}

// SetAreaType gets a reference to the given string and assigns it to the AreaType field.
func (o *MemberOspfList) SetAreaType(v string) {
	o.AreaType = &v
}

// GetAuthenticationKey returns the AuthenticationKey field value if set, zero value otherwise.
func (o *MemberOspfList) GetAuthenticationKey() string {
	if o == nil || IsNil(o.AuthenticationKey) {
		var ret string
		return ret
	}
	return *o.AuthenticationKey
}

// GetAuthenticationKeyOk returns a tuple with the AuthenticationKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberOspfList) GetAuthenticationKeyOk() (*string, bool) {
	if o == nil || IsNil(o.AuthenticationKey) {
		return nil, false
	}
	return o.AuthenticationKey, true
}

// HasAuthenticationKey returns a boolean if a field has been set.
func (o *MemberOspfList) HasAuthenticationKey() bool {
	if o != nil && !IsNil(o.AuthenticationKey) {
		return true
	}

	return false
}

// SetAuthenticationKey gets a reference to the given string and assigns it to the AuthenticationKey field.
func (o *MemberOspfList) SetAuthenticationKey(v string) {
	o.AuthenticationKey = &v
}

// GetAuthenticationType returns the AuthenticationType field value if set, zero value otherwise.
func (o *MemberOspfList) GetAuthenticationType() string {
	if o == nil || IsNil(o.AuthenticationType) {
		var ret string
		return ret
	}
	return *o.AuthenticationType
}

// GetAuthenticationTypeOk returns a tuple with the AuthenticationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberOspfList) GetAuthenticationTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AuthenticationType) {
		return nil, false
	}
	return o.AuthenticationType, true
}

// HasAuthenticationType returns a boolean if a field has been set.
func (o *MemberOspfList) HasAuthenticationType() bool {
	if o != nil && !IsNil(o.AuthenticationType) {
		return true
	}

	return false
}

// SetAuthenticationType gets a reference to the given string and assigns it to the AuthenticationType field.
func (o *MemberOspfList) SetAuthenticationType(v string) {
	o.AuthenticationType = &v
}

// GetAutoCalcCostEnabled returns the AutoCalcCostEnabled field value if set, zero value otherwise.
func (o *MemberOspfList) GetAutoCalcCostEnabled() bool {
	if o == nil || IsNil(o.AutoCalcCostEnabled) {
		var ret bool
		return ret
	}
	return *o.AutoCalcCostEnabled
}

// GetAutoCalcCostEnabledOk returns a tuple with the AutoCalcCostEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberOspfList) GetAutoCalcCostEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoCalcCostEnabled) {
		return nil, false
	}
	return o.AutoCalcCostEnabled, true
}

// HasAutoCalcCostEnabled returns a boolean if a field has been set.
func (o *MemberOspfList) HasAutoCalcCostEnabled() bool {
	if o != nil && !IsNil(o.AutoCalcCostEnabled) {
		return true
	}

	return false
}

// SetAutoCalcCostEnabled gets a reference to the given bool and assigns it to the AutoCalcCostEnabled field.
func (o *MemberOspfList) SetAutoCalcCostEnabled(v bool) {
	o.AutoCalcCostEnabled = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *MemberOspfList) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberOspfList) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *MemberOspfList) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *MemberOspfList) SetComment(v string) {
	o.Comment = &v
}

// GetCost returns the Cost field value if set, zero value otherwise.
func (o *MemberOspfList) GetCost() int64 {
	if o == nil || IsNil(o.Cost) {
		var ret int64
		return ret
	}
	return *o.Cost
}

// GetCostOk returns a tuple with the Cost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberOspfList) GetCostOk() (*int64, bool) {
	if o == nil || IsNil(o.Cost) {
		return nil, false
	}
	return o.Cost, true
}

// HasCost returns a boolean if a field has been set.
func (o *MemberOspfList) HasCost() bool {
	if o != nil && !IsNil(o.Cost) {
		return true
	}

	return false
}

// SetCost gets a reference to the given int64 and assigns it to the Cost field.
func (o *MemberOspfList) SetCost(v int64) {
	o.Cost = &v
}

// GetDeadInterval returns the DeadInterval field value if set, zero value otherwise.
func (o *MemberOspfList) GetDeadInterval() int64 {
	if o == nil || IsNil(o.DeadInterval) {
		var ret int64
		return ret
	}
	return *o.DeadInterval
}

// GetDeadIntervalOk returns a tuple with the DeadInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberOspfList) GetDeadIntervalOk() (*int64, bool) {
	if o == nil || IsNil(o.DeadInterval) {
		return nil, false
	}
	return o.DeadInterval, true
}

// HasDeadInterval returns a boolean if a field has been set.
func (o *MemberOspfList) HasDeadInterval() bool {
	if o != nil && !IsNil(o.DeadInterval) {
		return true
	}

	return false
}

// SetDeadInterval gets a reference to the given int64 and assigns it to the DeadInterval field.
func (o *MemberOspfList) SetDeadInterval(v int64) {
	o.DeadInterval = &v
}

// GetHelloInterval returns the HelloInterval field value if set, zero value otherwise.
func (o *MemberOspfList) GetHelloInterval() int64 {
	if o == nil || IsNil(o.HelloInterval) {
		var ret int64
		return ret
	}
	return *o.HelloInterval
}

// GetHelloIntervalOk returns a tuple with the HelloInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberOspfList) GetHelloIntervalOk() (*int64, bool) {
	if o == nil || IsNil(o.HelloInterval) {
		return nil, false
	}
	return o.HelloInterval, true
}

// HasHelloInterval returns a boolean if a field has been set.
func (o *MemberOspfList) HasHelloInterval() bool {
	if o != nil && !IsNil(o.HelloInterval) {
		return true
	}

	return false
}

// SetHelloInterval gets a reference to the given int64 and assigns it to the HelloInterval field.
func (o *MemberOspfList) SetHelloInterval(v int64) {
	o.HelloInterval = &v
}

// GetInterface returns the Interface field value if set, zero value otherwise.
func (o *MemberOspfList) GetInterface() string {
	if o == nil || IsNil(o.Interface) {
		var ret string
		return ret
	}
	return *o.Interface
}

// GetInterfaceOk returns a tuple with the Interface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberOspfList) GetInterfaceOk() (*string, bool) {
	if o == nil || IsNil(o.Interface) {
		return nil, false
	}
	return o.Interface, true
}

// HasInterface returns a boolean if a field has been set.
func (o *MemberOspfList) HasInterface() bool {
	if o != nil && !IsNil(o.Interface) {
		return true
	}

	return false
}

// SetInterface gets a reference to the given string and assigns it to the Interface field.
func (o *MemberOspfList) SetInterface(v string) {
	o.Interface = &v
}

// GetIsIpv4 returns the IsIpv4 field value if set, zero value otherwise.
func (o *MemberOspfList) GetIsIpv4() bool {
	if o == nil || IsNil(o.IsIpv4) {
		var ret bool
		return ret
	}
	return *o.IsIpv4
}

// GetIsIpv4Ok returns a tuple with the IsIpv4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberOspfList) GetIsIpv4Ok() (*bool, bool) {
	if o == nil || IsNil(o.IsIpv4) {
		return nil, false
	}
	return o.IsIpv4, true
}

// HasIsIpv4 returns a boolean if a field has been set.
func (o *MemberOspfList) HasIsIpv4() bool {
	if o != nil && !IsNil(o.IsIpv4) {
		return true
	}

	return false
}

// SetIsIpv4 gets a reference to the given bool and assigns it to the IsIpv4 field.
func (o *MemberOspfList) SetIsIpv4(v bool) {
	o.IsIpv4 = &v
}

// GetKeyId returns the KeyId field value if set, zero value otherwise.
func (o *MemberOspfList) GetKeyId() int64 {
	if o == nil || IsNil(o.KeyId) {
		var ret int64
		return ret
	}
	return *o.KeyId
}

// GetKeyIdOk returns a tuple with the KeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberOspfList) GetKeyIdOk() (*int64, bool) {
	if o == nil || IsNil(o.KeyId) {
		return nil, false
	}
	return o.KeyId, true
}

// HasKeyId returns a boolean if a field has been set.
func (o *MemberOspfList) HasKeyId() bool {
	if o != nil && !IsNil(o.KeyId) {
		return true
	}

	return false
}

// SetKeyId gets a reference to the given int64 and assigns it to the KeyId field.
func (o *MemberOspfList) SetKeyId(v int64) {
	o.KeyId = &v
}

// GetRetransmitInterval returns the RetransmitInterval field value if set, zero value otherwise.
func (o *MemberOspfList) GetRetransmitInterval() int64 {
	if o == nil || IsNil(o.RetransmitInterval) {
		var ret int64
		return ret
	}
	return *o.RetransmitInterval
}

// GetRetransmitIntervalOk returns a tuple with the RetransmitInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberOspfList) GetRetransmitIntervalOk() (*int64, bool) {
	if o == nil || IsNil(o.RetransmitInterval) {
		return nil, false
	}
	return o.RetransmitInterval, true
}

// HasRetransmitInterval returns a boolean if a field has been set.
func (o *MemberOspfList) HasRetransmitInterval() bool {
	if o != nil && !IsNil(o.RetransmitInterval) {
		return true
	}

	return false
}

// SetRetransmitInterval gets a reference to the given int64 and assigns it to the RetransmitInterval field.
func (o *MemberOspfList) SetRetransmitInterval(v int64) {
	o.RetransmitInterval = &v
}

// GetTransmitDelay returns the TransmitDelay field value if set, zero value otherwise.
func (o *MemberOspfList) GetTransmitDelay() int64 {
	if o == nil || IsNil(o.TransmitDelay) {
		var ret int64
		return ret
	}
	return *o.TransmitDelay
}

// GetTransmitDelayOk returns a tuple with the TransmitDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberOspfList) GetTransmitDelayOk() (*int64, bool) {
	if o == nil || IsNil(o.TransmitDelay) {
		return nil, false
	}
	return o.TransmitDelay, true
}

// HasTransmitDelay returns a boolean if a field has been set.
func (o *MemberOspfList) HasTransmitDelay() bool {
	if o != nil && !IsNil(o.TransmitDelay) {
		return true
	}

	return false
}

// SetTransmitDelay gets a reference to the given int64 and assigns it to the TransmitDelay field.
func (o *MemberOspfList) SetTransmitDelay(v int64) {
	o.TransmitDelay = &v
}

// GetAdvertiseInterfaceVlan returns the AdvertiseInterfaceVlan field value if set, zero value otherwise.
func (o *MemberOspfList) GetAdvertiseInterfaceVlan() string {
	if o == nil || IsNil(o.AdvertiseInterfaceVlan) {
		var ret string
		return ret
	}
	return *o.AdvertiseInterfaceVlan
}

// GetAdvertiseInterfaceVlanOk returns a tuple with the AdvertiseInterfaceVlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberOspfList) GetAdvertiseInterfaceVlanOk() (*string, bool) {
	if o == nil || IsNil(o.AdvertiseInterfaceVlan) {
		return nil, false
	}
	return o.AdvertiseInterfaceVlan, true
}

// HasAdvertiseInterfaceVlan returns a boolean if a field has been set.
func (o *MemberOspfList) HasAdvertiseInterfaceVlan() bool {
	if o != nil && !IsNil(o.AdvertiseInterfaceVlan) {
		return true
	}

	return false
}

// SetAdvertiseInterfaceVlan gets a reference to the given string and assigns it to the AdvertiseInterfaceVlan field.
func (o *MemberOspfList) SetAdvertiseInterfaceVlan(v string) {
	o.AdvertiseInterfaceVlan = &v
}

// GetBfdTemplate returns the BfdTemplate field value if set, zero value otherwise.
func (o *MemberOspfList) GetBfdTemplate() string {
	if o == nil || IsNil(o.BfdTemplate) {
		var ret string
		return ret
	}
	return *o.BfdTemplate
}

// GetBfdTemplateOk returns a tuple with the BfdTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberOspfList) GetBfdTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.BfdTemplate) {
		return nil, false
	}
	return o.BfdTemplate, true
}

// HasBfdTemplate returns a boolean if a field has been set.
func (o *MemberOspfList) HasBfdTemplate() bool {
	if o != nil && !IsNil(o.BfdTemplate) {
		return true
	}

	return false
}

// SetBfdTemplate gets a reference to the given string and assigns it to the BfdTemplate field.
func (o *MemberOspfList) SetBfdTemplate(v string) {
	o.BfdTemplate = &v
}

// GetEnableBfd returns the EnableBfd field value if set, zero value otherwise.
func (o *MemberOspfList) GetEnableBfd() bool {
	if o == nil || IsNil(o.EnableBfd) {
		var ret bool
		return ret
	}
	return *o.EnableBfd
}

// GetEnableBfdOk returns a tuple with the EnableBfd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberOspfList) GetEnableBfdOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableBfd) {
		return nil, false
	}
	return o.EnableBfd, true
}

// HasEnableBfd returns a boolean if a field has been set.
func (o *MemberOspfList) HasEnableBfd() bool {
	if o != nil && !IsNil(o.EnableBfd) {
		return true
	}

	return false
}

// SetEnableBfd gets a reference to the given bool and assigns it to the EnableBfd field.
func (o *MemberOspfList) SetEnableBfd(v bool) {
	o.EnableBfd = &v
}

// GetEnableBfdDnscheck returns the EnableBfdDnscheck field value if set, zero value otherwise.
func (o *MemberOspfList) GetEnableBfdDnscheck() bool {
	if o == nil || IsNil(o.EnableBfdDnscheck) {
		var ret bool
		return ret
	}
	return *o.EnableBfdDnscheck
}

// GetEnableBfdDnscheckOk returns a tuple with the EnableBfdDnscheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberOspfList) GetEnableBfdDnscheckOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableBfdDnscheck) {
		return nil, false
	}
	return o.EnableBfdDnscheck, true
}

// HasEnableBfdDnscheck returns a boolean if a field has been set.
func (o *MemberOspfList) HasEnableBfdDnscheck() bool {
	if o != nil && !IsNil(o.EnableBfdDnscheck) {
		return true
	}

	return false
}

// SetEnableBfdDnscheck gets a reference to the given bool and assigns it to the EnableBfdDnscheck field.
func (o *MemberOspfList) SetEnableBfdDnscheck(v bool) {
	o.EnableBfdDnscheck = &v
}

func (o MemberOspfList) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberOspfList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AreaId) {
		toSerialize["area_id"] = o.AreaId
	}
	if !IsNil(o.AreaType) {
		toSerialize["area_type"] = o.AreaType
	}
	if !IsNil(o.AuthenticationKey) {
		toSerialize["authentication_key"] = o.AuthenticationKey
	}
	if !IsNil(o.AuthenticationType) {
		toSerialize["authentication_type"] = o.AuthenticationType
	}
	if !IsNil(o.AutoCalcCostEnabled) {
		toSerialize["auto_calc_cost_enabled"] = o.AutoCalcCostEnabled
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.Cost) {
		toSerialize["cost"] = o.Cost
	}
	if !IsNil(o.DeadInterval) {
		toSerialize["dead_interval"] = o.DeadInterval
	}
	if !IsNil(o.HelloInterval) {
		toSerialize["hello_interval"] = o.HelloInterval
	}
	if !IsNil(o.Interface) {
		toSerialize["interface"] = o.Interface
	}
	if !IsNil(o.IsIpv4) {
		toSerialize["is_ipv4"] = o.IsIpv4
	}
	if !IsNil(o.KeyId) {
		toSerialize["key_id"] = o.KeyId
	}
	if !IsNil(o.RetransmitInterval) {
		toSerialize["retransmit_interval"] = o.RetransmitInterval
	}
	if !IsNil(o.TransmitDelay) {
		toSerialize["transmit_delay"] = o.TransmitDelay
	}
	if !IsNil(o.AdvertiseInterfaceVlan) {
		toSerialize["advertise_interface_vlan"] = o.AdvertiseInterfaceVlan
	}
	if !IsNil(o.BfdTemplate) {
		toSerialize["bfd_template"] = o.BfdTemplate
	}
	if !IsNil(o.EnableBfd) {
		toSerialize["enable_bfd"] = o.EnableBfd
	}
	if !IsNil(o.EnableBfdDnscheck) {
		toSerialize["enable_bfd_dnscheck"] = o.EnableBfdDnscheck
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MemberOspfList) UnmarshalJSON(data []byte) (err error) {
	varMemberOspfList := _MemberOspfList{}

	err = json.Unmarshal(data, &varMemberOspfList)

	if err != nil {
		return err
	}

	*o = MemberOspfList(varMemberOspfList)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "area_id")
		delete(additionalProperties, "area_type")
		delete(additionalProperties, "authentication_key")
		delete(additionalProperties, "authentication_type")
		delete(additionalProperties, "auto_calc_cost_enabled")
		delete(additionalProperties, "comment")
		delete(additionalProperties, "cost")
		delete(additionalProperties, "dead_interval")
		delete(additionalProperties, "hello_interval")
		delete(additionalProperties, "interface")
		delete(additionalProperties, "is_ipv4")
		delete(additionalProperties, "key_id")
		delete(additionalProperties, "retransmit_interval")
		delete(additionalProperties, "transmit_delay")
		delete(additionalProperties, "advertise_interface_vlan")
		delete(additionalProperties, "bfd_template")
		delete(additionalProperties, "enable_bfd")
		delete(additionalProperties, "enable_bfd_dnscheck")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMemberOspfList struct {
	value *MemberOspfList
	isSet bool
}

func (v NullableMemberOspfList) Get() *MemberOspfList {
	return v.value
}

func (v *NullableMemberOspfList) Set(val *MemberOspfList) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberOspfList) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberOspfList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberOspfList(val *MemberOspfList) *NullableMemberOspfList {
	return &NullableMemberOspfList{value: val, isSet: true}
}

func (v NullableMemberOspfList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberOspfList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
