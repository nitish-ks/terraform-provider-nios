/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the MemberTrafficCaptureRecQueriesSetting type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberTrafficCaptureRecQueriesSetting{}

// MemberTrafficCaptureRecQueriesSetting struct for MemberTrafficCaptureRecQueriesSetting
type MemberTrafficCaptureRecQueriesSetting struct {
	// Enable triggering automated traffic capture based on outgoing recursive queries count.
	RecursiveClientsCountTriggerEnable *bool `json:"recursive_clients_count_trigger_enable,omitempty"`
	// Concurrent outgoing recursive queries count below which traffic capture will be triggered.
	RecursiveClientsCountThreshold *int64 `json:"recursive_clients_count_threshold,omitempty"`
	// Concurrent outgoing recursive queries count below which traffic capture will be stopped.
	RecursiveClientsCountReset *int64 `json:"recursive_clients_count_reset,omitempty"`
	AdditionalProperties       map[string]interface{}
}

type _MemberTrafficCaptureRecQueriesSetting MemberTrafficCaptureRecQueriesSetting

// NewMemberTrafficCaptureRecQueriesSetting instantiates a new MemberTrafficCaptureRecQueriesSetting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberTrafficCaptureRecQueriesSetting() *MemberTrafficCaptureRecQueriesSetting {
	this := MemberTrafficCaptureRecQueriesSetting{}
	return &this
}

// NewMemberTrafficCaptureRecQueriesSettingWithDefaults instantiates a new MemberTrafficCaptureRecQueriesSetting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberTrafficCaptureRecQueriesSettingWithDefaults() *MemberTrafficCaptureRecQueriesSetting {
	this := MemberTrafficCaptureRecQueriesSetting{}
	return &this
}

// GetRecursiveClientsCountTriggerEnable returns the RecursiveClientsCountTriggerEnable field value if set, zero value otherwise.
func (o *MemberTrafficCaptureRecQueriesSetting) GetRecursiveClientsCountTriggerEnable() bool {
	if o == nil || IsNil(o.RecursiveClientsCountTriggerEnable) {
		var ret bool
		return ret
	}
	return *o.RecursiveClientsCountTriggerEnable
}

// GetRecursiveClientsCountTriggerEnableOk returns a tuple with the RecursiveClientsCountTriggerEnable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTrafficCaptureRecQueriesSetting) GetRecursiveClientsCountTriggerEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.RecursiveClientsCountTriggerEnable) {
		return nil, false
	}
	return o.RecursiveClientsCountTriggerEnable, true
}

// HasRecursiveClientsCountTriggerEnable returns a boolean if a field has been set.
func (o *MemberTrafficCaptureRecQueriesSetting) HasRecursiveClientsCountTriggerEnable() bool {
	if o != nil && !IsNil(o.RecursiveClientsCountTriggerEnable) {
		return true
	}

	return false
}

// SetRecursiveClientsCountTriggerEnable gets a reference to the given bool and assigns it to the RecursiveClientsCountTriggerEnable field.
func (o *MemberTrafficCaptureRecQueriesSetting) SetRecursiveClientsCountTriggerEnable(v bool) {
	o.RecursiveClientsCountTriggerEnable = &v
}

// GetRecursiveClientsCountThreshold returns the RecursiveClientsCountThreshold field value if set, zero value otherwise.
func (o *MemberTrafficCaptureRecQueriesSetting) GetRecursiveClientsCountThreshold() int64 {
	if o == nil || IsNil(o.RecursiveClientsCountThreshold) {
		var ret int64
		return ret
	}
	return *o.RecursiveClientsCountThreshold
}

// GetRecursiveClientsCountThresholdOk returns a tuple with the RecursiveClientsCountThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTrafficCaptureRecQueriesSetting) GetRecursiveClientsCountThresholdOk() (*int64, bool) {
	if o == nil || IsNil(o.RecursiveClientsCountThreshold) {
		return nil, false
	}
	return o.RecursiveClientsCountThreshold, true
}

// HasRecursiveClientsCountThreshold returns a boolean if a field has been set.
func (o *MemberTrafficCaptureRecQueriesSetting) HasRecursiveClientsCountThreshold() bool {
	if o != nil && !IsNil(o.RecursiveClientsCountThreshold) {
		return true
	}

	return false
}

// SetRecursiveClientsCountThreshold gets a reference to the given int64 and assigns it to the RecursiveClientsCountThreshold field.
func (o *MemberTrafficCaptureRecQueriesSetting) SetRecursiveClientsCountThreshold(v int64) {
	o.RecursiveClientsCountThreshold = &v
}

// GetRecursiveClientsCountReset returns the RecursiveClientsCountReset field value if set, zero value otherwise.
func (o *MemberTrafficCaptureRecQueriesSetting) GetRecursiveClientsCountReset() int64 {
	if o == nil || IsNil(o.RecursiveClientsCountReset) {
		var ret int64
		return ret
	}
	return *o.RecursiveClientsCountReset
}

// GetRecursiveClientsCountResetOk returns a tuple with the RecursiveClientsCountReset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTrafficCaptureRecQueriesSetting) GetRecursiveClientsCountResetOk() (*int64, bool) {
	if o == nil || IsNil(o.RecursiveClientsCountReset) {
		return nil, false
	}
	return o.RecursiveClientsCountReset, true
}

// HasRecursiveClientsCountReset returns a boolean if a field has been set.
func (o *MemberTrafficCaptureRecQueriesSetting) HasRecursiveClientsCountReset() bool {
	if o != nil && !IsNil(o.RecursiveClientsCountReset) {
		return true
	}

	return false
}

// SetRecursiveClientsCountReset gets a reference to the given int64 and assigns it to the RecursiveClientsCountReset field.
func (o *MemberTrafficCaptureRecQueriesSetting) SetRecursiveClientsCountReset(v int64) {
	o.RecursiveClientsCountReset = &v
}

func (o MemberTrafficCaptureRecQueriesSetting) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberTrafficCaptureRecQueriesSetting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RecursiveClientsCountTriggerEnable) {
		toSerialize["recursive_clients_count_trigger_enable"] = o.RecursiveClientsCountTriggerEnable
	}
	if !IsNil(o.RecursiveClientsCountThreshold) {
		toSerialize["recursive_clients_count_threshold"] = o.RecursiveClientsCountThreshold
	}
	if !IsNil(o.RecursiveClientsCountReset) {
		toSerialize["recursive_clients_count_reset"] = o.RecursiveClientsCountReset
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MemberTrafficCaptureRecQueriesSetting) UnmarshalJSON(data []byte) (err error) {
	varMemberTrafficCaptureRecQueriesSetting := _MemberTrafficCaptureRecQueriesSetting{}

	err = json.Unmarshal(data, &varMemberTrafficCaptureRecQueriesSetting)

	if err != nil {
		return err
	}

	*o = MemberTrafficCaptureRecQueriesSetting(varMemberTrafficCaptureRecQueriesSetting)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "recursive_clients_count_trigger_enable")
		delete(additionalProperties, "recursive_clients_count_threshold")
		delete(additionalProperties, "recursive_clients_count_reset")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMemberTrafficCaptureRecQueriesSetting struct {
	value *MemberTrafficCaptureRecQueriesSetting
	isSet bool
}

func (v NullableMemberTrafficCaptureRecQueriesSetting) Get() *MemberTrafficCaptureRecQueriesSetting {
	return v.value
}

func (v *NullableMemberTrafficCaptureRecQueriesSetting) Set(val *MemberTrafficCaptureRecQueriesSetting) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberTrafficCaptureRecQueriesSetting) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberTrafficCaptureRecQueriesSetting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberTrafficCaptureRecQueriesSetting(val *MemberTrafficCaptureRecQueriesSetting) *NullableMemberTrafficCaptureRecQueriesSetting {
	return &NullableMemberTrafficCaptureRecQueriesSetting{value: val, isSet: true}
}

func (v NullableMemberTrafficCaptureRecQueriesSetting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberTrafficCaptureRecQueriesSetting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
