/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the MemberbgpasNeighbors type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberbgpasNeighbors{}

// MemberbgpasNeighbors struct for MemberbgpasNeighbors
type MemberbgpasNeighbors struct {
	// The interface that sends BGP advertisement information.
	Interface *string `json:"interface,omitempty"`
	// The IP address of the BGP neighbor.
	NeighborIp *string `json:"neighbor_ip,omitempty"`
	// The remote AS number of the BGP neighbor.
	RemoteAs *int64 `json:"remote_as,omitempty"`
	// The BGP authentication mode.
	AuthenticationMode *string `json:"authentication_mode,omitempty"`
	// The password for a BGP neighbor. This is required only if authentication_mode is set to \"MD5\". When the password is entered, the value is preserved even if authentication_mode is changed to \"NONE\". This is a write-only attribute.
	BgpNeighborPass *string `json:"bgp_neighbor_pass,omitempty"`
	// User comments for this BGP neighbor.
	Comment *string `json:"comment,omitempty"`
	// Determines if the multi-hop support is enabled or not.
	Multihop *bool `json:"multihop,omitempty"`
	// The Time To Live (TTL) value for multi-hop. Valid values are between 1 and 255.
	MultihopTtl *int64 `json:"multihop_ttl,omitempty"`
	// The BFD template name.
	BfdTemplate *string `json:"bfd_template,omitempty"`
	// Determines if BFD is enabled or not.
	EnableBfd *bool `json:"enable_bfd,omitempty"`
	// Determines if BFD internal DNS monitor is enabled or not.
	EnableBfdDnscheck    *bool `json:"enable_bfd_dnscheck,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MemberbgpasNeighbors MemberbgpasNeighbors

// NewMemberbgpasNeighbors instantiates a new MemberbgpasNeighbors object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberbgpasNeighbors() *MemberbgpasNeighbors {
	this := MemberbgpasNeighbors{}
	return &this
}

// NewMemberbgpasNeighborsWithDefaults instantiates a new MemberbgpasNeighbors object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberbgpasNeighborsWithDefaults() *MemberbgpasNeighbors {
	this := MemberbgpasNeighbors{}
	return &this
}

// GetInterface returns the Interface field value if set, zero value otherwise.
func (o *MemberbgpasNeighbors) GetInterface() string {
	if o == nil || IsNil(o.Interface) {
		var ret string
		return ret
	}
	return *o.Interface
}

// GetInterfaceOk returns a tuple with the Interface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberbgpasNeighbors) GetInterfaceOk() (*string, bool) {
	if o == nil || IsNil(o.Interface) {
		return nil, false
	}
	return o.Interface, true
}

// HasInterface returns a boolean if a field has been set.
func (o *MemberbgpasNeighbors) HasInterface() bool {
	if o != nil && !IsNil(o.Interface) {
		return true
	}

	return false
}

// SetInterface gets a reference to the given string and assigns it to the Interface field.
func (o *MemberbgpasNeighbors) SetInterface(v string) {
	o.Interface = &v
}

// GetNeighborIp returns the NeighborIp field value if set, zero value otherwise.
func (o *MemberbgpasNeighbors) GetNeighborIp() string {
	if o == nil || IsNil(o.NeighborIp) {
		var ret string
		return ret
	}
	return *o.NeighborIp
}

// GetNeighborIpOk returns a tuple with the NeighborIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberbgpasNeighbors) GetNeighborIpOk() (*string, bool) {
	if o == nil || IsNil(o.NeighborIp) {
		return nil, false
	}
	return o.NeighborIp, true
}

// HasNeighborIp returns a boolean if a field has been set.
func (o *MemberbgpasNeighbors) HasNeighborIp() bool {
	if o != nil && !IsNil(o.NeighborIp) {
		return true
	}

	return false
}

// SetNeighborIp gets a reference to the given string and assigns it to the NeighborIp field.
func (o *MemberbgpasNeighbors) SetNeighborIp(v string) {
	o.NeighborIp = &v
}

// GetRemoteAs returns the RemoteAs field value if set, zero value otherwise.
func (o *MemberbgpasNeighbors) GetRemoteAs() int64 {
	if o == nil || IsNil(o.RemoteAs) {
		var ret int64
		return ret
	}
	return *o.RemoteAs
}

// GetRemoteAsOk returns a tuple with the RemoteAs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberbgpasNeighbors) GetRemoteAsOk() (*int64, bool) {
	if o == nil || IsNil(o.RemoteAs) {
		return nil, false
	}
	return o.RemoteAs, true
}

// HasRemoteAs returns a boolean if a field has been set.
func (o *MemberbgpasNeighbors) HasRemoteAs() bool {
	if o != nil && !IsNil(o.RemoteAs) {
		return true
	}

	return false
}

// SetRemoteAs gets a reference to the given int64 and assigns it to the RemoteAs field.
func (o *MemberbgpasNeighbors) SetRemoteAs(v int64) {
	o.RemoteAs = &v
}

// GetAuthenticationMode returns the AuthenticationMode field value if set, zero value otherwise.
func (o *MemberbgpasNeighbors) GetAuthenticationMode() string {
	if o == nil || IsNil(o.AuthenticationMode) {
		var ret string
		return ret
	}
	return *o.AuthenticationMode
}

// GetAuthenticationModeOk returns a tuple with the AuthenticationMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberbgpasNeighbors) GetAuthenticationModeOk() (*string, bool) {
	if o == nil || IsNil(o.AuthenticationMode) {
		return nil, false
	}
	return o.AuthenticationMode, true
}

// HasAuthenticationMode returns a boolean if a field has been set.
func (o *MemberbgpasNeighbors) HasAuthenticationMode() bool {
	if o != nil && !IsNil(o.AuthenticationMode) {
		return true
	}

	return false
}

// SetAuthenticationMode gets a reference to the given string and assigns it to the AuthenticationMode field.
func (o *MemberbgpasNeighbors) SetAuthenticationMode(v string) {
	o.AuthenticationMode = &v
}

// GetBgpNeighborPass returns the BgpNeighborPass field value if set, zero value otherwise.
func (o *MemberbgpasNeighbors) GetBgpNeighborPass() string {
	if o == nil || IsNil(o.BgpNeighborPass) {
		var ret string
		return ret
	}
	return *o.BgpNeighborPass
}

// GetBgpNeighborPassOk returns a tuple with the BgpNeighborPass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberbgpasNeighbors) GetBgpNeighborPassOk() (*string, bool) {
	if o == nil || IsNil(o.BgpNeighborPass) {
		return nil, false
	}
	return o.BgpNeighborPass, true
}

// HasBgpNeighborPass returns a boolean if a field has been set.
func (o *MemberbgpasNeighbors) HasBgpNeighborPass() bool {
	if o != nil && !IsNil(o.BgpNeighborPass) {
		return true
	}

	return false
}

// SetBgpNeighborPass gets a reference to the given string and assigns it to the BgpNeighborPass field.
func (o *MemberbgpasNeighbors) SetBgpNeighborPass(v string) {
	o.BgpNeighborPass = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *MemberbgpasNeighbors) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberbgpasNeighbors) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *MemberbgpasNeighbors) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *MemberbgpasNeighbors) SetComment(v string) {
	o.Comment = &v
}

// GetMultihop returns the Multihop field value if set, zero value otherwise.
func (o *MemberbgpasNeighbors) GetMultihop() bool {
	if o == nil || IsNil(o.Multihop) {
		var ret bool
		return ret
	}
	return *o.Multihop
}

// GetMultihopOk returns a tuple with the Multihop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberbgpasNeighbors) GetMultihopOk() (*bool, bool) {
	if o == nil || IsNil(o.Multihop) {
		return nil, false
	}
	return o.Multihop, true
}

// HasMultihop returns a boolean if a field has been set.
func (o *MemberbgpasNeighbors) HasMultihop() bool {
	if o != nil && !IsNil(o.Multihop) {
		return true
	}

	return false
}

// SetMultihop gets a reference to the given bool and assigns it to the Multihop field.
func (o *MemberbgpasNeighbors) SetMultihop(v bool) {
	o.Multihop = &v
}

// GetMultihopTtl returns the MultihopTtl field value if set, zero value otherwise.
func (o *MemberbgpasNeighbors) GetMultihopTtl() int64 {
	if o == nil || IsNil(o.MultihopTtl) {
		var ret int64
		return ret
	}
	return *o.MultihopTtl
}

// GetMultihopTtlOk returns a tuple with the MultihopTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberbgpasNeighbors) GetMultihopTtlOk() (*int64, bool) {
	if o == nil || IsNil(o.MultihopTtl) {
		return nil, false
	}
	return o.MultihopTtl, true
}

// HasMultihopTtl returns a boolean if a field has been set.
func (o *MemberbgpasNeighbors) HasMultihopTtl() bool {
	if o != nil && !IsNil(o.MultihopTtl) {
		return true
	}

	return false
}

// SetMultihopTtl gets a reference to the given int64 and assigns it to the MultihopTtl field.
func (o *MemberbgpasNeighbors) SetMultihopTtl(v int64) {
	o.MultihopTtl = &v
}

// GetBfdTemplate returns the BfdTemplate field value if set, zero value otherwise.
func (o *MemberbgpasNeighbors) GetBfdTemplate() string {
	if o == nil || IsNil(o.BfdTemplate) {
		var ret string
		return ret
	}
	return *o.BfdTemplate
}

// GetBfdTemplateOk returns a tuple with the BfdTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberbgpasNeighbors) GetBfdTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.BfdTemplate) {
		return nil, false
	}
	return o.BfdTemplate, true
}

// HasBfdTemplate returns a boolean if a field has been set.
func (o *MemberbgpasNeighbors) HasBfdTemplate() bool {
	if o != nil && !IsNil(o.BfdTemplate) {
		return true
	}

	return false
}

// SetBfdTemplate gets a reference to the given string and assigns it to the BfdTemplate field.
func (o *MemberbgpasNeighbors) SetBfdTemplate(v string) {
	o.BfdTemplate = &v
}

// GetEnableBfd returns the EnableBfd field value if set, zero value otherwise.
func (o *MemberbgpasNeighbors) GetEnableBfd() bool {
	if o == nil || IsNil(o.EnableBfd) {
		var ret bool
		return ret
	}
	return *o.EnableBfd
}

// GetEnableBfdOk returns a tuple with the EnableBfd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberbgpasNeighbors) GetEnableBfdOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableBfd) {
		return nil, false
	}
	return o.EnableBfd, true
}

// HasEnableBfd returns a boolean if a field has been set.
func (o *MemberbgpasNeighbors) HasEnableBfd() bool {
	if o != nil && !IsNil(o.EnableBfd) {
		return true
	}

	return false
}

// SetEnableBfd gets a reference to the given bool and assigns it to the EnableBfd field.
func (o *MemberbgpasNeighbors) SetEnableBfd(v bool) {
	o.EnableBfd = &v
}

// GetEnableBfdDnscheck returns the EnableBfdDnscheck field value if set, zero value otherwise.
func (o *MemberbgpasNeighbors) GetEnableBfdDnscheck() bool {
	if o == nil || IsNil(o.EnableBfdDnscheck) {
		var ret bool
		return ret
	}
	return *o.EnableBfdDnscheck
}

// GetEnableBfdDnscheckOk returns a tuple with the EnableBfdDnscheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberbgpasNeighbors) GetEnableBfdDnscheckOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableBfdDnscheck) {
		return nil, false
	}
	return o.EnableBfdDnscheck, true
}

// HasEnableBfdDnscheck returns a boolean if a field has been set.
func (o *MemberbgpasNeighbors) HasEnableBfdDnscheck() bool {
	if o != nil && !IsNil(o.EnableBfdDnscheck) {
		return true
	}

	return false
}

// SetEnableBfdDnscheck gets a reference to the given bool and assigns it to the EnableBfdDnscheck field.
func (o *MemberbgpasNeighbors) SetEnableBfdDnscheck(v bool) {
	o.EnableBfdDnscheck = &v
}

func (o MemberbgpasNeighbors) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberbgpasNeighbors) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Interface) {
		toSerialize["interface"] = o.Interface
	}
	if !IsNil(o.NeighborIp) {
		toSerialize["neighbor_ip"] = o.NeighborIp
	}
	if !IsNil(o.RemoteAs) {
		toSerialize["remote_as"] = o.RemoteAs
	}
	if !IsNil(o.AuthenticationMode) {
		toSerialize["authentication_mode"] = o.AuthenticationMode
	}
	if !IsNil(o.BgpNeighborPass) {
		toSerialize["bgp_neighbor_pass"] = o.BgpNeighborPass
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.Multihop) {
		toSerialize["multihop"] = o.Multihop
	}
	if !IsNil(o.MultihopTtl) {
		toSerialize["multihop_ttl"] = o.MultihopTtl
	}
	if !IsNil(o.BfdTemplate) {
		toSerialize["bfd_template"] = o.BfdTemplate
	}
	if !IsNil(o.EnableBfd) {
		toSerialize["enable_bfd"] = o.EnableBfd
	}
	if !IsNil(o.EnableBfdDnscheck) {
		toSerialize["enable_bfd_dnscheck"] = o.EnableBfdDnscheck
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MemberbgpasNeighbors) UnmarshalJSON(data []byte) (err error) {
	varMemberbgpasNeighbors := _MemberbgpasNeighbors{}

	err = json.Unmarshal(data, &varMemberbgpasNeighbors)

	if err != nil {
		return err
	}

	*o = MemberbgpasNeighbors(varMemberbgpasNeighbors)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "interface")
		delete(additionalProperties, "neighbor_ip")
		delete(additionalProperties, "remote_as")
		delete(additionalProperties, "authentication_mode")
		delete(additionalProperties, "bgp_neighbor_pass")
		delete(additionalProperties, "comment")
		delete(additionalProperties, "multihop")
		delete(additionalProperties, "multihop_ttl")
		delete(additionalProperties, "bfd_template")
		delete(additionalProperties, "enable_bfd")
		delete(additionalProperties, "enable_bfd_dnscheck")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMemberbgpasNeighbors struct {
	value *MemberbgpasNeighbors
	isSet bool
}

func (v NullableMemberbgpasNeighbors) Get() *MemberbgpasNeighbors {
	return v.value
}

func (v *NullableMemberbgpasNeighbors) Set(val *MemberbgpasNeighbors) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberbgpasNeighbors) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberbgpasNeighbors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberbgpasNeighbors(val *MemberbgpasNeighbors) *NullableMemberbgpasNeighbors {
	return &NullableMemberbgpasNeighbors{value: val, isSet: true}
}

func (v NullableMemberbgpasNeighbors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberbgpasNeighbors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
