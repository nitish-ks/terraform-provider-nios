/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the Memberdfp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Memberdfp{}

// Memberdfp struct for Memberdfp
type Memberdfp struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// Option to resolve DNS query if resolution over Active Trust Cloud failed.
	DfpForwardFirst *bool `json:"dfp_forward_first,omitempty"`
	// Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.
	ExtAttrs *map[string]ExtAttrs `json:"extattrs,omitempty"`
	// Host name of the parent Member
	HostName *string `json:"host_name,omitempty"`
	// DFP override lock'.
	IsDfpOverride *bool `json:"is_dfp_override,omitempty"`
}

// NewMemberdfp instantiates a new Memberdfp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberdfp() *Memberdfp {
	this := Memberdfp{}
	return &this
}

// NewMemberdfpWithDefaults instantiates a new Memberdfp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberdfpWithDefaults() *Memberdfp {
	this := Memberdfp{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *Memberdfp) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Memberdfp) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *Memberdfp) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *Memberdfp) SetRef(v string) {
	o.Ref = &v
}

// GetDfpForwardFirst returns the DfpForwardFirst field value if set, zero value otherwise.
func (o *Memberdfp) GetDfpForwardFirst() bool {
	if o == nil || IsNil(o.DfpForwardFirst) {
		var ret bool
		return ret
	}
	return *o.DfpForwardFirst
}

// GetDfpForwardFirstOk returns a tuple with the DfpForwardFirst field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Memberdfp) GetDfpForwardFirstOk() (*bool, bool) {
	if o == nil || IsNil(o.DfpForwardFirst) {
		return nil, false
	}
	return o.DfpForwardFirst, true
}

// HasDfpForwardFirst returns a boolean if a field has been set.
func (o *Memberdfp) HasDfpForwardFirst() bool {
	if o != nil && !IsNil(o.DfpForwardFirst) {
		return true
	}

	return false
}

// SetDfpForwardFirst gets a reference to the given bool and assigns it to the DfpForwardFirst field.
func (o *Memberdfp) SetDfpForwardFirst(v bool) {
	o.DfpForwardFirst = &v
}

// GetExtAttrs returns the ExtAttrs field value if set, zero value otherwise.
func (o *Memberdfp) GetExtAttrs() map[string]ExtAttrs {
	if o == nil || IsNil(o.ExtAttrs) {
		var ret map[string]ExtAttrs
		return ret
	}
	return *o.ExtAttrs
}

// GetExtAttrsOk returns a tuple with the ExtAttrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Memberdfp) GetExtAttrsOk() (*map[string]ExtAttrs, bool) {
	if o == nil || IsNil(o.ExtAttrs) {
		return nil, false
	}
	return o.ExtAttrs, true
}

// HasExtAttrs returns a boolean if a field has been set.
func (o *Memberdfp) HasExtAttrs() bool {
	if o != nil && !IsNil(o.ExtAttrs) {
		return true
	}

	return false
}

// SetExtAttrs gets a reference to the given map[string]ExtAttrs and assigns it to the ExtAttrs field.
func (o *Memberdfp) SetExtAttrs(v map[string]ExtAttrs) {
	o.ExtAttrs = &v
}

// GetHostName returns the HostName field value if set, zero value otherwise.
func (o *Memberdfp) GetHostName() string {
	if o == nil || IsNil(o.HostName) {
		var ret string
		return ret
	}
	return *o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Memberdfp) GetHostNameOk() (*string, bool) {
	if o == nil || IsNil(o.HostName) {
		return nil, false
	}
	return o.HostName, true
}

// HasHostName returns a boolean if a field has been set.
func (o *Memberdfp) HasHostName() bool {
	if o != nil && !IsNil(o.HostName) {
		return true
	}

	return false
}

// SetHostName gets a reference to the given string and assigns it to the HostName field.
func (o *Memberdfp) SetHostName(v string) {
	o.HostName = &v
}

// GetIsDfpOverride returns the IsDfpOverride field value if set, zero value otherwise.
func (o *Memberdfp) GetIsDfpOverride() bool {
	if o == nil || IsNil(o.IsDfpOverride) {
		var ret bool
		return ret
	}
	return *o.IsDfpOverride
}

// GetIsDfpOverrideOk returns a tuple with the IsDfpOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Memberdfp) GetIsDfpOverrideOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDfpOverride) {
		return nil, false
	}
	return o.IsDfpOverride, true
}

// HasIsDfpOverride returns a boolean if a field has been set.
func (o *Memberdfp) HasIsDfpOverride() bool {
	if o != nil && !IsNil(o.IsDfpOverride) {
		return true
	}

	return false
}

// SetIsDfpOverride gets a reference to the given bool and assigns it to the IsDfpOverride field.
func (o *Memberdfp) SetIsDfpOverride(v bool) {
	o.IsDfpOverride = &v
}

func (o Memberdfp) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Memberdfp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.DfpForwardFirst) {
		toSerialize["dfp_forward_first"] = o.DfpForwardFirst
	}
	if !IsNil(o.ExtAttrs) {
		toSerialize["extattrs"] = o.ExtAttrs
	}
	if !IsNil(o.HostName) {
		toSerialize["host_name"] = o.HostName
	}
	if !IsNil(o.IsDfpOverride) {
		toSerialize["is_dfp_override"] = o.IsDfpOverride
	}
	return toSerialize, nil
}

type NullableMemberdfp struct {
	value *Memberdfp
	isSet bool
}

func (v NullableMemberdfp) Get() *Memberdfp {
	return v.value
}

func (v *NullableMemberdfp) Set(val *Memberdfp) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberdfp) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberdfp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberdfp(val *Memberdfp) *NullableMemberdfp {
	return &NullableMemberdfp{value: val, isSet: true}
}

func (v NullableMemberdfp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberdfp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
