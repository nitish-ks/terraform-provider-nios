/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the MembernodeinfoLanHaPortSetting type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembernodeinfoLanHaPortSetting{}

// MembernodeinfoLanHaPortSetting struct for MembernodeinfoLanHaPortSetting
type MembernodeinfoLanHaPortSetting struct {
	// Public IPv4 address for the LAN1 interface.
	MgmtLan *string `json:"mgmt_lan,omitempty"`
	// Public IPv6 address for the LAN1 interface.
	MgmtIpv6addr *string `json:"mgmt_ipv6addr,omitempty"`
	// HA IP address.
	HaIpAddress    *string                                       `json:"ha_ip_address,omitempty"`
	LanPortSetting *MembernodeinfolanhaportsettingLanPortSetting `json:"lan_port_setting,omitempty"`
	HaPortSetting  *MembernodeinfolanhaportsettingHaPortSetting  `json:"ha_port_setting,omitempty"`
	// HA cloud interface from cloud platform side.
	HaCloudAttribute     *string `json:"ha_cloud_attribute,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MembernodeinfoLanHaPortSetting MembernodeinfoLanHaPortSetting

// NewMembernodeinfoLanHaPortSetting instantiates a new MembernodeinfoLanHaPortSetting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembernodeinfoLanHaPortSetting() *MembernodeinfoLanHaPortSetting {
	this := MembernodeinfoLanHaPortSetting{}
	return &this
}

// NewMembernodeinfoLanHaPortSettingWithDefaults instantiates a new MembernodeinfoLanHaPortSetting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembernodeinfoLanHaPortSettingWithDefaults() *MembernodeinfoLanHaPortSetting {
	this := MembernodeinfoLanHaPortSetting{}
	return &this
}

// GetMgmtLan returns the MgmtLan field value if set, zero value otherwise.
func (o *MembernodeinfoLanHaPortSetting) GetMgmtLan() string {
	if o == nil || IsNil(o.MgmtLan) {
		var ret string
		return ret
	}
	return *o.MgmtLan
}

// GetMgmtLanOk returns a tuple with the MgmtLan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembernodeinfoLanHaPortSetting) GetMgmtLanOk() (*string, bool) {
	if o == nil || IsNil(o.MgmtLan) {
		return nil, false
	}
	return o.MgmtLan, true
}

// HasMgmtLan returns a boolean if a field has been set.
func (o *MembernodeinfoLanHaPortSetting) HasMgmtLan() bool {
	if o != nil && !IsNil(o.MgmtLan) {
		return true
	}

	return false
}

// SetMgmtLan gets a reference to the given string and assigns it to the MgmtLan field.
func (o *MembernodeinfoLanHaPortSetting) SetMgmtLan(v string) {
	o.MgmtLan = &v
}

// GetMgmtIpv6addr returns the MgmtIpv6addr field value if set, zero value otherwise.
func (o *MembernodeinfoLanHaPortSetting) GetMgmtIpv6addr() string {
	if o == nil || IsNil(o.MgmtIpv6addr) {
		var ret string
		return ret
	}
	return *o.MgmtIpv6addr
}

// GetMgmtIpv6addrOk returns a tuple with the MgmtIpv6addr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembernodeinfoLanHaPortSetting) GetMgmtIpv6addrOk() (*string, bool) {
	if o == nil || IsNil(o.MgmtIpv6addr) {
		return nil, false
	}
	return o.MgmtIpv6addr, true
}

// HasMgmtIpv6addr returns a boolean if a field has been set.
func (o *MembernodeinfoLanHaPortSetting) HasMgmtIpv6addr() bool {
	if o != nil && !IsNil(o.MgmtIpv6addr) {
		return true
	}

	return false
}

// SetMgmtIpv6addr gets a reference to the given string and assigns it to the MgmtIpv6addr field.
func (o *MembernodeinfoLanHaPortSetting) SetMgmtIpv6addr(v string) {
	o.MgmtIpv6addr = &v
}

// GetHaIpAddress returns the HaIpAddress field value if set, zero value otherwise.
func (o *MembernodeinfoLanHaPortSetting) GetHaIpAddress() string {
	if o == nil || IsNil(o.HaIpAddress) {
		var ret string
		return ret
	}
	return *o.HaIpAddress
}

// GetHaIpAddressOk returns a tuple with the HaIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembernodeinfoLanHaPortSetting) GetHaIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.HaIpAddress) {
		return nil, false
	}
	return o.HaIpAddress, true
}

// HasHaIpAddress returns a boolean if a field has been set.
func (o *MembernodeinfoLanHaPortSetting) HasHaIpAddress() bool {
	if o != nil && !IsNil(o.HaIpAddress) {
		return true
	}

	return false
}

// SetHaIpAddress gets a reference to the given string and assigns it to the HaIpAddress field.
func (o *MembernodeinfoLanHaPortSetting) SetHaIpAddress(v string) {
	o.HaIpAddress = &v
}

// GetLanPortSetting returns the LanPortSetting field value if set, zero value otherwise.
func (o *MembernodeinfoLanHaPortSetting) GetLanPortSetting() MembernodeinfolanhaportsettingLanPortSetting {
	if o == nil || IsNil(o.LanPortSetting) {
		var ret MembernodeinfolanhaportsettingLanPortSetting
		return ret
	}
	return *o.LanPortSetting
}

// GetLanPortSettingOk returns a tuple with the LanPortSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembernodeinfoLanHaPortSetting) GetLanPortSettingOk() (*MembernodeinfolanhaportsettingLanPortSetting, bool) {
	if o == nil || IsNil(o.LanPortSetting) {
		return nil, false
	}
	return o.LanPortSetting, true
}

// HasLanPortSetting returns a boolean if a field has been set.
func (o *MembernodeinfoLanHaPortSetting) HasLanPortSetting() bool {
	if o != nil && !IsNil(o.LanPortSetting) {
		return true
	}

	return false
}

// SetLanPortSetting gets a reference to the given MembernodeinfolanhaportsettingLanPortSetting and assigns it to the LanPortSetting field.
func (o *MembernodeinfoLanHaPortSetting) SetLanPortSetting(v MembernodeinfolanhaportsettingLanPortSetting) {
	o.LanPortSetting = &v
}

// GetHaPortSetting returns the HaPortSetting field value if set, zero value otherwise.
func (o *MembernodeinfoLanHaPortSetting) GetHaPortSetting() MembernodeinfolanhaportsettingHaPortSetting {
	if o == nil || IsNil(o.HaPortSetting) {
		var ret MembernodeinfolanhaportsettingHaPortSetting
		return ret
	}
	return *o.HaPortSetting
}

// GetHaPortSettingOk returns a tuple with the HaPortSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembernodeinfoLanHaPortSetting) GetHaPortSettingOk() (*MembernodeinfolanhaportsettingHaPortSetting, bool) {
	if o == nil || IsNil(o.HaPortSetting) {
		return nil, false
	}
	return o.HaPortSetting, true
}

// HasHaPortSetting returns a boolean if a field has been set.
func (o *MembernodeinfoLanHaPortSetting) HasHaPortSetting() bool {
	if o != nil && !IsNil(o.HaPortSetting) {
		return true
	}

	return false
}

// SetHaPortSetting gets a reference to the given MembernodeinfolanhaportsettingHaPortSetting and assigns it to the HaPortSetting field.
func (o *MembernodeinfoLanHaPortSetting) SetHaPortSetting(v MembernodeinfolanhaportsettingHaPortSetting) {
	o.HaPortSetting = &v
}

// GetHaCloudAttribute returns the HaCloudAttribute field value if set, zero value otherwise.
func (o *MembernodeinfoLanHaPortSetting) GetHaCloudAttribute() string {
	if o == nil || IsNil(o.HaCloudAttribute) {
		var ret string
		return ret
	}
	return *o.HaCloudAttribute
}

// GetHaCloudAttributeOk returns a tuple with the HaCloudAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembernodeinfoLanHaPortSetting) GetHaCloudAttributeOk() (*string, bool) {
	if o == nil || IsNil(o.HaCloudAttribute) {
		return nil, false
	}
	return o.HaCloudAttribute, true
}

// HasHaCloudAttribute returns a boolean if a field has been set.
func (o *MembernodeinfoLanHaPortSetting) HasHaCloudAttribute() bool {
	if o != nil && !IsNil(o.HaCloudAttribute) {
		return true
	}

	return false
}

// SetHaCloudAttribute gets a reference to the given string and assigns it to the HaCloudAttribute field.
func (o *MembernodeinfoLanHaPortSetting) SetHaCloudAttribute(v string) {
	o.HaCloudAttribute = &v
}

func (o MembernodeinfoLanHaPortSetting) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembernodeinfoLanHaPortSetting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MgmtLan) {
		toSerialize["mgmt_lan"] = o.MgmtLan
	}
	if !IsNil(o.MgmtIpv6addr) {
		toSerialize["mgmt_ipv6addr"] = o.MgmtIpv6addr
	}
	if !IsNil(o.HaIpAddress) {
		toSerialize["ha_ip_address"] = o.HaIpAddress
	}
	if !IsNil(o.LanPortSetting) {
		toSerialize["lan_port_setting"] = o.LanPortSetting
	}
	if !IsNil(o.HaPortSetting) {
		toSerialize["ha_port_setting"] = o.HaPortSetting
	}
	if !IsNil(o.HaCloudAttribute) {
		toSerialize["ha_cloud_attribute"] = o.HaCloudAttribute
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MembernodeinfoLanHaPortSetting) UnmarshalJSON(data []byte) (err error) {
	varMembernodeinfoLanHaPortSetting := _MembernodeinfoLanHaPortSetting{}

	err = json.Unmarshal(data, &varMembernodeinfoLanHaPortSetting)

	if err != nil {
		return err
	}

	*o = MembernodeinfoLanHaPortSetting(varMembernodeinfoLanHaPortSetting)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "mgmt_lan")
		delete(additionalProperties, "mgmt_ipv6addr")
		delete(additionalProperties, "ha_ip_address")
		delete(additionalProperties, "lan_port_setting")
		delete(additionalProperties, "ha_port_setting")
		delete(additionalProperties, "ha_cloud_attribute")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMembernodeinfoLanHaPortSetting struct {
	value *MembernodeinfoLanHaPortSetting
	isSet bool
}

func (v NullableMembernodeinfoLanHaPortSetting) Get() *MembernodeinfoLanHaPortSetting {
	return v.value
}

func (v *NullableMembernodeinfoLanHaPortSetting) Set(val *MembernodeinfoLanHaPortSetting) {
	v.value = val
	v.isSet = true
}

func (v NullableMembernodeinfoLanHaPortSetting) IsSet() bool {
	return v.isSet
}

func (v *NullableMembernodeinfoLanHaPortSetting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembernodeinfoLanHaPortSetting(val *MembernodeinfoLanHaPortSetting) *NullableMembernodeinfoLanHaPortSetting {
	return &NullableMembernodeinfoLanHaPortSetting{value: val, isSet: true}
}

func (v NullableMembernodeinfoLanHaPortSetting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembernodeinfoLanHaPortSetting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
