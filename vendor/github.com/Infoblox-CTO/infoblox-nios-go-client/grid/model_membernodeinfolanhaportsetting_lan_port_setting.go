/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the MembernodeinfolanhaportsettingLanPortSetting type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembernodeinfolanhaportsettingLanPortSetting{}

// MembernodeinfolanhaportsettingLanPortSetting struct for MembernodeinfolanhaportsettingLanPortSetting
type MembernodeinfolanhaportsettingLanPortSetting struct {
	// Enable or disalbe the auto port setting.
	AutoPortSettingEnabled *bool `json:"auto_port_setting_enabled,omitempty"`
	// The port speed; if speed is 1000, duplex is FULL.
	Speed *string `json:"speed,omitempty"`
	// The port duplex; if speed is 1000, duplex must be FULL.
	Duplex               *string `json:"duplex,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MembernodeinfolanhaportsettingLanPortSetting MembernodeinfolanhaportsettingLanPortSetting

// NewMembernodeinfolanhaportsettingLanPortSetting instantiates a new MembernodeinfolanhaportsettingLanPortSetting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembernodeinfolanhaportsettingLanPortSetting() *MembernodeinfolanhaportsettingLanPortSetting {
	this := MembernodeinfolanhaportsettingLanPortSetting{}
	return &this
}

// NewMembernodeinfolanhaportsettingLanPortSettingWithDefaults instantiates a new MembernodeinfolanhaportsettingLanPortSetting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembernodeinfolanhaportsettingLanPortSettingWithDefaults() *MembernodeinfolanhaportsettingLanPortSetting {
	this := MembernodeinfolanhaportsettingLanPortSetting{}
	return &this
}

// GetAutoPortSettingEnabled returns the AutoPortSettingEnabled field value if set, zero value otherwise.
func (o *MembernodeinfolanhaportsettingLanPortSetting) GetAutoPortSettingEnabled() bool {
	if o == nil || IsNil(o.AutoPortSettingEnabled) {
		var ret bool
		return ret
	}
	return *o.AutoPortSettingEnabled
}

// GetAutoPortSettingEnabledOk returns a tuple with the AutoPortSettingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembernodeinfolanhaportsettingLanPortSetting) GetAutoPortSettingEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoPortSettingEnabled) {
		return nil, false
	}
	return o.AutoPortSettingEnabled, true
}

// HasAutoPortSettingEnabled returns a boolean if a field has been set.
func (o *MembernodeinfolanhaportsettingLanPortSetting) HasAutoPortSettingEnabled() bool {
	if o != nil && !IsNil(o.AutoPortSettingEnabled) {
		return true
	}

	return false
}

// SetAutoPortSettingEnabled gets a reference to the given bool and assigns it to the AutoPortSettingEnabled field.
func (o *MembernodeinfolanhaportsettingLanPortSetting) SetAutoPortSettingEnabled(v bool) {
	o.AutoPortSettingEnabled = &v
}

// GetSpeed returns the Speed field value if set, zero value otherwise.
func (o *MembernodeinfolanhaportsettingLanPortSetting) GetSpeed() string {
	if o == nil || IsNil(o.Speed) {
		var ret string
		return ret
	}
	return *o.Speed
}

// GetSpeedOk returns a tuple with the Speed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembernodeinfolanhaportsettingLanPortSetting) GetSpeedOk() (*string, bool) {
	if o == nil || IsNil(o.Speed) {
		return nil, false
	}
	return o.Speed, true
}

// HasSpeed returns a boolean if a field has been set.
func (o *MembernodeinfolanhaportsettingLanPortSetting) HasSpeed() bool {
	if o != nil && !IsNil(o.Speed) {
		return true
	}

	return false
}

// SetSpeed gets a reference to the given string and assigns it to the Speed field.
func (o *MembernodeinfolanhaportsettingLanPortSetting) SetSpeed(v string) {
	o.Speed = &v
}

// GetDuplex returns the Duplex field value if set, zero value otherwise.
func (o *MembernodeinfolanhaportsettingLanPortSetting) GetDuplex() string {
	if o == nil || IsNil(o.Duplex) {
		var ret string
		return ret
	}
	return *o.Duplex
}

// GetDuplexOk returns a tuple with the Duplex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembernodeinfolanhaportsettingLanPortSetting) GetDuplexOk() (*string, bool) {
	if o == nil || IsNil(o.Duplex) {
		return nil, false
	}
	return o.Duplex, true
}

// HasDuplex returns a boolean if a field has been set.
func (o *MembernodeinfolanhaportsettingLanPortSetting) HasDuplex() bool {
	if o != nil && !IsNil(o.Duplex) {
		return true
	}

	return false
}

// SetDuplex gets a reference to the given string and assigns it to the Duplex field.
func (o *MembernodeinfolanhaportsettingLanPortSetting) SetDuplex(v string) {
	o.Duplex = &v
}

func (o MembernodeinfolanhaportsettingLanPortSetting) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembernodeinfolanhaportsettingLanPortSetting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AutoPortSettingEnabled) {
		toSerialize["auto_port_setting_enabled"] = o.AutoPortSettingEnabled
	}
	if !IsNil(o.Speed) {
		toSerialize["speed"] = o.Speed
	}
	if !IsNil(o.Duplex) {
		toSerialize["duplex"] = o.Duplex
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MembernodeinfolanhaportsettingLanPortSetting) UnmarshalJSON(data []byte) (err error) {
	varMembernodeinfolanhaportsettingLanPortSetting := _MembernodeinfolanhaportsettingLanPortSetting{}

	err = json.Unmarshal(data, &varMembernodeinfolanhaportsettingLanPortSetting)

	if err != nil {
		return err
	}

	*o = MembernodeinfolanhaportsettingLanPortSetting(varMembernodeinfolanhaportsettingLanPortSetting)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "auto_port_setting_enabled")
		delete(additionalProperties, "speed")
		delete(additionalProperties, "duplex")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMembernodeinfolanhaportsettingLanPortSetting struct {
	value *MembernodeinfolanhaportsettingLanPortSetting
	isSet bool
}

func (v NullableMembernodeinfolanhaportsettingLanPortSetting) Get() *MembernodeinfolanhaportsettingLanPortSetting {
	return v.value
}

func (v *NullableMembernodeinfolanhaportsettingLanPortSetting) Set(val *MembernodeinfolanhaportsettingLanPortSetting) {
	v.value = val
	v.isSet = true
}

func (v NullableMembernodeinfolanhaportsettingLanPortSetting) IsSet() bool {
	return v.isSet
}

func (v *NullableMembernodeinfolanhaportsettingLanPortSetting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembernodeinfolanhaportsettingLanPortSetting(val *MembernodeinfolanhaportsettingLanPortSetting) *NullableMembernodeinfolanhaportsettingLanPortSetting {
	return &NullableMembernodeinfolanhaportsettingLanPortSetting{value: val, isSet: true}
}

func (v NullableMembernodeinfolanhaportsettingLanPortSetting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembernodeinfolanhaportsettingLanPortSetting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
