/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the MemberntpsettingntpaclAcList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberntpsettingntpaclAcList{}

// MemberntpsettingntpaclAcList struct for MemberntpsettingntpaclAcList
type MemberntpsettingntpaclAcList struct {
	AddressAc *MemberntpsettingntpaclaclistAddressAc `json:"address_ac,omitempty"`
	// The type of service with access control.
	Service              *string `json:"service,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MemberntpsettingntpaclAcList MemberntpsettingntpaclAcList

// NewMemberntpsettingntpaclAcList instantiates a new MemberntpsettingntpaclAcList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberntpsettingntpaclAcList() *MemberntpsettingntpaclAcList {
	this := MemberntpsettingntpaclAcList{}
	return &this
}

// NewMemberntpsettingntpaclAcListWithDefaults instantiates a new MemberntpsettingntpaclAcList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberntpsettingntpaclAcListWithDefaults() *MemberntpsettingntpaclAcList {
	this := MemberntpsettingntpaclAcList{}
	return &this
}

// GetAddressAc returns the AddressAc field value if set, zero value otherwise.
func (o *MemberntpsettingntpaclAcList) GetAddressAc() MemberntpsettingntpaclaclistAddressAc {
	if o == nil || IsNil(o.AddressAc) {
		var ret MemberntpsettingntpaclaclistAddressAc
		return ret
	}
	return *o.AddressAc
}

// GetAddressAcOk returns a tuple with the AddressAc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberntpsettingntpaclAcList) GetAddressAcOk() (*MemberntpsettingntpaclaclistAddressAc, bool) {
	if o == nil || IsNil(o.AddressAc) {
		return nil, false
	}
	return o.AddressAc, true
}

// HasAddressAc returns a boolean if a field has been set.
func (o *MemberntpsettingntpaclAcList) HasAddressAc() bool {
	if o != nil && !IsNil(o.AddressAc) {
		return true
	}

	return false
}

// SetAddressAc gets a reference to the given MemberntpsettingntpaclaclistAddressAc and assigns it to the AddressAc field.
func (o *MemberntpsettingntpaclAcList) SetAddressAc(v MemberntpsettingntpaclaclistAddressAc) {
	o.AddressAc = &v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *MemberntpsettingntpaclAcList) GetService() string {
	if o == nil || IsNil(o.Service) {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberntpsettingntpaclAcList) GetServiceOk() (*string, bool) {
	if o == nil || IsNil(o.Service) {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *MemberntpsettingntpaclAcList) HasService() bool {
	if o != nil && !IsNil(o.Service) {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *MemberntpsettingntpaclAcList) SetService(v string) {
	o.Service = &v
}

func (o MemberntpsettingntpaclAcList) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberntpsettingntpaclAcList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AddressAc) {
		toSerialize["address_ac"] = o.AddressAc
	}
	if !IsNil(o.Service) {
		toSerialize["service"] = o.Service
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MemberntpsettingntpaclAcList) UnmarshalJSON(data []byte) (err error) {
	varMemberntpsettingntpaclAcList := _MemberntpsettingntpaclAcList{}

	err = json.Unmarshal(data, &varMemberntpsettingntpaclAcList)

	if err != nil {
		return err
	}

	*o = MemberntpsettingntpaclAcList(varMemberntpsettingntpaclAcList)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "address_ac")
		delete(additionalProperties, "service")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMemberntpsettingntpaclAcList struct {
	value *MemberntpsettingntpaclAcList
	isSet bool
}

func (v NullableMemberntpsettingntpaclAcList) Get() *MemberntpsettingntpaclAcList {
	return v.value
}

func (v *NullableMemberntpsettingntpaclAcList) Set(val *MemberntpsettingntpaclAcList) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberntpsettingntpaclAcList) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberntpsettingntpaclAcList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberntpsettingntpaclAcList(val *MemberntpsettingntpaclAcList) *NullableMemberntpsettingntpaclAcList {
	return &NullableMemberntpsettingntpaclAcList{value: val, isSet: true}
}

func (v NullableMemberntpsettingntpaclAcList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberntpsettingntpaclAcList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
