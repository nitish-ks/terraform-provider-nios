/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the MemberpreprovisioningHardwareInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberpreprovisioningHardwareInfo{}

// MemberpreprovisioningHardwareInfo struct for MemberpreprovisioningHardwareInfo
type MemberpreprovisioningHardwareInfo struct {
	// Hardware type.
	Hwtype *string `json:"hwtype,omitempty"`
	// Hardware model - for IB-4010 are Rev1, Rev2; for IB-4030 are Rev1, Rev2; for PT-4000 is Rev2; for IB-VNIOS are IB-VM-100, IB-VM-810, IB-VM-820, IB-VM-RSP, IB-VM-1410, IB-VM-1420, IB-VM-2210, IB-VM-2220, IB-VM-4010, CP-V800, CP-V1400, CP-V2200. Note that you cannot specify hwmodel for following hardware types: IB-FLEX, IB-V2215, IB-V1425, IB-V4025, IB-V4015, IB-V1415, IB-V815, IB-V825, IB-V2225, CP-V805, CP-V1405, CP-V2205, IB-2215, IB-2225.
	Hwmodel              *string `json:"hwmodel,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MemberpreprovisioningHardwareInfo MemberpreprovisioningHardwareInfo

// NewMemberpreprovisioningHardwareInfo instantiates a new MemberpreprovisioningHardwareInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberpreprovisioningHardwareInfo() *MemberpreprovisioningHardwareInfo {
	this := MemberpreprovisioningHardwareInfo{}
	return &this
}

// NewMemberpreprovisioningHardwareInfoWithDefaults instantiates a new MemberpreprovisioningHardwareInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberpreprovisioningHardwareInfoWithDefaults() *MemberpreprovisioningHardwareInfo {
	this := MemberpreprovisioningHardwareInfo{}
	return &this
}

// GetHwtype returns the Hwtype field value if set, zero value otherwise.
func (o *MemberpreprovisioningHardwareInfo) GetHwtype() string {
	if o == nil || IsNil(o.Hwtype) {
		var ret string
		return ret
	}
	return *o.Hwtype
}

// GetHwtypeOk returns a tuple with the Hwtype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberpreprovisioningHardwareInfo) GetHwtypeOk() (*string, bool) {
	if o == nil || IsNil(o.Hwtype) {
		return nil, false
	}
	return o.Hwtype, true
}

// HasHwtype returns a boolean if a field has been set.
func (o *MemberpreprovisioningHardwareInfo) HasHwtype() bool {
	if o != nil && !IsNil(o.Hwtype) {
		return true
	}

	return false
}

// SetHwtype gets a reference to the given string and assigns it to the Hwtype field.
func (o *MemberpreprovisioningHardwareInfo) SetHwtype(v string) {
	o.Hwtype = &v
}

// GetHwmodel returns the Hwmodel field value if set, zero value otherwise.
func (o *MemberpreprovisioningHardwareInfo) GetHwmodel() string {
	if o == nil || IsNil(o.Hwmodel) {
		var ret string
		return ret
	}
	return *o.Hwmodel
}

// GetHwmodelOk returns a tuple with the Hwmodel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberpreprovisioningHardwareInfo) GetHwmodelOk() (*string, bool) {
	if o == nil || IsNil(o.Hwmodel) {
		return nil, false
	}
	return o.Hwmodel, true
}

// HasHwmodel returns a boolean if a field has been set.
func (o *MemberpreprovisioningHardwareInfo) HasHwmodel() bool {
	if o != nil && !IsNil(o.Hwmodel) {
		return true
	}

	return false
}

// SetHwmodel gets a reference to the given string and assigns it to the Hwmodel field.
func (o *MemberpreprovisioningHardwareInfo) SetHwmodel(v string) {
	o.Hwmodel = &v
}

func (o MemberpreprovisioningHardwareInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberpreprovisioningHardwareInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Hwtype) {
		toSerialize["hwtype"] = o.Hwtype
	}
	if !IsNil(o.Hwmodel) {
		toSerialize["hwmodel"] = o.Hwmodel
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MemberpreprovisioningHardwareInfo) UnmarshalJSON(data []byte) (err error) {
	varMemberpreprovisioningHardwareInfo := _MemberpreprovisioningHardwareInfo{}

	err = json.Unmarshal(data, &varMemberpreprovisioningHardwareInfo)

	if err != nil {
		return err
	}

	*o = MemberpreprovisioningHardwareInfo(varMemberpreprovisioningHardwareInfo)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "hwtype")
		delete(additionalProperties, "hwmodel")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMemberpreprovisioningHardwareInfo struct {
	value *MemberpreprovisioningHardwareInfo
	isSet bool
}

func (v NullableMemberpreprovisioningHardwareInfo) Get() *MemberpreprovisioningHardwareInfo {
	return v.value
}

func (v *NullableMemberpreprovisioningHardwareInfo) Set(val *MemberpreprovisioningHardwareInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberpreprovisioningHardwareInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberpreprovisioningHardwareInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberpreprovisioningHardwareInfo(val *MemberpreprovisioningHardwareInfo) *NullableMemberpreprovisioningHardwareInfo {
	return &NullableMemberpreprovisioningHardwareInfo{value: val, isSet: true}
}

func (v NullableMemberpreprovisioningHardwareInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberpreprovisioningHardwareInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
