/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
	"fmt"
)

// UpdateExtensibleattributedefResponse - struct for UpdateExtensibleattributedefResponse
type UpdateExtensibleattributedefResponse struct {
	UpdateExtensibleattributedefResponseAsObject *UpdateExtensibleattributedefResponseAsObject
	String                                       *string
}

// UpdateExtensibleattributedefResponseAsObjectAsUpdateExtensibleattributedefResponse is a convenience function that returns UpdateExtensibleattributedefResponseAsObject wrapped in UpdateExtensibleattributedefResponse
func UpdateExtensibleattributedefResponseAsObjectAsUpdateExtensibleattributedefResponse(v *UpdateExtensibleattributedefResponseAsObject) UpdateExtensibleattributedefResponse {
	return UpdateExtensibleattributedefResponse{
		UpdateExtensibleattributedefResponseAsObject: v,
	}
}

// stringAsUpdateExtensibleattributedefResponse is a convenience function that returns string wrapped in UpdateExtensibleattributedefResponse
func StringAsUpdateExtensibleattributedefResponse(v *string) UpdateExtensibleattributedefResponse {
	return UpdateExtensibleattributedefResponse{
		String: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *UpdateExtensibleattributedefResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into UpdateExtensibleattributedefResponseAsObject
	err = newStrictDecoder(data).Decode(&dst.UpdateExtensibleattributedefResponseAsObject)
	if err == nil {
		jsonUpdateExtensibleattributedefResponseAsObject, _ := json.Marshal(dst.UpdateExtensibleattributedefResponseAsObject)
		if string(jsonUpdateExtensibleattributedefResponseAsObject) == "{}" { // empty struct
			dst.UpdateExtensibleattributedefResponseAsObject = nil
		} else {
			match++
		}
	} else {
		dst.UpdateExtensibleattributedefResponseAsObject = nil
	}

	// try to unmarshal data into String
	err = newStrictDecoder(data).Decode(&dst.String)
	if err == nil {
		jsonString, _ := json.Marshal(dst.String)
		if string(jsonString) == "{}" { // empty struct
			dst.String = nil
		} else {
			match++
		}
	} else {
		dst.String = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.UpdateExtensibleattributedefResponseAsObject = nil
		dst.String = nil

		return fmt.Errorf("data matches more than one schema in oneOf(UpdateExtensibleattributedefResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(UpdateExtensibleattributedefResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src UpdateExtensibleattributedefResponse) MarshalJSON() ([]byte, error) {
	if src.UpdateExtensibleattributedefResponseAsObject != nil {
		return json.Marshal(&src.UpdateExtensibleattributedefResponseAsObject)
	}

	if src.String != nil {
		return json.Marshal(&src.String)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *UpdateExtensibleattributedefResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.UpdateExtensibleattributedefResponseAsObject != nil {
		return obj.UpdateExtensibleattributedefResponseAsObject
	}

	if obj.String != nil {
		return obj.String
	}

	// all schemas are nil
	return nil
}

type NullableUpdateExtensibleattributedefResponse struct {
	value *UpdateExtensibleattributedefResponse
	isSet bool
}

func (v NullableUpdateExtensibleattributedefResponse) Get() *UpdateExtensibleattributedefResponse {
	return v.value
}

func (v *NullableUpdateExtensibleattributedefResponse) Set(val *UpdateExtensibleattributedefResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateExtensibleattributedefResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateExtensibleattributedefResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateExtensibleattributedefResponse(val *UpdateExtensibleattributedefResponse) *NullableUpdateExtensibleattributedefResponse {
	return &NullableUpdateExtensibleattributedefResponse{value: val, isSet: true}
}

func (v NullableUpdateExtensibleattributedefResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateExtensibleattributedefResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
