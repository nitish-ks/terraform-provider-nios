/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
	"fmt"
)

// UpdateGridCloudapiVmaddressResponse - struct for UpdateGridCloudapiVmaddressResponse
type UpdateGridCloudapiVmaddressResponse struct {
	UpdateGridCloudapiVmaddressResponseAsObject *UpdateGridCloudapiVmaddressResponseAsObject
	String                                      *string
}

// UpdateGridCloudapiVmaddressResponseAsObjectAsUpdateGridCloudapiVmaddressResponse is a convenience function that returns UpdateGridCloudapiVmaddressResponseAsObject wrapped in UpdateGridCloudapiVmaddressResponse
func UpdateGridCloudapiVmaddressResponseAsObjectAsUpdateGridCloudapiVmaddressResponse(v *UpdateGridCloudapiVmaddressResponseAsObject) UpdateGridCloudapiVmaddressResponse {
	return UpdateGridCloudapiVmaddressResponse{
		UpdateGridCloudapiVmaddressResponseAsObject: v,
	}
}

// stringAsUpdateGridCloudapiVmaddressResponse is a convenience function that returns string wrapped in UpdateGridCloudapiVmaddressResponse
func StringAsUpdateGridCloudapiVmaddressResponse(v *string) UpdateGridCloudapiVmaddressResponse {
	return UpdateGridCloudapiVmaddressResponse{
		String: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *UpdateGridCloudapiVmaddressResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into UpdateGridCloudapiVmaddressResponseAsObject
	err = newStrictDecoder(data).Decode(&dst.UpdateGridCloudapiVmaddressResponseAsObject)
	if err == nil {
		jsonUpdateGridCloudapiVmaddressResponseAsObject, _ := json.Marshal(dst.UpdateGridCloudapiVmaddressResponseAsObject)
		if string(jsonUpdateGridCloudapiVmaddressResponseAsObject) == "{}" { // empty struct
			dst.UpdateGridCloudapiVmaddressResponseAsObject = nil
		} else {
			match++
		}
	} else {
		dst.UpdateGridCloudapiVmaddressResponseAsObject = nil
	}

	// try to unmarshal data into String
	err = newStrictDecoder(data).Decode(&dst.String)
	if err == nil {
		jsonString, _ := json.Marshal(dst.String)
		if string(jsonString) == "{}" { // empty struct
			dst.String = nil
		} else {
			match++
		}
	} else {
		dst.String = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.UpdateGridCloudapiVmaddressResponseAsObject = nil
		dst.String = nil

		return fmt.Errorf("data matches more than one schema in oneOf(UpdateGridCloudapiVmaddressResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(UpdateGridCloudapiVmaddressResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src UpdateGridCloudapiVmaddressResponse) MarshalJSON() ([]byte, error) {
	if src.UpdateGridCloudapiVmaddressResponseAsObject != nil {
		return json.Marshal(&src.UpdateGridCloudapiVmaddressResponseAsObject)
	}

	if src.String != nil {
		return json.Marshal(&src.String)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *UpdateGridCloudapiVmaddressResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.UpdateGridCloudapiVmaddressResponseAsObject != nil {
		return obj.UpdateGridCloudapiVmaddressResponseAsObject
	}

	if obj.String != nil {
		return obj.String
	}

	// all schemas are nil
	return nil
}

type NullableUpdateGridCloudapiVmaddressResponse struct {
	value *UpdateGridCloudapiVmaddressResponse
	isSet bool
}

func (v NullableUpdateGridCloudapiVmaddressResponse) Get() *UpdateGridCloudapiVmaddressResponse {
	return v.value
}

func (v *NullableUpdateGridCloudapiVmaddressResponse) Set(val *UpdateGridCloudapiVmaddressResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateGridCloudapiVmaddressResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateGridCloudapiVmaddressResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateGridCloudapiVmaddressResponse(val *UpdateGridCloudapiVmaddressResponse) *NullableUpdateGridCloudapiVmaddressResponse {
	return &NullableUpdateGridCloudapiVmaddressResponse{value: val, isSet: true}
}

func (v NullableUpdateGridCloudapiVmaddressResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateGridCloudapiVmaddressResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
