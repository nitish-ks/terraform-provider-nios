/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
	"fmt"
)

// UpdateMemberdfpResponse - struct for UpdateMemberdfpResponse
type UpdateMemberdfpResponse struct {
	UpdateMemberdfpResponseAsObject *UpdateMemberdfpResponseAsObject
	String                          *string
}

// UpdateMemberdfpResponseAsObjectAsUpdateMemberdfpResponse is a convenience function that returns UpdateMemberdfpResponseAsObject wrapped in UpdateMemberdfpResponse
func UpdateMemberdfpResponseAsObjectAsUpdateMemberdfpResponse(v *UpdateMemberdfpResponseAsObject) UpdateMemberdfpResponse {
	return UpdateMemberdfpResponse{
		UpdateMemberdfpResponseAsObject: v,
	}
}

// stringAsUpdateMemberdfpResponse is a convenience function that returns string wrapped in UpdateMemberdfpResponse
func StringAsUpdateMemberdfpResponse(v *string) UpdateMemberdfpResponse {
	return UpdateMemberdfpResponse{
		String: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *UpdateMemberdfpResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into UpdateMemberdfpResponseAsObject
	err = newStrictDecoder(data).Decode(&dst.UpdateMemberdfpResponseAsObject)
	if err == nil {
		jsonUpdateMemberdfpResponseAsObject, _ := json.Marshal(dst.UpdateMemberdfpResponseAsObject)
		if string(jsonUpdateMemberdfpResponseAsObject) == "{}" { // empty struct
			dst.UpdateMemberdfpResponseAsObject = nil
		} else {
			match++
		}
	} else {
		dst.UpdateMemberdfpResponseAsObject = nil
	}

	// try to unmarshal data into String
	err = newStrictDecoder(data).Decode(&dst.String)
	if err == nil {
		jsonString, _ := json.Marshal(dst.String)
		if string(jsonString) == "{}" { // empty struct
			dst.String = nil
		} else {
			match++
		}
	} else {
		dst.String = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.UpdateMemberdfpResponseAsObject = nil
		dst.String = nil

		return fmt.Errorf("data matches more than one schema in oneOf(UpdateMemberdfpResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(UpdateMemberdfpResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src UpdateMemberdfpResponse) MarshalJSON() ([]byte, error) {
	if src.UpdateMemberdfpResponseAsObject != nil {
		return json.Marshal(&src.UpdateMemberdfpResponseAsObject)
	}

	if src.String != nil {
		return json.Marshal(&src.String)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *UpdateMemberdfpResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.UpdateMemberdfpResponseAsObject != nil {
		return obj.UpdateMemberdfpResponseAsObject
	}

	if obj.String != nil {
		return obj.String
	}

	// all schemas are nil
	return nil
}

type NullableUpdateMemberdfpResponse struct {
	value *UpdateMemberdfpResponse
	isSet bool
}

func (v NullableUpdateMemberdfpResponse) Get() *UpdateMemberdfpResponse {
	return v.value
}

func (v *NullableUpdateMemberdfpResponse) Set(val *UpdateMemberdfpResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateMemberdfpResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateMemberdfpResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateMemberdfpResponse(val *UpdateMemberdfpResponse) *NullableUpdateMemberdfpResponse {
	return &NullableUpdateMemberdfpResponse{value: val, isSet: true}
}

func (v NullableUpdateMemberdfpResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateMemberdfpResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
