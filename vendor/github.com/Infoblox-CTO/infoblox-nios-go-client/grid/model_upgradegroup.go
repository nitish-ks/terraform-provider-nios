/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the Upgradegroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Upgradegroup{}

// Upgradegroup struct for Upgradegroup
type Upgradegroup struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// The upgrade group descriptive comment.
	Comment *string `json:"comment,omitempty"`
	// The distribution dependent group name.
	DistributionDependentGroup *string `json:"distribution_dependent_group,omitempty"`
	// The distribution scheduling policy.
	DistributionPolicy *string `json:"distribution_policy,omitempty"`
	// The time of the next scheduled distribution.
	DistributionTime *int64 `json:"distribution_time,omitempty"`
	// The upgrade group members.
	Members []UpgradegroupMembers `json:"members,omitempty"`
	// The upgrade group name.
	Name *string `json:"name,omitempty"`
	// The time zone for scheduling operations.
	TimeZone *string `json:"time_zone,omitempty"`
	// The upgrade dependent group name.
	UpgradeDependentGroup *string `json:"upgrade_dependent_group,omitempty"`
	// The upgrade scheduling policy.
	UpgradePolicy *string `json:"upgrade_policy,omitempty"`
	// The time of the next scheduled upgrade.
	UpgradeTime *int64 `json:"upgrade_time,omitempty"`
}

// NewUpgradegroup instantiates a new Upgradegroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpgradegroup() *Upgradegroup {
	this := Upgradegroup{}
	return &this
}

// NewUpgradegroupWithDefaults instantiates a new Upgradegroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpgradegroupWithDefaults() *Upgradegroup {
	this := Upgradegroup{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *Upgradegroup) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Upgradegroup) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *Upgradegroup) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *Upgradegroup) SetRef(v string) {
	o.Ref = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *Upgradegroup) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Upgradegroup) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *Upgradegroup) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *Upgradegroup) SetComment(v string) {
	o.Comment = &v
}

// GetDistributionDependentGroup returns the DistributionDependentGroup field value if set, zero value otherwise.
func (o *Upgradegroup) GetDistributionDependentGroup() string {
	if o == nil || IsNil(o.DistributionDependentGroup) {
		var ret string
		return ret
	}
	return *o.DistributionDependentGroup
}

// GetDistributionDependentGroupOk returns a tuple with the DistributionDependentGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Upgradegroup) GetDistributionDependentGroupOk() (*string, bool) {
	if o == nil || IsNil(o.DistributionDependentGroup) {
		return nil, false
	}
	return o.DistributionDependentGroup, true
}

// HasDistributionDependentGroup returns a boolean if a field has been set.
func (o *Upgradegroup) HasDistributionDependentGroup() bool {
	if o != nil && !IsNil(o.DistributionDependentGroup) {
		return true
	}

	return false
}

// SetDistributionDependentGroup gets a reference to the given string and assigns it to the DistributionDependentGroup field.
func (o *Upgradegroup) SetDistributionDependentGroup(v string) {
	o.DistributionDependentGroup = &v
}

// GetDistributionPolicy returns the DistributionPolicy field value if set, zero value otherwise.
func (o *Upgradegroup) GetDistributionPolicy() string {
	if o == nil || IsNil(o.DistributionPolicy) {
		var ret string
		return ret
	}
	return *o.DistributionPolicy
}

// GetDistributionPolicyOk returns a tuple with the DistributionPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Upgradegroup) GetDistributionPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.DistributionPolicy) {
		return nil, false
	}
	return o.DistributionPolicy, true
}

// HasDistributionPolicy returns a boolean if a field has been set.
func (o *Upgradegroup) HasDistributionPolicy() bool {
	if o != nil && !IsNil(o.DistributionPolicy) {
		return true
	}

	return false
}

// SetDistributionPolicy gets a reference to the given string and assigns it to the DistributionPolicy field.
func (o *Upgradegroup) SetDistributionPolicy(v string) {
	o.DistributionPolicy = &v
}

// GetDistributionTime returns the DistributionTime field value if set, zero value otherwise.
func (o *Upgradegroup) GetDistributionTime() int64 {
	if o == nil || IsNil(o.DistributionTime) {
		var ret int64
		return ret
	}
	return *o.DistributionTime
}

// GetDistributionTimeOk returns a tuple with the DistributionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Upgradegroup) GetDistributionTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.DistributionTime) {
		return nil, false
	}
	return o.DistributionTime, true
}

// HasDistributionTime returns a boolean if a field has been set.
func (o *Upgradegroup) HasDistributionTime() bool {
	if o != nil && !IsNil(o.DistributionTime) {
		return true
	}

	return false
}

// SetDistributionTime gets a reference to the given int64 and assigns it to the DistributionTime field.
func (o *Upgradegroup) SetDistributionTime(v int64) {
	o.DistributionTime = &v
}

// GetMembers returns the Members field value if set, zero value otherwise.
func (o *Upgradegroup) GetMembers() []UpgradegroupMembers {
	if o == nil || IsNil(o.Members) {
		var ret []UpgradegroupMembers
		return ret
	}
	return o.Members
}

// GetMembersOk returns a tuple with the Members field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Upgradegroup) GetMembersOk() ([]UpgradegroupMembers, bool) {
	if o == nil || IsNil(o.Members) {
		return nil, false
	}
	return o.Members, true
}

// HasMembers returns a boolean if a field has been set.
func (o *Upgradegroup) HasMembers() bool {
	if o != nil && !IsNil(o.Members) {
		return true
	}

	return false
}

// SetMembers gets a reference to the given []UpgradegroupMembers and assigns it to the Members field.
func (o *Upgradegroup) SetMembers(v []UpgradegroupMembers) {
	o.Members = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Upgradegroup) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Upgradegroup) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Upgradegroup) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Upgradegroup) SetName(v string) {
	o.Name = &v
}

// GetTimeZone returns the TimeZone field value if set, zero value otherwise.
func (o *Upgradegroup) GetTimeZone() string {
	if o == nil || IsNil(o.TimeZone) {
		var ret string
		return ret
	}
	return *o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Upgradegroup) GetTimeZoneOk() (*string, bool) {
	if o == nil || IsNil(o.TimeZone) {
		return nil, false
	}
	return o.TimeZone, true
}

// HasTimeZone returns a boolean if a field has been set.
func (o *Upgradegroup) HasTimeZone() bool {
	if o != nil && !IsNil(o.TimeZone) {
		return true
	}

	return false
}

// SetTimeZone gets a reference to the given string and assigns it to the TimeZone field.
func (o *Upgradegroup) SetTimeZone(v string) {
	o.TimeZone = &v
}

// GetUpgradeDependentGroup returns the UpgradeDependentGroup field value if set, zero value otherwise.
func (o *Upgradegroup) GetUpgradeDependentGroup() string {
	if o == nil || IsNil(o.UpgradeDependentGroup) {
		var ret string
		return ret
	}
	return *o.UpgradeDependentGroup
}

// GetUpgradeDependentGroupOk returns a tuple with the UpgradeDependentGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Upgradegroup) GetUpgradeDependentGroupOk() (*string, bool) {
	if o == nil || IsNil(o.UpgradeDependentGroup) {
		return nil, false
	}
	return o.UpgradeDependentGroup, true
}

// HasUpgradeDependentGroup returns a boolean if a field has been set.
func (o *Upgradegroup) HasUpgradeDependentGroup() bool {
	if o != nil && !IsNil(o.UpgradeDependentGroup) {
		return true
	}

	return false
}

// SetUpgradeDependentGroup gets a reference to the given string and assigns it to the UpgradeDependentGroup field.
func (o *Upgradegroup) SetUpgradeDependentGroup(v string) {
	o.UpgradeDependentGroup = &v
}

// GetUpgradePolicy returns the UpgradePolicy field value if set, zero value otherwise.
func (o *Upgradegroup) GetUpgradePolicy() string {
	if o == nil || IsNil(o.UpgradePolicy) {
		var ret string
		return ret
	}
	return *o.UpgradePolicy
}

// GetUpgradePolicyOk returns a tuple with the UpgradePolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Upgradegroup) GetUpgradePolicyOk() (*string, bool) {
	if o == nil || IsNil(o.UpgradePolicy) {
		return nil, false
	}
	return o.UpgradePolicy, true
}

// HasUpgradePolicy returns a boolean if a field has been set.
func (o *Upgradegroup) HasUpgradePolicy() bool {
	if o != nil && !IsNil(o.UpgradePolicy) {
		return true
	}

	return false
}

// SetUpgradePolicy gets a reference to the given string and assigns it to the UpgradePolicy field.
func (o *Upgradegroup) SetUpgradePolicy(v string) {
	o.UpgradePolicy = &v
}

// GetUpgradeTime returns the UpgradeTime field value if set, zero value otherwise.
func (o *Upgradegroup) GetUpgradeTime() int64 {
	if o == nil || IsNil(o.UpgradeTime) {
		var ret int64
		return ret
	}
	return *o.UpgradeTime
}

// GetUpgradeTimeOk returns a tuple with the UpgradeTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Upgradegroup) GetUpgradeTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.UpgradeTime) {
		return nil, false
	}
	return o.UpgradeTime, true
}

// HasUpgradeTime returns a boolean if a field has been set.
func (o *Upgradegroup) HasUpgradeTime() bool {
	if o != nil && !IsNil(o.UpgradeTime) {
		return true
	}

	return false
}

// SetUpgradeTime gets a reference to the given int64 and assigns it to the UpgradeTime field.
func (o *Upgradegroup) SetUpgradeTime(v int64) {
	o.UpgradeTime = &v
}

func (o Upgradegroup) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Upgradegroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.DistributionDependentGroup) {
		toSerialize["distribution_dependent_group"] = o.DistributionDependentGroup
	}
	if !IsNil(o.DistributionPolicy) {
		toSerialize["distribution_policy"] = o.DistributionPolicy
	}
	if !IsNil(o.DistributionTime) {
		toSerialize["distribution_time"] = o.DistributionTime
	}
	if !IsNil(o.Members) {
		toSerialize["members"] = o.Members
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.TimeZone) {
		toSerialize["time_zone"] = o.TimeZone
	}
	if !IsNil(o.UpgradeDependentGroup) {
		toSerialize["upgrade_dependent_group"] = o.UpgradeDependentGroup
	}
	if !IsNil(o.UpgradePolicy) {
		toSerialize["upgrade_policy"] = o.UpgradePolicy
	}
	if !IsNil(o.UpgradeTime) {
		toSerialize["upgrade_time"] = o.UpgradeTime
	}
	return toSerialize, nil
}

type NullableUpgradegroup struct {
	value *Upgradegroup
	isSet bool
}

func (v NullableUpgradegroup) Get() *Upgradegroup {
	return v.value
}

func (v *NullableUpgradegroup) Set(val *Upgradegroup) {
	v.value = val
	v.isSet = true
}

func (v NullableUpgradegroup) IsSet() bool {
	return v.isSet
}

func (v *NullableUpgradegroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpgradegroup(val *Upgradegroup) *NullableUpgradegroup {
	return &NullableUpgradegroup{value: val, isSet: true}
}

func (v NullableUpgradegroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpgradegroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
