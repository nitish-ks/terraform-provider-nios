/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the UpgradegroupMembers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpgradegroupMembers{}

// UpgradegroupMembers struct for UpgradegroupMembers
type UpgradegroupMembers struct {
	// The upgrade group member name.
	Member *string `json:"member,omitempty"`
	// The upgrade group member time zone.
	TimeZone             *string `json:"time_zone,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpgradegroupMembers UpgradegroupMembers

// NewUpgradegroupMembers instantiates a new UpgradegroupMembers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpgradegroupMembers() *UpgradegroupMembers {
	this := UpgradegroupMembers{}
	return &this
}

// NewUpgradegroupMembersWithDefaults instantiates a new UpgradegroupMembers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpgradegroupMembersWithDefaults() *UpgradegroupMembers {
	this := UpgradegroupMembers{}
	return &this
}

// GetMember returns the Member field value if set, zero value otherwise.
func (o *UpgradegroupMembers) GetMember() string {
	if o == nil || IsNil(o.Member) {
		var ret string
		return ret
	}
	return *o.Member
}

// GetMemberOk returns a tuple with the Member field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpgradegroupMembers) GetMemberOk() (*string, bool) {
	if o == nil || IsNil(o.Member) {
		return nil, false
	}
	return o.Member, true
}

// HasMember returns a boolean if a field has been set.
func (o *UpgradegroupMembers) HasMember() bool {
	if o != nil && !IsNil(o.Member) {
		return true
	}

	return false
}

// SetMember gets a reference to the given string and assigns it to the Member field.
func (o *UpgradegroupMembers) SetMember(v string) {
	o.Member = &v
}

// GetTimeZone returns the TimeZone field value if set, zero value otherwise.
func (o *UpgradegroupMembers) GetTimeZone() string {
	if o == nil || IsNil(o.TimeZone) {
		var ret string
		return ret
	}
	return *o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpgradegroupMembers) GetTimeZoneOk() (*string, bool) {
	if o == nil || IsNil(o.TimeZone) {
		return nil, false
	}
	return o.TimeZone, true
}

// HasTimeZone returns a boolean if a field has been set.
func (o *UpgradegroupMembers) HasTimeZone() bool {
	if o != nil && !IsNil(o.TimeZone) {
		return true
	}

	return false
}

// SetTimeZone gets a reference to the given string and assigns it to the TimeZone field.
func (o *UpgradegroupMembers) SetTimeZone(v string) {
	o.TimeZone = &v
}

func (o UpgradegroupMembers) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpgradegroupMembers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Member) {
		toSerialize["member"] = o.Member
	}
	if !IsNil(o.TimeZone) {
		toSerialize["time_zone"] = o.TimeZone
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpgradegroupMembers) UnmarshalJSON(data []byte) (err error) {
	varUpgradegroupMembers := _UpgradegroupMembers{}

	err = json.Unmarshal(data, &varUpgradegroupMembers)

	if err != nil {
		return err
	}

	*o = UpgradegroupMembers(varUpgradegroupMembers)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "member")
		delete(additionalProperties, "time_zone")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpgradegroupMembers struct {
	value *UpgradegroupMembers
	isSet bool
}

func (v NullableUpgradegroupMembers) Get() *UpgradegroupMembers {
	return v.value
}

func (v *NullableUpgradegroupMembers) Set(val *UpgradegroupMembers) {
	v.value = val
	v.isSet = true
}

func (v NullableUpgradegroupMembers) IsSet() bool {
	return v.isSet
}

func (v *NullableUpgradegroupMembers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpgradegroupMembers(val *UpgradegroupMembers) *NullableUpgradegroupMembers {
	return &NullableUpgradegroupMembers{value: val, isSet: true}
}

func (v NullableUpgradegroupMembers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpgradegroupMembers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
