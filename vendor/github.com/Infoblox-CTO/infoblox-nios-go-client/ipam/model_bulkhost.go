/*
Infoblox IPAM API

OpenAPI specification for Infoblox NIOS WAPI IPAM objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipam

import (
	"encoding/json"
)

// checks if the Bulkhost type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Bulkhost{}

// Bulkhost struct for Bulkhost
type Bulkhost struct {
	// The reference to the object.
	Ref       *string            `json:"_ref,omitempty"`
	CloudInfo *BulkhostCloudInfo `json:"cloud_info,omitempty"`
	// The descriptive comment.
	Comment *string `json:"comment,omitempty"`
	// The disable flag of a DNS BulkHost record.
	Disable *bool `json:"disable,omitempty"`
	// The prefix, in punycode format, for the bulk host.
	DnsPrefix *string `json:"dns_prefix,omitempty"`
	// The last IP address in the address range for the bulk host.
	EndAddr *string `json:"end_addr,omitempty"`
	// Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.
	Extattrs *map[string]ExtAttrs `json:"extattrs,omitempty"`
	// The time of the last DNS query in Epoch seconds format.
	LastQueried *int64 `json:"last_queried,omitempty"`
	// The bulk host name template.
	NameTemplate *string `json:"name_template,omitempty"`
	// The network view associated with the bulk host view.
	NetworkView *string `json:"network_view,omitempty"`
	// The hostname policy for records under the bulk host parent zone.
	Policy *string `json:"policy,omitempty"`
	// The prefix for the bulk host. The prefix is the name (or a series of characters) inserted at the beginning of each host name.
	Prefix *string `json:"prefix,omitempty"`
	// The reverse flag of the BulkHost record.
	Reverse *bool `json:"reverse,omitempty"`
	// The first IP address in the address range for the bulk host.
	StartAddr *string `json:"start_addr,omitempty"`
	// The bulk host name template format.
	TemplateFormat *string `json:"template_format,omitempty"`
	// The Time to Live (TTL) value.
	Ttl *int64 `json:"ttl,omitempty"`
	// Use flag for: name_template
	UseNameTemplate *bool `json:"use_name_template,omitempty"`
	// Use flag for: ttl
	UseTtl *bool `json:"use_ttl,omitempty"`
	// The view for the bulk host.
	View *string `json:"view,omitempty"`
	// The zone name.
	Zone *string `json:"zone,omitempty"`
}

// NewBulkhost instantiates a new Bulkhost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkhost() *Bulkhost {
	this := Bulkhost{}
	return &this
}

// NewBulkhostWithDefaults instantiates a new Bulkhost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkhostWithDefaults() *Bulkhost {
	this := Bulkhost{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *Bulkhost) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bulkhost) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *Bulkhost) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *Bulkhost) SetRef(v string) {
	o.Ref = &v
}

// GetCloudInfo returns the CloudInfo field value if set, zero value otherwise.
func (o *Bulkhost) GetCloudInfo() BulkhostCloudInfo {
	if o == nil || IsNil(o.CloudInfo) {
		var ret BulkhostCloudInfo
		return ret
	}
	return *o.CloudInfo
}

// GetCloudInfoOk returns a tuple with the CloudInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bulkhost) GetCloudInfoOk() (*BulkhostCloudInfo, bool) {
	if o == nil || IsNil(o.CloudInfo) {
		return nil, false
	}
	return o.CloudInfo, true
}

// HasCloudInfo returns a boolean if a field has been set.
func (o *Bulkhost) HasCloudInfo() bool {
	if o != nil && !IsNil(o.CloudInfo) {
		return true
	}

	return false
}

// SetCloudInfo gets a reference to the given BulkhostCloudInfo and assigns it to the CloudInfo field.
func (o *Bulkhost) SetCloudInfo(v BulkhostCloudInfo) {
	o.CloudInfo = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *Bulkhost) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bulkhost) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *Bulkhost) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *Bulkhost) SetComment(v string) {
	o.Comment = &v
}

// GetDisable returns the Disable field value if set, zero value otherwise.
func (o *Bulkhost) GetDisable() bool {
	if o == nil || IsNil(o.Disable) {
		var ret bool
		return ret
	}
	return *o.Disable
}

// GetDisableOk returns a tuple with the Disable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bulkhost) GetDisableOk() (*bool, bool) {
	if o == nil || IsNil(o.Disable) {
		return nil, false
	}
	return o.Disable, true
}

// HasDisable returns a boolean if a field has been set.
func (o *Bulkhost) HasDisable() bool {
	if o != nil && !IsNil(o.Disable) {
		return true
	}

	return false
}

// SetDisable gets a reference to the given bool and assigns it to the Disable field.
func (o *Bulkhost) SetDisable(v bool) {
	o.Disable = &v
}

// GetDnsPrefix returns the DnsPrefix field value if set, zero value otherwise.
func (o *Bulkhost) GetDnsPrefix() string {
	if o == nil || IsNil(o.DnsPrefix) {
		var ret string
		return ret
	}
	return *o.DnsPrefix
}

// GetDnsPrefixOk returns a tuple with the DnsPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bulkhost) GetDnsPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.DnsPrefix) {
		return nil, false
	}
	return o.DnsPrefix, true
}

// HasDnsPrefix returns a boolean if a field has been set.
func (o *Bulkhost) HasDnsPrefix() bool {
	if o != nil && !IsNil(o.DnsPrefix) {
		return true
	}

	return false
}

// SetDnsPrefix gets a reference to the given string and assigns it to the DnsPrefix field.
func (o *Bulkhost) SetDnsPrefix(v string) {
	o.DnsPrefix = &v
}

// GetEndAddr returns the EndAddr field value if set, zero value otherwise.
func (o *Bulkhost) GetEndAddr() string {
	if o == nil || IsNil(o.EndAddr) {
		var ret string
		return ret
	}
	return *o.EndAddr
}

// GetEndAddrOk returns a tuple with the EndAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bulkhost) GetEndAddrOk() (*string, bool) {
	if o == nil || IsNil(o.EndAddr) {
		return nil, false
	}
	return o.EndAddr, true
}

// HasEndAddr returns a boolean if a field has been set.
func (o *Bulkhost) HasEndAddr() bool {
	if o != nil && !IsNil(o.EndAddr) {
		return true
	}

	return false
}

// SetEndAddr gets a reference to the given string and assigns it to the EndAddr field.
func (o *Bulkhost) SetEndAddr(v string) {
	o.EndAddr = &v
}

// GetExtattrs returns the Extattrs field value if set, zero value otherwise.
func (o *Bulkhost) GetExtattrs() map[string]ExtAttrs {
	if o == nil || IsNil(o.Extattrs) {
		var ret map[string]ExtAttrs
		return ret
	}
	return *o.Extattrs
}

// GetExtattrsOk returns a tuple with the Extattrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bulkhost) GetExtattrsOk() (*map[string]ExtAttrs, bool) {
	if o == nil || IsNil(o.Extattrs) {
		return nil, false
	}
	return o.Extattrs, true
}

// HasExtattrs returns a boolean if a field has been set.
func (o *Bulkhost) HasExtattrs() bool {
	if o != nil && !IsNil(o.Extattrs) {
		return true
	}

	return false
}

// SetExtattrs gets a reference to the given map[string]ExtAttrs and assigns it to the Extattrs field.
func (o *Bulkhost) SetExtattrs(v map[string]ExtAttrs) {
	o.Extattrs = &v
}

// GetLastQueried returns the LastQueried field value if set, zero value otherwise.
func (o *Bulkhost) GetLastQueried() int64 {
	if o == nil || IsNil(o.LastQueried) {
		var ret int64
		return ret
	}
	return *o.LastQueried
}

// GetLastQueriedOk returns a tuple with the LastQueried field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bulkhost) GetLastQueriedOk() (*int64, bool) {
	if o == nil || IsNil(o.LastQueried) {
		return nil, false
	}
	return o.LastQueried, true
}

// HasLastQueried returns a boolean if a field has been set.
func (o *Bulkhost) HasLastQueried() bool {
	if o != nil && !IsNil(o.LastQueried) {
		return true
	}

	return false
}

// SetLastQueried gets a reference to the given int64 and assigns it to the LastQueried field.
func (o *Bulkhost) SetLastQueried(v int64) {
	o.LastQueried = &v
}

// GetNameTemplate returns the NameTemplate field value if set, zero value otherwise.
func (o *Bulkhost) GetNameTemplate() string {
	if o == nil || IsNil(o.NameTemplate) {
		var ret string
		return ret
	}
	return *o.NameTemplate
}

// GetNameTemplateOk returns a tuple with the NameTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bulkhost) GetNameTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.NameTemplate) {
		return nil, false
	}
	return o.NameTemplate, true
}

// HasNameTemplate returns a boolean if a field has been set.
func (o *Bulkhost) HasNameTemplate() bool {
	if o != nil && !IsNil(o.NameTemplate) {
		return true
	}

	return false
}

// SetNameTemplate gets a reference to the given string and assigns it to the NameTemplate field.
func (o *Bulkhost) SetNameTemplate(v string) {
	o.NameTemplate = &v
}

// GetNetworkView returns the NetworkView field value if set, zero value otherwise.
func (o *Bulkhost) GetNetworkView() string {
	if o == nil || IsNil(o.NetworkView) {
		var ret string
		return ret
	}
	return *o.NetworkView
}

// GetNetworkViewOk returns a tuple with the NetworkView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bulkhost) GetNetworkViewOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkView) {
		return nil, false
	}
	return o.NetworkView, true
}

// HasNetworkView returns a boolean if a field has been set.
func (o *Bulkhost) HasNetworkView() bool {
	if o != nil && !IsNil(o.NetworkView) {
		return true
	}

	return false
}

// SetNetworkView gets a reference to the given string and assigns it to the NetworkView field.
func (o *Bulkhost) SetNetworkView(v string) {
	o.NetworkView = &v
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
func (o *Bulkhost) GetPolicy() string {
	if o == nil || IsNil(o.Policy) {
		var ret string
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bulkhost) GetPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.Policy) {
		return nil, false
	}
	return o.Policy, true
}

// HasPolicy returns a boolean if a field has been set.
func (o *Bulkhost) HasPolicy() bool {
	if o != nil && !IsNil(o.Policy) {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given string and assigns it to the Policy field.
func (o *Bulkhost) SetPolicy(v string) {
	o.Policy = &v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *Bulkhost) GetPrefix() string {
	if o == nil || IsNil(o.Prefix) {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bulkhost) GetPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.Prefix) {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *Bulkhost) HasPrefix() bool {
	if o != nil && !IsNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *Bulkhost) SetPrefix(v string) {
	o.Prefix = &v
}

// GetReverse returns the Reverse field value if set, zero value otherwise.
func (o *Bulkhost) GetReverse() bool {
	if o == nil || IsNil(o.Reverse) {
		var ret bool
		return ret
	}
	return *o.Reverse
}

// GetReverseOk returns a tuple with the Reverse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bulkhost) GetReverseOk() (*bool, bool) {
	if o == nil || IsNil(o.Reverse) {
		return nil, false
	}
	return o.Reverse, true
}

// HasReverse returns a boolean if a field has been set.
func (o *Bulkhost) HasReverse() bool {
	if o != nil && !IsNil(o.Reverse) {
		return true
	}

	return false
}

// SetReverse gets a reference to the given bool and assigns it to the Reverse field.
func (o *Bulkhost) SetReverse(v bool) {
	o.Reverse = &v
}

// GetStartAddr returns the StartAddr field value if set, zero value otherwise.
func (o *Bulkhost) GetStartAddr() string {
	if o == nil || IsNil(o.StartAddr) {
		var ret string
		return ret
	}
	return *o.StartAddr
}

// GetStartAddrOk returns a tuple with the StartAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bulkhost) GetStartAddrOk() (*string, bool) {
	if o == nil || IsNil(o.StartAddr) {
		return nil, false
	}
	return o.StartAddr, true
}

// HasStartAddr returns a boolean if a field has been set.
func (o *Bulkhost) HasStartAddr() bool {
	if o != nil && !IsNil(o.StartAddr) {
		return true
	}

	return false
}

// SetStartAddr gets a reference to the given string and assigns it to the StartAddr field.
func (o *Bulkhost) SetStartAddr(v string) {
	o.StartAddr = &v
}

// GetTemplateFormat returns the TemplateFormat field value if set, zero value otherwise.
func (o *Bulkhost) GetTemplateFormat() string {
	if o == nil || IsNil(o.TemplateFormat) {
		var ret string
		return ret
	}
	return *o.TemplateFormat
}

// GetTemplateFormatOk returns a tuple with the TemplateFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bulkhost) GetTemplateFormatOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateFormat) {
		return nil, false
	}
	return o.TemplateFormat, true
}

// HasTemplateFormat returns a boolean if a field has been set.
func (o *Bulkhost) HasTemplateFormat() bool {
	if o != nil && !IsNil(o.TemplateFormat) {
		return true
	}

	return false
}

// SetTemplateFormat gets a reference to the given string and assigns it to the TemplateFormat field.
func (o *Bulkhost) SetTemplateFormat(v string) {
	o.TemplateFormat = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *Bulkhost) GetTtl() int64 {
	if o == nil || IsNil(o.Ttl) {
		var ret int64
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bulkhost) GetTtlOk() (*int64, bool) {
	if o == nil || IsNil(o.Ttl) {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *Bulkhost) HasTtl() bool {
	if o != nil && !IsNil(o.Ttl) {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int64 and assigns it to the Ttl field.
func (o *Bulkhost) SetTtl(v int64) {
	o.Ttl = &v
}

// GetUseNameTemplate returns the UseNameTemplate field value if set, zero value otherwise.
func (o *Bulkhost) GetUseNameTemplate() bool {
	if o == nil || IsNil(o.UseNameTemplate) {
		var ret bool
		return ret
	}
	return *o.UseNameTemplate
}

// GetUseNameTemplateOk returns a tuple with the UseNameTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bulkhost) GetUseNameTemplateOk() (*bool, bool) {
	if o == nil || IsNil(o.UseNameTemplate) {
		return nil, false
	}
	return o.UseNameTemplate, true
}

// HasUseNameTemplate returns a boolean if a field has been set.
func (o *Bulkhost) HasUseNameTemplate() bool {
	if o != nil && !IsNil(o.UseNameTemplate) {
		return true
	}

	return false
}

// SetUseNameTemplate gets a reference to the given bool and assigns it to the UseNameTemplate field.
func (o *Bulkhost) SetUseNameTemplate(v bool) {
	o.UseNameTemplate = &v
}

// GetUseTtl returns the UseTtl field value if set, zero value otherwise.
func (o *Bulkhost) GetUseTtl() bool {
	if o == nil || IsNil(o.UseTtl) {
		var ret bool
		return ret
	}
	return *o.UseTtl
}

// GetUseTtlOk returns a tuple with the UseTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bulkhost) GetUseTtlOk() (*bool, bool) {
	if o == nil || IsNil(o.UseTtl) {
		return nil, false
	}
	return o.UseTtl, true
}

// HasUseTtl returns a boolean if a field has been set.
func (o *Bulkhost) HasUseTtl() bool {
	if o != nil && !IsNil(o.UseTtl) {
		return true
	}

	return false
}

// SetUseTtl gets a reference to the given bool and assigns it to the UseTtl field.
func (o *Bulkhost) SetUseTtl(v bool) {
	o.UseTtl = &v
}

// GetView returns the View field value if set, zero value otherwise.
func (o *Bulkhost) GetView() string {
	if o == nil || IsNil(o.View) {
		var ret string
		return ret
	}
	return *o.View
}

// GetViewOk returns a tuple with the View field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bulkhost) GetViewOk() (*string, bool) {
	if o == nil || IsNil(o.View) {
		return nil, false
	}
	return o.View, true
}

// HasView returns a boolean if a field has been set.
func (o *Bulkhost) HasView() bool {
	if o != nil && !IsNil(o.View) {
		return true
	}

	return false
}

// SetView gets a reference to the given string and assigns it to the View field.
func (o *Bulkhost) SetView(v string) {
	o.View = &v
}

// GetZone returns the Zone field value if set, zero value otherwise.
func (o *Bulkhost) GetZone() string {
	if o == nil || IsNil(o.Zone) {
		var ret string
		return ret
	}
	return *o.Zone
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bulkhost) GetZoneOk() (*string, bool) {
	if o == nil || IsNil(o.Zone) {
		return nil, false
	}
	return o.Zone, true
}

// HasZone returns a boolean if a field has been set.
func (o *Bulkhost) HasZone() bool {
	if o != nil && !IsNil(o.Zone) {
		return true
	}

	return false
}

// SetZone gets a reference to the given string and assigns it to the Zone field.
func (o *Bulkhost) SetZone(v string) {
	o.Zone = &v
}

func (o Bulkhost) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Bulkhost) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.CloudInfo) {
		toSerialize["cloud_info"] = o.CloudInfo
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.Disable) {
		toSerialize["disable"] = o.Disable
	}
	if !IsNil(o.DnsPrefix) {
		toSerialize["dns_prefix"] = o.DnsPrefix
	}
	if !IsNil(o.EndAddr) {
		toSerialize["end_addr"] = o.EndAddr
	}
	if !IsNil(o.Extattrs) {
		toSerialize["extattrs"] = o.Extattrs
	}
	if !IsNil(o.LastQueried) {
		toSerialize["last_queried"] = o.LastQueried
	}
	if !IsNil(o.NameTemplate) {
		toSerialize["name_template"] = o.NameTemplate
	}
	if !IsNil(o.NetworkView) {
		toSerialize["network_view"] = o.NetworkView
	}
	if !IsNil(o.Policy) {
		toSerialize["policy"] = o.Policy
	}
	if !IsNil(o.Prefix) {
		toSerialize["prefix"] = o.Prefix
	}
	if !IsNil(o.Reverse) {
		toSerialize["reverse"] = o.Reverse
	}
	if !IsNil(o.StartAddr) {
		toSerialize["start_addr"] = o.StartAddr
	}
	if !IsNil(o.TemplateFormat) {
		toSerialize["template_format"] = o.TemplateFormat
	}
	if !IsNil(o.Ttl) {
		toSerialize["ttl"] = o.Ttl
	}
	if !IsNil(o.UseNameTemplate) {
		toSerialize["use_name_template"] = o.UseNameTemplate
	}
	if !IsNil(o.UseTtl) {
		toSerialize["use_ttl"] = o.UseTtl
	}
	if !IsNil(o.View) {
		toSerialize["view"] = o.View
	}
	if !IsNil(o.Zone) {
		toSerialize["zone"] = o.Zone
	}
	return toSerialize, nil
}

type NullableBulkhost struct {
	value *Bulkhost
	isSet bool
}

func (v NullableBulkhost) Get() *Bulkhost {
	return v.value
}

func (v *NullableBulkhost) Set(val *Bulkhost) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkhost) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkhost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkhost(val *Bulkhost) *NullableBulkhost {
	return &NullableBulkhost{value: val, isSet: true}
}

func (v NullableBulkhost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkhost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
