/*
Infoblox IPAM API

OpenAPI specification for Infoblox NIOS WAPI IPAM objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipam

import (
	"encoding/json"
)

// checks if the Capacityreport type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Capacityreport{}

// Capacityreport struct for Capacityreport
type Capacityreport struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// Hardware type of a Grid member.
	HardwareType *string `json:"hardware_type,omitempty"`
	// The maximum amount of capacity available for the Grid member.
	MaxCapacity *int64 `json:"max_capacity,omitempty"`
	// The Grid member name.
	Name *string `json:"name,omitempty"`
	// A list of instance counts for object types created on the Grid member.
	ObjectCounts []CapacityreportObjectCounts `json:"object_counts,omitempty"`
	// The percentage of the capacity in use by the Grid member.
	PercentUsed *int64 `json:"percent_used,omitempty"`
	// The Grid member role.
	Role *string `json:"role,omitempty"`
	// The total number of objects created by the Grid member.
	TotalObjects *int64 `json:"total_objects,omitempty"`
}

// NewCapacityreport instantiates a new Capacityreport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCapacityreport() *Capacityreport {
	this := Capacityreport{}
	return &this
}

// NewCapacityreportWithDefaults instantiates a new Capacityreport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCapacityreportWithDefaults() *Capacityreport {
	this := Capacityreport{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *Capacityreport) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Capacityreport) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *Capacityreport) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *Capacityreport) SetRef(v string) {
	o.Ref = &v
}

// GetHardwareType returns the HardwareType field value if set, zero value otherwise.
func (o *Capacityreport) GetHardwareType() string {
	if o == nil || IsNil(o.HardwareType) {
		var ret string
		return ret
	}
	return *o.HardwareType
}

// GetHardwareTypeOk returns a tuple with the HardwareType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Capacityreport) GetHardwareTypeOk() (*string, bool) {
	if o == nil || IsNil(o.HardwareType) {
		return nil, false
	}
	return o.HardwareType, true
}

// HasHardwareType returns a boolean if a field has been set.
func (o *Capacityreport) HasHardwareType() bool {
	if o != nil && !IsNil(o.HardwareType) {
		return true
	}

	return false
}

// SetHardwareType gets a reference to the given string and assigns it to the HardwareType field.
func (o *Capacityreport) SetHardwareType(v string) {
	o.HardwareType = &v
}

// GetMaxCapacity returns the MaxCapacity field value if set, zero value otherwise.
func (o *Capacityreport) GetMaxCapacity() int64 {
	if o == nil || IsNil(o.MaxCapacity) {
		var ret int64
		return ret
	}
	return *o.MaxCapacity
}

// GetMaxCapacityOk returns a tuple with the MaxCapacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Capacityreport) GetMaxCapacityOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxCapacity) {
		return nil, false
	}
	return o.MaxCapacity, true
}

// HasMaxCapacity returns a boolean if a field has been set.
func (o *Capacityreport) HasMaxCapacity() bool {
	if o != nil && !IsNil(o.MaxCapacity) {
		return true
	}

	return false
}

// SetMaxCapacity gets a reference to the given int64 and assigns it to the MaxCapacity field.
func (o *Capacityreport) SetMaxCapacity(v int64) {
	o.MaxCapacity = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Capacityreport) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Capacityreport) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Capacityreport) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Capacityreport) SetName(v string) {
	o.Name = &v
}

// GetObjectCounts returns the ObjectCounts field value if set, zero value otherwise.
func (o *Capacityreport) GetObjectCounts() []CapacityreportObjectCounts {
	if o == nil || IsNil(o.ObjectCounts) {
		var ret []CapacityreportObjectCounts
		return ret
	}
	return o.ObjectCounts
}

// GetObjectCountsOk returns a tuple with the ObjectCounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Capacityreport) GetObjectCountsOk() ([]CapacityreportObjectCounts, bool) {
	if o == nil || IsNil(o.ObjectCounts) {
		return nil, false
	}
	return o.ObjectCounts, true
}

// HasObjectCounts returns a boolean if a field has been set.
func (o *Capacityreport) HasObjectCounts() bool {
	if o != nil && !IsNil(o.ObjectCounts) {
		return true
	}

	return false
}

// SetObjectCounts gets a reference to the given []CapacityreportObjectCounts and assigns it to the ObjectCounts field.
func (o *Capacityreport) SetObjectCounts(v []CapacityreportObjectCounts) {
	o.ObjectCounts = v
}

// GetPercentUsed returns the PercentUsed field value if set, zero value otherwise.
func (o *Capacityreport) GetPercentUsed() int64 {
	if o == nil || IsNil(o.PercentUsed) {
		var ret int64
		return ret
	}
	return *o.PercentUsed
}

// GetPercentUsedOk returns a tuple with the PercentUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Capacityreport) GetPercentUsedOk() (*int64, bool) {
	if o == nil || IsNil(o.PercentUsed) {
		return nil, false
	}
	return o.PercentUsed, true
}

// HasPercentUsed returns a boolean if a field has been set.
func (o *Capacityreport) HasPercentUsed() bool {
	if o != nil && !IsNil(o.PercentUsed) {
		return true
	}

	return false
}

// SetPercentUsed gets a reference to the given int64 and assigns it to the PercentUsed field.
func (o *Capacityreport) SetPercentUsed(v int64) {
	o.PercentUsed = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *Capacityreport) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Capacityreport) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *Capacityreport) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *Capacityreport) SetRole(v string) {
	o.Role = &v
}

// GetTotalObjects returns the TotalObjects field value if set, zero value otherwise.
func (o *Capacityreport) GetTotalObjects() int64 {
	if o == nil || IsNil(o.TotalObjects) {
		var ret int64
		return ret
	}
	return *o.TotalObjects
}

// GetTotalObjectsOk returns a tuple with the TotalObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Capacityreport) GetTotalObjectsOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalObjects) {
		return nil, false
	}
	return o.TotalObjects, true
}

// HasTotalObjects returns a boolean if a field has been set.
func (o *Capacityreport) HasTotalObjects() bool {
	if o != nil && !IsNil(o.TotalObjects) {
		return true
	}

	return false
}

// SetTotalObjects gets a reference to the given int64 and assigns it to the TotalObjects field.
func (o *Capacityreport) SetTotalObjects(v int64) {
	o.TotalObjects = &v
}

func (o Capacityreport) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Capacityreport) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.HardwareType) {
		toSerialize["hardware_type"] = o.HardwareType
	}
	if !IsNil(o.MaxCapacity) {
		toSerialize["max_capacity"] = o.MaxCapacity
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ObjectCounts) {
		toSerialize["object_counts"] = o.ObjectCounts
	}
	if !IsNil(o.PercentUsed) {
		toSerialize["percent_used"] = o.PercentUsed
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.TotalObjects) {
		toSerialize["total_objects"] = o.TotalObjects
	}
	return toSerialize, nil
}

type NullableCapacityreport struct {
	value *Capacityreport
	isSet bool
}

func (v NullableCapacityreport) Get() *Capacityreport {
	return v.value
}

func (v *NullableCapacityreport) Set(val *Capacityreport) {
	v.value = val
	v.isSet = true
}

func (v NullableCapacityreport) IsSet() bool {
	return v.isSet
}

func (v *NullableCapacityreport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCapacityreport(val *Capacityreport) *NullableCapacityreport {
	return &NullableCapacityreport{value: val, isSet: true}
}

func (v NullableCapacityreport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCapacityreport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
