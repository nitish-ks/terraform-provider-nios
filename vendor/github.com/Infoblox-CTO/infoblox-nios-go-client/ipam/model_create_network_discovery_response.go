/*
Infoblox IPAM API

OpenAPI specification for Infoblox NIOS WAPI IPAM objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipam

import (
	"encoding/json"
	"fmt"
)

// CreateNetworkDiscoveryResponse - struct for CreateNetworkDiscoveryResponse
type CreateNetworkDiscoveryResponse struct {
	CreateNetworkDiscoveryResponseAsObject *CreateNetworkDiscoveryResponseAsObject
	String                                 *string
}

// CreateNetworkDiscoveryResponseAsObjectAsCreateNetworkDiscoveryResponse is a convenience function that returns CreateNetworkDiscoveryResponseAsObject wrapped in CreateNetworkDiscoveryResponse
func CreateNetworkDiscoveryResponseAsObjectAsCreateNetworkDiscoveryResponse(v *CreateNetworkDiscoveryResponseAsObject) CreateNetworkDiscoveryResponse {
	return CreateNetworkDiscoveryResponse{
		CreateNetworkDiscoveryResponseAsObject: v,
	}
}

// stringAsCreateNetworkDiscoveryResponse is a convenience function that returns string wrapped in CreateNetworkDiscoveryResponse
func StringAsCreateNetworkDiscoveryResponse(v *string) CreateNetworkDiscoveryResponse {
	return CreateNetworkDiscoveryResponse{
		String: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *CreateNetworkDiscoveryResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into CreateNetworkDiscoveryResponseAsObject
	err = newStrictDecoder(data).Decode(&dst.CreateNetworkDiscoveryResponseAsObject)
	if err == nil {
		jsonCreateNetworkDiscoveryResponseAsObject, _ := json.Marshal(dst.CreateNetworkDiscoveryResponseAsObject)
		if string(jsonCreateNetworkDiscoveryResponseAsObject) == "{}" { // empty struct
			dst.CreateNetworkDiscoveryResponseAsObject = nil
		} else {
			match++
		}
	} else {
		dst.CreateNetworkDiscoveryResponseAsObject = nil
	}

	// try to unmarshal data into String
	err = newStrictDecoder(data).Decode(&dst.String)
	if err == nil {
		jsonString, _ := json.Marshal(dst.String)
		if string(jsonString) == "{}" { // empty struct
			dst.String = nil
		} else {
			match++
		}
	} else {
		dst.String = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.CreateNetworkDiscoveryResponseAsObject = nil
		dst.String = nil

		return fmt.Errorf("data matches more than one schema in oneOf(CreateNetworkDiscoveryResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(CreateNetworkDiscoveryResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CreateNetworkDiscoveryResponse) MarshalJSON() ([]byte, error) {
	if src.CreateNetworkDiscoveryResponseAsObject != nil {
		return json.Marshal(&src.CreateNetworkDiscoveryResponseAsObject)
	}

	if src.String != nil {
		return json.Marshal(&src.String)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *CreateNetworkDiscoveryResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.CreateNetworkDiscoveryResponseAsObject != nil {
		return obj.CreateNetworkDiscoveryResponseAsObject
	}

	if obj.String != nil {
		return obj.String
	}

	// all schemas are nil
	return nil
}

type NullableCreateNetworkDiscoveryResponse struct {
	value *CreateNetworkDiscoveryResponse
	isSet bool
}

func (v NullableCreateNetworkDiscoveryResponse) Get() *CreateNetworkDiscoveryResponse {
	return v.value
}

func (v *NullableCreateNetworkDiscoveryResponse) Set(val *CreateNetworkDiscoveryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNetworkDiscoveryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNetworkDiscoveryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNetworkDiscoveryResponse(val *CreateNetworkDiscoveryResponse) *NullableCreateNetworkDiscoveryResponse {
	return &NullableCreateNetworkDiscoveryResponse{value: val, isSet: true}
}

func (v NullableCreateNetworkDiscoveryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNetworkDiscoveryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
