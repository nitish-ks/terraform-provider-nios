/*
Infoblox IPAM API

OpenAPI specification for Infoblox NIOS WAPI IPAM objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipam

import (
	"encoding/json"
)

// checks if the Discoverytask type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Discoverytask{}

// Discoverytask struct for Discoverytask
type Discoverytask struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// The network discovery CSV file name.
	CsvFileName *string `json:"csv_file_name,omitempty"`
	// Determines whether IP scanning is disabled.
	DisableIpScanning *bool `json:"disable_ip_scanning,omitempty"`
	// Determines whether VMWare scanning is disabled.
	DisableVmwareScanning *bool `json:"disable_vmware_scanning,omitempty"`
	// The discovery task identifier.
	DiscoveryTaskOid *string `json:"discovery_task_oid,omitempty"`
	// The Grid member that runs the discovery.
	MemberName *string `json:"member_name,omitempty"`
	// Determines whether to replace or merge new data with existing data.
	MergeData *bool `json:"merge_data,omitempty"`
	// Network discovery scanning mode.
	Mode                    *string                `json:"mode,omitempty"`
	NetworkDiscoveryControl map[string]interface{} `json:"network_discovery_control,omitempty"`
	// Name of the network view in which target networks for network discovery reside.
	NetworkView *string `json:"network_view,omitempty"`
	// The list of the networks on which the network discovery will be invoked.
	Networks []map[string]interface{} `json:"networks,omitempty"`
	// The number of times to perfrom ping for ICMP and FULL modes.
	PingRetries *int64 `json:"ping_retries,omitempty"`
	// The ping timeout for ICMP and FULL modes.
	PingTimeout  *int64                     `json:"ping_timeout,omitempty"`
	ScheduledRun *DiscoverytaskScheduledRun `json:"scheduled_run,omitempty"`
	// The network discovery process state.
	State *string `json:"state,omitempty"`
	// Time when the network discovery process state was last updated.
	StateTime *int64 `json:"state_time,omitempty"`
	// The network discovery process descriptive status.
	Status *string `json:"status,omitempty"`
	// The time when the network discovery process status was last updated.
	StatusTime *int64 `json:"status_time,omitempty"`
	// The ports to scan for FULL and TCP modes.
	TcpPorts []DiscoverytaskTcpPorts `json:"tcp_ports,omitempty"`
	// The TCP scan techinque for FULL and TCP modes.
	TcpScanTechnique *string `json:"tcp_scan_technique,omitempty"`
	// Name of the network view in which target networks for VMWare scanning reside.
	VNetworkView *string `json:"v_network_view,omitempty"`
	// The list of VMware vSphere servers for VM discovery.
	Vservers []DiscoverytaskVservers `json:"vservers,omitempty"`
	// The network discovery process warning.
	Warning *string `json:"warning,omitempty"`
}

// NewDiscoverytask instantiates a new Discoverytask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiscoverytask() *Discoverytask {
	this := Discoverytask{}
	return &this
}

// NewDiscoverytaskWithDefaults instantiates a new Discoverytask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiscoverytaskWithDefaults() *Discoverytask {
	this := Discoverytask{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *Discoverytask) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discoverytask) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *Discoverytask) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *Discoverytask) SetRef(v string) {
	o.Ref = &v
}

// GetCsvFileName returns the CsvFileName field value if set, zero value otherwise.
func (o *Discoverytask) GetCsvFileName() string {
	if o == nil || IsNil(o.CsvFileName) {
		var ret string
		return ret
	}
	return *o.CsvFileName
}

// GetCsvFileNameOk returns a tuple with the CsvFileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discoverytask) GetCsvFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.CsvFileName) {
		return nil, false
	}
	return o.CsvFileName, true
}

// HasCsvFileName returns a boolean if a field has been set.
func (o *Discoverytask) HasCsvFileName() bool {
	if o != nil && !IsNil(o.CsvFileName) {
		return true
	}

	return false
}

// SetCsvFileName gets a reference to the given string and assigns it to the CsvFileName field.
func (o *Discoverytask) SetCsvFileName(v string) {
	o.CsvFileName = &v
}

// GetDisableIpScanning returns the DisableIpScanning field value if set, zero value otherwise.
func (o *Discoverytask) GetDisableIpScanning() bool {
	if o == nil || IsNil(o.DisableIpScanning) {
		var ret bool
		return ret
	}
	return *o.DisableIpScanning
}

// GetDisableIpScanningOk returns a tuple with the DisableIpScanning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discoverytask) GetDisableIpScanningOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableIpScanning) {
		return nil, false
	}
	return o.DisableIpScanning, true
}

// HasDisableIpScanning returns a boolean if a field has been set.
func (o *Discoverytask) HasDisableIpScanning() bool {
	if o != nil && !IsNil(o.DisableIpScanning) {
		return true
	}

	return false
}

// SetDisableIpScanning gets a reference to the given bool and assigns it to the DisableIpScanning field.
func (o *Discoverytask) SetDisableIpScanning(v bool) {
	o.DisableIpScanning = &v
}

// GetDisableVmwareScanning returns the DisableVmwareScanning field value if set, zero value otherwise.
func (o *Discoverytask) GetDisableVmwareScanning() bool {
	if o == nil || IsNil(o.DisableVmwareScanning) {
		var ret bool
		return ret
	}
	return *o.DisableVmwareScanning
}

// GetDisableVmwareScanningOk returns a tuple with the DisableVmwareScanning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discoverytask) GetDisableVmwareScanningOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableVmwareScanning) {
		return nil, false
	}
	return o.DisableVmwareScanning, true
}

// HasDisableVmwareScanning returns a boolean if a field has been set.
func (o *Discoverytask) HasDisableVmwareScanning() bool {
	if o != nil && !IsNil(o.DisableVmwareScanning) {
		return true
	}

	return false
}

// SetDisableVmwareScanning gets a reference to the given bool and assigns it to the DisableVmwareScanning field.
func (o *Discoverytask) SetDisableVmwareScanning(v bool) {
	o.DisableVmwareScanning = &v
}

// GetDiscoveryTaskOid returns the DiscoveryTaskOid field value if set, zero value otherwise.
func (o *Discoverytask) GetDiscoveryTaskOid() string {
	if o == nil || IsNil(o.DiscoveryTaskOid) {
		var ret string
		return ret
	}
	return *o.DiscoveryTaskOid
}

// GetDiscoveryTaskOidOk returns a tuple with the DiscoveryTaskOid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discoverytask) GetDiscoveryTaskOidOk() (*string, bool) {
	if o == nil || IsNil(o.DiscoveryTaskOid) {
		return nil, false
	}
	return o.DiscoveryTaskOid, true
}

// HasDiscoveryTaskOid returns a boolean if a field has been set.
func (o *Discoverytask) HasDiscoveryTaskOid() bool {
	if o != nil && !IsNil(o.DiscoveryTaskOid) {
		return true
	}

	return false
}

// SetDiscoveryTaskOid gets a reference to the given string and assigns it to the DiscoveryTaskOid field.
func (o *Discoverytask) SetDiscoveryTaskOid(v string) {
	o.DiscoveryTaskOid = &v
}

// GetMemberName returns the MemberName field value if set, zero value otherwise.
func (o *Discoverytask) GetMemberName() string {
	if o == nil || IsNil(o.MemberName) {
		var ret string
		return ret
	}
	return *o.MemberName
}

// GetMemberNameOk returns a tuple with the MemberName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discoverytask) GetMemberNameOk() (*string, bool) {
	if o == nil || IsNil(o.MemberName) {
		return nil, false
	}
	return o.MemberName, true
}

// HasMemberName returns a boolean if a field has been set.
func (o *Discoverytask) HasMemberName() bool {
	if o != nil && !IsNil(o.MemberName) {
		return true
	}

	return false
}

// SetMemberName gets a reference to the given string and assigns it to the MemberName field.
func (o *Discoverytask) SetMemberName(v string) {
	o.MemberName = &v
}

// GetMergeData returns the MergeData field value if set, zero value otherwise.
func (o *Discoverytask) GetMergeData() bool {
	if o == nil || IsNil(o.MergeData) {
		var ret bool
		return ret
	}
	return *o.MergeData
}

// GetMergeDataOk returns a tuple with the MergeData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discoverytask) GetMergeDataOk() (*bool, bool) {
	if o == nil || IsNil(o.MergeData) {
		return nil, false
	}
	return o.MergeData, true
}

// HasMergeData returns a boolean if a field has been set.
func (o *Discoverytask) HasMergeData() bool {
	if o != nil && !IsNil(o.MergeData) {
		return true
	}

	return false
}

// SetMergeData gets a reference to the given bool and assigns it to the MergeData field.
func (o *Discoverytask) SetMergeData(v bool) {
	o.MergeData = &v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *Discoverytask) GetMode() string {
	if o == nil || IsNil(o.Mode) {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discoverytask) GetModeOk() (*string, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *Discoverytask) HasMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *Discoverytask) SetMode(v string) {
	o.Mode = &v
}

// GetNetworkDiscoveryControl returns the NetworkDiscoveryControl field value if set, zero value otherwise.
func (o *Discoverytask) GetNetworkDiscoveryControl() map[string]interface{} {
	if o == nil || IsNil(o.NetworkDiscoveryControl) {
		var ret map[string]interface{}
		return ret
	}
	return o.NetworkDiscoveryControl
}

// GetNetworkDiscoveryControlOk returns a tuple with the NetworkDiscoveryControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discoverytask) GetNetworkDiscoveryControlOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.NetworkDiscoveryControl) {
		return map[string]interface{}{}, false
	}
	return o.NetworkDiscoveryControl, true
}

// HasNetworkDiscoveryControl returns a boolean if a field has been set.
func (o *Discoverytask) HasNetworkDiscoveryControl() bool {
	if o != nil && !IsNil(o.NetworkDiscoveryControl) {
		return true
	}

	return false
}

// SetNetworkDiscoveryControl gets a reference to the given map[string]interface{} and assigns it to the NetworkDiscoveryControl field.
func (o *Discoverytask) SetNetworkDiscoveryControl(v map[string]interface{}) {
	o.NetworkDiscoveryControl = v
}

// GetNetworkView returns the NetworkView field value if set, zero value otherwise.
func (o *Discoverytask) GetNetworkView() string {
	if o == nil || IsNil(o.NetworkView) {
		var ret string
		return ret
	}
	return *o.NetworkView
}

// GetNetworkViewOk returns a tuple with the NetworkView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discoverytask) GetNetworkViewOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkView) {
		return nil, false
	}
	return o.NetworkView, true
}

// HasNetworkView returns a boolean if a field has been set.
func (o *Discoverytask) HasNetworkView() bool {
	if o != nil && !IsNil(o.NetworkView) {
		return true
	}

	return false
}

// SetNetworkView gets a reference to the given string and assigns it to the NetworkView field.
func (o *Discoverytask) SetNetworkView(v string) {
	o.NetworkView = &v
}

// GetNetworks returns the Networks field value if set, zero value otherwise.
func (o *Discoverytask) GetNetworks() []map[string]interface{} {
	if o == nil || IsNil(o.Networks) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discoverytask) GetNetworksOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Networks) {
		return nil, false
	}
	return o.Networks, true
}

// HasNetworks returns a boolean if a field has been set.
func (o *Discoverytask) HasNetworks() bool {
	if o != nil && !IsNil(o.Networks) {
		return true
	}

	return false
}

// SetNetworks gets a reference to the given []map[string]interface{} and assigns it to the Networks field.
func (o *Discoverytask) SetNetworks(v []map[string]interface{}) {
	o.Networks = v
}

// GetPingRetries returns the PingRetries field value if set, zero value otherwise.
func (o *Discoverytask) GetPingRetries() int64 {
	if o == nil || IsNil(o.PingRetries) {
		var ret int64
		return ret
	}
	return *o.PingRetries
}

// GetPingRetriesOk returns a tuple with the PingRetries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discoverytask) GetPingRetriesOk() (*int64, bool) {
	if o == nil || IsNil(o.PingRetries) {
		return nil, false
	}
	return o.PingRetries, true
}

// HasPingRetries returns a boolean if a field has been set.
func (o *Discoverytask) HasPingRetries() bool {
	if o != nil && !IsNil(o.PingRetries) {
		return true
	}

	return false
}

// SetPingRetries gets a reference to the given int64 and assigns it to the PingRetries field.
func (o *Discoverytask) SetPingRetries(v int64) {
	o.PingRetries = &v
}

// GetPingTimeout returns the PingTimeout field value if set, zero value otherwise.
func (o *Discoverytask) GetPingTimeout() int64 {
	if o == nil || IsNil(o.PingTimeout) {
		var ret int64
		return ret
	}
	return *o.PingTimeout
}

// GetPingTimeoutOk returns a tuple with the PingTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discoverytask) GetPingTimeoutOk() (*int64, bool) {
	if o == nil || IsNil(o.PingTimeout) {
		return nil, false
	}
	return o.PingTimeout, true
}

// HasPingTimeout returns a boolean if a field has been set.
func (o *Discoverytask) HasPingTimeout() bool {
	if o != nil && !IsNil(o.PingTimeout) {
		return true
	}

	return false
}

// SetPingTimeout gets a reference to the given int64 and assigns it to the PingTimeout field.
func (o *Discoverytask) SetPingTimeout(v int64) {
	o.PingTimeout = &v
}

// GetScheduledRun returns the ScheduledRun field value if set, zero value otherwise.
func (o *Discoverytask) GetScheduledRun() DiscoverytaskScheduledRun {
	if o == nil || IsNil(o.ScheduledRun) {
		var ret DiscoverytaskScheduledRun
		return ret
	}
	return *o.ScheduledRun
}

// GetScheduledRunOk returns a tuple with the ScheduledRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discoverytask) GetScheduledRunOk() (*DiscoverytaskScheduledRun, bool) {
	if o == nil || IsNil(o.ScheduledRun) {
		return nil, false
	}
	return o.ScheduledRun, true
}

// HasScheduledRun returns a boolean if a field has been set.
func (o *Discoverytask) HasScheduledRun() bool {
	if o != nil && !IsNil(o.ScheduledRun) {
		return true
	}

	return false
}

// SetScheduledRun gets a reference to the given DiscoverytaskScheduledRun and assigns it to the ScheduledRun field.
func (o *Discoverytask) SetScheduledRun(v DiscoverytaskScheduledRun) {
	o.ScheduledRun = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Discoverytask) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discoverytask) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Discoverytask) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *Discoverytask) SetState(v string) {
	o.State = &v
}

// GetStateTime returns the StateTime field value if set, zero value otherwise.
func (o *Discoverytask) GetStateTime() int64 {
	if o == nil || IsNil(o.StateTime) {
		var ret int64
		return ret
	}
	return *o.StateTime
}

// GetStateTimeOk returns a tuple with the StateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discoverytask) GetStateTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.StateTime) {
		return nil, false
	}
	return o.StateTime, true
}

// HasStateTime returns a boolean if a field has been set.
func (o *Discoverytask) HasStateTime() bool {
	if o != nil && !IsNil(o.StateTime) {
		return true
	}

	return false
}

// SetStateTime gets a reference to the given int64 and assigns it to the StateTime field.
func (o *Discoverytask) SetStateTime(v int64) {
	o.StateTime = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Discoverytask) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discoverytask) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Discoverytask) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Discoverytask) SetStatus(v string) {
	o.Status = &v
}

// GetStatusTime returns the StatusTime field value if set, zero value otherwise.
func (o *Discoverytask) GetStatusTime() int64 {
	if o == nil || IsNil(o.StatusTime) {
		var ret int64
		return ret
	}
	return *o.StatusTime
}

// GetStatusTimeOk returns a tuple with the StatusTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discoverytask) GetStatusTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.StatusTime) {
		return nil, false
	}
	return o.StatusTime, true
}

// HasStatusTime returns a boolean if a field has been set.
func (o *Discoverytask) HasStatusTime() bool {
	if o != nil && !IsNil(o.StatusTime) {
		return true
	}

	return false
}

// SetStatusTime gets a reference to the given int64 and assigns it to the StatusTime field.
func (o *Discoverytask) SetStatusTime(v int64) {
	o.StatusTime = &v
}

// GetTcpPorts returns the TcpPorts field value if set, zero value otherwise.
func (o *Discoverytask) GetTcpPorts() []DiscoverytaskTcpPorts {
	if o == nil || IsNil(o.TcpPorts) {
		var ret []DiscoverytaskTcpPorts
		return ret
	}
	return o.TcpPorts
}

// GetTcpPortsOk returns a tuple with the TcpPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discoverytask) GetTcpPortsOk() ([]DiscoverytaskTcpPorts, bool) {
	if o == nil || IsNil(o.TcpPorts) {
		return nil, false
	}
	return o.TcpPorts, true
}

// HasTcpPorts returns a boolean if a field has been set.
func (o *Discoverytask) HasTcpPorts() bool {
	if o != nil && !IsNil(o.TcpPorts) {
		return true
	}

	return false
}

// SetTcpPorts gets a reference to the given []DiscoverytaskTcpPorts and assigns it to the TcpPorts field.
func (o *Discoverytask) SetTcpPorts(v []DiscoverytaskTcpPorts) {
	o.TcpPorts = v
}

// GetTcpScanTechnique returns the TcpScanTechnique field value if set, zero value otherwise.
func (o *Discoverytask) GetTcpScanTechnique() string {
	if o == nil || IsNil(o.TcpScanTechnique) {
		var ret string
		return ret
	}
	return *o.TcpScanTechnique
}

// GetTcpScanTechniqueOk returns a tuple with the TcpScanTechnique field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discoverytask) GetTcpScanTechniqueOk() (*string, bool) {
	if o == nil || IsNil(o.TcpScanTechnique) {
		return nil, false
	}
	return o.TcpScanTechnique, true
}

// HasTcpScanTechnique returns a boolean if a field has been set.
func (o *Discoverytask) HasTcpScanTechnique() bool {
	if o != nil && !IsNil(o.TcpScanTechnique) {
		return true
	}

	return false
}

// SetTcpScanTechnique gets a reference to the given string and assigns it to the TcpScanTechnique field.
func (o *Discoverytask) SetTcpScanTechnique(v string) {
	o.TcpScanTechnique = &v
}

// GetVNetworkView returns the VNetworkView field value if set, zero value otherwise.
func (o *Discoverytask) GetVNetworkView() string {
	if o == nil || IsNil(o.VNetworkView) {
		var ret string
		return ret
	}
	return *o.VNetworkView
}

// GetVNetworkViewOk returns a tuple with the VNetworkView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discoverytask) GetVNetworkViewOk() (*string, bool) {
	if o == nil || IsNil(o.VNetworkView) {
		return nil, false
	}
	return o.VNetworkView, true
}

// HasVNetworkView returns a boolean if a field has been set.
func (o *Discoverytask) HasVNetworkView() bool {
	if o != nil && !IsNil(o.VNetworkView) {
		return true
	}

	return false
}

// SetVNetworkView gets a reference to the given string and assigns it to the VNetworkView field.
func (o *Discoverytask) SetVNetworkView(v string) {
	o.VNetworkView = &v
}

// GetVservers returns the Vservers field value if set, zero value otherwise.
func (o *Discoverytask) GetVservers() []DiscoverytaskVservers {
	if o == nil || IsNil(o.Vservers) {
		var ret []DiscoverytaskVservers
		return ret
	}
	return o.Vservers
}

// GetVserversOk returns a tuple with the Vservers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discoverytask) GetVserversOk() ([]DiscoverytaskVservers, bool) {
	if o == nil || IsNil(o.Vservers) {
		return nil, false
	}
	return o.Vservers, true
}

// HasVservers returns a boolean if a field has been set.
func (o *Discoverytask) HasVservers() bool {
	if o != nil && !IsNil(o.Vservers) {
		return true
	}

	return false
}

// SetVservers gets a reference to the given []DiscoverytaskVservers and assigns it to the Vservers field.
func (o *Discoverytask) SetVservers(v []DiscoverytaskVservers) {
	o.Vservers = v
}

// GetWarning returns the Warning field value if set, zero value otherwise.
func (o *Discoverytask) GetWarning() string {
	if o == nil || IsNil(o.Warning) {
		var ret string
		return ret
	}
	return *o.Warning
}

// GetWarningOk returns a tuple with the Warning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Discoverytask) GetWarningOk() (*string, bool) {
	if o == nil || IsNil(o.Warning) {
		return nil, false
	}
	return o.Warning, true
}

// HasWarning returns a boolean if a field has been set.
func (o *Discoverytask) HasWarning() bool {
	if o != nil && !IsNil(o.Warning) {
		return true
	}

	return false
}

// SetWarning gets a reference to the given string and assigns it to the Warning field.
func (o *Discoverytask) SetWarning(v string) {
	o.Warning = &v
}

func (o Discoverytask) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Discoverytask) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.CsvFileName) {
		toSerialize["csv_file_name"] = o.CsvFileName
	}
	if !IsNil(o.DisableIpScanning) {
		toSerialize["disable_ip_scanning"] = o.DisableIpScanning
	}
	if !IsNil(o.DisableVmwareScanning) {
		toSerialize["disable_vmware_scanning"] = o.DisableVmwareScanning
	}
	if !IsNil(o.DiscoveryTaskOid) {
		toSerialize["discovery_task_oid"] = o.DiscoveryTaskOid
	}
	if !IsNil(o.MemberName) {
		toSerialize["member_name"] = o.MemberName
	}
	if !IsNil(o.MergeData) {
		toSerialize["merge_data"] = o.MergeData
	}
	if !IsNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	if !IsNil(o.NetworkDiscoveryControl) {
		toSerialize["network_discovery_control"] = o.NetworkDiscoveryControl
	}
	if !IsNil(o.NetworkView) {
		toSerialize["network_view"] = o.NetworkView
	}
	if !IsNil(o.Networks) {
		toSerialize["networks"] = o.Networks
	}
	if !IsNil(o.PingRetries) {
		toSerialize["ping_retries"] = o.PingRetries
	}
	if !IsNil(o.PingTimeout) {
		toSerialize["ping_timeout"] = o.PingTimeout
	}
	if !IsNil(o.ScheduledRun) {
		toSerialize["scheduled_run"] = o.ScheduledRun
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.StateTime) {
		toSerialize["state_time"] = o.StateTime
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusTime) {
		toSerialize["status_time"] = o.StatusTime
	}
	if !IsNil(o.TcpPorts) {
		toSerialize["tcp_ports"] = o.TcpPorts
	}
	if !IsNil(o.TcpScanTechnique) {
		toSerialize["tcp_scan_technique"] = o.TcpScanTechnique
	}
	if !IsNil(o.VNetworkView) {
		toSerialize["v_network_view"] = o.VNetworkView
	}
	if !IsNil(o.Vservers) {
		toSerialize["vservers"] = o.Vservers
	}
	if !IsNil(o.Warning) {
		toSerialize["warning"] = o.Warning
	}
	return toSerialize, nil
}

type NullableDiscoverytask struct {
	value *Discoverytask
	isSet bool
}

func (v NullableDiscoverytask) Get() *Discoverytask {
	return v.value
}

func (v *NullableDiscoverytask) Set(val *Discoverytask) {
	v.value = val
	v.isSet = true
}

func (v NullableDiscoverytask) IsSet() bool {
	return v.isSet
}

func (v *NullableDiscoverytask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiscoverytask(val *Discoverytask) *NullableDiscoverytask {
	return &NullableDiscoverytask{value: val, isSet: true}
}

func (v NullableDiscoverytask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiscoverytask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
