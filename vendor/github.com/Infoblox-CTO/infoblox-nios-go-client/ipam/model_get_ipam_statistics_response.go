/*
Infoblox IPAM API

OpenAPI specification for Infoblox NIOS WAPI IPAM objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipam

import (
	"encoding/json"
	"fmt"
)

// GetIpamStatisticsResponse - struct for GetIpamStatisticsResponse
type GetIpamStatisticsResponse struct {
	GetIpamStatisticsResponseObjectAsResult *GetIpamStatisticsResponseObjectAsResult
	IpamStatistics                          *IpamStatistics
}

// GetIpamStatisticsResponseObjectAsResultAsGetIpamStatisticsResponse is a convenience function that returns GetIpamStatisticsResponseObjectAsResult wrapped in GetIpamStatisticsResponse
func GetIpamStatisticsResponseObjectAsResultAsGetIpamStatisticsResponse(v *GetIpamStatisticsResponseObjectAsResult) GetIpamStatisticsResponse {
	return GetIpamStatisticsResponse{
		GetIpamStatisticsResponseObjectAsResult: v,
	}
}

// IpamStatisticsAsGetIpamStatisticsResponse is a convenience function that returns IpamStatistics wrapped in GetIpamStatisticsResponse
func IpamStatisticsAsGetIpamStatisticsResponse(v *IpamStatistics) GetIpamStatisticsResponse {
	return GetIpamStatisticsResponse{
		IpamStatistics: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetIpamStatisticsResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetIpamStatisticsResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetIpamStatisticsResponseObjectAsResult)
	if err == nil {
		jsonGetIpamStatisticsResponseObjectAsResult, _ := json.Marshal(dst.GetIpamStatisticsResponseObjectAsResult)
		if string(jsonGetIpamStatisticsResponseObjectAsResult) == "{}" { // empty struct
			dst.GetIpamStatisticsResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetIpamStatisticsResponseObjectAsResult = nil
	}

	// try to unmarshal data into IpamStatistics
	err = newStrictDecoder(data).Decode(&dst.IpamStatistics)
	if err == nil {
		jsonIpamStatistics, _ := json.Marshal(dst.IpamStatistics)
		if string(jsonIpamStatistics) == "{}" { // empty struct
			dst.IpamStatistics = nil
		} else {
			match++
		}
	} else {
		dst.IpamStatistics = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetIpamStatisticsResponseObjectAsResult = nil
		dst.IpamStatistics = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetIpamStatisticsResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetIpamStatisticsResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetIpamStatisticsResponse) MarshalJSON() ([]byte, error) {
	if src.GetIpamStatisticsResponseObjectAsResult != nil {
		return json.Marshal(&src.GetIpamStatisticsResponseObjectAsResult)
	}

	if src.IpamStatistics != nil {
		return json.Marshal(&src.IpamStatistics)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetIpamStatisticsResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GetIpamStatisticsResponseObjectAsResult != nil {
		return obj.GetIpamStatisticsResponseObjectAsResult
	}

	if obj.IpamStatistics != nil {
		return obj.IpamStatistics
	}

	// all schemas are nil
	return nil
}

type NullableGetIpamStatisticsResponse struct {
	value *GetIpamStatisticsResponse
	isSet bool
}

func (v NullableGetIpamStatisticsResponse) Get() *GetIpamStatisticsResponse {
	return v.value
}

func (v *NullableGetIpamStatisticsResponse) Set(val *GetIpamStatisticsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIpamStatisticsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIpamStatisticsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIpamStatisticsResponse(val *GetIpamStatisticsResponse) *NullableGetIpamStatisticsResponse {
	return &NullableGetIpamStatisticsResponse{value: val, isSet: true}
}

func (v NullableGetIpamStatisticsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIpamStatisticsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
