/*
Infoblox IPAM API

OpenAPI specification for Infoblox NIOS WAPI IPAM objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipam

import (
	"encoding/json"
)

// checks if the GetNetworkcontainerResponseObjectAsResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNetworkcontainerResponseObjectAsResult{}

// GetNetworkcontainerResponseObjectAsResult The response format to retrieve __Networkcontainer__ objects.
type GetNetworkcontainerResponseObjectAsResult struct {
	Result *Networkcontainer `json:"result,omitempty"`
}

// NewGetNetworkcontainerResponseObjectAsResult instantiates a new GetNetworkcontainerResponseObjectAsResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkcontainerResponseObjectAsResult() *GetNetworkcontainerResponseObjectAsResult {
	this := GetNetworkcontainerResponseObjectAsResult{}
	return &this
}

// NewGetNetworkcontainerResponseObjectAsResultWithDefaults instantiates a new GetNetworkcontainerResponseObjectAsResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkcontainerResponseObjectAsResultWithDefaults() *GetNetworkcontainerResponseObjectAsResult {
	this := GetNetworkcontainerResponseObjectAsResult{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *GetNetworkcontainerResponseObjectAsResult) GetResult() Networkcontainer {
	if o == nil || IsNil(o.Result) {
		var ret Networkcontainer
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkcontainerResponseObjectAsResult) GetResultOk() (*Networkcontainer, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *GetNetworkcontainerResponseObjectAsResult) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given Networkcontainer and assigns it to the Result field.
func (o *GetNetworkcontainerResponseObjectAsResult) SetResult(v Networkcontainer) {
	o.Result = &v
}

func (o GetNetworkcontainerResponseObjectAsResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNetworkcontainerResponseObjectAsResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	return toSerialize, nil
}

type NullableGetNetworkcontainerResponseObjectAsResult struct {
	value *GetNetworkcontainerResponseObjectAsResult
	isSet bool
}

func (v NullableGetNetworkcontainerResponseObjectAsResult) Get() *GetNetworkcontainerResponseObjectAsResult {
	return v.value
}

func (v *NullableGetNetworkcontainerResponseObjectAsResult) Set(val *GetNetworkcontainerResponseObjectAsResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworkcontainerResponseObjectAsResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworkcontainerResponseObjectAsResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworkcontainerResponseObjectAsResult(val *GetNetworkcontainerResponseObjectAsResult) *NullableGetNetworkcontainerResponseObjectAsResult {
	return &NullableGetNetworkcontainerResponseObjectAsResult{value: val, isSet: true}
}

func (v NullableGetNetworkcontainerResponseObjectAsResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworkcontainerResponseObjectAsResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
