/*
Infoblox IPAM API

OpenAPI specification for Infoblox NIOS WAPI IPAM objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipam

import (
	"encoding/json"
)

// checks if the GetNetworktemplateResponseObjectAsResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNetworktemplateResponseObjectAsResult{}

// GetNetworktemplateResponseObjectAsResult The response format to retrieve __Networktemplate__ objects.
type GetNetworktemplateResponseObjectAsResult struct {
	Result *Networktemplate `json:"result,omitempty"`
}

// NewGetNetworktemplateResponseObjectAsResult instantiates a new GetNetworktemplateResponseObjectAsResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworktemplateResponseObjectAsResult() *GetNetworktemplateResponseObjectAsResult {
	this := GetNetworktemplateResponseObjectAsResult{}
	return &this
}

// NewGetNetworktemplateResponseObjectAsResultWithDefaults instantiates a new GetNetworktemplateResponseObjectAsResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworktemplateResponseObjectAsResultWithDefaults() *GetNetworktemplateResponseObjectAsResult {
	this := GetNetworktemplateResponseObjectAsResult{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *GetNetworktemplateResponseObjectAsResult) GetResult() Networktemplate {
	if o == nil || IsNil(o.Result) {
		var ret Networktemplate
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworktemplateResponseObjectAsResult) GetResultOk() (*Networktemplate, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *GetNetworktemplateResponseObjectAsResult) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given Networktemplate and assigns it to the Result field.
func (o *GetNetworktemplateResponseObjectAsResult) SetResult(v Networktemplate) {
	o.Result = &v
}

func (o GetNetworktemplateResponseObjectAsResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNetworktemplateResponseObjectAsResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	return toSerialize, nil
}

type NullableGetNetworktemplateResponseObjectAsResult struct {
	value *GetNetworktemplateResponseObjectAsResult
	isSet bool
}

func (v NullableGetNetworktemplateResponseObjectAsResult) Get() *GetNetworktemplateResponseObjectAsResult {
	return v.value
}

func (v *NullableGetNetworktemplateResponseObjectAsResult) Set(val *GetNetworktemplateResponseObjectAsResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworktemplateResponseObjectAsResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworktemplateResponseObjectAsResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworktemplateResponseObjectAsResult(val *GetNetworktemplateResponseObjectAsResult) *NullableGetNetworktemplateResponseObjectAsResult {
	return &NullableGetNetworktemplateResponseObjectAsResult{value: val, isSet: true}
}

func (v NullableGetNetworktemplateResponseObjectAsResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworktemplateResponseObjectAsResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
