/*
Infoblox IPAM API

OpenAPI specification for Infoblox NIOS WAPI IPAM objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipam

import (
	"encoding/json"
)

// checks if the Ipv6networkcontainerZoneAssociations type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Ipv6networkcontainerZoneAssociations{}

// Ipv6networkcontainerZoneAssociations struct for Ipv6networkcontainerZoneAssociations
type Ipv6networkcontainerZoneAssociations struct {
	// The FQDN of the authoritative forward zone.
	Fqdn *string `json:"fqdn,omitempty"`
	// True if this is the default zone.
	IsDefault *bool `json:"is_default,omitempty"`
	// The view to which the zone belongs. If a view is not specified, the default view is used.
	View                 *string `json:"view,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Ipv6networkcontainerZoneAssociations Ipv6networkcontainerZoneAssociations

// NewIpv6networkcontainerZoneAssociations instantiates a new Ipv6networkcontainerZoneAssociations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpv6networkcontainerZoneAssociations() *Ipv6networkcontainerZoneAssociations {
	this := Ipv6networkcontainerZoneAssociations{}
	return &this
}

// NewIpv6networkcontainerZoneAssociationsWithDefaults instantiates a new Ipv6networkcontainerZoneAssociations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpv6networkcontainerZoneAssociationsWithDefaults() *Ipv6networkcontainerZoneAssociations {
	this := Ipv6networkcontainerZoneAssociations{}
	return &this
}

// GetFqdn returns the Fqdn field value if set, zero value otherwise.
func (o *Ipv6networkcontainerZoneAssociations) GetFqdn() string {
	if o == nil || IsNil(o.Fqdn) {
		var ret string
		return ret
	}
	return *o.Fqdn
}

// GetFqdnOk returns a tuple with the Fqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ipv6networkcontainerZoneAssociations) GetFqdnOk() (*string, bool) {
	if o == nil || IsNil(o.Fqdn) {
		return nil, false
	}
	return o.Fqdn, true
}

// HasFqdn returns a boolean if a field has been set.
func (o *Ipv6networkcontainerZoneAssociations) HasFqdn() bool {
	if o != nil && !IsNil(o.Fqdn) {
		return true
	}

	return false
}

// SetFqdn gets a reference to the given string and assigns it to the Fqdn field.
func (o *Ipv6networkcontainerZoneAssociations) SetFqdn(v string) {
	o.Fqdn = &v
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *Ipv6networkcontainerZoneAssociations) GetIsDefault() bool {
	if o == nil || IsNil(o.IsDefault) {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ipv6networkcontainerZoneAssociations) GetIsDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDefault) {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *Ipv6networkcontainerZoneAssociations) HasIsDefault() bool {
	if o != nil && !IsNil(o.IsDefault) {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *Ipv6networkcontainerZoneAssociations) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetView returns the View field value if set, zero value otherwise.
func (o *Ipv6networkcontainerZoneAssociations) GetView() string {
	if o == nil || IsNil(o.View) {
		var ret string
		return ret
	}
	return *o.View
}

// GetViewOk returns a tuple with the View field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ipv6networkcontainerZoneAssociations) GetViewOk() (*string, bool) {
	if o == nil || IsNil(o.View) {
		return nil, false
	}
	return o.View, true
}

// HasView returns a boolean if a field has been set.
func (o *Ipv6networkcontainerZoneAssociations) HasView() bool {
	if o != nil && !IsNil(o.View) {
		return true
	}

	return false
}

// SetView gets a reference to the given string and assigns it to the View field.
func (o *Ipv6networkcontainerZoneAssociations) SetView(v string) {
	o.View = &v
}

func (o Ipv6networkcontainerZoneAssociations) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Ipv6networkcontainerZoneAssociations) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Fqdn) {
		toSerialize["fqdn"] = o.Fqdn
	}
	if !IsNil(o.IsDefault) {
		toSerialize["is_default"] = o.IsDefault
	}
	if !IsNil(o.View) {
		toSerialize["view"] = o.View
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Ipv6networkcontainerZoneAssociations) UnmarshalJSON(data []byte) (err error) {
	varIpv6networkcontainerZoneAssociations := _Ipv6networkcontainerZoneAssociations{}

	err = json.Unmarshal(data, &varIpv6networkcontainerZoneAssociations)

	if err != nil {
		return err
	}

	*o = Ipv6networkcontainerZoneAssociations(varIpv6networkcontainerZoneAssociations)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "fqdn")
		delete(additionalProperties, "is_default")
		delete(additionalProperties, "view")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIpv6networkcontainerZoneAssociations struct {
	value *Ipv6networkcontainerZoneAssociations
	isSet bool
}

func (v NullableIpv6networkcontainerZoneAssociations) Get() *Ipv6networkcontainerZoneAssociations {
	return v.value
}

func (v *NullableIpv6networkcontainerZoneAssociations) Set(val *Ipv6networkcontainerZoneAssociations) {
	v.value = val
	v.isSet = true
}

func (v NullableIpv6networkcontainerZoneAssociations) IsSet() bool {
	return v.isSet
}

func (v *NullableIpv6networkcontainerZoneAssociations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpv6networkcontainerZoneAssociations(val *Ipv6networkcontainerZoneAssociations) *NullableIpv6networkcontainerZoneAssociations {
	return &NullableIpv6networkcontainerZoneAssociations{value: val, isSet: true}
}

func (v NullableIpv6networkcontainerZoneAssociations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpv6networkcontainerZoneAssociations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
