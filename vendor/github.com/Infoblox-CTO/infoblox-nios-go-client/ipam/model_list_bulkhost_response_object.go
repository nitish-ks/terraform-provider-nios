/*
Infoblox IPAM API

OpenAPI specification for Infoblox NIOS WAPI IPAM objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipam

import (
	"encoding/json"
)

// checks if the ListBulkhostResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListBulkhostResponseObject{}

// ListBulkhostResponseObject The response format to retrieve __Bulkhost__ objects.
type ListBulkhostResponseObject struct {
	Result               []Bulkhost `json:"result,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListBulkhostResponseObject ListBulkhostResponseObject

// NewListBulkhostResponseObject instantiates a new ListBulkhostResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListBulkhostResponseObject() *ListBulkhostResponseObject {
	this := ListBulkhostResponseObject{}
	return &this
}

// NewListBulkhostResponseObjectWithDefaults instantiates a new ListBulkhostResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListBulkhostResponseObjectWithDefaults() *ListBulkhostResponseObject {
	this := ListBulkhostResponseObject{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *ListBulkhostResponseObject) GetResult() []Bulkhost {
	if o == nil || IsNil(o.Result) {
		var ret []Bulkhost
		return ret
	}
	return o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBulkhostResponseObject) GetResultOk() ([]Bulkhost, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *ListBulkhostResponseObject) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given []Bulkhost and assigns it to the Result field.
func (o *ListBulkhostResponseObject) SetResult(v []Bulkhost) {
	o.Result = v
}

func (o ListBulkhostResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListBulkhostResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListBulkhostResponseObject) UnmarshalJSON(data []byte) (err error) {
	varListBulkhostResponseObject := _ListBulkhostResponseObject{}

	err = json.Unmarshal(data, &varListBulkhostResponseObject)

	if err != nil {
		return err
	}

	*o = ListBulkhostResponseObject(varListBulkhostResponseObject)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "result")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListBulkhostResponseObject struct {
	value *ListBulkhostResponseObject
	isSet bool
}

func (v NullableListBulkhostResponseObject) Get() *ListBulkhostResponseObject {
	return v.value
}

func (v *NullableListBulkhostResponseObject) Set(val *ListBulkhostResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableListBulkhostResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableListBulkhostResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListBulkhostResponseObject(val *ListBulkhostResponseObject) *NullableListBulkhostResponseObject {
	return &NullableListBulkhostResponseObject{value: val, isSet: true}
}

func (v NullableListBulkhostResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListBulkhostResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
