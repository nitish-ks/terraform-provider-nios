/*
Infoblox IPAM API

OpenAPI specification for Infoblox NIOS WAPI IPAM objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipam

import (
	"encoding/json"
	"fmt"
)

// ListIpamStatisticsResponse - struct for ListIpamStatisticsResponse
type ListIpamStatisticsResponse struct {
	ListIpamStatisticsResponseObject *ListIpamStatisticsResponseObject
	ArrayOfIpamStatistics            *[]IpamStatistics
}

// ListIpamStatisticsResponseObjectAsListIpamStatisticsResponse is a convenience function that returns ListIpamStatisticsResponseObject wrapped in ListIpamStatisticsResponse
func ListIpamStatisticsResponseObjectAsListIpamStatisticsResponse(v *ListIpamStatisticsResponseObject) ListIpamStatisticsResponse {
	return ListIpamStatisticsResponse{
		ListIpamStatisticsResponseObject: v,
	}
}

// []IpamStatisticsAsListIpamStatisticsResponse is a convenience function that returns []IpamStatistics wrapped in ListIpamStatisticsResponse
func ArrayOfIpamStatisticsAsListIpamStatisticsResponse(v *[]IpamStatistics) ListIpamStatisticsResponse {
	return ListIpamStatisticsResponse{
		ArrayOfIpamStatistics: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListIpamStatisticsResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListIpamStatisticsResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListIpamStatisticsResponseObject)
	if err == nil {
		jsonListIpamStatisticsResponseObject, _ := json.Marshal(dst.ListIpamStatisticsResponseObject)
		if string(jsonListIpamStatisticsResponseObject) == "{}" { // empty struct
			dst.ListIpamStatisticsResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListIpamStatisticsResponseObject = nil
	}

	// try to unmarshal data into ArrayOfIpamStatistics
	err = newStrictDecoder(data).Decode(&dst.ArrayOfIpamStatistics)
	if err == nil {
		jsonArrayOfIpamStatistics, _ := json.Marshal(dst.ArrayOfIpamStatistics)
		if string(jsonArrayOfIpamStatistics) == "{}" { // empty struct
			dst.ArrayOfIpamStatistics = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfIpamStatistics = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListIpamStatisticsResponseObject = nil
		dst.ArrayOfIpamStatistics = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListIpamStatisticsResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListIpamStatisticsResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListIpamStatisticsResponse) MarshalJSON() ([]byte, error) {
	if src.ListIpamStatisticsResponseObject != nil {
		return json.Marshal(&src.ListIpamStatisticsResponseObject)
	}

	if src.ArrayOfIpamStatistics != nil {
		return json.Marshal(&src.ArrayOfIpamStatistics)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListIpamStatisticsResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListIpamStatisticsResponseObject != nil {
		return obj.ListIpamStatisticsResponseObject
	}

	if obj.ArrayOfIpamStatistics != nil {
		return obj.ArrayOfIpamStatistics
	}

	// all schemas are nil
	return nil
}

type NullableListIpamStatisticsResponse struct {
	value *ListIpamStatisticsResponse
	isSet bool
}

func (v NullableListIpamStatisticsResponse) Get() *ListIpamStatisticsResponse {
	return v.value
}

func (v *NullableListIpamStatisticsResponse) Set(val *ListIpamStatisticsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListIpamStatisticsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListIpamStatisticsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListIpamStatisticsResponse(val *ListIpamStatisticsResponse) *NullableListIpamStatisticsResponse {
	return &NullableListIpamStatisticsResponse{value: val, isSet: true}
}

func (v NullableListIpamStatisticsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListIpamStatisticsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
