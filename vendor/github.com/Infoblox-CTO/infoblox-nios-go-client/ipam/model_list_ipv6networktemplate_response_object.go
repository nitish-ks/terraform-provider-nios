/*
Infoblox IPAM API

OpenAPI specification for Infoblox NIOS WAPI IPAM objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipam

import (
	"encoding/json"
)

// checks if the ListIpv6networktemplateResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListIpv6networktemplateResponseObject{}

// ListIpv6networktemplateResponseObject The response format to retrieve __Ipv6networktemplate__ objects.
type ListIpv6networktemplateResponseObject struct {
	Result               []Ipv6networktemplate `json:"result,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListIpv6networktemplateResponseObject ListIpv6networktemplateResponseObject

// NewListIpv6networktemplateResponseObject instantiates a new ListIpv6networktemplateResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListIpv6networktemplateResponseObject() *ListIpv6networktemplateResponseObject {
	this := ListIpv6networktemplateResponseObject{}
	return &this
}

// NewListIpv6networktemplateResponseObjectWithDefaults instantiates a new ListIpv6networktemplateResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListIpv6networktemplateResponseObjectWithDefaults() *ListIpv6networktemplateResponseObject {
	this := ListIpv6networktemplateResponseObject{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *ListIpv6networktemplateResponseObject) GetResult() []Ipv6networktemplate {
	if o == nil || IsNil(o.Result) {
		var ret []Ipv6networktemplate
		return ret
	}
	return o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIpv6networktemplateResponseObject) GetResultOk() ([]Ipv6networktemplate, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *ListIpv6networktemplateResponseObject) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given []Ipv6networktemplate and assigns it to the Result field.
func (o *ListIpv6networktemplateResponseObject) SetResult(v []Ipv6networktemplate) {
	o.Result = v
}

func (o ListIpv6networktemplateResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListIpv6networktemplateResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListIpv6networktemplateResponseObject) UnmarshalJSON(data []byte) (err error) {
	varListIpv6networktemplateResponseObject := _ListIpv6networktemplateResponseObject{}

	err = json.Unmarshal(data, &varListIpv6networktemplateResponseObject)

	if err != nil {
		return err
	}

	*o = ListIpv6networktemplateResponseObject(varListIpv6networktemplateResponseObject)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "result")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListIpv6networktemplateResponseObject struct {
	value *ListIpv6networktemplateResponseObject
	isSet bool
}

func (v NullableListIpv6networktemplateResponseObject) Get() *ListIpv6networktemplateResponseObject {
	return v.value
}

func (v *NullableListIpv6networktemplateResponseObject) Set(val *ListIpv6networktemplateResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableListIpv6networktemplateResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableListIpv6networktemplateResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListIpv6networktemplateResponseObject(val *ListIpv6networktemplateResponseObject) *NullableListIpv6networktemplateResponseObject {
	return &NullableListIpv6networktemplateResponseObject{value: val, isSet: true}
}

func (v NullableListIpv6networktemplateResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListIpv6networktemplateResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
