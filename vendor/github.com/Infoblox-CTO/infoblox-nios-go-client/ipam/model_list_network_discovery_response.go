/*
Infoblox IPAM API

OpenAPI specification for Infoblox NIOS WAPI IPAM objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipam

import (
	"encoding/json"
	"fmt"
)

// ListNetworkDiscoveryResponse - struct for ListNetworkDiscoveryResponse
type ListNetworkDiscoveryResponse struct {
	ListNetworkDiscoveryResponseObject *ListNetworkDiscoveryResponseObject
	ArrayOfNetworkDiscovery            *[]NetworkDiscovery
}

// ListNetworkDiscoveryResponseObjectAsListNetworkDiscoveryResponse is a convenience function that returns ListNetworkDiscoveryResponseObject wrapped in ListNetworkDiscoveryResponse
func ListNetworkDiscoveryResponseObjectAsListNetworkDiscoveryResponse(v *ListNetworkDiscoveryResponseObject) ListNetworkDiscoveryResponse {
	return ListNetworkDiscoveryResponse{
		ListNetworkDiscoveryResponseObject: v,
	}
}

// []NetworkDiscoveryAsListNetworkDiscoveryResponse is a convenience function that returns []NetworkDiscovery wrapped in ListNetworkDiscoveryResponse
func ArrayOfNetworkDiscoveryAsListNetworkDiscoveryResponse(v *[]NetworkDiscovery) ListNetworkDiscoveryResponse {
	return ListNetworkDiscoveryResponse{
		ArrayOfNetworkDiscovery: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListNetworkDiscoveryResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListNetworkDiscoveryResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListNetworkDiscoveryResponseObject)
	if err == nil {
		jsonListNetworkDiscoveryResponseObject, _ := json.Marshal(dst.ListNetworkDiscoveryResponseObject)
		if string(jsonListNetworkDiscoveryResponseObject) == "{}" { // empty struct
			dst.ListNetworkDiscoveryResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListNetworkDiscoveryResponseObject = nil
	}

	// try to unmarshal data into ArrayOfNetworkDiscovery
	err = newStrictDecoder(data).Decode(&dst.ArrayOfNetworkDiscovery)
	if err == nil {
		jsonArrayOfNetworkDiscovery, _ := json.Marshal(dst.ArrayOfNetworkDiscovery)
		if string(jsonArrayOfNetworkDiscovery) == "{}" { // empty struct
			dst.ArrayOfNetworkDiscovery = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfNetworkDiscovery = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListNetworkDiscoveryResponseObject = nil
		dst.ArrayOfNetworkDiscovery = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListNetworkDiscoveryResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListNetworkDiscoveryResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListNetworkDiscoveryResponse) MarshalJSON() ([]byte, error) {
	if src.ListNetworkDiscoveryResponseObject != nil {
		return json.Marshal(&src.ListNetworkDiscoveryResponseObject)
	}

	if src.ArrayOfNetworkDiscovery != nil {
		return json.Marshal(&src.ArrayOfNetworkDiscovery)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListNetworkDiscoveryResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListNetworkDiscoveryResponseObject != nil {
		return obj.ListNetworkDiscoveryResponseObject
	}

	if obj.ArrayOfNetworkDiscovery != nil {
		return obj.ArrayOfNetworkDiscovery
	}

	// all schemas are nil
	return nil
}

type NullableListNetworkDiscoveryResponse struct {
	value *ListNetworkDiscoveryResponse
	isSet bool
}

func (v NullableListNetworkDiscoveryResponse) Get() *ListNetworkDiscoveryResponse {
	return v.value
}

func (v *NullableListNetworkDiscoveryResponse) Set(val *ListNetworkDiscoveryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListNetworkDiscoveryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListNetworkDiscoveryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListNetworkDiscoveryResponse(val *ListNetworkDiscoveryResponse) *NullableListNetworkDiscoveryResponse {
	return &NullableListNetworkDiscoveryResponse{value: val, isSet: true}
}

func (v NullableListNetworkDiscoveryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListNetworkDiscoveryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
