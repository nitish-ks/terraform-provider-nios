/*
Infoblox IPAM API

OpenAPI specification for Infoblox NIOS WAPI IPAM objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipam

import (
	"encoding/json"
)

// checks if the NetworkZoneAssociations type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkZoneAssociations{}

// NetworkZoneAssociations struct for NetworkZoneAssociations
type NetworkZoneAssociations struct {
	// The FQDN of the authoritative forward zone.
	Fqdn *string `json:"fqdn,omitempty"`
	// True if this is the default zone.
	IsDefault *bool `json:"is_default,omitempty"`
	// The view to which the zone belongs. If a view is not specified, the default view is used.
	View                 *string `json:"view,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _NetworkZoneAssociations NetworkZoneAssociations

// NewNetworkZoneAssociations instantiates a new NetworkZoneAssociations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkZoneAssociations() *NetworkZoneAssociations {
	this := NetworkZoneAssociations{}
	return &this
}

// NewNetworkZoneAssociationsWithDefaults instantiates a new NetworkZoneAssociations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkZoneAssociationsWithDefaults() *NetworkZoneAssociations {
	this := NetworkZoneAssociations{}
	return &this
}

// GetFqdn returns the Fqdn field value if set, zero value otherwise.
func (o *NetworkZoneAssociations) GetFqdn() string {
	if o == nil || IsNil(o.Fqdn) {
		var ret string
		return ret
	}
	return *o.Fqdn
}

// GetFqdnOk returns a tuple with the Fqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkZoneAssociations) GetFqdnOk() (*string, bool) {
	if o == nil || IsNil(o.Fqdn) {
		return nil, false
	}
	return o.Fqdn, true
}

// HasFqdn returns a boolean if a field has been set.
func (o *NetworkZoneAssociations) HasFqdn() bool {
	if o != nil && !IsNil(o.Fqdn) {
		return true
	}

	return false
}

// SetFqdn gets a reference to the given string and assigns it to the Fqdn field.
func (o *NetworkZoneAssociations) SetFqdn(v string) {
	o.Fqdn = &v
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *NetworkZoneAssociations) GetIsDefault() bool {
	if o == nil || IsNil(o.IsDefault) {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkZoneAssociations) GetIsDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDefault) {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *NetworkZoneAssociations) HasIsDefault() bool {
	if o != nil && !IsNil(o.IsDefault) {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *NetworkZoneAssociations) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetView returns the View field value if set, zero value otherwise.
func (o *NetworkZoneAssociations) GetView() string {
	if o == nil || IsNil(o.View) {
		var ret string
		return ret
	}
	return *o.View
}

// GetViewOk returns a tuple with the View field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkZoneAssociations) GetViewOk() (*string, bool) {
	if o == nil || IsNil(o.View) {
		return nil, false
	}
	return o.View, true
}

// HasView returns a boolean if a field has been set.
func (o *NetworkZoneAssociations) HasView() bool {
	if o != nil && !IsNil(o.View) {
		return true
	}

	return false
}

// SetView gets a reference to the given string and assigns it to the View field.
func (o *NetworkZoneAssociations) SetView(v string) {
	o.View = &v
}

func (o NetworkZoneAssociations) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkZoneAssociations) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Fqdn) {
		toSerialize["fqdn"] = o.Fqdn
	}
	if !IsNil(o.IsDefault) {
		toSerialize["is_default"] = o.IsDefault
	}
	if !IsNil(o.View) {
		toSerialize["view"] = o.View
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *NetworkZoneAssociations) UnmarshalJSON(data []byte) (err error) {
	varNetworkZoneAssociations := _NetworkZoneAssociations{}

	err = json.Unmarshal(data, &varNetworkZoneAssociations)

	if err != nil {
		return err
	}

	*o = NetworkZoneAssociations(varNetworkZoneAssociations)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "fqdn")
		delete(additionalProperties, "is_default")
		delete(additionalProperties, "view")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableNetworkZoneAssociations struct {
	value *NetworkZoneAssociations
	isSet bool
}

func (v NullableNetworkZoneAssociations) Get() *NetworkZoneAssociations {
	return v.value
}

func (v *NullableNetworkZoneAssociations) Set(val *NetworkZoneAssociations) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkZoneAssociations) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkZoneAssociations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkZoneAssociations(val *NetworkZoneAssociations) *NullableNetworkZoneAssociations {
	return &NullableNetworkZoneAssociations{value: val, isSet: true}
}

func (v NullableNetworkZoneAssociations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkZoneAssociations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
