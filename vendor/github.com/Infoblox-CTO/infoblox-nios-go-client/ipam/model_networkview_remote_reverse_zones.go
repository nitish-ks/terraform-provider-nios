/*
Infoblox IPAM API

OpenAPI specification for Infoblox NIOS WAPI IPAM objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipam

import (
	"encoding/json"
)

// checks if the NetworkviewRemoteReverseZones type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkviewRemoteReverseZones{}

// NetworkviewRemoteReverseZones struct for NetworkviewRemoteReverseZones
type NetworkviewRemoteReverseZones struct {
	// The FQDN of the remote server.
	Fqdn *string `json:"fqdn,omitempty"`
	// The remote server IP address.
	ServerAddress *string `json:"server_address,omitempty"`
	// The principal name in which GSS-TSIG for dynamic updates is enabled.
	GssTsigDnsPrincipal *string `json:"gss_tsig_dns_principal,omitempty"`
	// The domain in which GSS-TSIG for dynamic updates is enabled.
	GssTsigDomain *string `json:"gss_tsig_domain,omitempty"`
	// The TSIG key value.
	TsigKey *string `json:"tsig_key,omitempty"`
	// The TSIG key alorithm name.
	TsigKeyAlg *string `json:"tsig_key_alg,omitempty"`
	// The name of the TSIG key. The key name entered here must match the TSIG key name on the external name server.
	TsigKeyName *string `json:"tsig_key_name,omitempty"`
	// The key type to be used.
	KeyType              *string `json:"key_type,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _NetworkviewRemoteReverseZones NetworkviewRemoteReverseZones

// NewNetworkviewRemoteReverseZones instantiates a new NetworkviewRemoteReverseZones object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkviewRemoteReverseZones() *NetworkviewRemoteReverseZones {
	this := NetworkviewRemoteReverseZones{}
	return &this
}

// NewNetworkviewRemoteReverseZonesWithDefaults instantiates a new NetworkviewRemoteReverseZones object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkviewRemoteReverseZonesWithDefaults() *NetworkviewRemoteReverseZones {
	this := NetworkviewRemoteReverseZones{}
	return &this
}

// GetFqdn returns the Fqdn field value if set, zero value otherwise.
func (o *NetworkviewRemoteReverseZones) GetFqdn() string {
	if o == nil || IsNil(o.Fqdn) {
		var ret string
		return ret
	}
	return *o.Fqdn
}

// GetFqdnOk returns a tuple with the Fqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkviewRemoteReverseZones) GetFqdnOk() (*string, bool) {
	if o == nil || IsNil(o.Fqdn) {
		return nil, false
	}
	return o.Fqdn, true
}

// HasFqdn returns a boolean if a field has been set.
func (o *NetworkviewRemoteReverseZones) HasFqdn() bool {
	if o != nil && !IsNil(o.Fqdn) {
		return true
	}

	return false
}

// SetFqdn gets a reference to the given string and assigns it to the Fqdn field.
func (o *NetworkviewRemoteReverseZones) SetFqdn(v string) {
	o.Fqdn = &v
}

// GetServerAddress returns the ServerAddress field value if set, zero value otherwise.
func (o *NetworkviewRemoteReverseZones) GetServerAddress() string {
	if o == nil || IsNil(o.ServerAddress) {
		var ret string
		return ret
	}
	return *o.ServerAddress
}

// GetServerAddressOk returns a tuple with the ServerAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkviewRemoteReverseZones) GetServerAddressOk() (*string, bool) {
	if o == nil || IsNil(o.ServerAddress) {
		return nil, false
	}
	return o.ServerAddress, true
}

// HasServerAddress returns a boolean if a field has been set.
func (o *NetworkviewRemoteReverseZones) HasServerAddress() bool {
	if o != nil && !IsNil(o.ServerAddress) {
		return true
	}

	return false
}

// SetServerAddress gets a reference to the given string and assigns it to the ServerAddress field.
func (o *NetworkviewRemoteReverseZones) SetServerAddress(v string) {
	o.ServerAddress = &v
}

// GetGssTsigDnsPrincipal returns the GssTsigDnsPrincipal field value if set, zero value otherwise.
func (o *NetworkviewRemoteReverseZones) GetGssTsigDnsPrincipal() string {
	if o == nil || IsNil(o.GssTsigDnsPrincipal) {
		var ret string
		return ret
	}
	return *o.GssTsigDnsPrincipal
}

// GetGssTsigDnsPrincipalOk returns a tuple with the GssTsigDnsPrincipal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkviewRemoteReverseZones) GetGssTsigDnsPrincipalOk() (*string, bool) {
	if o == nil || IsNil(o.GssTsigDnsPrincipal) {
		return nil, false
	}
	return o.GssTsigDnsPrincipal, true
}

// HasGssTsigDnsPrincipal returns a boolean if a field has been set.
func (o *NetworkviewRemoteReverseZones) HasGssTsigDnsPrincipal() bool {
	if o != nil && !IsNil(o.GssTsigDnsPrincipal) {
		return true
	}

	return false
}

// SetGssTsigDnsPrincipal gets a reference to the given string and assigns it to the GssTsigDnsPrincipal field.
func (o *NetworkviewRemoteReverseZones) SetGssTsigDnsPrincipal(v string) {
	o.GssTsigDnsPrincipal = &v
}

// GetGssTsigDomain returns the GssTsigDomain field value if set, zero value otherwise.
func (o *NetworkviewRemoteReverseZones) GetGssTsigDomain() string {
	if o == nil || IsNil(o.GssTsigDomain) {
		var ret string
		return ret
	}
	return *o.GssTsigDomain
}

// GetGssTsigDomainOk returns a tuple with the GssTsigDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkviewRemoteReverseZones) GetGssTsigDomainOk() (*string, bool) {
	if o == nil || IsNil(o.GssTsigDomain) {
		return nil, false
	}
	return o.GssTsigDomain, true
}

// HasGssTsigDomain returns a boolean if a field has been set.
func (o *NetworkviewRemoteReverseZones) HasGssTsigDomain() bool {
	if o != nil && !IsNil(o.GssTsigDomain) {
		return true
	}

	return false
}

// SetGssTsigDomain gets a reference to the given string and assigns it to the GssTsigDomain field.
func (o *NetworkviewRemoteReverseZones) SetGssTsigDomain(v string) {
	o.GssTsigDomain = &v
}

// GetTsigKey returns the TsigKey field value if set, zero value otherwise.
func (o *NetworkviewRemoteReverseZones) GetTsigKey() string {
	if o == nil || IsNil(o.TsigKey) {
		var ret string
		return ret
	}
	return *o.TsigKey
}

// GetTsigKeyOk returns a tuple with the TsigKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkviewRemoteReverseZones) GetTsigKeyOk() (*string, bool) {
	if o == nil || IsNil(o.TsigKey) {
		return nil, false
	}
	return o.TsigKey, true
}

// HasTsigKey returns a boolean if a field has been set.
func (o *NetworkviewRemoteReverseZones) HasTsigKey() bool {
	if o != nil && !IsNil(o.TsigKey) {
		return true
	}

	return false
}

// SetTsigKey gets a reference to the given string and assigns it to the TsigKey field.
func (o *NetworkviewRemoteReverseZones) SetTsigKey(v string) {
	o.TsigKey = &v
}

// GetTsigKeyAlg returns the TsigKeyAlg field value if set, zero value otherwise.
func (o *NetworkviewRemoteReverseZones) GetTsigKeyAlg() string {
	if o == nil || IsNil(o.TsigKeyAlg) {
		var ret string
		return ret
	}
	return *o.TsigKeyAlg
}

// GetTsigKeyAlgOk returns a tuple with the TsigKeyAlg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkviewRemoteReverseZones) GetTsigKeyAlgOk() (*string, bool) {
	if o == nil || IsNil(o.TsigKeyAlg) {
		return nil, false
	}
	return o.TsigKeyAlg, true
}

// HasTsigKeyAlg returns a boolean if a field has been set.
func (o *NetworkviewRemoteReverseZones) HasTsigKeyAlg() bool {
	if o != nil && !IsNil(o.TsigKeyAlg) {
		return true
	}

	return false
}

// SetTsigKeyAlg gets a reference to the given string and assigns it to the TsigKeyAlg field.
func (o *NetworkviewRemoteReverseZones) SetTsigKeyAlg(v string) {
	o.TsigKeyAlg = &v
}

// GetTsigKeyName returns the TsigKeyName field value if set, zero value otherwise.
func (o *NetworkviewRemoteReverseZones) GetTsigKeyName() string {
	if o == nil || IsNil(o.TsigKeyName) {
		var ret string
		return ret
	}
	return *o.TsigKeyName
}

// GetTsigKeyNameOk returns a tuple with the TsigKeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkviewRemoteReverseZones) GetTsigKeyNameOk() (*string, bool) {
	if o == nil || IsNil(o.TsigKeyName) {
		return nil, false
	}
	return o.TsigKeyName, true
}

// HasTsigKeyName returns a boolean if a field has been set.
func (o *NetworkviewRemoteReverseZones) HasTsigKeyName() bool {
	if o != nil && !IsNil(o.TsigKeyName) {
		return true
	}

	return false
}

// SetTsigKeyName gets a reference to the given string and assigns it to the TsigKeyName field.
func (o *NetworkviewRemoteReverseZones) SetTsigKeyName(v string) {
	o.TsigKeyName = &v
}

// GetKeyType returns the KeyType field value if set, zero value otherwise.
func (o *NetworkviewRemoteReverseZones) GetKeyType() string {
	if o == nil || IsNil(o.KeyType) {
		var ret string
		return ret
	}
	return *o.KeyType
}

// GetKeyTypeOk returns a tuple with the KeyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkviewRemoteReverseZones) GetKeyTypeOk() (*string, bool) {
	if o == nil || IsNil(o.KeyType) {
		return nil, false
	}
	return o.KeyType, true
}

// HasKeyType returns a boolean if a field has been set.
func (o *NetworkviewRemoteReverseZones) HasKeyType() bool {
	if o != nil && !IsNil(o.KeyType) {
		return true
	}

	return false
}

// SetKeyType gets a reference to the given string and assigns it to the KeyType field.
func (o *NetworkviewRemoteReverseZones) SetKeyType(v string) {
	o.KeyType = &v
}

func (o NetworkviewRemoteReverseZones) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkviewRemoteReverseZones) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Fqdn) {
		toSerialize["fqdn"] = o.Fqdn
	}
	if !IsNil(o.ServerAddress) {
		toSerialize["server_address"] = o.ServerAddress
	}
	if !IsNil(o.GssTsigDnsPrincipal) {
		toSerialize["gss_tsig_dns_principal"] = o.GssTsigDnsPrincipal
	}
	if !IsNil(o.GssTsigDomain) {
		toSerialize["gss_tsig_domain"] = o.GssTsigDomain
	}
	if !IsNil(o.TsigKey) {
		toSerialize["tsig_key"] = o.TsigKey
	}
	if !IsNil(o.TsigKeyAlg) {
		toSerialize["tsig_key_alg"] = o.TsigKeyAlg
	}
	if !IsNil(o.TsigKeyName) {
		toSerialize["tsig_key_name"] = o.TsigKeyName
	}
	if !IsNil(o.KeyType) {
		toSerialize["key_type"] = o.KeyType
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *NetworkviewRemoteReverseZones) UnmarshalJSON(data []byte) (err error) {
	varNetworkviewRemoteReverseZones := _NetworkviewRemoteReverseZones{}

	err = json.Unmarshal(data, &varNetworkviewRemoteReverseZones)

	if err != nil {
		return err
	}

	*o = NetworkviewRemoteReverseZones(varNetworkviewRemoteReverseZones)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "fqdn")
		delete(additionalProperties, "server_address")
		delete(additionalProperties, "gss_tsig_dns_principal")
		delete(additionalProperties, "gss_tsig_domain")
		delete(additionalProperties, "tsig_key")
		delete(additionalProperties, "tsig_key_alg")
		delete(additionalProperties, "tsig_key_name")
		delete(additionalProperties, "key_type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableNetworkviewRemoteReverseZones struct {
	value *NetworkviewRemoteReverseZones
	isSet bool
}

func (v NullableNetworkviewRemoteReverseZones) Get() *NetworkviewRemoteReverseZones {
	return v.value
}

func (v *NullableNetworkviewRemoteReverseZones) Set(val *NetworkviewRemoteReverseZones) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkviewRemoteReverseZones) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkviewRemoteReverseZones) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkviewRemoteReverseZones(val *NetworkviewRemoteReverseZones) *NullableNetworkviewRemoteReverseZones {
	return &NullableNetworkviewRemoteReverseZones{value: val, isSet: true}
}

func (v NullableNetworkviewRemoteReverseZones) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkviewRemoteReverseZones) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
