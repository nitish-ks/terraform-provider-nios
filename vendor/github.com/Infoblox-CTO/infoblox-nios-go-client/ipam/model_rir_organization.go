/*
Infoblox IPAM API

OpenAPI specification for Infoblox NIOS WAPI IPAM objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipam

import (
	"encoding/json"
)

// checks if the RirOrganization type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RirOrganization{}

// RirOrganization struct for RirOrganization
type RirOrganization struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.
	Extattrs *map[string]ExtAttrs `json:"extattrs,omitempty"`
	// The RIR organization identifier.
	Id *string `json:"id,omitempty"`
	// The RIR organization maintainer.
	Maintainer *string `json:"maintainer,omitempty"`
	// The RIR organization name.
	Name *string `json:"name,omitempty"`
	// The password for the maintainer of RIR organization.
	Password *string `json:"password,omitempty"`
	// The RIR associated with RIR organization.
	Rir *string `json:"rir,omitempty"`
	// The sender e-mail address for RIR organization.
	SenderEmail *string `json:"sender_email,omitempty"`
}

// NewRirOrganization instantiates a new RirOrganization object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRirOrganization() *RirOrganization {
	this := RirOrganization{}
	return &this
}

// NewRirOrganizationWithDefaults instantiates a new RirOrganization object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRirOrganizationWithDefaults() *RirOrganization {
	this := RirOrganization{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *RirOrganization) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RirOrganization) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *RirOrganization) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *RirOrganization) SetRef(v string) {
	o.Ref = &v
}

// GetExtattrs returns the Extattrs field value if set, zero value otherwise.
func (o *RirOrganization) GetExtattrs() map[string]ExtAttrs {
	if o == nil || IsNil(o.Extattrs) {
		var ret map[string]ExtAttrs
		return ret
	}
	return *o.Extattrs
}

// GetExtattrsOk returns a tuple with the Extattrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RirOrganization) GetExtattrsOk() (*map[string]ExtAttrs, bool) {
	if o == nil || IsNil(o.Extattrs) {
		return nil, false
	}
	return o.Extattrs, true
}

// HasExtattrs returns a boolean if a field has been set.
func (o *RirOrganization) HasExtattrs() bool {
	if o != nil && !IsNil(o.Extattrs) {
		return true
	}

	return false
}

// SetExtattrs gets a reference to the given map[string]ExtAttrs and assigns it to the Extattrs field.
func (o *RirOrganization) SetExtattrs(v map[string]ExtAttrs) {
	o.Extattrs = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RirOrganization) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RirOrganization) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RirOrganization) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *RirOrganization) SetId(v string) {
	o.Id = &v
}

// GetMaintainer returns the Maintainer field value if set, zero value otherwise.
func (o *RirOrganization) GetMaintainer() string {
	if o == nil || IsNil(o.Maintainer) {
		var ret string
		return ret
	}
	return *o.Maintainer
}

// GetMaintainerOk returns a tuple with the Maintainer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RirOrganization) GetMaintainerOk() (*string, bool) {
	if o == nil || IsNil(o.Maintainer) {
		return nil, false
	}
	return o.Maintainer, true
}

// HasMaintainer returns a boolean if a field has been set.
func (o *RirOrganization) HasMaintainer() bool {
	if o != nil && !IsNil(o.Maintainer) {
		return true
	}

	return false
}

// SetMaintainer gets a reference to the given string and assigns it to the Maintainer field.
func (o *RirOrganization) SetMaintainer(v string) {
	o.Maintainer = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RirOrganization) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RirOrganization) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RirOrganization) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RirOrganization) SetName(v string) {
	o.Name = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *RirOrganization) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RirOrganization) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *RirOrganization) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *RirOrganization) SetPassword(v string) {
	o.Password = &v
}

// GetRir returns the Rir field value if set, zero value otherwise.
func (o *RirOrganization) GetRir() string {
	if o == nil || IsNil(o.Rir) {
		var ret string
		return ret
	}
	return *o.Rir
}

// GetRirOk returns a tuple with the Rir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RirOrganization) GetRirOk() (*string, bool) {
	if o == nil || IsNil(o.Rir) {
		return nil, false
	}
	return o.Rir, true
}

// HasRir returns a boolean if a field has been set.
func (o *RirOrganization) HasRir() bool {
	if o != nil && !IsNil(o.Rir) {
		return true
	}

	return false
}

// SetRir gets a reference to the given string and assigns it to the Rir field.
func (o *RirOrganization) SetRir(v string) {
	o.Rir = &v
}

// GetSenderEmail returns the SenderEmail field value if set, zero value otherwise.
func (o *RirOrganization) GetSenderEmail() string {
	if o == nil || IsNil(o.SenderEmail) {
		var ret string
		return ret
	}
	return *o.SenderEmail
}

// GetSenderEmailOk returns a tuple with the SenderEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RirOrganization) GetSenderEmailOk() (*string, bool) {
	if o == nil || IsNil(o.SenderEmail) {
		return nil, false
	}
	return o.SenderEmail, true
}

// HasSenderEmail returns a boolean if a field has been set.
func (o *RirOrganization) HasSenderEmail() bool {
	if o != nil && !IsNil(o.SenderEmail) {
		return true
	}

	return false
}

// SetSenderEmail gets a reference to the given string and assigns it to the SenderEmail field.
func (o *RirOrganization) SetSenderEmail(v string) {
	o.SenderEmail = &v
}

func (o RirOrganization) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RirOrganization) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.Extattrs) {
		toSerialize["extattrs"] = o.Extattrs
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Maintainer) {
		toSerialize["maintainer"] = o.Maintainer
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Rir) {
		toSerialize["rir"] = o.Rir
	}
	if !IsNil(o.SenderEmail) {
		toSerialize["sender_email"] = o.SenderEmail
	}
	return toSerialize, nil
}

type NullableRirOrganization struct {
	value *RirOrganization
	isSet bool
}

func (v NullableRirOrganization) Get() *RirOrganization {
	return v.value
}

func (v *NullableRirOrganization) Set(val *RirOrganization) {
	v.value = val
	v.isSet = true
}

func (v NullableRirOrganization) IsSet() bool {
	return v.isSet
}

func (v *NullableRirOrganization) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRirOrganization(val *RirOrganization) *NullableRirOrganization {
	return &NullableRirOrganization{value: val, isSet: true}
}

func (v NullableRirOrganization) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRirOrganization) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
