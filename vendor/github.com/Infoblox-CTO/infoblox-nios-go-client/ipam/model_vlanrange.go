/*
Infoblox IPAM API

OpenAPI specification for Infoblox NIOS WAPI IPAM objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipam

import (
	"encoding/json"
)

// checks if the Vlanrange type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Vlanrange{}

// Vlanrange struct for Vlanrange
type Vlanrange struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// A descriptive comment for this VLAN Range.
	Comment *string `json:"comment,omitempty"`
	// Vlans delete option. Determines whether all child objects should be removed alongside with the VLAN Range or child objects should be assigned to another parental VLAN Range/View. By default child objects are re-parented.
	DeleteVlans *bool `json:"delete_vlans,omitempty"`
	// End ID for VLAN Range.
	EndVlanId *int64 `json:"end_vlan_id,omitempty"`
	// Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.
	Extattrs *map[string]ExtAttrs `json:"extattrs,omitempty"`
	// Name of the VLAN Range.
	Name *string `json:"name,omitempty"`
	// If set on creation VLAN objects will be created once VLAN Range created.
	PreCreateVlan *bool `json:"pre_create_vlan,omitempty"`
	// Start ID for VLAN Range.
	StartVlanId *int64 `json:"start_vlan_id,omitempty"`
	// If set on creation prefix string will be used for VLAN name.
	VlanNamePrefix *string `json:"vlan_name_prefix,omitempty"`
	// The VLAN View to which this VLAN Range belongs.
	VlanView *string `json:"vlan_view,omitempty"`
}

// NewVlanrange instantiates a new Vlanrange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVlanrange() *Vlanrange {
	this := Vlanrange{}
	return &this
}

// NewVlanrangeWithDefaults instantiates a new Vlanrange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVlanrangeWithDefaults() *Vlanrange {
	this := Vlanrange{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *Vlanrange) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vlanrange) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *Vlanrange) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *Vlanrange) SetRef(v string) {
	o.Ref = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *Vlanrange) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vlanrange) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *Vlanrange) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *Vlanrange) SetComment(v string) {
	o.Comment = &v
}

// GetDeleteVlans returns the DeleteVlans field value if set, zero value otherwise.
func (o *Vlanrange) GetDeleteVlans() bool {
	if o == nil || IsNil(o.DeleteVlans) {
		var ret bool
		return ret
	}
	return *o.DeleteVlans
}

// GetDeleteVlansOk returns a tuple with the DeleteVlans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vlanrange) GetDeleteVlansOk() (*bool, bool) {
	if o == nil || IsNil(o.DeleteVlans) {
		return nil, false
	}
	return o.DeleteVlans, true
}

// HasDeleteVlans returns a boolean if a field has been set.
func (o *Vlanrange) HasDeleteVlans() bool {
	if o != nil && !IsNil(o.DeleteVlans) {
		return true
	}

	return false
}

// SetDeleteVlans gets a reference to the given bool and assigns it to the DeleteVlans field.
func (o *Vlanrange) SetDeleteVlans(v bool) {
	o.DeleteVlans = &v
}

// GetEndVlanId returns the EndVlanId field value if set, zero value otherwise.
func (o *Vlanrange) GetEndVlanId() int64 {
	if o == nil || IsNil(o.EndVlanId) {
		var ret int64
		return ret
	}
	return *o.EndVlanId
}

// GetEndVlanIdOk returns a tuple with the EndVlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vlanrange) GetEndVlanIdOk() (*int64, bool) {
	if o == nil || IsNil(o.EndVlanId) {
		return nil, false
	}
	return o.EndVlanId, true
}

// HasEndVlanId returns a boolean if a field has been set.
func (o *Vlanrange) HasEndVlanId() bool {
	if o != nil && !IsNil(o.EndVlanId) {
		return true
	}

	return false
}

// SetEndVlanId gets a reference to the given int64 and assigns it to the EndVlanId field.
func (o *Vlanrange) SetEndVlanId(v int64) {
	o.EndVlanId = &v
}

// GetExtattrs returns the Extattrs field value if set, zero value otherwise.
func (o *Vlanrange) GetExtattrs() map[string]ExtAttrs {
	if o == nil || IsNil(o.Extattrs) {
		var ret map[string]ExtAttrs
		return ret
	}
	return *o.Extattrs
}

// GetExtattrsOk returns a tuple with the Extattrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vlanrange) GetExtattrsOk() (*map[string]ExtAttrs, bool) {
	if o == nil || IsNil(o.Extattrs) {
		return nil, false
	}
	return o.Extattrs, true
}

// HasExtattrs returns a boolean if a field has been set.
func (o *Vlanrange) HasExtattrs() bool {
	if o != nil && !IsNil(o.Extattrs) {
		return true
	}

	return false
}

// SetExtattrs gets a reference to the given map[string]ExtAttrs and assigns it to the Extattrs field.
func (o *Vlanrange) SetExtattrs(v map[string]ExtAttrs) {
	o.Extattrs = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Vlanrange) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vlanrange) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Vlanrange) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Vlanrange) SetName(v string) {
	o.Name = &v
}

// GetPreCreateVlan returns the PreCreateVlan field value if set, zero value otherwise.
func (o *Vlanrange) GetPreCreateVlan() bool {
	if o == nil || IsNil(o.PreCreateVlan) {
		var ret bool
		return ret
	}
	return *o.PreCreateVlan
}

// GetPreCreateVlanOk returns a tuple with the PreCreateVlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vlanrange) GetPreCreateVlanOk() (*bool, bool) {
	if o == nil || IsNil(o.PreCreateVlan) {
		return nil, false
	}
	return o.PreCreateVlan, true
}

// HasPreCreateVlan returns a boolean if a field has been set.
func (o *Vlanrange) HasPreCreateVlan() bool {
	if o != nil && !IsNil(o.PreCreateVlan) {
		return true
	}

	return false
}

// SetPreCreateVlan gets a reference to the given bool and assigns it to the PreCreateVlan field.
func (o *Vlanrange) SetPreCreateVlan(v bool) {
	o.PreCreateVlan = &v
}

// GetStartVlanId returns the StartVlanId field value if set, zero value otherwise.
func (o *Vlanrange) GetStartVlanId() int64 {
	if o == nil || IsNil(o.StartVlanId) {
		var ret int64
		return ret
	}
	return *o.StartVlanId
}

// GetStartVlanIdOk returns a tuple with the StartVlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vlanrange) GetStartVlanIdOk() (*int64, bool) {
	if o == nil || IsNil(o.StartVlanId) {
		return nil, false
	}
	return o.StartVlanId, true
}

// HasStartVlanId returns a boolean if a field has been set.
func (o *Vlanrange) HasStartVlanId() bool {
	if o != nil && !IsNil(o.StartVlanId) {
		return true
	}

	return false
}

// SetStartVlanId gets a reference to the given int64 and assigns it to the StartVlanId field.
func (o *Vlanrange) SetStartVlanId(v int64) {
	o.StartVlanId = &v
}

// GetVlanNamePrefix returns the VlanNamePrefix field value if set, zero value otherwise.
func (o *Vlanrange) GetVlanNamePrefix() string {
	if o == nil || IsNil(o.VlanNamePrefix) {
		var ret string
		return ret
	}
	return *o.VlanNamePrefix
}

// GetVlanNamePrefixOk returns a tuple with the VlanNamePrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vlanrange) GetVlanNamePrefixOk() (*string, bool) {
	if o == nil || IsNil(o.VlanNamePrefix) {
		return nil, false
	}
	return o.VlanNamePrefix, true
}

// HasVlanNamePrefix returns a boolean if a field has been set.
func (o *Vlanrange) HasVlanNamePrefix() bool {
	if o != nil && !IsNil(o.VlanNamePrefix) {
		return true
	}

	return false
}

// SetVlanNamePrefix gets a reference to the given string and assigns it to the VlanNamePrefix field.
func (o *Vlanrange) SetVlanNamePrefix(v string) {
	o.VlanNamePrefix = &v
}

// GetVlanView returns the VlanView field value if set, zero value otherwise.
func (o *Vlanrange) GetVlanView() string {
	if o == nil || IsNil(o.VlanView) {
		var ret string
		return ret
	}
	return *o.VlanView
}

// GetVlanViewOk returns a tuple with the VlanView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vlanrange) GetVlanViewOk() (*string, bool) {
	if o == nil || IsNil(o.VlanView) {
		return nil, false
	}
	return o.VlanView, true
}

// HasVlanView returns a boolean if a field has been set.
func (o *Vlanrange) HasVlanView() bool {
	if o != nil && !IsNil(o.VlanView) {
		return true
	}

	return false
}

// SetVlanView gets a reference to the given string and assigns it to the VlanView field.
func (o *Vlanrange) SetVlanView(v string) {
	o.VlanView = &v
}

func (o Vlanrange) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Vlanrange) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.DeleteVlans) {
		toSerialize["delete_vlans"] = o.DeleteVlans
	}
	if !IsNil(o.EndVlanId) {
		toSerialize["end_vlan_id"] = o.EndVlanId
	}
	if !IsNil(o.Extattrs) {
		toSerialize["extattrs"] = o.Extattrs
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PreCreateVlan) {
		toSerialize["pre_create_vlan"] = o.PreCreateVlan
	}
	if !IsNil(o.StartVlanId) {
		toSerialize["start_vlan_id"] = o.StartVlanId
	}
	if !IsNil(o.VlanNamePrefix) {
		toSerialize["vlan_name_prefix"] = o.VlanNamePrefix
	}
	if !IsNil(o.VlanView) {
		toSerialize["vlan_view"] = o.VlanView
	}
	return toSerialize, nil
}

type NullableVlanrange struct {
	value *Vlanrange
	isSet bool
}

func (v NullableVlanrange) Get() *Vlanrange {
	return v.value
}

func (v *NullableVlanrange) Set(val *Vlanrange) {
	v.value = val
	v.isSet = true
}

func (v NullableVlanrange) IsSet() bool {
	return v.isSet
}

func (v *NullableVlanrange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVlanrange(val *Vlanrange) *NullableVlanrange {
	return &NullableVlanrange{value: val, isSet: true}
}

func (v NullableVlanrange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVlanrange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
