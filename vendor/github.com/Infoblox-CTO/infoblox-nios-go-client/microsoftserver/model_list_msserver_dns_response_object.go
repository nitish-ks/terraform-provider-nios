/*
Infoblox MICROSOFTSERVER API

OpenAPI specification for Infoblox NIOS WAPI MICROSOFTSERVER objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package microsoftserver

import (
	"encoding/json"
)

// checks if the ListMsserverDnsResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListMsserverDnsResponseObject{}

// ListMsserverDnsResponseObject The response format to retrieve __MsserverDns__ objects.
type ListMsserverDnsResponseObject struct {
	Result               []MsserverDns `json:"result,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListMsserverDnsResponseObject ListMsserverDnsResponseObject

// NewListMsserverDnsResponseObject instantiates a new ListMsserverDnsResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListMsserverDnsResponseObject() *ListMsserverDnsResponseObject {
	this := ListMsserverDnsResponseObject{}
	return &this
}

// NewListMsserverDnsResponseObjectWithDefaults instantiates a new ListMsserverDnsResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListMsserverDnsResponseObjectWithDefaults() *ListMsserverDnsResponseObject {
	this := ListMsserverDnsResponseObject{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *ListMsserverDnsResponseObject) GetResult() []MsserverDns {
	if o == nil || IsNil(o.Result) {
		var ret []MsserverDns
		return ret
	}
	return o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListMsserverDnsResponseObject) GetResultOk() ([]MsserverDns, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *ListMsserverDnsResponseObject) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given []MsserverDns and assigns it to the Result field.
func (o *ListMsserverDnsResponseObject) SetResult(v []MsserverDns) {
	o.Result = v
}

func (o ListMsserverDnsResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListMsserverDnsResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListMsserverDnsResponseObject) UnmarshalJSON(data []byte) (err error) {
	varListMsserverDnsResponseObject := _ListMsserverDnsResponseObject{}

	err = json.Unmarshal(data, &varListMsserverDnsResponseObject)

	if err != nil {
		return err
	}

	*o = ListMsserverDnsResponseObject(varListMsserverDnsResponseObject)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "result")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListMsserverDnsResponseObject struct {
	value *ListMsserverDnsResponseObject
	isSet bool
}

func (v NullableListMsserverDnsResponseObject) Get() *ListMsserverDnsResponseObject {
	return v.value
}

func (v *NullableListMsserverDnsResponseObject) Set(val *ListMsserverDnsResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableListMsserverDnsResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableListMsserverDnsResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListMsserverDnsResponseObject(val *ListMsserverDnsResponseObject) *NullableListMsserverDnsResponseObject {
	return &NullableListMsserverDnsResponseObject{value: val, isSet: true}
}

func (v NullableListMsserverDnsResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListMsserverDnsResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
