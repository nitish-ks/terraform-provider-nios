/*
Infoblox MICROSOFTSERVER API

OpenAPI specification for Infoblox NIOS WAPI MICROSOFTSERVER objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package microsoftserver

import (
	"encoding/json"
)

// checks if the MsserverAdsitesSite type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MsserverAdsitesSite{}

// MsserverAdsitesSite struct for MsserverAdsitesSite
type MsserverAdsitesSite struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// The reference to the Active Directory Domain to which the site belongs.
	Domain *string `json:"domain,omitempty"`
	// The name of the site properties object for the Active Directory Sites.
	Name *string `json:"name,omitempty"`
	// The list of networks to which the device interfaces belong.
	Networks []string `json:"networks,omitempty"`
}

// NewMsserverAdsitesSite instantiates a new MsserverAdsitesSite object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMsserverAdsitesSite() *MsserverAdsitesSite {
	this := MsserverAdsitesSite{}
	return &this
}

// NewMsserverAdsitesSiteWithDefaults instantiates a new MsserverAdsitesSite object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMsserverAdsitesSiteWithDefaults() *MsserverAdsitesSite {
	this := MsserverAdsitesSite{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *MsserverAdsitesSite) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsserverAdsitesSite) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *MsserverAdsitesSite) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *MsserverAdsitesSite) SetRef(v string) {
	o.Ref = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *MsserverAdsitesSite) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsserverAdsitesSite) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *MsserverAdsitesSite) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *MsserverAdsitesSite) SetDomain(v string) {
	o.Domain = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MsserverAdsitesSite) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsserverAdsitesSite) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MsserverAdsitesSite) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MsserverAdsitesSite) SetName(v string) {
	o.Name = &v
}

// GetNetworks returns the Networks field value if set, zero value otherwise.
func (o *MsserverAdsitesSite) GetNetworks() []string {
	if o == nil || IsNil(o.Networks) {
		var ret []string
		return ret
	}
	return o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsserverAdsitesSite) GetNetworksOk() ([]string, bool) {
	if o == nil || IsNil(o.Networks) {
		return nil, false
	}
	return o.Networks, true
}

// HasNetworks returns a boolean if a field has been set.
func (o *MsserverAdsitesSite) HasNetworks() bool {
	if o != nil && !IsNil(o.Networks) {
		return true
	}

	return false
}

// SetNetworks gets a reference to the given []string and assigns it to the Networks field.
func (o *MsserverAdsitesSite) SetNetworks(v []string) {
	o.Networks = v
}

func (o MsserverAdsitesSite) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MsserverAdsitesSite) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Networks) {
		toSerialize["networks"] = o.Networks
	}
	return toSerialize, nil
}

type NullableMsserverAdsitesSite struct {
	value *MsserverAdsitesSite
	isSet bool
}

func (v NullableMsserverAdsitesSite) Get() *MsserverAdsitesSite {
	return v.value
}

func (v *NullableMsserverAdsitesSite) Set(val *MsserverAdsitesSite) {
	v.value = val
	v.isSet = true
}

func (v NullableMsserverAdsitesSite) IsSet() bool {
	return v.isSet
}

func (v *NullableMsserverAdsitesSite) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMsserverAdsitesSite(val *MsserverAdsitesSite) *NullableMsserverAdsitesSite {
	return &NullableMsserverAdsitesSite{value: val, isSet: true}
}

func (v NullableMsserverAdsitesSite) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMsserverAdsitesSite) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
