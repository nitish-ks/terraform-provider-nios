/*
Infoblox MICROSOFTSERVER API

OpenAPI specification for Infoblox NIOS WAPI MICROSOFTSERVER objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package microsoftserver

import (
	"encoding/json"
)

// checks if the UpdateMsserverDnsResponseAsObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateMsserverDnsResponseAsObject{}

// UpdateMsserverDnsResponseAsObject The response format to update __MsserverDns__ in object format.
type UpdateMsserverDnsResponseAsObject struct {
	Result               *MsserverDns `json:"result,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateMsserverDnsResponseAsObject UpdateMsserverDnsResponseAsObject

// NewUpdateMsserverDnsResponseAsObject instantiates a new UpdateMsserverDnsResponseAsObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateMsserverDnsResponseAsObject() *UpdateMsserverDnsResponseAsObject {
	this := UpdateMsserverDnsResponseAsObject{}
	return &this
}

// NewUpdateMsserverDnsResponseAsObjectWithDefaults instantiates a new UpdateMsserverDnsResponseAsObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateMsserverDnsResponseAsObjectWithDefaults() *UpdateMsserverDnsResponseAsObject {
	this := UpdateMsserverDnsResponseAsObject{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *UpdateMsserverDnsResponseAsObject) GetResult() MsserverDns {
	if o == nil || IsNil(o.Result) {
		var ret MsserverDns
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMsserverDnsResponseAsObject) GetResultOk() (*MsserverDns, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *UpdateMsserverDnsResponseAsObject) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given MsserverDns and assigns it to the Result field.
func (o *UpdateMsserverDnsResponseAsObject) SetResult(v MsserverDns) {
	o.Result = &v
}

func (o UpdateMsserverDnsResponseAsObject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateMsserverDnsResponseAsObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateMsserverDnsResponseAsObject) UnmarshalJSON(data []byte) (err error) {
	varUpdateMsserverDnsResponseAsObject := _UpdateMsserverDnsResponseAsObject{}

	err = json.Unmarshal(data, &varUpdateMsserverDnsResponseAsObject)

	if err != nil {
		return err
	}

	*o = UpdateMsserverDnsResponseAsObject(varUpdateMsserverDnsResponseAsObject)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "result")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateMsserverDnsResponseAsObject struct {
	value *UpdateMsserverDnsResponseAsObject
	isSet bool
}

func (v NullableUpdateMsserverDnsResponseAsObject) Get() *UpdateMsserverDnsResponseAsObject {
	return v.value
}

func (v *NullableUpdateMsserverDnsResponseAsObject) Set(val *UpdateMsserverDnsResponseAsObject) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateMsserverDnsResponseAsObject) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateMsserverDnsResponseAsObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateMsserverDnsResponseAsObject(val *UpdateMsserverDnsResponseAsObject) *NullableUpdateMsserverDnsResponseAsObject {
	return &NullableUpdateMsserverDnsResponseAsObject{value: val, isSet: true}
}

func (v NullableUpdateMsserverDnsResponseAsObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateMsserverDnsResponseAsObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
