/*
Infoblox MISC API

OpenAPI specification for Infoblox NIOS WAPI MISC objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package misc

import (
	"encoding/json"
)

// checks if the Csvimporttask type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Csvimporttask{}

// Csvimporttask struct for Csvimporttask
type Csvimporttask struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// The action to execute.
	Action *string `json:"action,omitempty"`
	// The login name of the administrator.
	AdminName *string `json:"admin_name,omitempty"`
	// The end time of this import operation.
	EndTime *int64 `json:"end_time,omitempty"`
	// The name of the file used for the import operation.
	FileName *string `json:"file_name,omitempty"`
	// The size of the file used for the import operation.
	FileSize *int64 `json:"file_size,omitempty"`
	// The ID of the current import task.
	ImportId *int64 `json:"import_id,omitempty"`
	// The number of lines that encountered an error.
	LinesFailed *int64 `json:"lines_failed,omitempty"`
	// The number of lines that have been processed.
	LinesProcessed *int64 `json:"lines_processed,omitempty"`
	// The number of lines that encountered a warning.
	LinesWarning *int64 `json:"lines_warning,omitempty"`
	// The action to take when an error is encountered.
	OnError *string `json:"on_error,omitempty"`
	// The operation to execute.
	Operation *string `json:"operation,omitempty"`
	// The separator to be used for the data in the CSV file.
	Separator *string `json:"separator,omitempty"`
	// The start time of the import operation.
	StartTime *int64 `json:"start_time,omitempty"`
	// The status of the import operation
	Status *string `json:"status,omitempty"`
	// The update method to be used for the operation.
	UpdateMethod *string `json:"update_method,omitempty"`
}

// NewCsvimporttask instantiates a new Csvimporttask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCsvimporttask() *Csvimporttask {
	this := Csvimporttask{}
	return &this
}

// NewCsvimporttaskWithDefaults instantiates a new Csvimporttask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCsvimporttaskWithDefaults() *Csvimporttask {
	this := Csvimporttask{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *Csvimporttask) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Csvimporttask) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *Csvimporttask) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *Csvimporttask) SetRef(v string) {
	o.Ref = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *Csvimporttask) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Csvimporttask) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *Csvimporttask) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *Csvimporttask) SetAction(v string) {
	o.Action = &v
}

// GetAdminName returns the AdminName field value if set, zero value otherwise.
func (o *Csvimporttask) GetAdminName() string {
	if o == nil || IsNil(o.AdminName) {
		var ret string
		return ret
	}
	return *o.AdminName
}

// GetAdminNameOk returns a tuple with the AdminName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Csvimporttask) GetAdminNameOk() (*string, bool) {
	if o == nil || IsNil(o.AdminName) {
		return nil, false
	}
	return o.AdminName, true
}

// HasAdminName returns a boolean if a field has been set.
func (o *Csvimporttask) HasAdminName() bool {
	if o != nil && !IsNil(o.AdminName) {
		return true
	}

	return false
}

// SetAdminName gets a reference to the given string and assigns it to the AdminName field.
func (o *Csvimporttask) SetAdminName(v string) {
	o.AdminName = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *Csvimporttask) GetEndTime() int64 {
	if o == nil || IsNil(o.EndTime) {
		var ret int64
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Csvimporttask) GetEndTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *Csvimporttask) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given int64 and assigns it to the EndTime field.
func (o *Csvimporttask) SetEndTime(v int64) {
	o.EndTime = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *Csvimporttask) GetFileName() string {
	if o == nil || IsNil(o.FileName) {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Csvimporttask) GetFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.FileName) {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *Csvimporttask) HasFileName() bool {
	if o != nil && !IsNil(o.FileName) {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *Csvimporttask) SetFileName(v string) {
	o.FileName = &v
}

// GetFileSize returns the FileSize field value if set, zero value otherwise.
func (o *Csvimporttask) GetFileSize() int64 {
	if o == nil || IsNil(o.FileSize) {
		var ret int64
		return ret
	}
	return *o.FileSize
}

// GetFileSizeOk returns a tuple with the FileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Csvimporttask) GetFileSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.FileSize) {
		return nil, false
	}
	return o.FileSize, true
}

// HasFileSize returns a boolean if a field has been set.
func (o *Csvimporttask) HasFileSize() bool {
	if o != nil && !IsNil(o.FileSize) {
		return true
	}

	return false
}

// SetFileSize gets a reference to the given int64 and assigns it to the FileSize field.
func (o *Csvimporttask) SetFileSize(v int64) {
	o.FileSize = &v
}

// GetImportId returns the ImportId field value if set, zero value otherwise.
func (o *Csvimporttask) GetImportId() int64 {
	if o == nil || IsNil(o.ImportId) {
		var ret int64
		return ret
	}
	return *o.ImportId
}

// GetImportIdOk returns a tuple with the ImportId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Csvimporttask) GetImportIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ImportId) {
		return nil, false
	}
	return o.ImportId, true
}

// HasImportId returns a boolean if a field has been set.
func (o *Csvimporttask) HasImportId() bool {
	if o != nil && !IsNil(o.ImportId) {
		return true
	}

	return false
}

// SetImportId gets a reference to the given int64 and assigns it to the ImportId field.
func (o *Csvimporttask) SetImportId(v int64) {
	o.ImportId = &v
}

// GetLinesFailed returns the LinesFailed field value if set, zero value otherwise.
func (o *Csvimporttask) GetLinesFailed() int64 {
	if o == nil || IsNil(o.LinesFailed) {
		var ret int64
		return ret
	}
	return *o.LinesFailed
}

// GetLinesFailedOk returns a tuple with the LinesFailed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Csvimporttask) GetLinesFailedOk() (*int64, bool) {
	if o == nil || IsNil(o.LinesFailed) {
		return nil, false
	}
	return o.LinesFailed, true
}

// HasLinesFailed returns a boolean if a field has been set.
func (o *Csvimporttask) HasLinesFailed() bool {
	if o != nil && !IsNil(o.LinesFailed) {
		return true
	}

	return false
}

// SetLinesFailed gets a reference to the given int64 and assigns it to the LinesFailed field.
func (o *Csvimporttask) SetLinesFailed(v int64) {
	o.LinesFailed = &v
}

// GetLinesProcessed returns the LinesProcessed field value if set, zero value otherwise.
func (o *Csvimporttask) GetLinesProcessed() int64 {
	if o == nil || IsNil(o.LinesProcessed) {
		var ret int64
		return ret
	}
	return *o.LinesProcessed
}

// GetLinesProcessedOk returns a tuple with the LinesProcessed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Csvimporttask) GetLinesProcessedOk() (*int64, bool) {
	if o == nil || IsNil(o.LinesProcessed) {
		return nil, false
	}
	return o.LinesProcessed, true
}

// HasLinesProcessed returns a boolean if a field has been set.
func (o *Csvimporttask) HasLinesProcessed() bool {
	if o != nil && !IsNil(o.LinesProcessed) {
		return true
	}

	return false
}

// SetLinesProcessed gets a reference to the given int64 and assigns it to the LinesProcessed field.
func (o *Csvimporttask) SetLinesProcessed(v int64) {
	o.LinesProcessed = &v
}

// GetLinesWarning returns the LinesWarning field value if set, zero value otherwise.
func (o *Csvimporttask) GetLinesWarning() int64 {
	if o == nil || IsNil(o.LinesWarning) {
		var ret int64
		return ret
	}
	return *o.LinesWarning
}

// GetLinesWarningOk returns a tuple with the LinesWarning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Csvimporttask) GetLinesWarningOk() (*int64, bool) {
	if o == nil || IsNil(o.LinesWarning) {
		return nil, false
	}
	return o.LinesWarning, true
}

// HasLinesWarning returns a boolean if a field has been set.
func (o *Csvimporttask) HasLinesWarning() bool {
	if o != nil && !IsNil(o.LinesWarning) {
		return true
	}

	return false
}

// SetLinesWarning gets a reference to the given int64 and assigns it to the LinesWarning field.
func (o *Csvimporttask) SetLinesWarning(v int64) {
	o.LinesWarning = &v
}

// GetOnError returns the OnError field value if set, zero value otherwise.
func (o *Csvimporttask) GetOnError() string {
	if o == nil || IsNil(o.OnError) {
		var ret string
		return ret
	}
	return *o.OnError
}

// GetOnErrorOk returns a tuple with the OnError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Csvimporttask) GetOnErrorOk() (*string, bool) {
	if o == nil || IsNil(o.OnError) {
		return nil, false
	}
	return o.OnError, true
}

// HasOnError returns a boolean if a field has been set.
func (o *Csvimporttask) HasOnError() bool {
	if o != nil && !IsNil(o.OnError) {
		return true
	}

	return false
}

// SetOnError gets a reference to the given string and assigns it to the OnError field.
func (o *Csvimporttask) SetOnError(v string) {
	o.OnError = &v
}

// GetOperation returns the Operation field value if set, zero value otherwise.
func (o *Csvimporttask) GetOperation() string {
	if o == nil || IsNil(o.Operation) {
		var ret string
		return ret
	}
	return *o.Operation
}

// GetOperationOk returns a tuple with the Operation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Csvimporttask) GetOperationOk() (*string, bool) {
	if o == nil || IsNil(o.Operation) {
		return nil, false
	}
	return o.Operation, true
}

// HasOperation returns a boolean if a field has been set.
func (o *Csvimporttask) HasOperation() bool {
	if o != nil && !IsNil(o.Operation) {
		return true
	}

	return false
}

// SetOperation gets a reference to the given string and assigns it to the Operation field.
func (o *Csvimporttask) SetOperation(v string) {
	o.Operation = &v
}

// GetSeparator returns the Separator field value if set, zero value otherwise.
func (o *Csvimporttask) GetSeparator() string {
	if o == nil || IsNil(o.Separator) {
		var ret string
		return ret
	}
	return *o.Separator
}

// GetSeparatorOk returns a tuple with the Separator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Csvimporttask) GetSeparatorOk() (*string, bool) {
	if o == nil || IsNil(o.Separator) {
		return nil, false
	}
	return o.Separator, true
}

// HasSeparator returns a boolean if a field has been set.
func (o *Csvimporttask) HasSeparator() bool {
	if o != nil && !IsNil(o.Separator) {
		return true
	}

	return false
}

// SetSeparator gets a reference to the given string and assigns it to the Separator field.
func (o *Csvimporttask) SetSeparator(v string) {
	o.Separator = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *Csvimporttask) GetStartTime() int64 {
	if o == nil || IsNil(o.StartTime) {
		var ret int64
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Csvimporttask) GetStartTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *Csvimporttask) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given int64 and assigns it to the StartTime field.
func (o *Csvimporttask) SetStartTime(v int64) {
	o.StartTime = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Csvimporttask) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Csvimporttask) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Csvimporttask) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Csvimporttask) SetStatus(v string) {
	o.Status = &v
}

// GetUpdateMethod returns the UpdateMethod field value if set, zero value otherwise.
func (o *Csvimporttask) GetUpdateMethod() string {
	if o == nil || IsNil(o.UpdateMethod) {
		var ret string
		return ret
	}
	return *o.UpdateMethod
}

// GetUpdateMethodOk returns a tuple with the UpdateMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Csvimporttask) GetUpdateMethodOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateMethod) {
		return nil, false
	}
	return o.UpdateMethod, true
}

// HasUpdateMethod returns a boolean if a field has been set.
func (o *Csvimporttask) HasUpdateMethod() bool {
	if o != nil && !IsNil(o.UpdateMethod) {
		return true
	}

	return false
}

// SetUpdateMethod gets a reference to the given string and assigns it to the UpdateMethod field.
func (o *Csvimporttask) SetUpdateMethod(v string) {
	o.UpdateMethod = &v
}

func (o Csvimporttask) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Csvimporttask) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.AdminName) {
		toSerialize["admin_name"] = o.AdminName
	}
	if !IsNil(o.EndTime) {
		toSerialize["end_time"] = o.EndTime
	}
	if !IsNil(o.FileName) {
		toSerialize["file_name"] = o.FileName
	}
	if !IsNil(o.FileSize) {
		toSerialize["file_size"] = o.FileSize
	}
	if !IsNil(o.ImportId) {
		toSerialize["import_id"] = o.ImportId
	}
	if !IsNil(o.LinesFailed) {
		toSerialize["lines_failed"] = o.LinesFailed
	}
	if !IsNil(o.LinesProcessed) {
		toSerialize["lines_processed"] = o.LinesProcessed
	}
	if !IsNil(o.LinesWarning) {
		toSerialize["lines_warning"] = o.LinesWarning
	}
	if !IsNil(o.OnError) {
		toSerialize["on_error"] = o.OnError
	}
	if !IsNil(o.Operation) {
		toSerialize["operation"] = o.Operation
	}
	if !IsNil(o.Separator) {
		toSerialize["separator"] = o.Separator
	}
	if !IsNil(o.StartTime) {
		toSerialize["start_time"] = o.StartTime
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.UpdateMethod) {
		toSerialize["update_method"] = o.UpdateMethod
	}
	return toSerialize, nil
}

type NullableCsvimporttask struct {
	value *Csvimporttask
	isSet bool
}

func (v NullableCsvimporttask) Get() *Csvimporttask {
	return v.value
}

func (v *NullableCsvimporttask) Set(val *Csvimporttask) {
	v.value = val
	v.isSet = true
}

func (v NullableCsvimporttask) IsSet() bool {
	return v.isSet
}

func (v *NullableCsvimporttask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCsvimporttask(val *Csvimporttask) *NullableCsvimporttask {
	return &NullableCsvimporttask{value: val, isSet: true}
}

func (v NullableCsvimporttask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCsvimporttask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
