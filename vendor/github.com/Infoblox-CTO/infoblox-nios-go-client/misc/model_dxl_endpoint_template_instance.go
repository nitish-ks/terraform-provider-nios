/*
Infoblox MISC API

OpenAPI specification for Infoblox NIOS WAPI MISC objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package misc

import (
	"encoding/json"
)

// checks if the DxlEndpointTemplateInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DxlEndpointTemplateInstance{}

// DxlEndpointTemplateInstance struct for DxlEndpointTemplateInstance
type DxlEndpointTemplateInstance struct {
	// The name of the REST API template parameter.
	Template *string `json:"template,omitempty"`
	// The notification REST template parameters.
	Parameters           []DxlendpointtemplateinstanceParameters `json:"parameters,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DxlEndpointTemplateInstance DxlEndpointTemplateInstance

// NewDxlEndpointTemplateInstance instantiates a new DxlEndpointTemplateInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDxlEndpointTemplateInstance() *DxlEndpointTemplateInstance {
	this := DxlEndpointTemplateInstance{}
	return &this
}

// NewDxlEndpointTemplateInstanceWithDefaults instantiates a new DxlEndpointTemplateInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDxlEndpointTemplateInstanceWithDefaults() *DxlEndpointTemplateInstance {
	this := DxlEndpointTemplateInstance{}
	return &this
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *DxlEndpointTemplateInstance) GetTemplate() string {
	if o == nil || IsNil(o.Template) {
		var ret string
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DxlEndpointTemplateInstance) GetTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.Template) {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *DxlEndpointTemplateInstance) HasTemplate() bool {
	if o != nil && !IsNil(o.Template) {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given string and assigns it to the Template field.
func (o *DxlEndpointTemplateInstance) SetTemplate(v string) {
	o.Template = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *DxlEndpointTemplateInstance) GetParameters() []DxlendpointtemplateinstanceParameters {
	if o == nil || IsNil(o.Parameters) {
		var ret []DxlendpointtemplateinstanceParameters
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DxlEndpointTemplateInstance) GetParametersOk() ([]DxlendpointtemplateinstanceParameters, bool) {
	if o == nil || IsNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *DxlEndpointTemplateInstance) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []DxlendpointtemplateinstanceParameters and assigns it to the Parameters field.
func (o *DxlEndpointTemplateInstance) SetParameters(v []DxlendpointtemplateinstanceParameters) {
	o.Parameters = v
}

func (o DxlEndpointTemplateInstance) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DxlEndpointTemplateInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Template) {
		toSerialize["template"] = o.Template
	}
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DxlEndpointTemplateInstance) UnmarshalJSON(data []byte) (err error) {
	varDxlEndpointTemplateInstance := _DxlEndpointTemplateInstance{}

	err = json.Unmarshal(data, &varDxlEndpointTemplateInstance)

	if err != nil {
		return err
	}

	*o = DxlEndpointTemplateInstance(varDxlEndpointTemplateInstance)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "template")
		delete(additionalProperties, "parameters")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDxlEndpointTemplateInstance struct {
	value *DxlEndpointTemplateInstance
	isSet bool
}

func (v NullableDxlEndpointTemplateInstance) Get() *DxlEndpointTemplateInstance {
	return v.value
}

func (v *NullableDxlEndpointTemplateInstance) Set(val *DxlEndpointTemplateInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableDxlEndpointTemplateInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableDxlEndpointTemplateInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDxlEndpointTemplateInstance(val *DxlEndpointTemplateInstance) *NullableDxlEndpointTemplateInstance {
	return &NullableDxlEndpointTemplateInstance{value: val, isSet: true}
}

func (v NullableDxlEndpointTemplateInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDxlEndpointTemplateInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
