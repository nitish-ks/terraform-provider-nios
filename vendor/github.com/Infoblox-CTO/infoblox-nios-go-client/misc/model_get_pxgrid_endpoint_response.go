/*
Infoblox MISC API

OpenAPI specification for Infoblox NIOS WAPI MISC objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package misc

import (
	"encoding/json"
	"fmt"
)

// GetPxgridEndpointResponse - struct for GetPxgridEndpointResponse
type GetPxgridEndpointResponse struct {
	GetPxgridEndpointResponseObjectAsResult *GetPxgridEndpointResponseObjectAsResult
	PxgridEndpoint                          *PxgridEndpoint
}

// GetPxgridEndpointResponseObjectAsResultAsGetPxgridEndpointResponse is a convenience function that returns GetPxgridEndpointResponseObjectAsResult wrapped in GetPxgridEndpointResponse
func GetPxgridEndpointResponseObjectAsResultAsGetPxgridEndpointResponse(v *GetPxgridEndpointResponseObjectAsResult) GetPxgridEndpointResponse {
	return GetPxgridEndpointResponse{
		GetPxgridEndpointResponseObjectAsResult: v,
	}
}

// PxgridEndpointAsGetPxgridEndpointResponse is a convenience function that returns PxgridEndpoint wrapped in GetPxgridEndpointResponse
func PxgridEndpointAsGetPxgridEndpointResponse(v *PxgridEndpoint) GetPxgridEndpointResponse {
	return GetPxgridEndpointResponse{
		PxgridEndpoint: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetPxgridEndpointResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetPxgridEndpointResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetPxgridEndpointResponseObjectAsResult)
	if err == nil {
		jsonGetPxgridEndpointResponseObjectAsResult, _ := json.Marshal(dst.GetPxgridEndpointResponseObjectAsResult)
		if string(jsonGetPxgridEndpointResponseObjectAsResult) == "{}" { // empty struct
			dst.GetPxgridEndpointResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetPxgridEndpointResponseObjectAsResult = nil
	}

	// try to unmarshal data into PxgridEndpoint
	err = newStrictDecoder(data).Decode(&dst.PxgridEndpoint)
	if err == nil {
		jsonPxgridEndpoint, _ := json.Marshal(dst.PxgridEndpoint)
		if string(jsonPxgridEndpoint) == "{}" { // empty struct
			dst.PxgridEndpoint = nil
		} else {
			match++
		}
	} else {
		dst.PxgridEndpoint = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetPxgridEndpointResponseObjectAsResult = nil
		dst.PxgridEndpoint = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetPxgridEndpointResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetPxgridEndpointResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetPxgridEndpointResponse) MarshalJSON() ([]byte, error) {
	if src.GetPxgridEndpointResponseObjectAsResult != nil {
		return json.Marshal(&src.GetPxgridEndpointResponseObjectAsResult)
	}

	if src.PxgridEndpoint != nil {
		return json.Marshal(&src.PxgridEndpoint)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetPxgridEndpointResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GetPxgridEndpointResponseObjectAsResult != nil {
		return obj.GetPxgridEndpointResponseObjectAsResult
	}

	if obj.PxgridEndpoint != nil {
		return obj.PxgridEndpoint
	}

	// all schemas are nil
	return nil
}

type NullableGetPxgridEndpointResponse struct {
	value *GetPxgridEndpointResponse
	isSet bool
}

func (v NullableGetPxgridEndpointResponse) Get() *GetPxgridEndpointResponse {
	return v.value
}

func (v *NullableGetPxgridEndpointResponse) Set(val *GetPxgridEndpointResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPxgridEndpointResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPxgridEndpointResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPxgridEndpointResponse(val *GetPxgridEndpointResponse) *NullableGetPxgridEndpointResponse {
	return &NullableGetPxgridEndpointResponse{value: val, isSet: true}
}

func (v NullableGetPxgridEndpointResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPxgridEndpointResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
