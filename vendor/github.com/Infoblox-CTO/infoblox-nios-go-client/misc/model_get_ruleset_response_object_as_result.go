/*
Infoblox MISC API

OpenAPI specification for Infoblox NIOS WAPI MISC objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package misc

import (
	"encoding/json"
)

// checks if the GetRulesetResponseObjectAsResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRulesetResponseObjectAsResult{}

// GetRulesetResponseObjectAsResult The response format to retrieve __Ruleset__ objects.
type GetRulesetResponseObjectAsResult struct {
	Result *Ruleset `json:"result,omitempty"`
}

// NewGetRulesetResponseObjectAsResult instantiates a new GetRulesetResponseObjectAsResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRulesetResponseObjectAsResult() *GetRulesetResponseObjectAsResult {
	this := GetRulesetResponseObjectAsResult{}
	return &this
}

// NewGetRulesetResponseObjectAsResultWithDefaults instantiates a new GetRulesetResponseObjectAsResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRulesetResponseObjectAsResultWithDefaults() *GetRulesetResponseObjectAsResult {
	this := GetRulesetResponseObjectAsResult{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *GetRulesetResponseObjectAsResult) GetResult() Ruleset {
	if o == nil || IsNil(o.Result) {
		var ret Ruleset
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRulesetResponseObjectAsResult) GetResultOk() (*Ruleset, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *GetRulesetResponseObjectAsResult) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given Ruleset and assigns it to the Result field.
func (o *GetRulesetResponseObjectAsResult) SetResult(v Ruleset) {
	o.Result = &v
}

func (o GetRulesetResponseObjectAsResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRulesetResponseObjectAsResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	return toSerialize, nil
}

type NullableGetRulesetResponseObjectAsResult struct {
	value *GetRulesetResponseObjectAsResult
	isSet bool
}

func (v NullableGetRulesetResponseObjectAsResult) Get() *GetRulesetResponseObjectAsResult {
	return v.value
}

func (v *NullableGetRulesetResponseObjectAsResult) Set(val *GetRulesetResponseObjectAsResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRulesetResponseObjectAsResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRulesetResponseObjectAsResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRulesetResponseObjectAsResult(val *GetRulesetResponseObjectAsResult) *NullableGetRulesetResponseObjectAsResult {
	return &NullableGetRulesetResponseObjectAsResult{value: val, isSet: true}
}

func (v NullableGetRulesetResponseObjectAsResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRulesetResponseObjectAsResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
