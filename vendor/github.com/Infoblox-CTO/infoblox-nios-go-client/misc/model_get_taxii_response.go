/*
Infoblox MISC API

OpenAPI specification for Infoblox NIOS WAPI MISC objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package misc

import (
	"encoding/json"
	"fmt"
)

// GetTaxiiResponse - struct for GetTaxiiResponse
type GetTaxiiResponse struct {
	GetTaxiiResponseObjectAsResult *GetTaxiiResponseObjectAsResult
	Taxii                          *Taxii
}

// GetTaxiiResponseObjectAsResultAsGetTaxiiResponse is a convenience function that returns GetTaxiiResponseObjectAsResult wrapped in GetTaxiiResponse
func GetTaxiiResponseObjectAsResultAsGetTaxiiResponse(v *GetTaxiiResponseObjectAsResult) GetTaxiiResponse {
	return GetTaxiiResponse{
		GetTaxiiResponseObjectAsResult: v,
	}
}

// TaxiiAsGetTaxiiResponse is a convenience function that returns Taxii wrapped in GetTaxiiResponse
func TaxiiAsGetTaxiiResponse(v *Taxii) GetTaxiiResponse {
	return GetTaxiiResponse{
		Taxii: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetTaxiiResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetTaxiiResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetTaxiiResponseObjectAsResult)
	if err == nil {
		jsonGetTaxiiResponseObjectAsResult, _ := json.Marshal(dst.GetTaxiiResponseObjectAsResult)
		if string(jsonGetTaxiiResponseObjectAsResult) == "{}" { // empty struct
			dst.GetTaxiiResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetTaxiiResponseObjectAsResult = nil
	}

	// try to unmarshal data into Taxii
	err = newStrictDecoder(data).Decode(&dst.Taxii)
	if err == nil {
		jsonTaxii, _ := json.Marshal(dst.Taxii)
		if string(jsonTaxii) == "{}" { // empty struct
			dst.Taxii = nil
		} else {
			match++
		}
	} else {
		dst.Taxii = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetTaxiiResponseObjectAsResult = nil
		dst.Taxii = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetTaxiiResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetTaxiiResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetTaxiiResponse) MarshalJSON() ([]byte, error) {
	if src.GetTaxiiResponseObjectAsResult != nil {
		return json.Marshal(&src.GetTaxiiResponseObjectAsResult)
	}

	if src.Taxii != nil {
		return json.Marshal(&src.Taxii)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetTaxiiResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GetTaxiiResponseObjectAsResult != nil {
		return obj.GetTaxiiResponseObjectAsResult
	}

	if obj.Taxii != nil {
		return obj.Taxii
	}

	// all schemas are nil
	return nil
}

type NullableGetTaxiiResponse struct {
	value *GetTaxiiResponse
	isSet bool
}

func (v NullableGetTaxiiResponse) Get() *GetTaxiiResponse {
	return v.value
}

func (v *NullableGetTaxiiResponse) Set(val *GetTaxiiResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTaxiiResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTaxiiResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTaxiiResponse(val *GetTaxiiResponse) *NullableGetTaxiiResponse {
	return &NullableGetTaxiiResponse{value: val, isSet: true}
}

func (v NullableGetTaxiiResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTaxiiResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
