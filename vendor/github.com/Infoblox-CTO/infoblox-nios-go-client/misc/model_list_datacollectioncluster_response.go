/*
Infoblox MISC API

OpenAPI specification for Infoblox NIOS WAPI MISC objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package misc

import (
	"encoding/json"
	"fmt"
)

// ListDatacollectionclusterResponse - struct for ListDatacollectionclusterResponse
type ListDatacollectionclusterResponse struct {
	ListDatacollectionclusterResponseObject *ListDatacollectionclusterResponseObject
	ArrayOfDatacollectioncluster            *[]Datacollectioncluster
}

// ListDatacollectionclusterResponseObjectAsListDatacollectionclusterResponse is a convenience function that returns ListDatacollectionclusterResponseObject wrapped in ListDatacollectionclusterResponse
func ListDatacollectionclusterResponseObjectAsListDatacollectionclusterResponse(v *ListDatacollectionclusterResponseObject) ListDatacollectionclusterResponse {
	return ListDatacollectionclusterResponse{
		ListDatacollectionclusterResponseObject: v,
	}
}

// []DatacollectionclusterAsListDatacollectionclusterResponse is a convenience function that returns []Datacollectioncluster wrapped in ListDatacollectionclusterResponse
func ArrayOfDatacollectionclusterAsListDatacollectionclusterResponse(v *[]Datacollectioncluster) ListDatacollectionclusterResponse {
	return ListDatacollectionclusterResponse{
		ArrayOfDatacollectioncluster: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListDatacollectionclusterResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListDatacollectionclusterResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListDatacollectionclusterResponseObject)
	if err == nil {
		jsonListDatacollectionclusterResponseObject, _ := json.Marshal(dst.ListDatacollectionclusterResponseObject)
		if string(jsonListDatacollectionclusterResponseObject) == "{}" { // empty struct
			dst.ListDatacollectionclusterResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListDatacollectionclusterResponseObject = nil
	}

	// try to unmarshal data into ArrayOfDatacollectioncluster
	err = newStrictDecoder(data).Decode(&dst.ArrayOfDatacollectioncluster)
	if err == nil {
		jsonArrayOfDatacollectioncluster, _ := json.Marshal(dst.ArrayOfDatacollectioncluster)
		if string(jsonArrayOfDatacollectioncluster) == "{}" { // empty struct
			dst.ArrayOfDatacollectioncluster = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfDatacollectioncluster = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListDatacollectionclusterResponseObject = nil
		dst.ArrayOfDatacollectioncluster = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListDatacollectionclusterResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListDatacollectionclusterResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListDatacollectionclusterResponse) MarshalJSON() ([]byte, error) {
	if src.ListDatacollectionclusterResponseObject != nil {
		return json.Marshal(&src.ListDatacollectionclusterResponseObject)
	}

	if src.ArrayOfDatacollectioncluster != nil {
		return json.Marshal(&src.ArrayOfDatacollectioncluster)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListDatacollectionclusterResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListDatacollectionclusterResponseObject != nil {
		return obj.ListDatacollectionclusterResponseObject
	}

	if obj.ArrayOfDatacollectioncluster != nil {
		return obj.ArrayOfDatacollectioncluster
	}

	// all schemas are nil
	return nil
}

type NullableListDatacollectionclusterResponse struct {
	value *ListDatacollectionclusterResponse
	isSet bool
}

func (v NullableListDatacollectionclusterResponse) Get() *ListDatacollectionclusterResponse {
	return v.value
}

func (v *NullableListDatacollectionclusterResponse) Set(val *ListDatacollectionclusterResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListDatacollectionclusterResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListDatacollectionclusterResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListDatacollectionclusterResponse(val *ListDatacollectionclusterResponse) *NullableListDatacollectionclusterResponse {
	return &NullableListDatacollectionclusterResponse{value: val, isSet: true}
}

func (v NullableListDatacollectionclusterResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListDatacollectionclusterResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
