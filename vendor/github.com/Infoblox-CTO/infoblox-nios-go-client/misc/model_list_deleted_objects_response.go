/*
Infoblox MISC API

OpenAPI specification for Infoblox NIOS WAPI MISC objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package misc

import (
	"encoding/json"
	"fmt"
)

// ListDeletedObjectsResponse - struct for ListDeletedObjectsResponse
type ListDeletedObjectsResponse struct {
	ListDeletedObjectsResponseObject *ListDeletedObjectsResponseObject
	ArrayOfDeletedObjects            *[]DeletedObjects
}

// ListDeletedObjectsResponseObjectAsListDeletedObjectsResponse is a convenience function that returns ListDeletedObjectsResponseObject wrapped in ListDeletedObjectsResponse
func ListDeletedObjectsResponseObjectAsListDeletedObjectsResponse(v *ListDeletedObjectsResponseObject) ListDeletedObjectsResponse {
	return ListDeletedObjectsResponse{
		ListDeletedObjectsResponseObject: v,
	}
}

// []DeletedObjectsAsListDeletedObjectsResponse is a convenience function that returns []DeletedObjects wrapped in ListDeletedObjectsResponse
func ArrayOfDeletedObjectsAsListDeletedObjectsResponse(v *[]DeletedObjects) ListDeletedObjectsResponse {
	return ListDeletedObjectsResponse{
		ArrayOfDeletedObjects: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListDeletedObjectsResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListDeletedObjectsResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListDeletedObjectsResponseObject)
	if err == nil {
		jsonListDeletedObjectsResponseObject, _ := json.Marshal(dst.ListDeletedObjectsResponseObject)
		if string(jsonListDeletedObjectsResponseObject) == "{}" { // empty struct
			dst.ListDeletedObjectsResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListDeletedObjectsResponseObject = nil
	}

	// try to unmarshal data into ArrayOfDeletedObjects
	err = newStrictDecoder(data).Decode(&dst.ArrayOfDeletedObjects)
	if err == nil {
		jsonArrayOfDeletedObjects, _ := json.Marshal(dst.ArrayOfDeletedObjects)
		if string(jsonArrayOfDeletedObjects) == "{}" { // empty struct
			dst.ArrayOfDeletedObjects = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfDeletedObjects = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListDeletedObjectsResponseObject = nil
		dst.ArrayOfDeletedObjects = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListDeletedObjectsResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListDeletedObjectsResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListDeletedObjectsResponse) MarshalJSON() ([]byte, error) {
	if src.ListDeletedObjectsResponseObject != nil {
		return json.Marshal(&src.ListDeletedObjectsResponseObject)
	}

	if src.ArrayOfDeletedObjects != nil {
		return json.Marshal(&src.ArrayOfDeletedObjects)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListDeletedObjectsResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListDeletedObjectsResponseObject != nil {
		return obj.ListDeletedObjectsResponseObject
	}

	if obj.ArrayOfDeletedObjects != nil {
		return obj.ArrayOfDeletedObjects
	}

	// all schemas are nil
	return nil
}

type NullableListDeletedObjectsResponse struct {
	value *ListDeletedObjectsResponse
	isSet bool
}

func (v NullableListDeletedObjectsResponse) Get() *ListDeletedObjectsResponse {
	return v.value
}

func (v *NullableListDeletedObjectsResponse) Set(val *ListDeletedObjectsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListDeletedObjectsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListDeletedObjectsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListDeletedObjectsResponse(val *ListDeletedObjectsResponse) *NullableListDeletedObjectsResponse {
	return &NullableListDeletedObjectsResponse{value: val, isSet: true}
}

func (v NullableListDeletedObjectsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListDeletedObjectsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
