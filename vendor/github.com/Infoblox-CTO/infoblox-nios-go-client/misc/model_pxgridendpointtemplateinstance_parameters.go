/*
Infoblox MISC API

OpenAPI specification for Infoblox NIOS WAPI MISC objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package misc

import (
	"encoding/json"
)

// checks if the PxgridendpointtemplateinstanceParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PxgridendpointtemplateinstanceParameters{}

// PxgridendpointtemplateinstanceParameters struct for PxgridendpointtemplateinstanceParameters
type PxgridendpointtemplateinstanceParameters struct {
	// The name of the REST API template parameter.
	Name *string `json:"name,omitempty"`
	// The value of the REST API template parameter.
	Value *string `json:"value,omitempty"`
	// The default value of the REST API template parameter.
	DefaultValue *string `json:"default_value,omitempty"`
	// The syntax of the REST API template parameter.
	Syntax               *string `json:"syntax,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PxgridendpointtemplateinstanceParameters PxgridendpointtemplateinstanceParameters

// NewPxgridendpointtemplateinstanceParameters instantiates a new PxgridendpointtemplateinstanceParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPxgridendpointtemplateinstanceParameters() *PxgridendpointtemplateinstanceParameters {
	this := PxgridendpointtemplateinstanceParameters{}
	return &this
}

// NewPxgridendpointtemplateinstanceParametersWithDefaults instantiates a new PxgridendpointtemplateinstanceParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPxgridendpointtemplateinstanceParametersWithDefaults() *PxgridendpointtemplateinstanceParameters {
	this := PxgridendpointtemplateinstanceParameters{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PxgridendpointtemplateinstanceParameters) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PxgridendpointtemplateinstanceParameters) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PxgridendpointtemplateinstanceParameters) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PxgridendpointtemplateinstanceParameters) SetName(v string) {
	o.Name = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *PxgridendpointtemplateinstanceParameters) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PxgridendpointtemplateinstanceParameters) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *PxgridendpointtemplateinstanceParameters) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *PxgridendpointtemplateinstanceParameters) SetValue(v string) {
	o.Value = &v
}

// GetDefaultValue returns the DefaultValue field value if set, zero value otherwise.
func (o *PxgridendpointtemplateinstanceParameters) GetDefaultValue() string {
	if o == nil || IsNil(o.DefaultValue) {
		var ret string
		return ret
	}
	return *o.DefaultValue
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PxgridendpointtemplateinstanceParameters) GetDefaultValueOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultValue) {
		return nil, false
	}
	return o.DefaultValue, true
}

// HasDefaultValue returns a boolean if a field has been set.
func (o *PxgridendpointtemplateinstanceParameters) HasDefaultValue() bool {
	if o != nil && !IsNil(o.DefaultValue) {
		return true
	}

	return false
}

// SetDefaultValue gets a reference to the given string and assigns it to the DefaultValue field.
func (o *PxgridendpointtemplateinstanceParameters) SetDefaultValue(v string) {
	o.DefaultValue = &v
}

// GetSyntax returns the Syntax field value if set, zero value otherwise.
func (o *PxgridendpointtemplateinstanceParameters) GetSyntax() string {
	if o == nil || IsNil(o.Syntax) {
		var ret string
		return ret
	}
	return *o.Syntax
}

// GetSyntaxOk returns a tuple with the Syntax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PxgridendpointtemplateinstanceParameters) GetSyntaxOk() (*string, bool) {
	if o == nil || IsNil(o.Syntax) {
		return nil, false
	}
	return o.Syntax, true
}

// HasSyntax returns a boolean if a field has been set.
func (o *PxgridendpointtemplateinstanceParameters) HasSyntax() bool {
	if o != nil && !IsNil(o.Syntax) {
		return true
	}

	return false
}

// SetSyntax gets a reference to the given string and assigns it to the Syntax field.
func (o *PxgridendpointtemplateinstanceParameters) SetSyntax(v string) {
	o.Syntax = &v
}

func (o PxgridendpointtemplateinstanceParameters) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PxgridendpointtemplateinstanceParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.DefaultValue) {
		toSerialize["default_value"] = o.DefaultValue
	}
	if !IsNil(o.Syntax) {
		toSerialize["syntax"] = o.Syntax
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PxgridendpointtemplateinstanceParameters) UnmarshalJSON(data []byte) (err error) {
	varPxgridendpointtemplateinstanceParameters := _PxgridendpointtemplateinstanceParameters{}

	err = json.Unmarshal(data, &varPxgridendpointtemplateinstanceParameters)

	if err != nil {
		return err
	}

	*o = PxgridendpointtemplateinstanceParameters(varPxgridendpointtemplateinstanceParameters)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "value")
		delete(additionalProperties, "default_value")
		delete(additionalProperties, "syntax")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePxgridendpointtemplateinstanceParameters struct {
	value *PxgridendpointtemplateinstanceParameters
	isSet bool
}

func (v NullablePxgridendpointtemplateinstanceParameters) Get() *PxgridendpointtemplateinstanceParameters {
	return v.value
}

func (v *NullablePxgridendpointtemplateinstanceParameters) Set(val *PxgridendpointtemplateinstanceParameters) {
	v.value = val
	v.isSet = true
}

func (v NullablePxgridendpointtemplateinstanceParameters) IsSet() bool {
	return v.isSet
}

func (v *NullablePxgridendpointtemplateinstanceParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePxgridendpointtemplateinstanceParameters(val *PxgridendpointtemplateinstanceParameters) *NullablePxgridendpointtemplateinstanceParameters {
	return &NullablePxgridendpointtemplateinstanceParameters{value: val, isSet: true}
}

func (v NullablePxgridendpointtemplateinstanceParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePxgridendpointtemplateinstanceParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
