/*
Infoblox MISC API

OpenAPI specification for Infoblox NIOS WAPI MISC objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package misc

import (
	"encoding/json"
)

// checks if the SyslogEndpoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SyslogEndpoint{}

// SyslogEndpoint struct for SyslogEndpoint
type SyslogEndpoint struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.
	ExtAttrs *map[string]ExtAttrs `json:"extattrs,omitempty"`
	// The log level for a notification REST endpoint.
	LogLevel *string `json:"log_level,omitempty"`
	// The name of a Syslog endpoint.
	Name *string `json:"name,omitempty"`
	// The outbound member that will generate events.
	OutboundMemberType *string `json:"outbound_member_type,omitempty"`
	// The list of members for outbound events.
	OutboundMembers []string `json:"outbound_members,omitempty"`
	// List of syslog servers
	SyslogServers    []SyslogEndpointSyslogServers   `json:"syslog_servers,omitempty"`
	TemplateInstance *SyslogEndpointTemplateInstance `json:"template_instance,omitempty"`
	// The timeout of session management (in seconds).
	Timeout *int64 `json:"timeout,omitempty"`
	// The vendor identifier.
	VendorIdentifier *string `json:"vendor_identifier,omitempty"`
	// The user name for WAPI integration.
	WapiUserName *string `json:"wapi_user_name,omitempty"`
	// The user password for WAPI integration.
	WapiUserPassword *string `json:"wapi_user_password,omitempty"`
}

// NewSyslogEndpoint instantiates a new SyslogEndpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyslogEndpoint() *SyslogEndpoint {
	this := SyslogEndpoint{}
	return &this
}

// NewSyslogEndpointWithDefaults instantiates a new SyslogEndpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyslogEndpointWithDefaults() *SyslogEndpoint {
	this := SyslogEndpoint{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *SyslogEndpoint) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogEndpoint) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *SyslogEndpoint) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *SyslogEndpoint) SetRef(v string) {
	o.Ref = &v
}

// GetExtAttrs returns the ExtAttrs field value if set, zero value otherwise.
func (o *SyslogEndpoint) GetExtAttrs() map[string]ExtAttrs {
	if o == nil || IsNil(o.ExtAttrs) {
		var ret map[string]ExtAttrs
		return ret
	}
	return *o.ExtAttrs
}

// GetExtAttrsOk returns a tuple with the ExtAttrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogEndpoint) GetExtAttrsOk() (*map[string]ExtAttrs, bool) {
	if o == nil || IsNil(o.ExtAttrs) {
		return nil, false
	}
	return o.ExtAttrs, true
}

// HasExtAttrs returns a boolean if a field has been set.
func (o *SyslogEndpoint) HasExtAttrs() bool {
	if o != nil && !IsNil(o.ExtAttrs) {
		return true
	}

	return false
}

// SetExtAttrs gets a reference to the given map[string]ExtAttrs and assigns it to the ExtAttrs field.
func (o *SyslogEndpoint) SetExtAttrs(v map[string]ExtAttrs) {
	o.ExtAttrs = &v
}

// GetLogLevel returns the LogLevel field value if set, zero value otherwise.
func (o *SyslogEndpoint) GetLogLevel() string {
	if o == nil || IsNil(o.LogLevel) {
		var ret string
		return ret
	}
	return *o.LogLevel
}

// GetLogLevelOk returns a tuple with the LogLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogEndpoint) GetLogLevelOk() (*string, bool) {
	if o == nil || IsNil(o.LogLevel) {
		return nil, false
	}
	return o.LogLevel, true
}

// HasLogLevel returns a boolean if a field has been set.
func (o *SyslogEndpoint) HasLogLevel() bool {
	if o != nil && !IsNil(o.LogLevel) {
		return true
	}

	return false
}

// SetLogLevel gets a reference to the given string and assigns it to the LogLevel field.
func (o *SyslogEndpoint) SetLogLevel(v string) {
	o.LogLevel = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SyslogEndpoint) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogEndpoint) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SyslogEndpoint) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SyslogEndpoint) SetName(v string) {
	o.Name = &v
}

// GetOutboundMemberType returns the OutboundMemberType field value if set, zero value otherwise.
func (o *SyslogEndpoint) GetOutboundMemberType() string {
	if o == nil || IsNil(o.OutboundMemberType) {
		var ret string
		return ret
	}
	return *o.OutboundMemberType
}

// GetOutboundMemberTypeOk returns a tuple with the OutboundMemberType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogEndpoint) GetOutboundMemberTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OutboundMemberType) {
		return nil, false
	}
	return o.OutboundMemberType, true
}

// HasOutboundMemberType returns a boolean if a field has been set.
func (o *SyslogEndpoint) HasOutboundMemberType() bool {
	if o != nil && !IsNil(o.OutboundMemberType) {
		return true
	}

	return false
}

// SetOutboundMemberType gets a reference to the given string and assigns it to the OutboundMemberType field.
func (o *SyslogEndpoint) SetOutboundMemberType(v string) {
	o.OutboundMemberType = &v
}

// GetOutboundMembers returns the OutboundMembers field value if set, zero value otherwise.
func (o *SyslogEndpoint) GetOutboundMembers() []string {
	if o == nil || IsNil(o.OutboundMembers) {
		var ret []string
		return ret
	}
	return o.OutboundMembers
}

// GetOutboundMembersOk returns a tuple with the OutboundMembers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogEndpoint) GetOutboundMembersOk() ([]string, bool) {
	if o == nil || IsNil(o.OutboundMembers) {
		return nil, false
	}
	return o.OutboundMembers, true
}

// HasOutboundMembers returns a boolean if a field has been set.
func (o *SyslogEndpoint) HasOutboundMembers() bool {
	if o != nil && !IsNil(o.OutboundMembers) {
		return true
	}

	return false
}

// SetOutboundMembers gets a reference to the given []string and assigns it to the OutboundMembers field.
func (o *SyslogEndpoint) SetOutboundMembers(v []string) {
	o.OutboundMembers = v
}

// GetSyslogServers returns the SyslogServers field value if set, zero value otherwise.
func (o *SyslogEndpoint) GetSyslogServers() []SyslogEndpointSyslogServers {
	if o == nil || IsNil(o.SyslogServers) {
		var ret []SyslogEndpointSyslogServers
		return ret
	}
	return o.SyslogServers
}

// GetSyslogServersOk returns a tuple with the SyslogServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogEndpoint) GetSyslogServersOk() ([]SyslogEndpointSyslogServers, bool) {
	if o == nil || IsNil(o.SyslogServers) {
		return nil, false
	}
	return o.SyslogServers, true
}

// HasSyslogServers returns a boolean if a field has been set.
func (o *SyslogEndpoint) HasSyslogServers() bool {
	if o != nil && !IsNil(o.SyslogServers) {
		return true
	}

	return false
}

// SetSyslogServers gets a reference to the given []SyslogEndpointSyslogServers and assigns it to the SyslogServers field.
func (o *SyslogEndpoint) SetSyslogServers(v []SyslogEndpointSyslogServers) {
	o.SyslogServers = v
}

// GetTemplateInstance returns the TemplateInstance field value if set, zero value otherwise.
func (o *SyslogEndpoint) GetTemplateInstance() SyslogEndpointTemplateInstance {
	if o == nil || IsNil(o.TemplateInstance) {
		var ret SyslogEndpointTemplateInstance
		return ret
	}
	return *o.TemplateInstance
}

// GetTemplateInstanceOk returns a tuple with the TemplateInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogEndpoint) GetTemplateInstanceOk() (*SyslogEndpointTemplateInstance, bool) {
	if o == nil || IsNil(o.TemplateInstance) {
		return nil, false
	}
	return o.TemplateInstance, true
}

// HasTemplateInstance returns a boolean if a field has been set.
func (o *SyslogEndpoint) HasTemplateInstance() bool {
	if o != nil && !IsNil(o.TemplateInstance) {
		return true
	}

	return false
}

// SetTemplateInstance gets a reference to the given SyslogEndpointTemplateInstance and assigns it to the TemplateInstance field.
func (o *SyslogEndpoint) SetTemplateInstance(v SyslogEndpointTemplateInstance) {
	o.TemplateInstance = &v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *SyslogEndpoint) GetTimeout() int64 {
	if o == nil || IsNil(o.Timeout) {
		var ret int64
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogEndpoint) GetTimeoutOk() (*int64, bool) {
	if o == nil || IsNil(o.Timeout) {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *SyslogEndpoint) HasTimeout() bool {
	if o != nil && !IsNil(o.Timeout) {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given int64 and assigns it to the Timeout field.
func (o *SyslogEndpoint) SetTimeout(v int64) {
	o.Timeout = &v
}

// GetVendorIdentifier returns the VendorIdentifier field value if set, zero value otherwise.
func (o *SyslogEndpoint) GetVendorIdentifier() string {
	if o == nil || IsNil(o.VendorIdentifier) {
		var ret string
		return ret
	}
	return *o.VendorIdentifier
}

// GetVendorIdentifierOk returns a tuple with the VendorIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogEndpoint) GetVendorIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.VendorIdentifier) {
		return nil, false
	}
	return o.VendorIdentifier, true
}

// HasVendorIdentifier returns a boolean if a field has been set.
func (o *SyslogEndpoint) HasVendorIdentifier() bool {
	if o != nil && !IsNil(o.VendorIdentifier) {
		return true
	}

	return false
}

// SetVendorIdentifier gets a reference to the given string and assigns it to the VendorIdentifier field.
func (o *SyslogEndpoint) SetVendorIdentifier(v string) {
	o.VendorIdentifier = &v
}

// GetWapiUserName returns the WapiUserName field value if set, zero value otherwise.
func (o *SyslogEndpoint) GetWapiUserName() string {
	if o == nil || IsNil(o.WapiUserName) {
		var ret string
		return ret
	}
	return *o.WapiUserName
}

// GetWapiUserNameOk returns a tuple with the WapiUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogEndpoint) GetWapiUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.WapiUserName) {
		return nil, false
	}
	return o.WapiUserName, true
}

// HasWapiUserName returns a boolean if a field has been set.
func (o *SyslogEndpoint) HasWapiUserName() bool {
	if o != nil && !IsNil(o.WapiUserName) {
		return true
	}

	return false
}

// SetWapiUserName gets a reference to the given string and assigns it to the WapiUserName field.
func (o *SyslogEndpoint) SetWapiUserName(v string) {
	o.WapiUserName = &v
}

// GetWapiUserPassword returns the WapiUserPassword field value if set, zero value otherwise.
func (o *SyslogEndpoint) GetWapiUserPassword() string {
	if o == nil || IsNil(o.WapiUserPassword) {
		var ret string
		return ret
	}
	return *o.WapiUserPassword
}

// GetWapiUserPasswordOk returns a tuple with the WapiUserPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogEndpoint) GetWapiUserPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.WapiUserPassword) {
		return nil, false
	}
	return o.WapiUserPassword, true
}

// HasWapiUserPassword returns a boolean if a field has been set.
func (o *SyslogEndpoint) HasWapiUserPassword() bool {
	if o != nil && !IsNil(o.WapiUserPassword) {
		return true
	}

	return false
}

// SetWapiUserPassword gets a reference to the given string and assigns it to the WapiUserPassword field.
func (o *SyslogEndpoint) SetWapiUserPassword(v string) {
	o.WapiUserPassword = &v
}

func (o SyslogEndpoint) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SyslogEndpoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.ExtAttrs) {
		toSerialize["extattrs"] = o.ExtAttrs
	}
	if !IsNil(o.LogLevel) {
		toSerialize["log_level"] = o.LogLevel
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OutboundMemberType) {
		toSerialize["outbound_member_type"] = o.OutboundMemberType
	}
	if !IsNil(o.OutboundMembers) {
		toSerialize["outbound_members"] = o.OutboundMembers
	}
	if !IsNil(o.SyslogServers) {
		toSerialize["syslog_servers"] = o.SyslogServers
	}
	if !IsNil(o.TemplateInstance) {
		toSerialize["template_instance"] = o.TemplateInstance
	}
	if !IsNil(o.Timeout) {
		toSerialize["timeout"] = o.Timeout
	}
	if !IsNil(o.VendorIdentifier) {
		toSerialize["vendor_identifier"] = o.VendorIdentifier
	}
	if !IsNil(o.WapiUserName) {
		toSerialize["wapi_user_name"] = o.WapiUserName
	}
	if !IsNil(o.WapiUserPassword) {
		toSerialize["wapi_user_password"] = o.WapiUserPassword
	}
	return toSerialize, nil
}

type NullableSyslogEndpoint struct {
	value *SyslogEndpoint
	isSet bool
}

func (v NullableSyslogEndpoint) Get() *SyslogEndpoint {
	return v.value
}

func (v *NullableSyslogEndpoint) Set(val *SyslogEndpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableSyslogEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableSyslogEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyslogEndpoint(val *SyslogEndpoint) *NullableSyslogEndpoint {
	return &NullableSyslogEndpoint{value: val, isSet: true}
}

func (v NullableSyslogEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyslogEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
