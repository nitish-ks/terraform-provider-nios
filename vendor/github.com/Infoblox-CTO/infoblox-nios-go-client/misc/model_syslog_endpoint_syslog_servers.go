/*
Infoblox MISC API

OpenAPI specification for Infoblox NIOS WAPI MISC objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package misc

import (
	"encoding/json"
)

// checks if the SyslogEndpointSyslogServers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SyslogEndpointSyslogServers{}

// SyslogEndpointSyslogServers struct for SyslogEndpointSyslogServers
type SyslogEndpointSyslogServers struct {
	// Syslog Server IP address
	Address *string `json:"address,omitempty"`
	// Connection type values
	ConnectionType *string `json:"connection_type,omitempty"`
	// The port this server listens on.
	Port *int64 `json:"port,omitempty"`
	// List of hostnames
	Hostname *string `json:"hostname,omitempty"`
	// Format vlues for syslog endpoint server
	Format *string `json:"format,omitempty"`
	// Facility values for syslog endpoint server
	Facility *string `json:"facility,omitempty"`
	// Severity values for syslog endpoint server.
	Severity *string `json:"severity,omitempty"`
	// Reference for creating sysog endpoint server.
	Certificate *string `json:"certificate,omitempty"`
	// The token returned by the uploadinit function call in object fileop.
	CertificateToken     *string `json:"certificate_token,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SyslogEndpointSyslogServers SyslogEndpointSyslogServers

// NewSyslogEndpointSyslogServers instantiates a new SyslogEndpointSyslogServers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyslogEndpointSyslogServers() *SyslogEndpointSyslogServers {
	this := SyslogEndpointSyslogServers{}
	return &this
}

// NewSyslogEndpointSyslogServersWithDefaults instantiates a new SyslogEndpointSyslogServers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyslogEndpointSyslogServersWithDefaults() *SyslogEndpointSyslogServers {
	this := SyslogEndpointSyslogServers{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *SyslogEndpointSyslogServers) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogEndpointSyslogServers) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *SyslogEndpointSyslogServers) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *SyslogEndpointSyslogServers) SetAddress(v string) {
	o.Address = &v
}

// GetConnectionType returns the ConnectionType field value if set, zero value otherwise.
func (o *SyslogEndpointSyslogServers) GetConnectionType() string {
	if o == nil || IsNil(o.ConnectionType) {
		var ret string
		return ret
	}
	return *o.ConnectionType
}

// GetConnectionTypeOk returns a tuple with the ConnectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogEndpointSyslogServers) GetConnectionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionType) {
		return nil, false
	}
	return o.ConnectionType, true
}

// HasConnectionType returns a boolean if a field has been set.
func (o *SyslogEndpointSyslogServers) HasConnectionType() bool {
	if o != nil && !IsNil(o.ConnectionType) {
		return true
	}

	return false
}

// SetConnectionType gets a reference to the given string and assigns it to the ConnectionType field.
func (o *SyslogEndpointSyslogServers) SetConnectionType(v string) {
	o.ConnectionType = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *SyslogEndpointSyslogServers) GetPort() int64 {
	if o == nil || IsNil(o.Port) {
		var ret int64
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogEndpointSyslogServers) GetPortOk() (*int64, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *SyslogEndpointSyslogServers) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int64 and assigns it to the Port field.
func (o *SyslogEndpointSyslogServers) SetPort(v int64) {
	o.Port = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *SyslogEndpointSyslogServers) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogEndpointSyslogServers) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *SyslogEndpointSyslogServers) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *SyslogEndpointSyslogServers) SetHostname(v string) {
	o.Hostname = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *SyslogEndpointSyslogServers) GetFormat() string {
	if o == nil || IsNil(o.Format) {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogEndpointSyslogServers) GetFormatOk() (*string, bool) {
	if o == nil || IsNil(o.Format) {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *SyslogEndpointSyslogServers) HasFormat() bool {
	if o != nil && !IsNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *SyslogEndpointSyslogServers) SetFormat(v string) {
	o.Format = &v
}

// GetFacility returns the Facility field value if set, zero value otherwise.
func (o *SyslogEndpointSyslogServers) GetFacility() string {
	if o == nil || IsNil(o.Facility) {
		var ret string
		return ret
	}
	return *o.Facility
}

// GetFacilityOk returns a tuple with the Facility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogEndpointSyslogServers) GetFacilityOk() (*string, bool) {
	if o == nil || IsNil(o.Facility) {
		return nil, false
	}
	return o.Facility, true
}

// HasFacility returns a boolean if a field has been set.
func (o *SyslogEndpointSyslogServers) HasFacility() bool {
	if o != nil && !IsNil(o.Facility) {
		return true
	}

	return false
}

// SetFacility gets a reference to the given string and assigns it to the Facility field.
func (o *SyslogEndpointSyslogServers) SetFacility(v string) {
	o.Facility = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *SyslogEndpointSyslogServers) GetSeverity() string {
	if o == nil || IsNil(o.Severity) {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogEndpointSyslogServers) GetSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *SyslogEndpointSyslogServers) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *SyslogEndpointSyslogServers) SetSeverity(v string) {
	o.Severity = &v
}

// GetCertificate returns the Certificate field value if set, zero value otherwise.
func (o *SyslogEndpointSyslogServers) GetCertificate() string {
	if o == nil || IsNil(o.Certificate) {
		var ret string
		return ret
	}
	return *o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogEndpointSyslogServers) GetCertificateOk() (*string, bool) {
	if o == nil || IsNil(o.Certificate) {
		return nil, false
	}
	return o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *SyslogEndpointSyslogServers) HasCertificate() bool {
	if o != nil && !IsNil(o.Certificate) {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given string and assigns it to the Certificate field.
func (o *SyslogEndpointSyslogServers) SetCertificate(v string) {
	o.Certificate = &v
}

// GetCertificateToken returns the CertificateToken field value if set, zero value otherwise.
func (o *SyslogEndpointSyslogServers) GetCertificateToken() string {
	if o == nil || IsNil(o.CertificateToken) {
		var ret string
		return ret
	}
	return *o.CertificateToken
}

// GetCertificateTokenOk returns a tuple with the CertificateToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogEndpointSyslogServers) GetCertificateTokenOk() (*string, bool) {
	if o == nil || IsNil(o.CertificateToken) {
		return nil, false
	}
	return o.CertificateToken, true
}

// HasCertificateToken returns a boolean if a field has been set.
func (o *SyslogEndpointSyslogServers) HasCertificateToken() bool {
	if o != nil && !IsNil(o.CertificateToken) {
		return true
	}

	return false
}

// SetCertificateToken gets a reference to the given string and assigns it to the CertificateToken field.
func (o *SyslogEndpointSyslogServers) SetCertificateToken(v string) {
	o.CertificateToken = &v
}

func (o SyslogEndpointSyslogServers) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SyslogEndpointSyslogServers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.ConnectionType) {
		toSerialize["connection_type"] = o.ConnectionType
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	if !IsNil(o.Facility) {
		toSerialize["facility"] = o.Facility
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	if !IsNil(o.Certificate) {
		toSerialize["certificate"] = o.Certificate
	}
	if !IsNil(o.CertificateToken) {
		toSerialize["certificate_token"] = o.CertificateToken
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SyslogEndpointSyslogServers) UnmarshalJSON(data []byte) (err error) {
	varSyslogEndpointSyslogServers := _SyslogEndpointSyslogServers{}

	err = json.Unmarshal(data, &varSyslogEndpointSyslogServers)

	if err != nil {
		return err
	}

	*o = SyslogEndpointSyslogServers(varSyslogEndpointSyslogServers)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "address")
		delete(additionalProperties, "connection_type")
		delete(additionalProperties, "port")
		delete(additionalProperties, "hostname")
		delete(additionalProperties, "format")
		delete(additionalProperties, "facility")
		delete(additionalProperties, "severity")
		delete(additionalProperties, "certificate")
		delete(additionalProperties, "certificate_token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSyslogEndpointSyslogServers struct {
	value *SyslogEndpointSyslogServers
	isSet bool
}

func (v NullableSyslogEndpointSyslogServers) Get() *SyslogEndpointSyslogServers {
	return v.value
}

func (v *NullableSyslogEndpointSyslogServers) Set(val *SyslogEndpointSyslogServers) {
	v.value = val
	v.isSet = true
}

func (v NullableSyslogEndpointSyslogServers) IsSet() bool {
	return v.isSet
}

func (v *NullableSyslogEndpointSyslogServers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyslogEndpointSyslogServers(val *SyslogEndpointSyslogServers) *NullableSyslogEndpointSyslogServers {
	return &NullableSyslogEndpointSyslogServers{value: val, isSet: true}
}

func (v NullableSyslogEndpointSyslogServers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyslogEndpointSyslogServers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
