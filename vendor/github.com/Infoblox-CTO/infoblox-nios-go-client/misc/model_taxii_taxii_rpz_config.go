/*
Infoblox MISC API

OpenAPI specification for Infoblox NIOS WAPI MISC objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package misc

import (
	"encoding/json"
)

// checks if the TaxiiTaxiiRpzConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TaxiiTaxiiRpzConfig{}

// TaxiiTaxiiRpzConfig struct for TaxiiTaxiiRpzConfig
type TaxiiTaxiiRpzConfig struct {
	// The STIX collection name.
	CollectionName *string `json:"collection_name,omitempty"`
	// The reference to the RPZ in which rules are created through the Taxii protocol requests.
	Zone                 *string `json:"zone,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TaxiiTaxiiRpzConfig TaxiiTaxiiRpzConfig

// NewTaxiiTaxiiRpzConfig instantiates a new TaxiiTaxiiRpzConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaxiiTaxiiRpzConfig() *TaxiiTaxiiRpzConfig {
	this := TaxiiTaxiiRpzConfig{}
	return &this
}

// NewTaxiiTaxiiRpzConfigWithDefaults instantiates a new TaxiiTaxiiRpzConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaxiiTaxiiRpzConfigWithDefaults() *TaxiiTaxiiRpzConfig {
	this := TaxiiTaxiiRpzConfig{}
	return &this
}

// GetCollectionName returns the CollectionName field value if set, zero value otherwise.
func (o *TaxiiTaxiiRpzConfig) GetCollectionName() string {
	if o == nil || IsNil(o.CollectionName) {
		var ret string
		return ret
	}
	return *o.CollectionName
}

// GetCollectionNameOk returns a tuple with the CollectionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxiiTaxiiRpzConfig) GetCollectionNameOk() (*string, bool) {
	if o == nil || IsNil(o.CollectionName) {
		return nil, false
	}
	return o.CollectionName, true
}

// HasCollectionName returns a boolean if a field has been set.
func (o *TaxiiTaxiiRpzConfig) HasCollectionName() bool {
	if o != nil && !IsNil(o.CollectionName) {
		return true
	}

	return false
}

// SetCollectionName gets a reference to the given string and assigns it to the CollectionName field.
func (o *TaxiiTaxiiRpzConfig) SetCollectionName(v string) {
	o.CollectionName = &v
}

// GetZone returns the Zone field value if set, zero value otherwise.
func (o *TaxiiTaxiiRpzConfig) GetZone() string {
	if o == nil || IsNil(o.Zone) {
		var ret string
		return ret
	}
	return *o.Zone
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxiiTaxiiRpzConfig) GetZoneOk() (*string, bool) {
	if o == nil || IsNil(o.Zone) {
		return nil, false
	}
	return o.Zone, true
}

// HasZone returns a boolean if a field has been set.
func (o *TaxiiTaxiiRpzConfig) HasZone() bool {
	if o != nil && !IsNil(o.Zone) {
		return true
	}

	return false
}

// SetZone gets a reference to the given string and assigns it to the Zone field.
func (o *TaxiiTaxiiRpzConfig) SetZone(v string) {
	o.Zone = &v
}

func (o TaxiiTaxiiRpzConfig) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TaxiiTaxiiRpzConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CollectionName) {
		toSerialize["collection_name"] = o.CollectionName
	}
	if !IsNil(o.Zone) {
		toSerialize["zone"] = o.Zone
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TaxiiTaxiiRpzConfig) UnmarshalJSON(data []byte) (err error) {
	varTaxiiTaxiiRpzConfig := _TaxiiTaxiiRpzConfig{}

	err = json.Unmarshal(data, &varTaxiiTaxiiRpzConfig)

	if err != nil {
		return err
	}

	*o = TaxiiTaxiiRpzConfig(varTaxiiTaxiiRpzConfig)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "collection_name")
		delete(additionalProperties, "zone")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTaxiiTaxiiRpzConfig struct {
	value *TaxiiTaxiiRpzConfig
	isSet bool
}

func (v NullableTaxiiTaxiiRpzConfig) Get() *TaxiiTaxiiRpzConfig {
	return v.value
}

func (v *NullableTaxiiTaxiiRpzConfig) Set(val *TaxiiTaxiiRpzConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableTaxiiTaxiiRpzConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableTaxiiTaxiiRpzConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaxiiTaxiiRpzConfig(val *TaxiiTaxiiRpzConfig) *NullableTaxiiTaxiiRpzConfig {
	return &NullableTaxiiTaxiiRpzConfig{value: val, isSet: true}
}

func (v NullableTaxiiTaxiiRpzConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaxiiTaxiiRpzConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
