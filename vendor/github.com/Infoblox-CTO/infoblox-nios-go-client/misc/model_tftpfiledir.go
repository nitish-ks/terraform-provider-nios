/*
Infoblox MISC API

OpenAPI specification for Infoblox NIOS WAPI MISC objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package misc

import (
	"encoding/json"
)

// checks if the Tftpfiledir type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Tftpfiledir{}

// Tftpfiledir struct for Tftpfiledir
type Tftpfiledir struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// The path to the directory that contains file or subdirectory.
	Directory *string `json:"directory,omitempty"`
	// Determines whether the TFTP entity is synchronized to Grid Master.
	IsSyncedToGm *bool `json:"is_synced_to_gm,omitempty"`
	// The time when the file or directory was last modified.
	LastModify *int64 `json:"last_modify,omitempty"`
	// The TFTP directory or file name.
	Name *string `json:"name,omitempty"`
	// The type of TFTP file system entity (directory or file).
	Type *string `json:"type,omitempty"`
	// The replication members with TFTP client addresses where this virtual folder is applicable.
	VtftpDirMembers []TftpfiledirVtftpDirMembers `json:"vtftp_dir_members,omitempty"`
}

// NewTftpfiledir instantiates a new Tftpfiledir object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTftpfiledir() *Tftpfiledir {
	this := Tftpfiledir{}
	return &this
}

// NewTftpfiledirWithDefaults instantiates a new Tftpfiledir object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTftpfiledirWithDefaults() *Tftpfiledir {
	this := Tftpfiledir{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *Tftpfiledir) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tftpfiledir) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *Tftpfiledir) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *Tftpfiledir) SetRef(v string) {
	o.Ref = &v
}

// GetDirectory returns the Directory field value if set, zero value otherwise.
func (o *Tftpfiledir) GetDirectory() string {
	if o == nil || IsNil(o.Directory) {
		var ret string
		return ret
	}
	return *o.Directory
}

// GetDirectoryOk returns a tuple with the Directory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tftpfiledir) GetDirectoryOk() (*string, bool) {
	if o == nil || IsNil(o.Directory) {
		return nil, false
	}
	return o.Directory, true
}

// HasDirectory returns a boolean if a field has been set.
func (o *Tftpfiledir) HasDirectory() bool {
	if o != nil && !IsNil(o.Directory) {
		return true
	}

	return false
}

// SetDirectory gets a reference to the given string and assigns it to the Directory field.
func (o *Tftpfiledir) SetDirectory(v string) {
	o.Directory = &v
}

// GetIsSyncedToGm returns the IsSyncedToGm field value if set, zero value otherwise.
func (o *Tftpfiledir) GetIsSyncedToGm() bool {
	if o == nil || IsNil(o.IsSyncedToGm) {
		var ret bool
		return ret
	}
	return *o.IsSyncedToGm
}

// GetIsSyncedToGmOk returns a tuple with the IsSyncedToGm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tftpfiledir) GetIsSyncedToGmOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSyncedToGm) {
		return nil, false
	}
	return o.IsSyncedToGm, true
}

// HasIsSyncedToGm returns a boolean if a field has been set.
func (o *Tftpfiledir) HasIsSyncedToGm() bool {
	if o != nil && !IsNil(o.IsSyncedToGm) {
		return true
	}

	return false
}

// SetIsSyncedToGm gets a reference to the given bool and assigns it to the IsSyncedToGm field.
func (o *Tftpfiledir) SetIsSyncedToGm(v bool) {
	o.IsSyncedToGm = &v
}

// GetLastModify returns the LastModify field value if set, zero value otherwise.
func (o *Tftpfiledir) GetLastModify() int64 {
	if o == nil || IsNil(o.LastModify) {
		var ret int64
		return ret
	}
	return *o.LastModify
}

// GetLastModifyOk returns a tuple with the LastModify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tftpfiledir) GetLastModifyOk() (*int64, bool) {
	if o == nil || IsNil(o.LastModify) {
		return nil, false
	}
	return o.LastModify, true
}

// HasLastModify returns a boolean if a field has been set.
func (o *Tftpfiledir) HasLastModify() bool {
	if o != nil && !IsNil(o.LastModify) {
		return true
	}

	return false
}

// SetLastModify gets a reference to the given int64 and assigns it to the LastModify field.
func (o *Tftpfiledir) SetLastModify(v int64) {
	o.LastModify = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Tftpfiledir) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tftpfiledir) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Tftpfiledir) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Tftpfiledir) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Tftpfiledir) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tftpfiledir) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Tftpfiledir) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Tftpfiledir) SetType(v string) {
	o.Type = &v
}

// GetVtftpDirMembers returns the VtftpDirMembers field value if set, zero value otherwise.
func (o *Tftpfiledir) GetVtftpDirMembers() []TftpfiledirVtftpDirMembers {
	if o == nil || IsNil(o.VtftpDirMembers) {
		var ret []TftpfiledirVtftpDirMembers
		return ret
	}
	return o.VtftpDirMembers
}

// GetVtftpDirMembersOk returns a tuple with the VtftpDirMembers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tftpfiledir) GetVtftpDirMembersOk() ([]TftpfiledirVtftpDirMembers, bool) {
	if o == nil || IsNil(o.VtftpDirMembers) {
		return nil, false
	}
	return o.VtftpDirMembers, true
}

// HasVtftpDirMembers returns a boolean if a field has been set.
func (o *Tftpfiledir) HasVtftpDirMembers() bool {
	if o != nil && !IsNil(o.VtftpDirMembers) {
		return true
	}

	return false
}

// SetVtftpDirMembers gets a reference to the given []TftpfiledirVtftpDirMembers and assigns it to the VtftpDirMembers field.
func (o *Tftpfiledir) SetVtftpDirMembers(v []TftpfiledirVtftpDirMembers) {
	o.VtftpDirMembers = v
}

func (o Tftpfiledir) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Tftpfiledir) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.Directory) {
		toSerialize["directory"] = o.Directory
	}
	if !IsNil(o.IsSyncedToGm) {
		toSerialize["is_synced_to_gm"] = o.IsSyncedToGm
	}
	if !IsNil(o.LastModify) {
		toSerialize["last_modify"] = o.LastModify
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.VtftpDirMembers) {
		toSerialize["vtftp_dir_members"] = o.VtftpDirMembers
	}
	return toSerialize, nil
}

type NullableTftpfiledir struct {
	value *Tftpfiledir
	isSet bool
}

func (v NullableTftpfiledir) Get() *Tftpfiledir {
	return v.value
}

func (v *NullableTftpfiledir) Set(val *Tftpfiledir) {
	v.value = val
	v.isSet = true
}

func (v NullableTftpfiledir) IsSet() bool {
	return v.isSet
}

func (v *NullableTftpfiledir) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTftpfiledir(val *Tftpfiledir) *NullableTftpfiledir {
	return &NullableTftpfiledir{value: val, isSet: true}
}

func (v NullableTftpfiledir) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTftpfiledir) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
