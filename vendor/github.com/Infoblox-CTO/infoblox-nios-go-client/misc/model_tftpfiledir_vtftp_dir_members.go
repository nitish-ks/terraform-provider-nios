/*
Infoblox MISC API

OpenAPI specification for Infoblox NIOS WAPI MISC objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package misc

import (
	"encoding/json"
)

// checks if the TftpfiledirVtftpDirMembers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TftpfiledirVtftpDirMembers{}

// TftpfiledirVtftpDirMembers struct for TftpfiledirVtftpDirMembers
type TftpfiledirVtftpDirMembers struct {
	// The Grid member on which to create the virtual TFTP directory.
	Member *string `json:"member,omitempty"`
	// The IP type of the virtual TFTP root directory.
	IpType *string `json:"ip_type,omitempty"`
	// The IP address of the clients which will see the virtual TFTP directory as the root directory.
	Address *string `json:"address,omitempty"`
	// The start IP address of the range within which the clients will see the virtual TFTP directory as the root directory.
	StartAddress *string `json:"start_address,omitempty"`
	// The end IP address of the range within which the clients will see the virtual TFTP directory as the root directory.
	EndAddress *string `json:"end_address,omitempty"`
	// The IP address of network the clients from which will see the virtual TFTP directory as the root directory.
	Network *string `json:"network,omitempty"`
	// The CIDR of network the clients from which will see the virtual TFTP directory as the root directory.
	Cidr                 *int64 `json:"cidr,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TftpfiledirVtftpDirMembers TftpfiledirVtftpDirMembers

// NewTftpfiledirVtftpDirMembers instantiates a new TftpfiledirVtftpDirMembers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTftpfiledirVtftpDirMembers() *TftpfiledirVtftpDirMembers {
	this := TftpfiledirVtftpDirMembers{}
	return &this
}

// NewTftpfiledirVtftpDirMembersWithDefaults instantiates a new TftpfiledirVtftpDirMembers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTftpfiledirVtftpDirMembersWithDefaults() *TftpfiledirVtftpDirMembers {
	this := TftpfiledirVtftpDirMembers{}
	return &this
}

// GetMember returns the Member field value if set, zero value otherwise.
func (o *TftpfiledirVtftpDirMembers) GetMember() string {
	if o == nil || IsNil(o.Member) {
		var ret string
		return ret
	}
	return *o.Member
}

// GetMemberOk returns a tuple with the Member field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TftpfiledirVtftpDirMembers) GetMemberOk() (*string, bool) {
	if o == nil || IsNil(o.Member) {
		return nil, false
	}
	return o.Member, true
}

// HasMember returns a boolean if a field has been set.
func (o *TftpfiledirVtftpDirMembers) HasMember() bool {
	if o != nil && !IsNil(o.Member) {
		return true
	}

	return false
}

// SetMember gets a reference to the given string and assigns it to the Member field.
func (o *TftpfiledirVtftpDirMembers) SetMember(v string) {
	o.Member = &v
}

// GetIpType returns the IpType field value if set, zero value otherwise.
func (o *TftpfiledirVtftpDirMembers) GetIpType() string {
	if o == nil || IsNil(o.IpType) {
		var ret string
		return ret
	}
	return *o.IpType
}

// GetIpTypeOk returns a tuple with the IpType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TftpfiledirVtftpDirMembers) GetIpTypeOk() (*string, bool) {
	if o == nil || IsNil(o.IpType) {
		return nil, false
	}
	return o.IpType, true
}

// HasIpType returns a boolean if a field has been set.
func (o *TftpfiledirVtftpDirMembers) HasIpType() bool {
	if o != nil && !IsNil(o.IpType) {
		return true
	}

	return false
}

// SetIpType gets a reference to the given string and assigns it to the IpType field.
func (o *TftpfiledirVtftpDirMembers) SetIpType(v string) {
	o.IpType = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *TftpfiledirVtftpDirMembers) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TftpfiledirVtftpDirMembers) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *TftpfiledirVtftpDirMembers) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *TftpfiledirVtftpDirMembers) SetAddress(v string) {
	o.Address = &v
}

// GetStartAddress returns the StartAddress field value if set, zero value otherwise.
func (o *TftpfiledirVtftpDirMembers) GetStartAddress() string {
	if o == nil || IsNil(o.StartAddress) {
		var ret string
		return ret
	}
	return *o.StartAddress
}

// GetStartAddressOk returns a tuple with the StartAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TftpfiledirVtftpDirMembers) GetStartAddressOk() (*string, bool) {
	if o == nil || IsNil(o.StartAddress) {
		return nil, false
	}
	return o.StartAddress, true
}

// HasStartAddress returns a boolean if a field has been set.
func (o *TftpfiledirVtftpDirMembers) HasStartAddress() bool {
	if o != nil && !IsNil(o.StartAddress) {
		return true
	}

	return false
}

// SetStartAddress gets a reference to the given string and assigns it to the StartAddress field.
func (o *TftpfiledirVtftpDirMembers) SetStartAddress(v string) {
	o.StartAddress = &v
}

// GetEndAddress returns the EndAddress field value if set, zero value otherwise.
func (o *TftpfiledirVtftpDirMembers) GetEndAddress() string {
	if o == nil || IsNil(o.EndAddress) {
		var ret string
		return ret
	}
	return *o.EndAddress
}

// GetEndAddressOk returns a tuple with the EndAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TftpfiledirVtftpDirMembers) GetEndAddressOk() (*string, bool) {
	if o == nil || IsNil(o.EndAddress) {
		return nil, false
	}
	return o.EndAddress, true
}

// HasEndAddress returns a boolean if a field has been set.
func (o *TftpfiledirVtftpDirMembers) HasEndAddress() bool {
	if o != nil && !IsNil(o.EndAddress) {
		return true
	}

	return false
}

// SetEndAddress gets a reference to the given string and assigns it to the EndAddress field.
func (o *TftpfiledirVtftpDirMembers) SetEndAddress(v string) {
	o.EndAddress = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *TftpfiledirVtftpDirMembers) GetNetwork() string {
	if o == nil || IsNil(o.Network) {
		var ret string
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TftpfiledirVtftpDirMembers) GetNetworkOk() (*string, bool) {
	if o == nil || IsNil(o.Network) {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *TftpfiledirVtftpDirMembers) HasNetwork() bool {
	if o != nil && !IsNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given string and assigns it to the Network field.
func (o *TftpfiledirVtftpDirMembers) SetNetwork(v string) {
	o.Network = &v
}

// GetCidr returns the Cidr field value if set, zero value otherwise.
func (o *TftpfiledirVtftpDirMembers) GetCidr() int64 {
	if o == nil || IsNil(o.Cidr) {
		var ret int64
		return ret
	}
	return *o.Cidr
}

// GetCidrOk returns a tuple with the Cidr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TftpfiledirVtftpDirMembers) GetCidrOk() (*int64, bool) {
	if o == nil || IsNil(o.Cidr) {
		return nil, false
	}
	return o.Cidr, true
}

// HasCidr returns a boolean if a field has been set.
func (o *TftpfiledirVtftpDirMembers) HasCidr() bool {
	if o != nil && !IsNil(o.Cidr) {
		return true
	}

	return false
}

// SetCidr gets a reference to the given int64 and assigns it to the Cidr field.
func (o *TftpfiledirVtftpDirMembers) SetCidr(v int64) {
	o.Cidr = &v
}

func (o TftpfiledirVtftpDirMembers) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TftpfiledirVtftpDirMembers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Member) {
		toSerialize["member"] = o.Member
	}
	if !IsNil(o.IpType) {
		toSerialize["ip_type"] = o.IpType
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.StartAddress) {
		toSerialize["start_address"] = o.StartAddress
	}
	if !IsNil(o.EndAddress) {
		toSerialize["end_address"] = o.EndAddress
	}
	if !IsNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	if !IsNil(o.Cidr) {
		toSerialize["cidr"] = o.Cidr
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TftpfiledirVtftpDirMembers) UnmarshalJSON(data []byte) (err error) {
	varTftpfiledirVtftpDirMembers := _TftpfiledirVtftpDirMembers{}

	err = json.Unmarshal(data, &varTftpfiledirVtftpDirMembers)

	if err != nil {
		return err
	}

	*o = TftpfiledirVtftpDirMembers(varTftpfiledirVtftpDirMembers)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "member")
		delete(additionalProperties, "ip_type")
		delete(additionalProperties, "address")
		delete(additionalProperties, "start_address")
		delete(additionalProperties, "end_address")
		delete(additionalProperties, "network")
		delete(additionalProperties, "cidr")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTftpfiledirVtftpDirMembers struct {
	value *TftpfiledirVtftpDirMembers
	isSet bool
}

func (v NullableTftpfiledirVtftpDirMembers) Get() *TftpfiledirVtftpDirMembers {
	return v.value
}

func (v *NullableTftpfiledirVtftpDirMembers) Set(val *TftpfiledirVtftpDirMembers) {
	v.value = val
	v.isSet = true
}

func (v NullableTftpfiledirVtftpDirMembers) IsSet() bool {
	return v.isSet
}

func (v *NullableTftpfiledirVtftpDirMembers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTftpfiledirVtftpDirMembers(val *TftpfiledirVtftpDirMembers) *NullableTftpfiledirVtftpDirMembers {
	return &NullableTftpfiledirVtftpDirMembers{value: val, isSet: true}
}

func (v NullableTftpfiledirVtftpDirMembers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTftpfiledirVtftpDirMembers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
