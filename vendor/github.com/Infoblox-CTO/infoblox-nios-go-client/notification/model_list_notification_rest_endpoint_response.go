/*
Infoblox NOTIFICATION API

OpenAPI specification for Infoblox NIOS WAPI NOTIFICATION objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package notification

import (
	"encoding/json"
	"fmt"
)

// ListNotificationRestEndpointResponse - struct for ListNotificationRestEndpointResponse
type ListNotificationRestEndpointResponse struct {
	ListNotificationRestEndpointResponseObject *ListNotificationRestEndpointResponseObject
	ArrayOfNotificationRestEndpoint            *[]NotificationRestEndpoint
}

// ListNotificationRestEndpointResponseObjectAsListNotificationRestEndpointResponse is a convenience function that returns ListNotificationRestEndpointResponseObject wrapped in ListNotificationRestEndpointResponse
func ListNotificationRestEndpointResponseObjectAsListNotificationRestEndpointResponse(v *ListNotificationRestEndpointResponseObject) ListNotificationRestEndpointResponse {
	return ListNotificationRestEndpointResponse{
		ListNotificationRestEndpointResponseObject: v,
	}
}

// []NotificationRestEndpointAsListNotificationRestEndpointResponse is a convenience function that returns []NotificationRestEndpoint wrapped in ListNotificationRestEndpointResponse
func ArrayOfNotificationRestEndpointAsListNotificationRestEndpointResponse(v *[]NotificationRestEndpoint) ListNotificationRestEndpointResponse {
	return ListNotificationRestEndpointResponse{
		ArrayOfNotificationRestEndpoint: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListNotificationRestEndpointResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListNotificationRestEndpointResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListNotificationRestEndpointResponseObject)
	if err == nil {
		jsonListNotificationRestEndpointResponseObject, _ := json.Marshal(dst.ListNotificationRestEndpointResponseObject)
		if string(jsonListNotificationRestEndpointResponseObject) == "{}" { // empty struct
			dst.ListNotificationRestEndpointResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListNotificationRestEndpointResponseObject = nil
	}

	// try to unmarshal data into ArrayOfNotificationRestEndpoint
	err = newStrictDecoder(data).Decode(&dst.ArrayOfNotificationRestEndpoint)
	if err == nil {
		jsonArrayOfNotificationRestEndpoint, _ := json.Marshal(dst.ArrayOfNotificationRestEndpoint)
		if string(jsonArrayOfNotificationRestEndpoint) == "{}" { // empty struct
			dst.ArrayOfNotificationRestEndpoint = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfNotificationRestEndpoint = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListNotificationRestEndpointResponseObject = nil
		dst.ArrayOfNotificationRestEndpoint = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListNotificationRestEndpointResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListNotificationRestEndpointResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListNotificationRestEndpointResponse) MarshalJSON() ([]byte, error) {
	if src.ListNotificationRestEndpointResponseObject != nil {
		return json.Marshal(&src.ListNotificationRestEndpointResponseObject)
	}

	if src.ArrayOfNotificationRestEndpoint != nil {
		return json.Marshal(&src.ArrayOfNotificationRestEndpoint)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListNotificationRestEndpointResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListNotificationRestEndpointResponseObject != nil {
		return obj.ListNotificationRestEndpointResponseObject
	}

	if obj.ArrayOfNotificationRestEndpoint != nil {
		return obj.ArrayOfNotificationRestEndpoint
	}

	// all schemas are nil
	return nil
}

type NullableListNotificationRestEndpointResponse struct {
	value *ListNotificationRestEndpointResponse
	isSet bool
}

func (v NullableListNotificationRestEndpointResponse) Get() *ListNotificationRestEndpointResponse {
	return v.value
}

func (v *NullableListNotificationRestEndpointResponse) Set(val *ListNotificationRestEndpointResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListNotificationRestEndpointResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListNotificationRestEndpointResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListNotificationRestEndpointResponse(val *ListNotificationRestEndpointResponse) *NullableListNotificationRestEndpointResponse {
	return &NullableListNotificationRestEndpointResponse{value: val, isSet: true}
}

func (v NullableListNotificationRestEndpointResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListNotificationRestEndpointResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
