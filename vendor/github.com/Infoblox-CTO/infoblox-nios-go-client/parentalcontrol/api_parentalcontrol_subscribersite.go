/*
Infoblox PARENTALCONTROL API

OpenAPI specification for Infoblox NIOS WAPI PARENTALCONTROL objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package parentalcontrol

import (
	"bytes"
	"context"
	"io"
	"net/http"
	"net/url"
	"strings"

	"github.com/Infoblox-CTO/infoblox-nios-go-client/internal"
)

type ParentalcontrolSubscribersiteAPI interface {
	/*
		Create Create a parentalcontrol:subscribersite object

		Creates a new parentalcontrol:subscribersite object

		@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
		@return ParentalcontrolSubscribersiteAPICreateRequest
	*/
	Create(ctx context.Context) ParentalcontrolSubscribersiteAPICreateRequest

	// CreateExecute executes the request
	//  @return CreateParentalcontrolSubscribersiteResponse
	CreateExecute(r ParentalcontrolSubscribersiteAPICreateRequest) (*CreateParentalcontrolSubscribersiteResponse, *http.Response, error)
	/*
		Delete Delete a parentalcontrol:subscribersite object

		Deletes a specific parentalcontrol:subscribersite object by reference

		@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
		@param reference Reference of the parentalcontrol:subscribersite object
		@return ParentalcontrolSubscribersiteAPIDeleteRequest
	*/
	Delete(ctx context.Context, reference string) ParentalcontrolSubscribersiteAPIDeleteRequest

	// DeleteExecute executes the request
	DeleteExecute(r ParentalcontrolSubscribersiteAPIDeleteRequest) (*http.Response, error)
	/*
		List Retrieve parentalcontrol:subscribersite objects

		Returns a list of parentalcontrol:subscribersite objects matching the search criteria

		@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
		@return ParentalcontrolSubscribersiteAPIListRequest
	*/
	List(ctx context.Context) ParentalcontrolSubscribersiteAPIListRequest

	// ListExecute executes the request
	//  @return ListParentalcontrolSubscribersiteResponse
	ListExecute(r ParentalcontrolSubscribersiteAPIListRequest) (*ListParentalcontrolSubscribersiteResponse, *http.Response, error)
	/*
		Read Get a specific parentalcontrol:subscribersite object

		Returns a specific parentalcontrol:subscribersite object by reference

		@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
		@param reference Reference of the parentalcontrol:subscribersite object
		@return ParentalcontrolSubscribersiteAPIReadRequest
	*/
	Read(ctx context.Context, reference string) ParentalcontrolSubscribersiteAPIReadRequest

	// ReadExecute executes the request
	//  @return GetParentalcontrolSubscribersiteResponse
	ReadExecute(r ParentalcontrolSubscribersiteAPIReadRequest) (*GetParentalcontrolSubscribersiteResponse, *http.Response, error)
	/*
		Update Update a parentalcontrol:subscribersite object

		Updates a specific parentalcontrol:subscribersite object by reference

		@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
		@param reference Reference of the parentalcontrol:subscribersite object
		@return ParentalcontrolSubscribersiteAPIUpdateRequest
	*/
	Update(ctx context.Context, reference string) ParentalcontrolSubscribersiteAPIUpdateRequest

	// UpdateExecute executes the request
	//  @return UpdateParentalcontrolSubscribersiteResponse
	UpdateExecute(r ParentalcontrolSubscribersiteAPIUpdateRequest) (*UpdateParentalcontrolSubscribersiteResponse, *http.Response, error)
}

// ParentalcontrolSubscribersiteAPIService ParentalcontrolSubscribersiteAPI service
type ParentalcontrolSubscribersiteAPIService internal.Service

type ParentalcontrolSubscribersiteAPICreateRequest struct {
	ctx                           context.Context
	ApiService                    ParentalcontrolSubscribersiteAPI
	parentalcontrolSubscribersite *ParentalcontrolSubscribersite
	returnFields                  *string
	returnFieldsPlus              *string
	returnAsObject                *int32
}

// Object data to create
func (r ParentalcontrolSubscribersiteAPICreateRequest) ParentalcontrolSubscribersite(parentalcontrolSubscribersite ParentalcontrolSubscribersite) ParentalcontrolSubscribersiteAPICreateRequest {
	r.parentalcontrolSubscribersite = &parentalcontrolSubscribersite
	return r
}

// Enter the field names followed by comma
func (r ParentalcontrolSubscribersiteAPICreateRequest) ReturnFields(returnFields string) ParentalcontrolSubscribersiteAPICreateRequest {
	r.returnFields = &returnFields
	return r
}

// Enter the field names followed by comma, this returns the required fields along with the default fields
func (r ParentalcontrolSubscribersiteAPICreateRequest) ReturnFieldsPlus(returnFieldsPlus string) ParentalcontrolSubscribersiteAPICreateRequest {
	r.returnFieldsPlus = &returnFieldsPlus
	return r
}

// Select 1 if result is required as an object
func (r ParentalcontrolSubscribersiteAPICreateRequest) ReturnAsObject(returnAsObject int32) ParentalcontrolSubscribersiteAPICreateRequest {
	r.returnAsObject = &returnAsObject
	return r
}

func (r ParentalcontrolSubscribersiteAPICreateRequest) Execute() (*CreateParentalcontrolSubscribersiteResponse, *http.Response, error) {
	return r.ApiService.CreateExecute(r)
}

/*
Create Create a parentalcontrol:subscribersite object

Creates a new parentalcontrol:subscribersite object

	@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	@return ParentalcontrolSubscribersiteAPICreateRequest
*/
func (a *ParentalcontrolSubscribersiteAPIService) Create(ctx context.Context) ParentalcontrolSubscribersiteAPICreateRequest {
	return ParentalcontrolSubscribersiteAPICreateRequest{
		ApiService: a,
		ctx:        ctx,
	}
}

// Execute executes the request
//
//	@return CreateParentalcontrolSubscribersiteResponse
func (a *ParentalcontrolSubscribersiteAPIService) CreateExecute(r ParentalcontrolSubscribersiteAPICreateRequest) (*CreateParentalcontrolSubscribersiteResponse, *http.Response, error) {
	var (
		localVarHTTPMethod  = http.MethodPost
		localVarPostBody    interface{}
		formFiles           []internal.FormFile
		localVarReturnValue *CreateParentalcontrolSubscribersiteResponse
	)

	localBasePath, err := a.Client.Cfg.ServerURLWithContext(r.ctx, "ParentalcontrolSubscribersiteAPIService.Create")
	if err != nil {
		return localVarReturnValue, nil, internal.NewGenericOpenAPIError(err.Error())
	}

	localVarPath := localBasePath + "/parentalcontrol:subscribersite"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}
	if r.parentalcontrolSubscribersite == nil {
		return localVarReturnValue, nil, internal.ReportError("parentalcontrolSubscribersite is required and must be specified")
	}

	if r.returnFields != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields", r.returnFields, "form", "")
	}
	if r.returnFieldsPlus != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields+", r.returnFieldsPlus, "form", "")
	}
	if r.returnAsObject != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_as_object", r.returnAsObject, "form", "")
	}
	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := internal.SelectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := internal.SelectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	if len(a.Client.Cfg.DefaultExtAttrs) > 0 && r.parentalcontrolSubscribersite != nil {
		if r.parentalcontrolSubscribersite.ExtAttrs == nil {
			r.parentalcontrolSubscribersite.ExtAttrs = &map[string]ExtAttrs{}
		}
		for k, v := range a.Client.Cfg.DefaultExtAttrs {
			if _, ok := (*r.parentalcontrolSubscribersite.ExtAttrs)[k]; !ok {
				(*r.parentalcontrolSubscribersite.ExtAttrs)[k] = ExtAttrs{
					Value: v.Value,
				}
			}
		}
	}
	// body params
	localVarPostBody = r.parentalcontrolSubscribersite
	req, err := a.Client.PrepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.Client.CallAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	localVarHTTPResponse.Body = io.NopCloser(bytes.NewBuffer(localVarBody))
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := internal.NewGenericOpenAPIErrorWithBody(localVarHTTPResponse.Status, localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.Client.Decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := internal.NewGenericOpenAPIErrorWithBody(err.Error(), localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}
	return localVarReturnValue, localVarHTTPResponse, nil
}

type ParentalcontrolSubscribersiteAPIDeleteRequest struct {
	ctx        context.Context
	ApiService ParentalcontrolSubscribersiteAPI
	reference  string
}

func (r ParentalcontrolSubscribersiteAPIDeleteRequest) Execute() (*http.Response, error) {
	return r.ApiService.DeleteExecute(r)
}

/*
Delete Delete a parentalcontrol:subscribersite object

Deletes a specific parentalcontrol:subscribersite object by reference

	@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	@param reference Reference of the parentalcontrol:subscribersite object
	@return ParentalcontrolSubscribersiteAPIDeleteRequest
*/
func (a *ParentalcontrolSubscribersiteAPIService) Delete(ctx context.Context, reference string) ParentalcontrolSubscribersiteAPIDeleteRequest {
	return ParentalcontrolSubscribersiteAPIDeleteRequest{
		ApiService: a,
		ctx:        ctx,
		reference:  reference,
	}
}

// Execute executes the request
func (a *ParentalcontrolSubscribersiteAPIService) DeleteExecute(r ParentalcontrolSubscribersiteAPIDeleteRequest) (*http.Response, error) {
	var (
		localVarHTTPMethod = http.MethodDelete
		localVarPostBody   interface{}
		formFiles          []internal.FormFile
	)

	localBasePath, err := a.Client.Cfg.ServerURLWithContext(r.ctx, "ParentalcontrolSubscribersiteAPIService.Delete")
	if err != nil {
		return nil, internal.NewGenericOpenAPIError(err.Error())
	}

	localVarPath := localBasePath + "/parentalcontrol:subscribersite/{reference}"
	localVarPath = strings.Replace(localVarPath, "{"+"reference"+"}", url.PathEscape(internal.ParameterValueToString(r.reference, "reference")), -1)

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{}

	// set Content-Type header
	localVarHTTPContentType := internal.SelectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{}

	// set Accept header
	localVarHTTPHeaderAccept := internal.SelectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	req, err := a.Client.PrepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
	if err != nil {
		return nil, err
	}

	localVarHTTPResponse, err := a.Client.CallAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarHTTPResponse, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	localVarHTTPResponse.Body = io.NopCloser(bytes.NewBuffer(localVarBody))
	if err != nil {
		return localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := internal.NewGenericOpenAPIErrorWithBody(localVarHTTPResponse.Status, localVarBody)
		return localVarHTTPResponse, newErr
	}

	return localVarHTTPResponse, nil
}

type ParentalcontrolSubscribersiteAPIListRequest struct {
	ctx              context.Context
	ApiService       ParentalcontrolSubscribersiteAPI
	returnFields     *string
	returnFieldsPlus *string
	maxResults       *int32
	returnAsObject   *int32
	paging           *int32
	pageId           *string
	filters          *map[string]interface{}
	extattrfilter    *map[string]interface{}
}

// Enter the field names followed by comma
func (r ParentalcontrolSubscribersiteAPIListRequest) ReturnFields(returnFields string) ParentalcontrolSubscribersiteAPIListRequest {
	r.returnFields = &returnFields
	return r
}

// Enter the field names followed by comma, this returns the required fields along with the default fields
func (r ParentalcontrolSubscribersiteAPIListRequest) ReturnFieldsPlus(returnFieldsPlus string) ParentalcontrolSubscribersiteAPIListRequest {
	r.returnFieldsPlus = &returnFieldsPlus
	return r
}

// Enter the number of results to be fetched
func (r ParentalcontrolSubscribersiteAPIListRequest) MaxResults(maxResults int32) ParentalcontrolSubscribersiteAPIListRequest {
	r.maxResults = &maxResults
	return r
}

// Select 1 if result is required as an object
func (r ParentalcontrolSubscribersiteAPIListRequest) ReturnAsObject(returnAsObject int32) ParentalcontrolSubscribersiteAPIListRequest {
	r.returnAsObject = &returnAsObject
	return r
}

// Control paging of results
func (r ParentalcontrolSubscribersiteAPIListRequest) Paging(paging int32) ParentalcontrolSubscribersiteAPIListRequest {
	r.paging = &paging
	return r
}

// Page id for retrieving next page of results
func (r ParentalcontrolSubscribersiteAPIListRequest) PageId(pageId string) ParentalcontrolSubscribersiteAPIListRequest {
	r.pageId = &pageId
	return r
}

func (r ParentalcontrolSubscribersiteAPIListRequest) Filters(filters map[string]interface{}) ParentalcontrolSubscribersiteAPIListRequest {
	r.filters = &filters
	return r
}

func (r ParentalcontrolSubscribersiteAPIListRequest) Extattrfilter(extattrfilter map[string]interface{}) ParentalcontrolSubscribersiteAPIListRequest {
	r.extattrfilter = &extattrfilter
	return r
}

func (r ParentalcontrolSubscribersiteAPIListRequest) Execute() (*ListParentalcontrolSubscribersiteResponse, *http.Response, error) {
	return r.ApiService.ListExecute(r)
}

/*
List Retrieve parentalcontrol:subscribersite objects

Returns a list of parentalcontrol:subscribersite objects matching the search criteria

	@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	@return ParentalcontrolSubscribersiteAPIListRequest
*/
func (a *ParentalcontrolSubscribersiteAPIService) List(ctx context.Context) ParentalcontrolSubscribersiteAPIListRequest {
	return ParentalcontrolSubscribersiteAPIListRequest{
		ApiService: a,
		ctx:        ctx,
	}
}

// Execute executes the request
//
//	@return ListParentalcontrolSubscribersiteResponse
func (a *ParentalcontrolSubscribersiteAPIService) ListExecute(r ParentalcontrolSubscribersiteAPIListRequest) (*ListParentalcontrolSubscribersiteResponse, *http.Response, error) {
	var (
		localVarHTTPMethod  = http.MethodGet
		localVarPostBody    interface{}
		formFiles           []internal.FormFile
		localVarReturnValue *ListParentalcontrolSubscribersiteResponse
	)

	localBasePath, err := a.Client.Cfg.ServerURLWithContext(r.ctx, "ParentalcontrolSubscribersiteAPIService.List")
	if err != nil {
		return localVarReturnValue, nil, internal.NewGenericOpenAPIError(err.Error())
	}

	localVarPath := localBasePath + "/parentalcontrol:subscribersite"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}

	if r.returnFields != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields", r.returnFields, "form", "")
	}
	if r.returnFieldsPlus != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields+", r.returnFieldsPlus, "form", "")
	}
	if r.maxResults != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_max_results", r.maxResults, "form", "")
	}
	if r.returnAsObject != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_as_object", r.returnAsObject, "form", "")
	}
	if r.paging != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_paging", r.paging, "form", "")
	}
	if r.pageId != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_page_id", r.pageId, "form", "")
	}
	if r.filters != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "filters", r.filters, "form", "")
	}
	if r.extattrfilter != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "extattrfilter", r.extattrfilter, "form", "")
	}
	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{}

	// set Content-Type header
	localVarHTTPContentType := internal.SelectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := internal.SelectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	req, err := a.Client.PrepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.Client.CallAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	localVarHTTPResponse.Body = io.NopCloser(bytes.NewBuffer(localVarBody))
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := internal.NewGenericOpenAPIErrorWithBody(localVarHTTPResponse.Status, localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.Client.Decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := internal.NewGenericOpenAPIErrorWithBody(err.Error(), localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}
	return localVarReturnValue, localVarHTTPResponse, nil
}

type ParentalcontrolSubscribersiteAPIReadRequest struct {
	ctx              context.Context
	ApiService       ParentalcontrolSubscribersiteAPI
	reference        string
	returnFields     *string
	returnFieldsPlus *string
	returnAsObject   *int32
}

// Enter the field names followed by comma
func (r ParentalcontrolSubscribersiteAPIReadRequest) ReturnFields(returnFields string) ParentalcontrolSubscribersiteAPIReadRequest {
	r.returnFields = &returnFields
	return r
}

// Enter the field names followed by comma, this returns the required fields along with the default fields
func (r ParentalcontrolSubscribersiteAPIReadRequest) ReturnFieldsPlus(returnFieldsPlus string) ParentalcontrolSubscribersiteAPIReadRequest {
	r.returnFieldsPlus = &returnFieldsPlus
	return r
}

// Select 1 if result is required as an object
func (r ParentalcontrolSubscribersiteAPIReadRequest) ReturnAsObject(returnAsObject int32) ParentalcontrolSubscribersiteAPIReadRequest {
	r.returnAsObject = &returnAsObject
	return r
}

func (r ParentalcontrolSubscribersiteAPIReadRequest) Execute() (*GetParentalcontrolSubscribersiteResponse, *http.Response, error) {
	return r.ApiService.ReadExecute(r)
}

/*
Read Get a specific parentalcontrol:subscribersite object

Returns a specific parentalcontrol:subscribersite object by reference

	@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	@param reference Reference of the parentalcontrol:subscribersite object
	@return ParentalcontrolSubscribersiteAPIReadRequest
*/
func (a *ParentalcontrolSubscribersiteAPIService) Read(ctx context.Context, reference string) ParentalcontrolSubscribersiteAPIReadRequest {
	return ParentalcontrolSubscribersiteAPIReadRequest{
		ApiService: a,
		ctx:        ctx,
		reference:  reference,
	}
}

// Execute executes the request
//
//	@return GetParentalcontrolSubscribersiteResponse
func (a *ParentalcontrolSubscribersiteAPIService) ReadExecute(r ParentalcontrolSubscribersiteAPIReadRequest) (*GetParentalcontrolSubscribersiteResponse, *http.Response, error) {
	var (
		localVarHTTPMethod  = http.MethodGet
		localVarPostBody    interface{}
		formFiles           []internal.FormFile
		localVarReturnValue *GetParentalcontrolSubscribersiteResponse
	)

	localBasePath, err := a.Client.Cfg.ServerURLWithContext(r.ctx, "ParentalcontrolSubscribersiteAPIService.Read")
	if err != nil {
		return localVarReturnValue, nil, internal.NewGenericOpenAPIError(err.Error())
	}

	localVarPath := localBasePath + "/parentalcontrol:subscribersite/{reference}"
	localVarPath = strings.Replace(localVarPath, "{"+"reference"+"}", url.PathEscape(internal.ParameterValueToString(r.reference, "reference")), -1)

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}

	if r.returnFields != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields", r.returnFields, "form", "")
	}
	if r.returnFieldsPlus != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields+", r.returnFieldsPlus, "form", "")
	}
	if r.returnAsObject != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_as_object", r.returnAsObject, "form", "")
	}
	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{}

	// set Content-Type header
	localVarHTTPContentType := internal.SelectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := internal.SelectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	req, err := a.Client.PrepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.Client.CallAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	localVarHTTPResponse.Body = io.NopCloser(bytes.NewBuffer(localVarBody))
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := internal.NewGenericOpenAPIErrorWithBody(localVarHTTPResponse.Status, localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.Client.Decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := internal.NewGenericOpenAPIErrorWithBody(err.Error(), localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}
	return localVarReturnValue, localVarHTTPResponse, nil
}

type ParentalcontrolSubscribersiteAPIUpdateRequest struct {
	ctx                           context.Context
	ApiService                    ParentalcontrolSubscribersiteAPI
	reference                     string
	parentalcontrolSubscribersite *ParentalcontrolSubscribersite
	returnFields                  *string
	returnFieldsPlus              *string
	returnAsObject                *int32
}

// Object data to update
func (r ParentalcontrolSubscribersiteAPIUpdateRequest) ParentalcontrolSubscribersite(parentalcontrolSubscribersite ParentalcontrolSubscribersite) ParentalcontrolSubscribersiteAPIUpdateRequest {
	r.parentalcontrolSubscribersite = &parentalcontrolSubscribersite
	return r
}

// Enter the field names followed by comma
func (r ParentalcontrolSubscribersiteAPIUpdateRequest) ReturnFields(returnFields string) ParentalcontrolSubscribersiteAPIUpdateRequest {
	r.returnFields = &returnFields
	return r
}

// Enter the field names followed by comma, this returns the required fields along with the default fields
func (r ParentalcontrolSubscribersiteAPIUpdateRequest) ReturnFieldsPlus(returnFieldsPlus string) ParentalcontrolSubscribersiteAPIUpdateRequest {
	r.returnFieldsPlus = &returnFieldsPlus
	return r
}

// Select 1 if result is required as an object
func (r ParentalcontrolSubscribersiteAPIUpdateRequest) ReturnAsObject(returnAsObject int32) ParentalcontrolSubscribersiteAPIUpdateRequest {
	r.returnAsObject = &returnAsObject
	return r
}

func (r ParentalcontrolSubscribersiteAPIUpdateRequest) Execute() (*UpdateParentalcontrolSubscribersiteResponse, *http.Response, error) {
	return r.ApiService.UpdateExecute(r)
}

/*
Update Update a parentalcontrol:subscribersite object

Updates a specific parentalcontrol:subscribersite object by reference

	@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	@param reference Reference of the parentalcontrol:subscribersite object
	@return ParentalcontrolSubscribersiteAPIUpdateRequest
*/
func (a *ParentalcontrolSubscribersiteAPIService) Update(ctx context.Context, reference string) ParentalcontrolSubscribersiteAPIUpdateRequest {
	return ParentalcontrolSubscribersiteAPIUpdateRequest{
		ApiService: a,
		ctx:        ctx,
		reference:  reference,
	}
}

// Execute executes the request
//
//	@return UpdateParentalcontrolSubscribersiteResponse
func (a *ParentalcontrolSubscribersiteAPIService) UpdateExecute(r ParentalcontrolSubscribersiteAPIUpdateRequest) (*UpdateParentalcontrolSubscribersiteResponse, *http.Response, error) {
	var (
		localVarHTTPMethod  = http.MethodPut
		localVarPostBody    interface{}
		formFiles           []internal.FormFile
		localVarReturnValue *UpdateParentalcontrolSubscribersiteResponse
	)

	localBasePath, err := a.Client.Cfg.ServerURLWithContext(r.ctx, "ParentalcontrolSubscribersiteAPIService.Update")
	if err != nil {
		return localVarReturnValue, nil, internal.NewGenericOpenAPIError(err.Error())
	}

	localVarPath := localBasePath + "/parentalcontrol:subscribersite/{reference}"
	localVarPath = strings.Replace(localVarPath, "{"+"reference"+"}", url.PathEscape(internal.ParameterValueToString(r.reference, "reference")), -1)

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}
	if r.parentalcontrolSubscribersite == nil {
		return localVarReturnValue, nil, internal.ReportError("parentalcontrolSubscribersite is required and must be specified")
	}

	if r.returnFields != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields", r.returnFields, "form", "")
	}
	if r.returnFieldsPlus != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields+", r.returnFieldsPlus, "form", "")
	}
	if r.returnAsObject != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_as_object", r.returnAsObject, "form", "")
	}
	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := internal.SelectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := internal.SelectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	if len(a.Client.Cfg.DefaultExtAttrs) > 0 && r.parentalcontrolSubscribersite != nil {
		if r.parentalcontrolSubscribersite.ExtAttrs == nil {
			r.parentalcontrolSubscribersite.ExtAttrs = &map[string]ExtAttrs{}
		}
		for k, v := range a.Client.Cfg.DefaultExtAttrs {
			if _, ok := (*r.parentalcontrolSubscribersite.ExtAttrs)[k]; !ok {
				(*r.parentalcontrolSubscribersite.ExtAttrs)[k] = ExtAttrs{
					Value: v.Value,
				}
			}
		}
	}
	// body params
	localVarPostBody = r.parentalcontrolSubscribersite
	req, err := a.Client.PrepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.Client.CallAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	localVarHTTPResponse.Body = io.NopCloser(bytes.NewBuffer(localVarBody))
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := internal.NewGenericOpenAPIErrorWithBody(localVarHTTPResponse.Status, localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.Client.Decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := internal.NewGenericOpenAPIErrorWithBody(err.Error(), localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}
	return localVarReturnValue, localVarHTTPResponse, nil
}
