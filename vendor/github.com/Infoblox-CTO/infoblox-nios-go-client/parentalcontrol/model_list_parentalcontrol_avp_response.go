/*
Infoblox PARENTALCONTROL API

OpenAPI specification for Infoblox NIOS WAPI PARENTALCONTROL objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package parentalcontrol

import (
	"encoding/json"
	"fmt"
)

// ListParentalcontrolAvpResponse - struct for ListParentalcontrolAvpResponse
type ListParentalcontrolAvpResponse struct {
	ListParentalcontrolAvpResponseObject *ListParentalcontrolAvpResponseObject
	ArrayOfParentalcontrolAvp            *[]ParentalcontrolAvp
}

// ListParentalcontrolAvpResponseObjectAsListParentalcontrolAvpResponse is a convenience function that returns ListParentalcontrolAvpResponseObject wrapped in ListParentalcontrolAvpResponse
func ListParentalcontrolAvpResponseObjectAsListParentalcontrolAvpResponse(v *ListParentalcontrolAvpResponseObject) ListParentalcontrolAvpResponse {
	return ListParentalcontrolAvpResponse{
		ListParentalcontrolAvpResponseObject: v,
	}
}

// []ParentalcontrolAvpAsListParentalcontrolAvpResponse is a convenience function that returns []ParentalcontrolAvp wrapped in ListParentalcontrolAvpResponse
func ArrayOfParentalcontrolAvpAsListParentalcontrolAvpResponse(v *[]ParentalcontrolAvp) ListParentalcontrolAvpResponse {
	return ListParentalcontrolAvpResponse{
		ArrayOfParentalcontrolAvp: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListParentalcontrolAvpResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListParentalcontrolAvpResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListParentalcontrolAvpResponseObject)
	if err == nil {
		jsonListParentalcontrolAvpResponseObject, _ := json.Marshal(dst.ListParentalcontrolAvpResponseObject)
		if string(jsonListParentalcontrolAvpResponseObject) == "{}" { // empty struct
			dst.ListParentalcontrolAvpResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListParentalcontrolAvpResponseObject = nil
	}

	// try to unmarshal data into ArrayOfParentalcontrolAvp
	err = newStrictDecoder(data).Decode(&dst.ArrayOfParentalcontrolAvp)
	if err == nil {
		jsonArrayOfParentalcontrolAvp, _ := json.Marshal(dst.ArrayOfParentalcontrolAvp)
		if string(jsonArrayOfParentalcontrolAvp) == "{}" { // empty struct
			dst.ArrayOfParentalcontrolAvp = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfParentalcontrolAvp = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListParentalcontrolAvpResponseObject = nil
		dst.ArrayOfParentalcontrolAvp = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListParentalcontrolAvpResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListParentalcontrolAvpResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListParentalcontrolAvpResponse) MarshalJSON() ([]byte, error) {
	if src.ListParentalcontrolAvpResponseObject != nil {
		return json.Marshal(&src.ListParentalcontrolAvpResponseObject)
	}

	if src.ArrayOfParentalcontrolAvp != nil {
		return json.Marshal(&src.ArrayOfParentalcontrolAvp)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListParentalcontrolAvpResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListParentalcontrolAvpResponseObject != nil {
		return obj.ListParentalcontrolAvpResponseObject
	}

	if obj.ArrayOfParentalcontrolAvp != nil {
		return obj.ArrayOfParentalcontrolAvp
	}

	// all schemas are nil
	return nil
}

type NullableListParentalcontrolAvpResponse struct {
	value *ListParentalcontrolAvpResponse
	isSet bool
}

func (v NullableListParentalcontrolAvpResponse) Get() *ListParentalcontrolAvpResponse {
	return v.value
}

func (v *NullableListParentalcontrolAvpResponse) Set(val *ListParentalcontrolAvpResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListParentalcontrolAvpResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListParentalcontrolAvpResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListParentalcontrolAvpResponse(val *ListParentalcontrolAvpResponse) *NullableListParentalcontrolAvpResponse {
	return &NullableListParentalcontrolAvpResponse{value: val, isSet: true}
}

func (v NullableListParentalcontrolAvpResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListParentalcontrolAvpResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
