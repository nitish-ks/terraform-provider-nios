/*
Infoblox PARENTALCONTROL API

OpenAPI specification for Infoblox NIOS WAPI PARENTALCONTROL objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package parentalcontrol

import (
	"encoding/json"
	"fmt"
)

// ListParentalcontrolSubscriberResponse - struct for ListParentalcontrolSubscriberResponse
type ListParentalcontrolSubscriberResponse struct {
	ListParentalcontrolSubscriberResponseObject *ListParentalcontrolSubscriberResponseObject
	ArrayOfParentalcontrolSubscriber            *[]ParentalcontrolSubscriber
}

// ListParentalcontrolSubscriberResponseObjectAsListParentalcontrolSubscriberResponse is a convenience function that returns ListParentalcontrolSubscriberResponseObject wrapped in ListParentalcontrolSubscriberResponse
func ListParentalcontrolSubscriberResponseObjectAsListParentalcontrolSubscriberResponse(v *ListParentalcontrolSubscriberResponseObject) ListParentalcontrolSubscriberResponse {
	return ListParentalcontrolSubscriberResponse{
		ListParentalcontrolSubscriberResponseObject: v,
	}
}

// []ParentalcontrolSubscriberAsListParentalcontrolSubscriberResponse is a convenience function that returns []ParentalcontrolSubscriber wrapped in ListParentalcontrolSubscriberResponse
func ArrayOfParentalcontrolSubscriberAsListParentalcontrolSubscriberResponse(v *[]ParentalcontrolSubscriber) ListParentalcontrolSubscriberResponse {
	return ListParentalcontrolSubscriberResponse{
		ArrayOfParentalcontrolSubscriber: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListParentalcontrolSubscriberResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListParentalcontrolSubscriberResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListParentalcontrolSubscriberResponseObject)
	if err == nil {
		jsonListParentalcontrolSubscriberResponseObject, _ := json.Marshal(dst.ListParentalcontrolSubscriberResponseObject)
		if string(jsonListParentalcontrolSubscriberResponseObject) == "{}" { // empty struct
			dst.ListParentalcontrolSubscriberResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListParentalcontrolSubscriberResponseObject = nil
	}

	// try to unmarshal data into ArrayOfParentalcontrolSubscriber
	err = newStrictDecoder(data).Decode(&dst.ArrayOfParentalcontrolSubscriber)
	if err == nil {
		jsonArrayOfParentalcontrolSubscriber, _ := json.Marshal(dst.ArrayOfParentalcontrolSubscriber)
		if string(jsonArrayOfParentalcontrolSubscriber) == "{}" { // empty struct
			dst.ArrayOfParentalcontrolSubscriber = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfParentalcontrolSubscriber = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListParentalcontrolSubscriberResponseObject = nil
		dst.ArrayOfParentalcontrolSubscriber = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListParentalcontrolSubscriberResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListParentalcontrolSubscriberResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListParentalcontrolSubscriberResponse) MarshalJSON() ([]byte, error) {
	if src.ListParentalcontrolSubscriberResponseObject != nil {
		return json.Marshal(&src.ListParentalcontrolSubscriberResponseObject)
	}

	if src.ArrayOfParentalcontrolSubscriber != nil {
		return json.Marshal(&src.ArrayOfParentalcontrolSubscriber)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListParentalcontrolSubscriberResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListParentalcontrolSubscriberResponseObject != nil {
		return obj.ListParentalcontrolSubscriberResponseObject
	}

	if obj.ArrayOfParentalcontrolSubscriber != nil {
		return obj.ArrayOfParentalcontrolSubscriber
	}

	// all schemas are nil
	return nil
}

type NullableListParentalcontrolSubscriberResponse struct {
	value *ListParentalcontrolSubscriberResponse
	isSet bool
}

func (v NullableListParentalcontrolSubscriberResponse) Get() *ListParentalcontrolSubscriberResponse {
	return v.value
}

func (v *NullableListParentalcontrolSubscriberResponse) Set(val *ListParentalcontrolSubscriberResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListParentalcontrolSubscriberResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListParentalcontrolSubscriberResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListParentalcontrolSubscriberResponse(val *ListParentalcontrolSubscriberResponse) *NullableListParentalcontrolSubscriberResponse {
	return &NullableListParentalcontrolSubscriberResponse{value: val, isSet: true}
}

func (v NullableListParentalcontrolSubscriberResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListParentalcontrolSubscriberResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
