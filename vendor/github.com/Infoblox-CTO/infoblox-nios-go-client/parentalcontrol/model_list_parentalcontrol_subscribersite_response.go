/*
Infoblox PARENTALCONTROL API

OpenAPI specification for Infoblox NIOS WAPI PARENTALCONTROL objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package parentalcontrol

import (
	"encoding/json"
	"fmt"
)

// ListParentalcontrolSubscribersiteResponse - struct for ListParentalcontrolSubscribersiteResponse
type ListParentalcontrolSubscribersiteResponse struct {
	ListParentalcontrolSubscribersiteResponseObject *ListParentalcontrolSubscribersiteResponseObject
	ArrayOfParentalcontrolSubscribersite            *[]ParentalcontrolSubscribersite
}

// ListParentalcontrolSubscribersiteResponseObjectAsListParentalcontrolSubscribersiteResponse is a convenience function that returns ListParentalcontrolSubscribersiteResponseObject wrapped in ListParentalcontrolSubscribersiteResponse
func ListParentalcontrolSubscribersiteResponseObjectAsListParentalcontrolSubscribersiteResponse(v *ListParentalcontrolSubscribersiteResponseObject) ListParentalcontrolSubscribersiteResponse {
	return ListParentalcontrolSubscribersiteResponse{
		ListParentalcontrolSubscribersiteResponseObject: v,
	}
}

// []ParentalcontrolSubscribersiteAsListParentalcontrolSubscribersiteResponse is a convenience function that returns []ParentalcontrolSubscribersite wrapped in ListParentalcontrolSubscribersiteResponse
func ArrayOfParentalcontrolSubscribersiteAsListParentalcontrolSubscribersiteResponse(v *[]ParentalcontrolSubscribersite) ListParentalcontrolSubscribersiteResponse {
	return ListParentalcontrolSubscribersiteResponse{
		ArrayOfParentalcontrolSubscribersite: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListParentalcontrolSubscribersiteResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListParentalcontrolSubscribersiteResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListParentalcontrolSubscribersiteResponseObject)
	if err == nil {
		jsonListParentalcontrolSubscribersiteResponseObject, _ := json.Marshal(dst.ListParentalcontrolSubscribersiteResponseObject)
		if string(jsonListParentalcontrolSubscribersiteResponseObject) == "{}" { // empty struct
			dst.ListParentalcontrolSubscribersiteResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListParentalcontrolSubscribersiteResponseObject = nil
	}

	// try to unmarshal data into ArrayOfParentalcontrolSubscribersite
	err = newStrictDecoder(data).Decode(&dst.ArrayOfParentalcontrolSubscribersite)
	if err == nil {
		jsonArrayOfParentalcontrolSubscribersite, _ := json.Marshal(dst.ArrayOfParentalcontrolSubscribersite)
		if string(jsonArrayOfParentalcontrolSubscribersite) == "{}" { // empty struct
			dst.ArrayOfParentalcontrolSubscribersite = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfParentalcontrolSubscribersite = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListParentalcontrolSubscribersiteResponseObject = nil
		dst.ArrayOfParentalcontrolSubscribersite = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListParentalcontrolSubscribersiteResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListParentalcontrolSubscribersiteResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListParentalcontrolSubscribersiteResponse) MarshalJSON() ([]byte, error) {
	if src.ListParentalcontrolSubscribersiteResponseObject != nil {
		return json.Marshal(&src.ListParentalcontrolSubscribersiteResponseObject)
	}

	if src.ArrayOfParentalcontrolSubscribersite != nil {
		return json.Marshal(&src.ArrayOfParentalcontrolSubscribersite)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListParentalcontrolSubscribersiteResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListParentalcontrolSubscribersiteResponseObject != nil {
		return obj.ListParentalcontrolSubscribersiteResponseObject
	}

	if obj.ArrayOfParentalcontrolSubscribersite != nil {
		return obj.ArrayOfParentalcontrolSubscribersite
	}

	// all schemas are nil
	return nil
}

type NullableListParentalcontrolSubscribersiteResponse struct {
	value *ListParentalcontrolSubscribersiteResponse
	isSet bool
}

func (v NullableListParentalcontrolSubscribersiteResponse) Get() *ListParentalcontrolSubscribersiteResponse {
	return v.value
}

func (v *NullableListParentalcontrolSubscribersiteResponse) Set(val *ListParentalcontrolSubscribersiteResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListParentalcontrolSubscribersiteResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListParentalcontrolSubscribersiteResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListParentalcontrolSubscribersiteResponse(val *ListParentalcontrolSubscribersiteResponse) *NullableListParentalcontrolSubscribersiteResponse {
	return &NullableListParentalcontrolSubscribersiteResponse{value: val, isSet: true}
}

func (v NullableListParentalcontrolSubscribersiteResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListParentalcontrolSubscribersiteResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
