/*
Infoblox PARENTALCONTROL API

OpenAPI specification for Infoblox NIOS WAPI PARENTALCONTROL objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package parentalcontrol

import (
	"encoding/json"
)

// checks if the ParentalcontrolSubscribersiteAbss type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParentalcontrolSubscribersiteAbss{}

// ParentalcontrolSubscribersiteAbss struct for ParentalcontrolSubscribersiteAbss
type ParentalcontrolSubscribersiteAbss struct {
	// The IP address of addional blocking server.
	IpAddress *string `json:"ip_address,omitempty"`
	// The blocking policy for the addional blocking server.
	BlockingPolicy       *string `json:"blocking_policy,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ParentalcontrolSubscribersiteAbss ParentalcontrolSubscribersiteAbss

// NewParentalcontrolSubscribersiteAbss instantiates a new ParentalcontrolSubscribersiteAbss object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParentalcontrolSubscribersiteAbss() *ParentalcontrolSubscribersiteAbss {
	this := ParentalcontrolSubscribersiteAbss{}
	return &this
}

// NewParentalcontrolSubscribersiteAbssWithDefaults instantiates a new ParentalcontrolSubscribersiteAbss object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParentalcontrolSubscribersiteAbssWithDefaults() *ParentalcontrolSubscribersiteAbss {
	this := ParentalcontrolSubscribersiteAbss{}
	return &this
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *ParentalcontrolSubscribersiteAbss) GetIpAddress() string {
	if o == nil || IsNil(o.IpAddress) {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParentalcontrolSubscribersiteAbss) GetIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.IpAddress) {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *ParentalcontrolSubscribersiteAbss) HasIpAddress() bool {
	if o != nil && !IsNil(o.IpAddress) {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *ParentalcontrolSubscribersiteAbss) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetBlockingPolicy returns the BlockingPolicy field value if set, zero value otherwise.
func (o *ParentalcontrolSubscribersiteAbss) GetBlockingPolicy() string {
	if o == nil || IsNil(o.BlockingPolicy) {
		var ret string
		return ret
	}
	return *o.BlockingPolicy
}

// GetBlockingPolicyOk returns a tuple with the BlockingPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParentalcontrolSubscribersiteAbss) GetBlockingPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.BlockingPolicy) {
		return nil, false
	}
	return o.BlockingPolicy, true
}

// HasBlockingPolicy returns a boolean if a field has been set.
func (o *ParentalcontrolSubscribersiteAbss) HasBlockingPolicy() bool {
	if o != nil && !IsNil(o.BlockingPolicy) {
		return true
	}

	return false
}

// SetBlockingPolicy gets a reference to the given string and assigns it to the BlockingPolicy field.
func (o *ParentalcontrolSubscribersiteAbss) SetBlockingPolicy(v string) {
	o.BlockingPolicy = &v
}

func (o ParentalcontrolSubscribersiteAbss) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParentalcontrolSubscribersiteAbss) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IpAddress) {
		toSerialize["ip_address"] = o.IpAddress
	}
	if !IsNil(o.BlockingPolicy) {
		toSerialize["blocking_policy"] = o.BlockingPolicy
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ParentalcontrolSubscribersiteAbss) UnmarshalJSON(data []byte) (err error) {
	varParentalcontrolSubscribersiteAbss := _ParentalcontrolSubscribersiteAbss{}

	err = json.Unmarshal(data, &varParentalcontrolSubscribersiteAbss)

	if err != nil {
		return err
	}

	*o = ParentalcontrolSubscribersiteAbss(varParentalcontrolSubscribersiteAbss)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ip_address")
		delete(additionalProperties, "blocking_policy")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableParentalcontrolSubscribersiteAbss struct {
	value *ParentalcontrolSubscribersiteAbss
	isSet bool
}

func (v NullableParentalcontrolSubscribersiteAbss) Get() *ParentalcontrolSubscribersiteAbss {
	return v.value
}

func (v *NullableParentalcontrolSubscribersiteAbss) Set(val *ParentalcontrolSubscribersiteAbss) {
	v.value = val
	v.isSet = true
}

func (v NullableParentalcontrolSubscribersiteAbss) IsSet() bool {
	return v.isSet
}

func (v *NullableParentalcontrolSubscribersiteAbss) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParentalcontrolSubscribersiteAbss(val *ParentalcontrolSubscribersiteAbss) *NullableParentalcontrolSubscribersiteAbss {
	return &NullableParentalcontrolSubscribersiteAbss{value: val, isSet: true}
}

func (v NullableParentalcontrolSubscribersiteAbss) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParentalcontrolSubscribersiteAbss) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
