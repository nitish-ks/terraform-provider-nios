/*
Infoblox PARENTALCONTROL API

OpenAPI specification for Infoblox NIOS WAPI PARENTALCONTROL objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package parentalcontrol

import (
	"encoding/json"
)

// checks if the ParentalcontrolSubscribersiteNasGateways type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParentalcontrolSubscribersiteNasGateways{}

// ParentalcontrolSubscribersiteNasGateways struct for ParentalcontrolSubscribersiteNasGateways
type ParentalcontrolSubscribersiteNasGateways struct {
	// The name of NAS gateway.
	Name *string `json:"name,omitempty"`
	// The IP address of NAS gateway.
	IpAddress *string `json:"ip_address,omitempty"`
	// The protocol MD5 phrase.
	SharedSecret *string `json:"shared_secret,omitempty"`
	// Determines whether an acknowledge needs to be sent.
	SendAck *bool `json:"send_ack,omitempty"`
	// The message rate per server.
	MessageRate *int64 `json:"message_rate,omitempty"`
	// The human readable comment for NAS gateway.
	Comment              *string `json:"comment,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ParentalcontrolSubscribersiteNasGateways ParentalcontrolSubscribersiteNasGateways

// NewParentalcontrolSubscribersiteNasGateways instantiates a new ParentalcontrolSubscribersiteNasGateways object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParentalcontrolSubscribersiteNasGateways() *ParentalcontrolSubscribersiteNasGateways {
	this := ParentalcontrolSubscribersiteNasGateways{}
	return &this
}

// NewParentalcontrolSubscribersiteNasGatewaysWithDefaults instantiates a new ParentalcontrolSubscribersiteNasGateways object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParentalcontrolSubscribersiteNasGatewaysWithDefaults() *ParentalcontrolSubscribersiteNasGateways {
	this := ParentalcontrolSubscribersiteNasGateways{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ParentalcontrolSubscribersiteNasGateways) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParentalcontrolSubscribersiteNasGateways) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ParentalcontrolSubscribersiteNasGateways) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ParentalcontrolSubscribersiteNasGateways) SetName(v string) {
	o.Name = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *ParentalcontrolSubscribersiteNasGateways) GetIpAddress() string {
	if o == nil || IsNil(o.IpAddress) {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParentalcontrolSubscribersiteNasGateways) GetIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.IpAddress) {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *ParentalcontrolSubscribersiteNasGateways) HasIpAddress() bool {
	if o != nil && !IsNil(o.IpAddress) {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *ParentalcontrolSubscribersiteNasGateways) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetSharedSecret returns the SharedSecret field value if set, zero value otherwise.
func (o *ParentalcontrolSubscribersiteNasGateways) GetSharedSecret() string {
	if o == nil || IsNil(o.SharedSecret) {
		var ret string
		return ret
	}
	return *o.SharedSecret
}

// GetSharedSecretOk returns a tuple with the SharedSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParentalcontrolSubscribersiteNasGateways) GetSharedSecretOk() (*string, bool) {
	if o == nil || IsNil(o.SharedSecret) {
		return nil, false
	}
	return o.SharedSecret, true
}

// HasSharedSecret returns a boolean if a field has been set.
func (o *ParentalcontrolSubscribersiteNasGateways) HasSharedSecret() bool {
	if o != nil && !IsNil(o.SharedSecret) {
		return true
	}

	return false
}

// SetSharedSecret gets a reference to the given string and assigns it to the SharedSecret field.
func (o *ParentalcontrolSubscribersiteNasGateways) SetSharedSecret(v string) {
	o.SharedSecret = &v
}

// GetSendAck returns the SendAck field value if set, zero value otherwise.
func (o *ParentalcontrolSubscribersiteNasGateways) GetSendAck() bool {
	if o == nil || IsNil(o.SendAck) {
		var ret bool
		return ret
	}
	return *o.SendAck
}

// GetSendAckOk returns a tuple with the SendAck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParentalcontrolSubscribersiteNasGateways) GetSendAckOk() (*bool, bool) {
	if o == nil || IsNil(o.SendAck) {
		return nil, false
	}
	return o.SendAck, true
}

// HasSendAck returns a boolean if a field has been set.
func (o *ParentalcontrolSubscribersiteNasGateways) HasSendAck() bool {
	if o != nil && !IsNil(o.SendAck) {
		return true
	}

	return false
}

// SetSendAck gets a reference to the given bool and assigns it to the SendAck field.
func (o *ParentalcontrolSubscribersiteNasGateways) SetSendAck(v bool) {
	o.SendAck = &v
}

// GetMessageRate returns the MessageRate field value if set, zero value otherwise.
func (o *ParentalcontrolSubscribersiteNasGateways) GetMessageRate() int64 {
	if o == nil || IsNil(o.MessageRate) {
		var ret int64
		return ret
	}
	return *o.MessageRate
}

// GetMessageRateOk returns a tuple with the MessageRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParentalcontrolSubscribersiteNasGateways) GetMessageRateOk() (*int64, bool) {
	if o == nil || IsNil(o.MessageRate) {
		return nil, false
	}
	return o.MessageRate, true
}

// HasMessageRate returns a boolean if a field has been set.
func (o *ParentalcontrolSubscribersiteNasGateways) HasMessageRate() bool {
	if o != nil && !IsNil(o.MessageRate) {
		return true
	}

	return false
}

// SetMessageRate gets a reference to the given int64 and assigns it to the MessageRate field.
func (o *ParentalcontrolSubscribersiteNasGateways) SetMessageRate(v int64) {
	o.MessageRate = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *ParentalcontrolSubscribersiteNasGateways) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParentalcontrolSubscribersiteNasGateways) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *ParentalcontrolSubscribersiteNasGateways) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *ParentalcontrolSubscribersiteNasGateways) SetComment(v string) {
	o.Comment = &v
}

func (o ParentalcontrolSubscribersiteNasGateways) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParentalcontrolSubscribersiteNasGateways) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.IpAddress) {
		toSerialize["ip_address"] = o.IpAddress
	}
	if !IsNil(o.SharedSecret) {
		toSerialize["shared_secret"] = o.SharedSecret
	}
	if !IsNil(o.SendAck) {
		toSerialize["send_ack"] = o.SendAck
	}
	if !IsNil(o.MessageRate) {
		toSerialize["message_rate"] = o.MessageRate
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ParentalcontrolSubscribersiteNasGateways) UnmarshalJSON(data []byte) (err error) {
	varParentalcontrolSubscribersiteNasGateways := _ParentalcontrolSubscribersiteNasGateways{}

	err = json.Unmarshal(data, &varParentalcontrolSubscribersiteNasGateways)

	if err != nil {
		return err
	}

	*o = ParentalcontrolSubscribersiteNasGateways(varParentalcontrolSubscribersiteNasGateways)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "ip_address")
		delete(additionalProperties, "shared_secret")
		delete(additionalProperties, "send_ack")
		delete(additionalProperties, "message_rate")
		delete(additionalProperties, "comment")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableParentalcontrolSubscribersiteNasGateways struct {
	value *ParentalcontrolSubscribersiteNasGateways
	isSet bool
}

func (v NullableParentalcontrolSubscribersiteNasGateways) Get() *ParentalcontrolSubscribersiteNasGateways {
	return v.value
}

func (v *NullableParentalcontrolSubscribersiteNasGateways) Set(val *ParentalcontrolSubscribersiteNasGateways) {
	v.value = val
	v.isSet = true
}

func (v NullableParentalcontrolSubscribersiteNasGateways) IsSet() bool {
	return v.isSet
}

func (v *NullableParentalcontrolSubscribersiteNasGateways) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParentalcontrolSubscribersiteNasGateways(val *ParentalcontrolSubscribersiteNasGateways) *NullableParentalcontrolSubscribersiteNasGateways {
	return &NullableParentalcontrolSubscribersiteNasGateways{value: val, isSet: true}
}

func (v NullableParentalcontrolSubscribersiteNasGateways) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParentalcontrolSubscribersiteNasGateways) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
