/*
Infoblox RPZ API

OpenAPI specification for Infoblox NIOS WAPI RPZ objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rpz

import (
	"encoding/json"
	"fmt"
)

// CreateOrderedresponsepolicyzonesResponse - struct for CreateOrderedresponsepolicyzonesResponse
type CreateOrderedresponsepolicyzonesResponse struct {
	CreateOrderedresponsepolicyzonesResponseAsObject *CreateOrderedresponsepolicyzonesResponseAsObject
	String                                           *string
}

// CreateOrderedresponsepolicyzonesResponseAsObjectAsCreateOrderedresponsepolicyzonesResponse is a convenience function that returns CreateOrderedresponsepolicyzonesResponseAsObject wrapped in CreateOrderedresponsepolicyzonesResponse
func CreateOrderedresponsepolicyzonesResponseAsObjectAsCreateOrderedresponsepolicyzonesResponse(v *CreateOrderedresponsepolicyzonesResponseAsObject) CreateOrderedresponsepolicyzonesResponse {
	return CreateOrderedresponsepolicyzonesResponse{
		CreateOrderedresponsepolicyzonesResponseAsObject: v,
	}
}

// stringAsCreateOrderedresponsepolicyzonesResponse is a convenience function that returns string wrapped in CreateOrderedresponsepolicyzonesResponse
func StringAsCreateOrderedresponsepolicyzonesResponse(v *string) CreateOrderedresponsepolicyzonesResponse {
	return CreateOrderedresponsepolicyzonesResponse{
		String: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *CreateOrderedresponsepolicyzonesResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into CreateOrderedresponsepolicyzonesResponseAsObject
	err = newStrictDecoder(data).Decode(&dst.CreateOrderedresponsepolicyzonesResponseAsObject)
	if err == nil {
		jsonCreateOrderedresponsepolicyzonesResponseAsObject, _ := json.Marshal(dst.CreateOrderedresponsepolicyzonesResponseAsObject)
		if string(jsonCreateOrderedresponsepolicyzonesResponseAsObject) == "{}" { // empty struct
			dst.CreateOrderedresponsepolicyzonesResponseAsObject = nil
		} else {
			match++
		}
	} else {
		dst.CreateOrderedresponsepolicyzonesResponseAsObject = nil
	}

	// try to unmarshal data into String
	err = newStrictDecoder(data).Decode(&dst.String)
	if err == nil {
		jsonString, _ := json.Marshal(dst.String)
		if string(jsonString) == "{}" { // empty struct
			dst.String = nil
		} else {
			match++
		}
	} else {
		dst.String = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.CreateOrderedresponsepolicyzonesResponseAsObject = nil
		dst.String = nil

		return fmt.Errorf("data matches more than one schema in oneOf(CreateOrderedresponsepolicyzonesResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(CreateOrderedresponsepolicyzonesResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CreateOrderedresponsepolicyzonesResponse) MarshalJSON() ([]byte, error) {
	if src.CreateOrderedresponsepolicyzonesResponseAsObject != nil {
		return json.Marshal(&src.CreateOrderedresponsepolicyzonesResponseAsObject)
	}

	if src.String != nil {
		return json.Marshal(&src.String)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *CreateOrderedresponsepolicyzonesResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.CreateOrderedresponsepolicyzonesResponseAsObject != nil {
		return obj.CreateOrderedresponsepolicyzonesResponseAsObject
	}

	if obj.String != nil {
		return obj.String
	}

	// all schemas are nil
	return nil
}

type NullableCreateOrderedresponsepolicyzonesResponse struct {
	value *CreateOrderedresponsepolicyzonesResponse
	isSet bool
}

func (v NullableCreateOrderedresponsepolicyzonesResponse) Get() *CreateOrderedresponsepolicyzonesResponse {
	return v.value
}

func (v *NullableCreateOrderedresponsepolicyzonesResponse) Set(val *CreateOrderedresponsepolicyzonesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrderedresponsepolicyzonesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrderedresponsepolicyzonesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrderedresponsepolicyzonesResponse(val *CreateOrderedresponsepolicyzonesResponse) *NullableCreateOrderedresponsepolicyzonesResponse {
	return &NullableCreateOrderedresponsepolicyzonesResponse{value: val, isSet: true}
}

func (v NullableCreateOrderedresponsepolicyzonesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrderedresponsepolicyzonesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
