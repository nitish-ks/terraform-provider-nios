/*
Infoblox RPZ API

OpenAPI specification for Infoblox NIOS WAPI RPZ objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rpz

import (
	"encoding/json"
)

// checks if the ListRecordRpzAIpaddressResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListRecordRpzAIpaddressResponseObject{}

// ListRecordRpzAIpaddressResponseObject The response format to retrieve __RecordRpzAIpaddress__ objects.
type ListRecordRpzAIpaddressResponseObject struct {
	Result               []RecordRpzAIpaddress `json:"result,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListRecordRpzAIpaddressResponseObject ListRecordRpzAIpaddressResponseObject

// NewListRecordRpzAIpaddressResponseObject instantiates a new ListRecordRpzAIpaddressResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListRecordRpzAIpaddressResponseObject() *ListRecordRpzAIpaddressResponseObject {
	this := ListRecordRpzAIpaddressResponseObject{}
	return &this
}

// NewListRecordRpzAIpaddressResponseObjectWithDefaults instantiates a new ListRecordRpzAIpaddressResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListRecordRpzAIpaddressResponseObjectWithDefaults() *ListRecordRpzAIpaddressResponseObject {
	this := ListRecordRpzAIpaddressResponseObject{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *ListRecordRpzAIpaddressResponseObject) GetResult() []RecordRpzAIpaddress {
	if o == nil || IsNil(o.Result) {
		var ret []RecordRpzAIpaddress
		return ret
	}
	return o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListRecordRpzAIpaddressResponseObject) GetResultOk() ([]RecordRpzAIpaddress, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *ListRecordRpzAIpaddressResponseObject) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given []RecordRpzAIpaddress and assigns it to the Result field.
func (o *ListRecordRpzAIpaddressResponseObject) SetResult(v []RecordRpzAIpaddress) {
	o.Result = v
}

func (o ListRecordRpzAIpaddressResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListRecordRpzAIpaddressResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListRecordRpzAIpaddressResponseObject) UnmarshalJSON(data []byte) (err error) {
	varListRecordRpzAIpaddressResponseObject := _ListRecordRpzAIpaddressResponseObject{}

	err = json.Unmarshal(data, &varListRecordRpzAIpaddressResponseObject)

	if err != nil {
		return err
	}

	*o = ListRecordRpzAIpaddressResponseObject(varListRecordRpzAIpaddressResponseObject)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "result")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListRecordRpzAIpaddressResponseObject struct {
	value *ListRecordRpzAIpaddressResponseObject
	isSet bool
}

func (v NullableListRecordRpzAIpaddressResponseObject) Get() *ListRecordRpzAIpaddressResponseObject {
	return v.value
}

func (v *NullableListRecordRpzAIpaddressResponseObject) Set(val *ListRecordRpzAIpaddressResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableListRecordRpzAIpaddressResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableListRecordRpzAIpaddressResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListRecordRpzAIpaddressResponseObject(val *ListRecordRpzAIpaddressResponseObject) *NullableListRecordRpzAIpaddressResponseObject {
	return &NullableListRecordRpzAIpaddressResponseObject{value: val, isSet: true}
}

func (v NullableListRecordRpzAIpaddressResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListRecordRpzAIpaddressResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
