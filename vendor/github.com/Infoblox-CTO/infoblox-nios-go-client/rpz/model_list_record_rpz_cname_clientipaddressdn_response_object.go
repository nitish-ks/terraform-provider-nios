/*
Infoblox RPZ API

OpenAPI specification for Infoblox NIOS WAPI RPZ objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rpz

import (
	"encoding/json"
)

// checks if the ListRecordRpzCnameClientipaddressdnResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListRecordRpzCnameClientipaddressdnResponseObject{}

// ListRecordRpzCnameClientipaddressdnResponseObject The response format to retrieve __RecordRpzCnameClientipaddressdn__ objects.
type ListRecordRpzCnameClientipaddressdnResponseObject struct {
	Result               []RecordRpzCnameClientipaddressdn `json:"result,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListRecordRpzCnameClientipaddressdnResponseObject ListRecordRpzCnameClientipaddressdnResponseObject

// NewListRecordRpzCnameClientipaddressdnResponseObject instantiates a new ListRecordRpzCnameClientipaddressdnResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListRecordRpzCnameClientipaddressdnResponseObject() *ListRecordRpzCnameClientipaddressdnResponseObject {
	this := ListRecordRpzCnameClientipaddressdnResponseObject{}
	return &this
}

// NewListRecordRpzCnameClientipaddressdnResponseObjectWithDefaults instantiates a new ListRecordRpzCnameClientipaddressdnResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListRecordRpzCnameClientipaddressdnResponseObjectWithDefaults() *ListRecordRpzCnameClientipaddressdnResponseObject {
	this := ListRecordRpzCnameClientipaddressdnResponseObject{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *ListRecordRpzCnameClientipaddressdnResponseObject) GetResult() []RecordRpzCnameClientipaddressdn {
	if o == nil || IsNil(o.Result) {
		var ret []RecordRpzCnameClientipaddressdn
		return ret
	}
	return o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListRecordRpzCnameClientipaddressdnResponseObject) GetResultOk() ([]RecordRpzCnameClientipaddressdn, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *ListRecordRpzCnameClientipaddressdnResponseObject) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given []RecordRpzCnameClientipaddressdn and assigns it to the Result field.
func (o *ListRecordRpzCnameClientipaddressdnResponseObject) SetResult(v []RecordRpzCnameClientipaddressdn) {
	o.Result = v
}

func (o ListRecordRpzCnameClientipaddressdnResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListRecordRpzCnameClientipaddressdnResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListRecordRpzCnameClientipaddressdnResponseObject) UnmarshalJSON(data []byte) (err error) {
	varListRecordRpzCnameClientipaddressdnResponseObject := _ListRecordRpzCnameClientipaddressdnResponseObject{}

	err = json.Unmarshal(data, &varListRecordRpzCnameClientipaddressdnResponseObject)

	if err != nil {
		return err
	}

	*o = ListRecordRpzCnameClientipaddressdnResponseObject(varListRecordRpzCnameClientipaddressdnResponseObject)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "result")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListRecordRpzCnameClientipaddressdnResponseObject struct {
	value *ListRecordRpzCnameClientipaddressdnResponseObject
	isSet bool
}

func (v NullableListRecordRpzCnameClientipaddressdnResponseObject) Get() *ListRecordRpzCnameClientipaddressdnResponseObject {
	return v.value
}

func (v *NullableListRecordRpzCnameClientipaddressdnResponseObject) Set(val *ListRecordRpzCnameClientipaddressdnResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableListRecordRpzCnameClientipaddressdnResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableListRecordRpzCnameClientipaddressdnResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListRecordRpzCnameClientipaddressdnResponseObject(val *ListRecordRpzCnameClientipaddressdnResponseObject) *NullableListRecordRpzCnameClientipaddressdnResponseObject {
	return &NullableListRecordRpzCnameClientipaddressdnResponseObject{value: val, isSet: true}
}

func (v NullableListRecordRpzCnameClientipaddressdnResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListRecordRpzCnameClientipaddressdnResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
