/*
Infoblox RPZ API

OpenAPI specification for Infoblox NIOS WAPI RPZ objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rpz

import (
	"encoding/json"
)

// checks if the ListRecordRpzNaptrResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListRecordRpzNaptrResponseObject{}

// ListRecordRpzNaptrResponseObject The response format to retrieve __RecordRpzNaptr__ objects.
type ListRecordRpzNaptrResponseObject struct {
	Result               []RecordRpzNaptr `json:"result,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListRecordRpzNaptrResponseObject ListRecordRpzNaptrResponseObject

// NewListRecordRpzNaptrResponseObject instantiates a new ListRecordRpzNaptrResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListRecordRpzNaptrResponseObject() *ListRecordRpzNaptrResponseObject {
	this := ListRecordRpzNaptrResponseObject{}
	return &this
}

// NewListRecordRpzNaptrResponseObjectWithDefaults instantiates a new ListRecordRpzNaptrResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListRecordRpzNaptrResponseObjectWithDefaults() *ListRecordRpzNaptrResponseObject {
	this := ListRecordRpzNaptrResponseObject{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *ListRecordRpzNaptrResponseObject) GetResult() []RecordRpzNaptr {
	if o == nil || IsNil(o.Result) {
		var ret []RecordRpzNaptr
		return ret
	}
	return o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListRecordRpzNaptrResponseObject) GetResultOk() ([]RecordRpzNaptr, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *ListRecordRpzNaptrResponseObject) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given []RecordRpzNaptr and assigns it to the Result field.
func (o *ListRecordRpzNaptrResponseObject) SetResult(v []RecordRpzNaptr) {
	o.Result = v
}

func (o ListRecordRpzNaptrResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListRecordRpzNaptrResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListRecordRpzNaptrResponseObject) UnmarshalJSON(data []byte) (err error) {
	varListRecordRpzNaptrResponseObject := _ListRecordRpzNaptrResponseObject{}

	err = json.Unmarshal(data, &varListRecordRpzNaptrResponseObject)

	if err != nil {
		return err
	}

	*o = ListRecordRpzNaptrResponseObject(varListRecordRpzNaptrResponseObject)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "result")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListRecordRpzNaptrResponseObject struct {
	value *ListRecordRpzNaptrResponseObject
	isSet bool
}

func (v NullableListRecordRpzNaptrResponseObject) Get() *ListRecordRpzNaptrResponseObject {
	return v.value
}

func (v *NullableListRecordRpzNaptrResponseObject) Set(val *ListRecordRpzNaptrResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableListRecordRpzNaptrResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableListRecordRpzNaptrResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListRecordRpzNaptrResponseObject(val *ListRecordRpzNaptrResponseObject) *NullableListRecordRpzNaptrResponseObject {
	return &NullableListRecordRpzNaptrResponseObject{value: val, isSet: true}
}

func (v NullableListRecordRpzNaptrResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListRecordRpzNaptrResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
