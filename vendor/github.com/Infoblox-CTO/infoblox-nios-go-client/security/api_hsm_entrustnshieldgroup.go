/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"bytes"
	"context"
	"io"
	"net/http"
	"net/url"
	"strings"

	"github.com/Infoblox-CTO/infoblox-nios-go-client/internal"
)

type HsmEntrustnshieldgroupAPI interface {
	/*
		Create Create a hsm:entrustnshieldgroup object

		Creates a new hsm:entrustnshieldgroup object

		@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
		@return HsmEntrustnshieldgroupAPICreateRequest
	*/
	Create(ctx context.Context) HsmEntrustnshieldgroupAPICreateRequest

	// CreateExecute executes the request
	//  @return CreateHsmEntrustnshieldgroupResponse
	CreateExecute(r HsmEntrustnshieldgroupAPICreateRequest) (*CreateHsmEntrustnshieldgroupResponse, *http.Response, error)
	/*
		Delete Delete a hsm:entrustnshieldgroup object

		Deletes a specific hsm:entrustnshieldgroup object by reference

		@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
		@param reference Reference of the hsm:entrustnshieldgroup object
		@return HsmEntrustnshieldgroupAPIDeleteRequest
	*/
	Delete(ctx context.Context, reference string) HsmEntrustnshieldgroupAPIDeleteRequest

	// DeleteExecute executes the request
	DeleteExecute(r HsmEntrustnshieldgroupAPIDeleteRequest) (*http.Response, error)
	/*
		List Retrieve hsm:entrustnshieldgroup objects

		Returns a list of hsm:entrustnshieldgroup objects matching the search criteria

		@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
		@return HsmEntrustnshieldgroupAPIListRequest
	*/
	List(ctx context.Context) HsmEntrustnshieldgroupAPIListRequest

	// ListExecute executes the request
	//  @return ListHsmEntrustnshieldgroupResponse
	ListExecute(r HsmEntrustnshieldgroupAPIListRequest) (*ListHsmEntrustnshieldgroupResponse, *http.Response, error)
	/*
		Read Get a specific hsm:entrustnshieldgroup object

		Returns a specific hsm:entrustnshieldgroup object by reference

		@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
		@param reference Reference of the hsm:entrustnshieldgroup object
		@return HsmEntrustnshieldgroupAPIReadRequest
	*/
	Read(ctx context.Context, reference string) HsmEntrustnshieldgroupAPIReadRequest

	// ReadExecute executes the request
	//  @return GetHsmEntrustnshieldgroupResponse
	ReadExecute(r HsmEntrustnshieldgroupAPIReadRequest) (*GetHsmEntrustnshieldgroupResponse, *http.Response, error)
	/*
		Update Update a hsm:entrustnshieldgroup object

		Updates a specific hsm:entrustnshieldgroup object by reference

		@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
		@param reference Reference of the hsm:entrustnshieldgroup object
		@return HsmEntrustnshieldgroupAPIUpdateRequest
	*/
	Update(ctx context.Context, reference string) HsmEntrustnshieldgroupAPIUpdateRequest

	// UpdateExecute executes the request
	//  @return UpdateHsmEntrustnshieldgroupResponse
	UpdateExecute(r HsmEntrustnshieldgroupAPIUpdateRequest) (*UpdateHsmEntrustnshieldgroupResponse, *http.Response, error)
}

// HsmEntrustnshieldgroupAPIService HsmEntrustnshieldgroupAPI service
type HsmEntrustnshieldgroupAPIService internal.Service

type HsmEntrustnshieldgroupAPICreateRequest struct {
	ctx                    context.Context
	ApiService             HsmEntrustnshieldgroupAPI
	hsmEntrustnshieldgroup *HsmEntrustnshieldgroup
	returnFields           *string
	returnFieldsPlus       *string
	returnAsObject         *int32
}

// Object data to create
func (r HsmEntrustnshieldgroupAPICreateRequest) HsmEntrustnshieldgroup(hsmEntrustnshieldgroup HsmEntrustnshieldgroup) HsmEntrustnshieldgroupAPICreateRequest {
	r.hsmEntrustnshieldgroup = &hsmEntrustnshieldgroup
	return r
}

// Enter the field names followed by comma
func (r HsmEntrustnshieldgroupAPICreateRequest) ReturnFields(returnFields string) HsmEntrustnshieldgroupAPICreateRequest {
	r.returnFields = &returnFields
	return r
}

// Enter the field names followed by comma, this returns the required fields along with the default fields
func (r HsmEntrustnshieldgroupAPICreateRequest) ReturnFieldsPlus(returnFieldsPlus string) HsmEntrustnshieldgroupAPICreateRequest {
	r.returnFieldsPlus = &returnFieldsPlus
	return r
}

// Select 1 if result is required as an object
func (r HsmEntrustnshieldgroupAPICreateRequest) ReturnAsObject(returnAsObject int32) HsmEntrustnshieldgroupAPICreateRequest {
	r.returnAsObject = &returnAsObject
	return r
}

func (r HsmEntrustnshieldgroupAPICreateRequest) Execute() (*CreateHsmEntrustnshieldgroupResponse, *http.Response, error) {
	return r.ApiService.CreateExecute(r)
}

/*
Create Create a hsm:entrustnshieldgroup object

Creates a new hsm:entrustnshieldgroup object

	@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	@return HsmEntrustnshieldgroupAPICreateRequest
*/
func (a *HsmEntrustnshieldgroupAPIService) Create(ctx context.Context) HsmEntrustnshieldgroupAPICreateRequest {
	return HsmEntrustnshieldgroupAPICreateRequest{
		ApiService: a,
		ctx:        ctx,
	}
}

// Execute executes the request
//
//	@return CreateHsmEntrustnshieldgroupResponse
func (a *HsmEntrustnshieldgroupAPIService) CreateExecute(r HsmEntrustnshieldgroupAPICreateRequest) (*CreateHsmEntrustnshieldgroupResponse, *http.Response, error) {
	var (
		localVarHTTPMethod  = http.MethodPost
		localVarPostBody    interface{}
		formFiles           []internal.FormFile
		localVarReturnValue *CreateHsmEntrustnshieldgroupResponse
	)

	localBasePath, err := a.Client.Cfg.ServerURLWithContext(r.ctx, "HsmEntrustnshieldgroupAPIService.Create")
	if err != nil {
		return localVarReturnValue, nil, internal.NewGenericOpenAPIError(err.Error())
	}

	localVarPath := localBasePath + "/hsm:entrustnshieldgroup"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}
	if r.hsmEntrustnshieldgroup == nil {
		return localVarReturnValue, nil, internal.ReportError("hsmEntrustnshieldgroup is required and must be specified")
	}

	if r.returnFields != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields", r.returnFields, "form", "")
	}
	if r.returnFieldsPlus != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields+", r.returnFieldsPlus, "form", "")
	}
	if r.returnAsObject != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_as_object", r.returnAsObject, "form", "")
	}
	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := internal.SelectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := internal.SelectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.hsmEntrustnshieldgroup
	req, err := a.Client.PrepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.Client.CallAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	localVarHTTPResponse.Body = io.NopCloser(bytes.NewBuffer(localVarBody))
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := internal.NewGenericOpenAPIErrorWithBody(localVarHTTPResponse.Status, localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.Client.Decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := internal.NewGenericOpenAPIErrorWithBody(err.Error(), localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}
	return localVarReturnValue, localVarHTTPResponse, nil
}

type HsmEntrustnshieldgroupAPIDeleteRequest struct {
	ctx        context.Context
	ApiService HsmEntrustnshieldgroupAPI
	reference  string
}

func (r HsmEntrustnshieldgroupAPIDeleteRequest) Execute() (*http.Response, error) {
	return r.ApiService.DeleteExecute(r)
}

/*
Delete Delete a hsm:entrustnshieldgroup object

Deletes a specific hsm:entrustnshieldgroup object by reference

	@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	@param reference Reference of the hsm:entrustnshieldgroup object
	@return HsmEntrustnshieldgroupAPIDeleteRequest
*/
func (a *HsmEntrustnshieldgroupAPIService) Delete(ctx context.Context, reference string) HsmEntrustnshieldgroupAPIDeleteRequest {
	return HsmEntrustnshieldgroupAPIDeleteRequest{
		ApiService: a,
		ctx:        ctx,
		reference:  reference,
	}
}

// Execute executes the request
func (a *HsmEntrustnshieldgroupAPIService) DeleteExecute(r HsmEntrustnshieldgroupAPIDeleteRequest) (*http.Response, error) {
	var (
		localVarHTTPMethod = http.MethodDelete
		localVarPostBody   interface{}
		formFiles          []internal.FormFile
	)

	localBasePath, err := a.Client.Cfg.ServerURLWithContext(r.ctx, "HsmEntrustnshieldgroupAPIService.Delete")
	if err != nil {
		return nil, internal.NewGenericOpenAPIError(err.Error())
	}

	localVarPath := localBasePath + "/hsm:entrustnshieldgroup/{reference}"
	localVarPath = strings.Replace(localVarPath, "{"+"reference"+"}", url.PathEscape(internal.ParameterValueToString(r.reference, "reference")), -1)

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{}

	// set Content-Type header
	localVarHTTPContentType := internal.SelectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{}

	// set Accept header
	localVarHTTPHeaderAccept := internal.SelectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	req, err := a.Client.PrepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
	if err != nil {
		return nil, err
	}

	localVarHTTPResponse, err := a.Client.CallAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarHTTPResponse, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	localVarHTTPResponse.Body = io.NopCloser(bytes.NewBuffer(localVarBody))
	if err != nil {
		return localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := internal.NewGenericOpenAPIErrorWithBody(localVarHTTPResponse.Status, localVarBody)
		return localVarHTTPResponse, newErr
	}

	return localVarHTTPResponse, nil
}

type HsmEntrustnshieldgroupAPIListRequest struct {
	ctx              context.Context
	ApiService       HsmEntrustnshieldgroupAPI
	returnFields     *string
	returnFieldsPlus *string
	maxResults       *int32
	returnAsObject   *int32
	paging           *int32
	pageId           *string
	filters          *map[string]interface{}
	extattrfilter    *map[string]interface{}
}

// Enter the field names followed by comma
func (r HsmEntrustnshieldgroupAPIListRequest) ReturnFields(returnFields string) HsmEntrustnshieldgroupAPIListRequest {
	r.returnFields = &returnFields
	return r
}

// Enter the field names followed by comma, this returns the required fields along with the default fields
func (r HsmEntrustnshieldgroupAPIListRequest) ReturnFieldsPlus(returnFieldsPlus string) HsmEntrustnshieldgroupAPIListRequest {
	r.returnFieldsPlus = &returnFieldsPlus
	return r
}

// Enter the number of results to be fetched
func (r HsmEntrustnshieldgroupAPIListRequest) MaxResults(maxResults int32) HsmEntrustnshieldgroupAPIListRequest {
	r.maxResults = &maxResults
	return r
}

// Select 1 if result is required as an object
func (r HsmEntrustnshieldgroupAPIListRequest) ReturnAsObject(returnAsObject int32) HsmEntrustnshieldgroupAPIListRequest {
	r.returnAsObject = &returnAsObject
	return r
}

// Control paging of results
func (r HsmEntrustnshieldgroupAPIListRequest) Paging(paging int32) HsmEntrustnshieldgroupAPIListRequest {
	r.paging = &paging
	return r
}

// Page id for retrieving next page of results
func (r HsmEntrustnshieldgroupAPIListRequest) PageId(pageId string) HsmEntrustnshieldgroupAPIListRequest {
	r.pageId = &pageId
	return r
}

func (r HsmEntrustnshieldgroupAPIListRequest) Filters(filters map[string]interface{}) HsmEntrustnshieldgroupAPIListRequest {
	r.filters = &filters
	return r
}

func (r HsmEntrustnshieldgroupAPIListRequest) Extattrfilter(extattrfilter map[string]interface{}) HsmEntrustnshieldgroupAPIListRequest {
	r.extattrfilter = &extattrfilter
	return r
}

func (r HsmEntrustnshieldgroupAPIListRequest) Execute() (*ListHsmEntrustnshieldgroupResponse, *http.Response, error) {
	return r.ApiService.ListExecute(r)
}

/*
List Retrieve hsm:entrustnshieldgroup objects

Returns a list of hsm:entrustnshieldgroup objects matching the search criteria

	@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	@return HsmEntrustnshieldgroupAPIListRequest
*/
func (a *HsmEntrustnshieldgroupAPIService) List(ctx context.Context) HsmEntrustnshieldgroupAPIListRequest {
	return HsmEntrustnshieldgroupAPIListRequest{
		ApiService: a,
		ctx:        ctx,
	}
}

// Execute executes the request
//
//	@return ListHsmEntrustnshieldgroupResponse
func (a *HsmEntrustnshieldgroupAPIService) ListExecute(r HsmEntrustnshieldgroupAPIListRequest) (*ListHsmEntrustnshieldgroupResponse, *http.Response, error) {
	var (
		localVarHTTPMethod  = http.MethodGet
		localVarPostBody    interface{}
		formFiles           []internal.FormFile
		localVarReturnValue *ListHsmEntrustnshieldgroupResponse
	)

	localBasePath, err := a.Client.Cfg.ServerURLWithContext(r.ctx, "HsmEntrustnshieldgroupAPIService.List")
	if err != nil {
		return localVarReturnValue, nil, internal.NewGenericOpenAPIError(err.Error())
	}

	localVarPath := localBasePath + "/hsm:entrustnshieldgroup"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}

	if r.returnFields != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields", r.returnFields, "form", "")
	}
	if r.returnFieldsPlus != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields+", r.returnFieldsPlus, "form", "")
	}
	if r.maxResults != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_max_results", r.maxResults, "form", "")
	}
	if r.returnAsObject != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_as_object", r.returnAsObject, "form", "")
	}
	if r.paging != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_paging", r.paging, "form", "")
	}
	if r.pageId != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_page_id", r.pageId, "form", "")
	}
	if r.filters != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "filters", r.filters, "form", "")
	}
	if r.extattrfilter != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "extattrfilter", r.extattrfilter, "form", "")
	}
	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{}

	// set Content-Type header
	localVarHTTPContentType := internal.SelectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := internal.SelectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	req, err := a.Client.PrepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.Client.CallAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	localVarHTTPResponse.Body = io.NopCloser(bytes.NewBuffer(localVarBody))
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := internal.NewGenericOpenAPIErrorWithBody(localVarHTTPResponse.Status, localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.Client.Decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := internal.NewGenericOpenAPIErrorWithBody(err.Error(), localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}
	return localVarReturnValue, localVarHTTPResponse, nil
}

type HsmEntrustnshieldgroupAPIReadRequest struct {
	ctx              context.Context
	ApiService       HsmEntrustnshieldgroupAPI
	reference        string
	returnFields     *string
	returnFieldsPlus *string
	returnAsObject   *int32
}

// Enter the field names followed by comma
func (r HsmEntrustnshieldgroupAPIReadRequest) ReturnFields(returnFields string) HsmEntrustnshieldgroupAPIReadRequest {
	r.returnFields = &returnFields
	return r
}

// Enter the field names followed by comma, this returns the required fields along with the default fields
func (r HsmEntrustnshieldgroupAPIReadRequest) ReturnFieldsPlus(returnFieldsPlus string) HsmEntrustnshieldgroupAPIReadRequest {
	r.returnFieldsPlus = &returnFieldsPlus
	return r
}

// Select 1 if result is required as an object
func (r HsmEntrustnshieldgroupAPIReadRequest) ReturnAsObject(returnAsObject int32) HsmEntrustnshieldgroupAPIReadRequest {
	r.returnAsObject = &returnAsObject
	return r
}

func (r HsmEntrustnshieldgroupAPIReadRequest) Execute() (*GetHsmEntrustnshieldgroupResponse, *http.Response, error) {
	return r.ApiService.ReadExecute(r)
}

/*
Read Get a specific hsm:entrustnshieldgroup object

Returns a specific hsm:entrustnshieldgroup object by reference

	@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	@param reference Reference of the hsm:entrustnshieldgroup object
	@return HsmEntrustnshieldgroupAPIReadRequest
*/
func (a *HsmEntrustnshieldgroupAPIService) Read(ctx context.Context, reference string) HsmEntrustnshieldgroupAPIReadRequest {
	return HsmEntrustnshieldgroupAPIReadRequest{
		ApiService: a,
		ctx:        ctx,
		reference:  reference,
	}
}

// Execute executes the request
//
//	@return GetHsmEntrustnshieldgroupResponse
func (a *HsmEntrustnshieldgroupAPIService) ReadExecute(r HsmEntrustnshieldgroupAPIReadRequest) (*GetHsmEntrustnshieldgroupResponse, *http.Response, error) {
	var (
		localVarHTTPMethod  = http.MethodGet
		localVarPostBody    interface{}
		formFiles           []internal.FormFile
		localVarReturnValue *GetHsmEntrustnshieldgroupResponse
	)

	localBasePath, err := a.Client.Cfg.ServerURLWithContext(r.ctx, "HsmEntrustnshieldgroupAPIService.Read")
	if err != nil {
		return localVarReturnValue, nil, internal.NewGenericOpenAPIError(err.Error())
	}

	localVarPath := localBasePath + "/hsm:entrustnshieldgroup/{reference}"
	localVarPath = strings.Replace(localVarPath, "{"+"reference"+"}", url.PathEscape(internal.ParameterValueToString(r.reference, "reference")), -1)

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}

	if r.returnFields != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields", r.returnFields, "form", "")
	}
	if r.returnFieldsPlus != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields+", r.returnFieldsPlus, "form", "")
	}
	if r.returnAsObject != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_as_object", r.returnAsObject, "form", "")
	}
	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{}

	// set Content-Type header
	localVarHTTPContentType := internal.SelectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := internal.SelectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	req, err := a.Client.PrepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.Client.CallAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	localVarHTTPResponse.Body = io.NopCloser(bytes.NewBuffer(localVarBody))
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := internal.NewGenericOpenAPIErrorWithBody(localVarHTTPResponse.Status, localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.Client.Decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := internal.NewGenericOpenAPIErrorWithBody(err.Error(), localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}
	return localVarReturnValue, localVarHTTPResponse, nil
}

type HsmEntrustnshieldgroupAPIUpdateRequest struct {
	ctx                    context.Context
	ApiService             HsmEntrustnshieldgroupAPI
	reference              string
	hsmEntrustnshieldgroup *HsmEntrustnshieldgroup
	returnFields           *string
	returnFieldsPlus       *string
	returnAsObject         *int32
}

// Object data to update
func (r HsmEntrustnshieldgroupAPIUpdateRequest) HsmEntrustnshieldgroup(hsmEntrustnshieldgroup HsmEntrustnshieldgroup) HsmEntrustnshieldgroupAPIUpdateRequest {
	r.hsmEntrustnshieldgroup = &hsmEntrustnshieldgroup
	return r
}

// Enter the field names followed by comma
func (r HsmEntrustnshieldgroupAPIUpdateRequest) ReturnFields(returnFields string) HsmEntrustnshieldgroupAPIUpdateRequest {
	r.returnFields = &returnFields
	return r
}

// Enter the field names followed by comma, this returns the required fields along with the default fields
func (r HsmEntrustnshieldgroupAPIUpdateRequest) ReturnFieldsPlus(returnFieldsPlus string) HsmEntrustnshieldgroupAPIUpdateRequest {
	r.returnFieldsPlus = &returnFieldsPlus
	return r
}

// Select 1 if result is required as an object
func (r HsmEntrustnshieldgroupAPIUpdateRequest) ReturnAsObject(returnAsObject int32) HsmEntrustnshieldgroupAPIUpdateRequest {
	r.returnAsObject = &returnAsObject
	return r
}

func (r HsmEntrustnshieldgroupAPIUpdateRequest) Execute() (*UpdateHsmEntrustnshieldgroupResponse, *http.Response, error) {
	return r.ApiService.UpdateExecute(r)
}

/*
Update Update a hsm:entrustnshieldgroup object

Updates a specific hsm:entrustnshieldgroup object by reference

	@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	@param reference Reference of the hsm:entrustnshieldgroup object
	@return HsmEntrustnshieldgroupAPIUpdateRequest
*/
func (a *HsmEntrustnshieldgroupAPIService) Update(ctx context.Context, reference string) HsmEntrustnshieldgroupAPIUpdateRequest {
	return HsmEntrustnshieldgroupAPIUpdateRequest{
		ApiService: a,
		ctx:        ctx,
		reference:  reference,
	}
}

// Execute executes the request
//
//	@return UpdateHsmEntrustnshieldgroupResponse
func (a *HsmEntrustnshieldgroupAPIService) UpdateExecute(r HsmEntrustnshieldgroupAPIUpdateRequest) (*UpdateHsmEntrustnshieldgroupResponse, *http.Response, error) {
	var (
		localVarHTTPMethod  = http.MethodPut
		localVarPostBody    interface{}
		formFiles           []internal.FormFile
		localVarReturnValue *UpdateHsmEntrustnshieldgroupResponse
	)

	localBasePath, err := a.Client.Cfg.ServerURLWithContext(r.ctx, "HsmEntrustnshieldgroupAPIService.Update")
	if err != nil {
		return localVarReturnValue, nil, internal.NewGenericOpenAPIError(err.Error())
	}

	localVarPath := localBasePath + "/hsm:entrustnshieldgroup/{reference}"
	localVarPath = strings.Replace(localVarPath, "{"+"reference"+"}", url.PathEscape(internal.ParameterValueToString(r.reference, "reference")), -1)

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}
	if r.hsmEntrustnshieldgroup == nil {
		return localVarReturnValue, nil, internal.ReportError("hsmEntrustnshieldgroup is required and must be specified")
	}

	if r.returnFields != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields", r.returnFields, "form", "")
	}
	if r.returnFieldsPlus != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields+", r.returnFieldsPlus, "form", "")
	}
	if r.returnAsObject != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_as_object", r.returnAsObject, "form", "")
	}
	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := internal.SelectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := internal.SelectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.hsmEntrustnshieldgroup
	req, err := a.Client.PrepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.Client.CallAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	localVarHTTPResponse.Body = io.NopCloser(bytes.NewBuffer(localVarBody))
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := internal.NewGenericOpenAPIErrorWithBody(localVarHTTPResponse.Status, localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.Client.Decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := internal.NewGenericOpenAPIErrorWithBody(err.Error(), localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}
	return localVarReturnValue, localVarHTTPResponse, nil
}
