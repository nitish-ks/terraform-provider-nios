/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"bytes"
	"context"
	"io"
	"net/http"
	"net/url"
	"strings"

	"github.com/Infoblox-CTO/infoblox-nios-go-client/internal"
)

type ThreatinsightcloudclientAPI interface {
	/*
		Get Retrieve threatinsight:cloudclient objects

		Returns a list of threatinsight:cloudclient objects matching the search criteria

		@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
		@return ThreatinsightcloudclientAPIGetRequest
	*/
	Get(ctx context.Context) ThreatinsightcloudclientAPIGetRequest

	// GetExecute executes the request
	//  @return ListThreatinsightCloudclientResponse
	GetExecute(r ThreatinsightcloudclientAPIGetRequest) (*ListThreatinsightCloudclientResponse, *http.Response, error)
	/*
		ReferenceGet Get a specific threatinsight:cloudclient object

		Returns a specific threatinsight:cloudclient object by reference

		@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
		@param reference Reference of the threatinsight:cloudclient object
		@return ThreatinsightcloudclientAPIReferenceGetRequest
	*/
	ReferenceGet(ctx context.Context, reference string) ThreatinsightcloudclientAPIReferenceGetRequest

	// ReferenceGetExecute executes the request
	//  @return GetThreatinsightCloudclientResponse
	ReferenceGetExecute(r ThreatinsightcloudclientAPIReferenceGetRequest) (*GetThreatinsightCloudclientResponse, *http.Response, error)
	/*
		ReferencePut Update a threatinsight:cloudclient object

		Updates a specific threatinsight:cloudclient object by reference

		@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
		@param reference Reference of the threatinsight:cloudclient object
		@return ThreatinsightcloudclientAPIReferencePutRequest
	*/
	ReferencePut(ctx context.Context, reference string) ThreatinsightcloudclientAPIReferencePutRequest

	// ReferencePutExecute executes the request
	//  @return UpdateThreatinsightCloudclientResponse
	ReferencePutExecute(r ThreatinsightcloudclientAPIReferencePutRequest) (*UpdateThreatinsightCloudclientResponse, *http.Response, error)
}

// ThreatinsightcloudclientAPIService ThreatinsightcloudclientAPI service
type ThreatinsightcloudclientAPIService internal.Service

type ThreatinsightcloudclientAPIGetRequest struct {
	ctx            context.Context
	ApiService     ThreatinsightcloudclientAPI
	returnFields   *string
	returnFields2  *string
	maxResults     *int32
	returnAsObject *int32
	paging         *int32
	pageId         *string
	filters        *map[string]interface{}
	extattrfilter  *map[string]interface{}
}

// Enter the field names followed by comma
func (r ThreatinsightcloudclientAPIGetRequest) ReturnFields(returnFields string) ThreatinsightcloudclientAPIGetRequest {
	r.returnFields = &returnFields
	return r
}

// Enter the field names followed by comma, this returns the required fields along with the default fields
func (r ThreatinsightcloudclientAPIGetRequest) ReturnFields2(returnFields2 string) ThreatinsightcloudclientAPIGetRequest {
	r.returnFields2 = &returnFields2
	return r
}

// Enter the number of results to be fetched
func (r ThreatinsightcloudclientAPIGetRequest) MaxResults(maxResults int32) ThreatinsightcloudclientAPIGetRequest {
	r.maxResults = &maxResults
	return r
}

// Select 1 if result is required as an object
func (r ThreatinsightcloudclientAPIGetRequest) ReturnAsObject(returnAsObject int32) ThreatinsightcloudclientAPIGetRequest {
	r.returnAsObject = &returnAsObject
	return r
}

// Control paging of results
func (r ThreatinsightcloudclientAPIGetRequest) Paging(paging int32) ThreatinsightcloudclientAPIGetRequest {
	r.paging = &paging
	return r
}

// Page id for retrieving next page of results
func (r ThreatinsightcloudclientAPIGetRequest) PageId(pageId string) ThreatinsightcloudclientAPIGetRequest {
	r.pageId = &pageId
	return r
}

func (r ThreatinsightcloudclientAPIGetRequest) Filters(filters map[string]interface{}) ThreatinsightcloudclientAPIGetRequest {
	r.filters = &filters
	return r
}

func (r ThreatinsightcloudclientAPIGetRequest) Extattrfilter(extattrfilter map[string]interface{}) ThreatinsightcloudclientAPIGetRequest {
	r.extattrfilter = &extattrfilter
	return r
}

func (r ThreatinsightcloudclientAPIGetRequest) Execute() (*ListThreatinsightCloudclientResponse, *http.Response, error) {
	return r.ApiService.GetExecute(r)
}

/*
Get Retrieve threatinsight:cloudclient objects

Returns a list of threatinsight:cloudclient objects matching the search criteria

	@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	@return ThreatinsightcloudclientAPIGetRequest
*/
func (a *ThreatinsightcloudclientAPIService) Get(ctx context.Context) ThreatinsightcloudclientAPIGetRequest {
	return ThreatinsightcloudclientAPIGetRequest{
		ApiService: a,
		ctx:        ctx,
	}
}

// Execute executes the request
//
//	@return ListThreatinsightCloudclientResponse
func (a *ThreatinsightcloudclientAPIService) GetExecute(r ThreatinsightcloudclientAPIGetRequest) (*ListThreatinsightCloudclientResponse, *http.Response, error) {
	var (
		localVarHTTPMethod  = http.MethodGet
		localVarPostBody    interface{}
		formFiles           []internal.FormFile
		localVarReturnValue *ListThreatinsightCloudclientResponse
	)

	localBasePath, err := a.Client.Cfg.ServerURLWithContext(r.ctx, "ThreatinsightcloudclientAPIService.Get")
	if err != nil {
		return localVarReturnValue, nil, internal.NewGenericOpenAPIError(err.Error())
	}

	localVarPath := localBasePath + "/threatinsight:cloudclient"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}

	if r.returnFields != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields", r.returnFields, "form", "")
	}
	if r.returnFields2 != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields+", r.returnFields2, "form", "")
	}
	if r.maxResults != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_max_results", r.maxResults, "form", "")
	}
	if r.returnAsObject != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_as_object", r.returnAsObject, "form", "")
	}
	if r.paging != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_paging", r.paging, "form", "")
	}
	if r.pageId != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_page_id", r.pageId, "form", "")
	}
	if r.filters != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "filters", r.filters, "form", "")
	}
	if r.extattrfilter != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "extattrfilter", r.extattrfilter, "form", "")
	}
	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{}

	// set Content-Type header
	localVarHTTPContentType := internal.SelectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := internal.SelectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	req, err := a.Client.PrepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.Client.CallAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	localVarHTTPResponse.Body = io.NopCloser(bytes.NewBuffer(localVarBody))
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := internal.NewGenericOpenAPIErrorWithBody(localVarHTTPResponse.Status, localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.Client.Decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := internal.NewGenericOpenAPIErrorWithBody(err.Error(), localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}
	return localVarReturnValue, localVarHTTPResponse, nil
}

type ThreatinsightcloudclientAPIReferenceGetRequest struct {
	ctx            context.Context
	ApiService     ThreatinsightcloudclientAPI
	reference      string
	returnFields   *string
	returnFields2  *string
	returnAsObject *int32
}

// Enter the field names followed by comma
func (r ThreatinsightcloudclientAPIReferenceGetRequest) ReturnFields(returnFields string) ThreatinsightcloudclientAPIReferenceGetRequest {
	r.returnFields = &returnFields
	return r
}

// Enter the field names followed by comma, this returns the required fields along with the default fields
func (r ThreatinsightcloudclientAPIReferenceGetRequest) ReturnFields2(returnFields2 string) ThreatinsightcloudclientAPIReferenceGetRequest {
	r.returnFields2 = &returnFields2
	return r
}

// Select 1 if result is required as an object
func (r ThreatinsightcloudclientAPIReferenceGetRequest) ReturnAsObject(returnAsObject int32) ThreatinsightcloudclientAPIReferenceGetRequest {
	r.returnAsObject = &returnAsObject
	return r
}

func (r ThreatinsightcloudclientAPIReferenceGetRequest) Execute() (*GetThreatinsightCloudclientResponse, *http.Response, error) {
	return r.ApiService.ReferenceGetExecute(r)
}

/*
ReferenceGet Get a specific threatinsight:cloudclient object

Returns a specific threatinsight:cloudclient object by reference

	@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	@param reference Reference of the threatinsight:cloudclient object
	@return ThreatinsightcloudclientAPIReferenceGetRequest
*/
func (a *ThreatinsightcloudclientAPIService) ReferenceGet(ctx context.Context, reference string) ThreatinsightcloudclientAPIReferenceGetRequest {
	return ThreatinsightcloudclientAPIReferenceGetRequest{
		ApiService: a,
		ctx:        ctx,
		reference:  reference,
	}
}

// Execute executes the request
//
//	@return GetThreatinsightCloudclientResponse
func (a *ThreatinsightcloudclientAPIService) ReferenceGetExecute(r ThreatinsightcloudclientAPIReferenceGetRequest) (*GetThreatinsightCloudclientResponse, *http.Response, error) {
	var (
		localVarHTTPMethod  = http.MethodGet
		localVarPostBody    interface{}
		formFiles           []internal.FormFile
		localVarReturnValue *GetThreatinsightCloudclientResponse
	)

	localBasePath, err := a.Client.Cfg.ServerURLWithContext(r.ctx, "ThreatinsightcloudclientAPIService.ReferenceGet")
	if err != nil {
		return localVarReturnValue, nil, internal.NewGenericOpenAPIError(err.Error())
	}

	localVarPath := localBasePath + "/threatinsight:cloudclient/{reference}"
	localVarPath = strings.Replace(localVarPath, "{"+"reference"+"}", url.PathEscape(internal.ParameterValueToString(r.reference, "reference")), -1)

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}

	if r.returnFields != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields", r.returnFields, "form", "")
	}
	if r.returnFields2 != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields+", r.returnFields2, "form", "")
	}
	if r.returnAsObject != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_as_object", r.returnAsObject, "form", "")
	}
	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{}

	// set Content-Type header
	localVarHTTPContentType := internal.SelectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := internal.SelectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	req, err := a.Client.PrepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.Client.CallAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	localVarHTTPResponse.Body = io.NopCloser(bytes.NewBuffer(localVarBody))
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := internal.NewGenericOpenAPIErrorWithBody(localVarHTTPResponse.Status, localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.Client.Decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := internal.NewGenericOpenAPIErrorWithBody(err.Error(), localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}
	return localVarReturnValue, localVarHTTPResponse, nil
}

type ThreatinsightcloudclientAPIReferencePutRequest struct {
	ctx                      context.Context
	ApiService               ThreatinsightcloudclientAPI
	reference                string
	threatinsightCloudclient *ThreatinsightCloudclient
	returnFields             *string
	returnFields2            *string
	returnAsObject           *int32
}

// Object data to update
func (r ThreatinsightcloudclientAPIReferencePutRequest) ThreatinsightCloudclient(threatinsightCloudclient ThreatinsightCloudclient) ThreatinsightcloudclientAPIReferencePutRequest {
	r.threatinsightCloudclient = &threatinsightCloudclient
	return r
}

// Enter the field names followed by comma
func (r ThreatinsightcloudclientAPIReferencePutRequest) ReturnFields(returnFields string) ThreatinsightcloudclientAPIReferencePutRequest {
	r.returnFields = &returnFields
	return r
}

// Enter the field names followed by comma, this returns the required fields along with the default fields
func (r ThreatinsightcloudclientAPIReferencePutRequest) ReturnFields2(returnFields2 string) ThreatinsightcloudclientAPIReferencePutRequest {
	r.returnFields2 = &returnFields2
	return r
}

// Select 1 if result is required as an object
func (r ThreatinsightcloudclientAPIReferencePutRequest) ReturnAsObject(returnAsObject int32) ThreatinsightcloudclientAPIReferencePutRequest {
	r.returnAsObject = &returnAsObject
	return r
}

func (r ThreatinsightcloudclientAPIReferencePutRequest) Execute() (*UpdateThreatinsightCloudclientResponse, *http.Response, error) {
	return r.ApiService.ReferencePutExecute(r)
}

/*
ReferencePut Update a threatinsight:cloudclient object

Updates a specific threatinsight:cloudclient object by reference

	@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	@param reference Reference of the threatinsight:cloudclient object
	@return ThreatinsightcloudclientAPIReferencePutRequest
*/
func (a *ThreatinsightcloudclientAPIService) ReferencePut(ctx context.Context, reference string) ThreatinsightcloudclientAPIReferencePutRequest {
	return ThreatinsightcloudclientAPIReferencePutRequest{
		ApiService: a,
		ctx:        ctx,
		reference:  reference,
	}
}

// Execute executes the request
//
//	@return UpdateThreatinsightCloudclientResponse
func (a *ThreatinsightcloudclientAPIService) ReferencePutExecute(r ThreatinsightcloudclientAPIReferencePutRequest) (*UpdateThreatinsightCloudclientResponse, *http.Response, error) {
	var (
		localVarHTTPMethod  = http.MethodPut
		localVarPostBody    interface{}
		formFiles           []internal.FormFile
		localVarReturnValue *UpdateThreatinsightCloudclientResponse
	)

	localBasePath, err := a.Client.Cfg.ServerURLWithContext(r.ctx, "ThreatinsightcloudclientAPIService.ReferencePut")
	if err != nil {
		return localVarReturnValue, nil, internal.NewGenericOpenAPIError(err.Error())
	}

	localVarPath := localBasePath + "/threatinsight:cloudclient/{reference}"
	localVarPath = strings.Replace(localVarPath, "{"+"reference"+"}", url.PathEscape(internal.ParameterValueToString(r.reference, "reference")), -1)

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}
	if r.threatinsightCloudclient == nil {
		return localVarReturnValue, nil, internal.ReportError("threatinsightCloudclient is required and must be specified")
	}

	if r.returnFields != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields", r.returnFields, "form", "")
	}
	if r.returnFields2 != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields+", r.returnFields2, "form", "")
	}
	if r.returnAsObject != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_as_object", r.returnAsObject, "form", "")
	}
	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := internal.SelectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := internal.SelectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.threatinsightCloudclient
	req, err := a.Client.PrepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.Client.CallAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	localVarHTTPResponse.Body = io.NopCloser(bytes.NewBuffer(localVarBody))
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := internal.NewGenericOpenAPIErrorWithBody(localVarHTTPResponse.Status, localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.Client.Decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := internal.NewGenericOpenAPIErrorWithBody(err.Error(), localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}
	return localVarReturnValue, localVarHTTPResponse, nil
}
