/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
)

// checks if the AdmingroupAdminSetCommands type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdmingroupAdminSetCommands{}

// AdmingroupAdminSetCommands struct for AdmingroupAdminSetCommands
type AdmingroupAdminSetCommands struct {
	// If True then CLI user has permission to run the command
	SetAdminGroupAcl *bool `json:"set_admin_group_acl,omitempty"`
	// If True then CLI user has permission to run the command
	EtBfd *bool `json:"et_bfd,omitempty"`
	// If True then CLI user has permission to run the command
	SetBfd *bool `json:"set_bfd,omitempty"`
	// If True then CLI user has permission to run the command
	SetBgp *bool `json:"set_bgp,omitempty"`
	// If True then CLI user has permission to run the command
	SetCleanMscache *bool `json:"set_clean_mscache,omitempty"`
	// If True then CLI user has permission to run the command
	SetDebug *bool `json:"set_debug,omitempty"`
	// If True then CLI user has permission to run the command
	SetDebugAnalytics *bool `json:"set_debug_analytics,omitempty"`
	// If True then CLI user has permission to run the command
	SetDeleteTasksInterval *bool `json:"set_delete_tasks_interval,omitempty"`
	// If True then CLI user has permission to run the command
	SetDisableGuiOneClickSupport *bool `json:"set_disable_gui_one_click_support,omitempty"`
	// If True then CLI user has permission to run the command
	SetHardwareType *bool `json:"set_hardware_type,omitempty"`
	// If True then CLI user has permission to run the command
	SetIbtrap *bool `json:"set_ibtrap,omitempty"`
	// If True then CLI user has permission to run the command
	SetHwIdent *bool `json:"set_hw_ident,omitempty"`
	// If True then CLI user has permission to run the command
	SetLines *bool `json:"set_lines,omitempty"`
	// If True then CLI user has permission to run the command
	SetMsMaxConnection *bool `json:"set_ms_max_connection,omitempty"`
	// If True then CLI user has permission to run the command
	SetNosafemode *bool `json:"set_nosafemode,omitempty"`
	// If True then CLI user has permission to run the command
	SetOcsp *bool `json:"set_ocsp,omitempty"`
	// If True then CLI user has permission to run the command
	SetPurgeRestartObjects *bool `json:"set_purge_restart_objects,omitempty"`
	// If True then CLI user has permission to run the command
	SetReportingUserCapabilities *bool `json:"set_reporting_user_capabilities,omitempty"`
	// If True then CLI user has permission to run the command
	SetRpzRecursiveOnly *bool `json:"set_rpz_recursive_only,omitempty"`
	// If True then CLI user has permission to run the command
	SetSafemode *bool `json:"set_safemode,omitempty"`
	// If True then CLI user has permission to run the command
	SetScheduled *bool `json:"set_scheduled,omitempty"`
	// If True then CLI user has permission to run the command
	SetSnmptrap *bool `json:"set_snmptrap,omitempty"`
	// If True then CLI user has permission to run the command
	SetSysname *bool `json:"set_sysname,omitempty"`
	// If True then CLI user has permission to run the command
	SetTerm *bool `json:"set_term,omitempty"`
	// If True then CLI user has permission to run the command
	SetThresholdtrap *bool `json:"set_thresholdtrap,omitempty"`
	// If True then CLI user has permission to run the command
	SetExpertmode *bool `json:"set_expertmode,omitempty"`
	// If True then CLI user has permission to run the command
	SetMaintenancemode *bool `json:"set_maintenancemode,omitempty"`
	// If True then CLI user has permission to run the command
	SetTransferReportingData *bool `json:"set_transfer_reporting_data,omitempty"`
	// If True then CLI user has permission to run the command
	SetTransferSupportbundle *bool `json:"set_transfer_supportbundle,omitempty"`
	// If True then CLI user has permission to run the command
	SetAnalyticsDatabaseDump *bool `json:"set_analytics_database_dump,omitempty"`
	// If True then CLI user has permission to run the command
	SetAnalyticsParameter *bool `json:"set_analytics_parameter,omitempty"`
	// If True then CLI user has permission to run the command
	SetCollectOldLogs *bool `json:"set_collect_old_logs,omitempty"`
	// If True then CLI user has permission to run the command
	SetCoreFilesQuota *bool `json:"set_core_files_quota,omitempty"`
	// If True then CLI user has permission to run the command
	SetHsmGroup *bool `json:"set_hsm_group,omitempty"`
	// If True then CLI user has permission to run the command
	SetWred *bool `json:"set_wred,omitempty"`
	// If True then CLI user has permission to run the command
	SetEnableDohKeyLogging *bool `json:"set_enable_doh_key_logging,omitempty"`
	// If True then CLI user has permission to run the command
	SetEnableDotKeyLogging *bool `json:"set_enable_dot_key_logging,omitempty"`
	// If True then CLI user has permission to run the command
	SetHotfix *bool `json:"set_hotfix,omitempty"`
	// If True then CLI user has permission to run the command
	SetMgm *bool `json:"set_mgm,omitempty"`
	// If True then CLI user has permission to run the command
	SetNtpStratum *bool `json:"set_ntp_stratum,omitempty"`
	// If True then CLI user has permission to run the command
	SetPcDomain *bool `json:"set_pc_domain,omitempty"`
	// If True then CLI user has permission to run the command
	SetReportFrequency *bool `json:"set_report_frequency,omitempty"`
	// If True then enable all fields
	EnableAll *bool `json:"enable_all,omitempty"`
	// If True then disable all fields
	DisableAll           *bool `json:"disable_all,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AdmingroupAdminSetCommands AdmingroupAdminSetCommands

// NewAdmingroupAdminSetCommands instantiates a new AdmingroupAdminSetCommands object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdmingroupAdminSetCommands() *AdmingroupAdminSetCommands {
	this := AdmingroupAdminSetCommands{}
	return &this
}

// NewAdmingroupAdminSetCommandsWithDefaults instantiates a new AdmingroupAdminSetCommands object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdmingroupAdminSetCommandsWithDefaults() *AdmingroupAdminSetCommands {
	this := AdmingroupAdminSetCommands{}
	return &this
}

// GetSetAdminGroupAcl returns the SetAdminGroupAcl field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetAdminGroupAcl() bool {
	if o == nil || IsNil(o.SetAdminGroupAcl) {
		var ret bool
		return ret
	}
	return *o.SetAdminGroupAcl
}

// GetSetAdminGroupAclOk returns a tuple with the SetAdminGroupAcl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetAdminGroupAclOk() (*bool, bool) {
	if o == nil || IsNil(o.SetAdminGroupAcl) {
		return nil, false
	}
	return o.SetAdminGroupAcl, true
}

// HasSetAdminGroupAcl returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetAdminGroupAcl() bool {
	if o != nil && !IsNil(o.SetAdminGroupAcl) {
		return true
	}

	return false
}

// SetSetAdminGroupAcl gets a reference to the given bool and assigns it to the SetAdminGroupAcl field.
func (o *AdmingroupAdminSetCommands) SetSetAdminGroupAcl(v bool) {
	o.SetAdminGroupAcl = &v
}

// GetEtBfd returns the EtBfd field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetEtBfd() bool {
	if o == nil || IsNil(o.EtBfd) {
		var ret bool
		return ret
	}
	return *o.EtBfd
}

// GetEtBfdOk returns a tuple with the EtBfd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetEtBfdOk() (*bool, bool) {
	if o == nil || IsNil(o.EtBfd) {
		return nil, false
	}
	return o.EtBfd, true
}

// HasEtBfd returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasEtBfd() bool {
	if o != nil && !IsNil(o.EtBfd) {
		return true
	}

	return false
}

// SetEtBfd gets a reference to the given bool and assigns it to the EtBfd field.
func (o *AdmingroupAdminSetCommands) SetEtBfd(v bool) {
	o.EtBfd = &v
}

// GetSetBfd returns the SetBfd field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetBfd() bool {
	if o == nil || IsNil(o.SetBfd) {
		var ret bool
		return ret
	}
	return *o.SetBfd
}

// GetSetBfdOk returns a tuple with the SetBfd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetBfdOk() (*bool, bool) {
	if o == nil || IsNil(o.SetBfd) {
		return nil, false
	}
	return o.SetBfd, true
}

// HasSetBfd returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetBfd() bool {
	if o != nil && !IsNil(o.SetBfd) {
		return true
	}

	return false
}

// SetSetBfd gets a reference to the given bool and assigns it to the SetBfd field.
func (o *AdmingroupAdminSetCommands) SetSetBfd(v bool) {
	o.SetBfd = &v
}

// GetSetBgp returns the SetBgp field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetBgp() bool {
	if o == nil || IsNil(o.SetBgp) {
		var ret bool
		return ret
	}
	return *o.SetBgp
}

// GetSetBgpOk returns a tuple with the SetBgp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetBgpOk() (*bool, bool) {
	if o == nil || IsNil(o.SetBgp) {
		return nil, false
	}
	return o.SetBgp, true
}

// HasSetBgp returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetBgp() bool {
	if o != nil && !IsNil(o.SetBgp) {
		return true
	}

	return false
}

// SetSetBgp gets a reference to the given bool and assigns it to the SetBgp field.
func (o *AdmingroupAdminSetCommands) SetSetBgp(v bool) {
	o.SetBgp = &v
}

// GetSetCleanMscache returns the SetCleanMscache field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetCleanMscache() bool {
	if o == nil || IsNil(o.SetCleanMscache) {
		var ret bool
		return ret
	}
	return *o.SetCleanMscache
}

// GetSetCleanMscacheOk returns a tuple with the SetCleanMscache field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetCleanMscacheOk() (*bool, bool) {
	if o == nil || IsNil(o.SetCleanMscache) {
		return nil, false
	}
	return o.SetCleanMscache, true
}

// HasSetCleanMscache returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetCleanMscache() bool {
	if o != nil && !IsNil(o.SetCleanMscache) {
		return true
	}

	return false
}

// SetSetCleanMscache gets a reference to the given bool and assigns it to the SetCleanMscache field.
func (o *AdmingroupAdminSetCommands) SetSetCleanMscache(v bool) {
	o.SetCleanMscache = &v
}

// GetSetDebug returns the SetDebug field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetDebug() bool {
	if o == nil || IsNil(o.SetDebug) {
		var ret bool
		return ret
	}
	return *o.SetDebug
}

// GetSetDebugOk returns a tuple with the SetDebug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetDebugOk() (*bool, bool) {
	if o == nil || IsNil(o.SetDebug) {
		return nil, false
	}
	return o.SetDebug, true
}

// HasSetDebug returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetDebug() bool {
	if o != nil && !IsNil(o.SetDebug) {
		return true
	}

	return false
}

// SetSetDebug gets a reference to the given bool and assigns it to the SetDebug field.
func (o *AdmingroupAdminSetCommands) SetSetDebug(v bool) {
	o.SetDebug = &v
}

// GetSetDebugAnalytics returns the SetDebugAnalytics field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetDebugAnalytics() bool {
	if o == nil || IsNil(o.SetDebugAnalytics) {
		var ret bool
		return ret
	}
	return *o.SetDebugAnalytics
}

// GetSetDebugAnalyticsOk returns a tuple with the SetDebugAnalytics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetDebugAnalyticsOk() (*bool, bool) {
	if o == nil || IsNil(o.SetDebugAnalytics) {
		return nil, false
	}
	return o.SetDebugAnalytics, true
}

// HasSetDebugAnalytics returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetDebugAnalytics() bool {
	if o != nil && !IsNil(o.SetDebugAnalytics) {
		return true
	}

	return false
}

// SetSetDebugAnalytics gets a reference to the given bool and assigns it to the SetDebugAnalytics field.
func (o *AdmingroupAdminSetCommands) SetSetDebugAnalytics(v bool) {
	o.SetDebugAnalytics = &v
}

// GetSetDeleteTasksInterval returns the SetDeleteTasksInterval field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetDeleteTasksInterval() bool {
	if o == nil || IsNil(o.SetDeleteTasksInterval) {
		var ret bool
		return ret
	}
	return *o.SetDeleteTasksInterval
}

// GetSetDeleteTasksIntervalOk returns a tuple with the SetDeleteTasksInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetDeleteTasksIntervalOk() (*bool, bool) {
	if o == nil || IsNil(o.SetDeleteTasksInterval) {
		return nil, false
	}
	return o.SetDeleteTasksInterval, true
}

// HasSetDeleteTasksInterval returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetDeleteTasksInterval() bool {
	if o != nil && !IsNil(o.SetDeleteTasksInterval) {
		return true
	}

	return false
}

// SetSetDeleteTasksInterval gets a reference to the given bool and assigns it to the SetDeleteTasksInterval field.
func (o *AdmingroupAdminSetCommands) SetSetDeleteTasksInterval(v bool) {
	o.SetDeleteTasksInterval = &v
}

// GetSetDisableGuiOneClickSupport returns the SetDisableGuiOneClickSupport field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetDisableGuiOneClickSupport() bool {
	if o == nil || IsNil(o.SetDisableGuiOneClickSupport) {
		var ret bool
		return ret
	}
	return *o.SetDisableGuiOneClickSupport
}

// GetSetDisableGuiOneClickSupportOk returns a tuple with the SetDisableGuiOneClickSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetDisableGuiOneClickSupportOk() (*bool, bool) {
	if o == nil || IsNil(o.SetDisableGuiOneClickSupport) {
		return nil, false
	}
	return o.SetDisableGuiOneClickSupport, true
}

// HasSetDisableGuiOneClickSupport returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetDisableGuiOneClickSupport() bool {
	if o != nil && !IsNil(o.SetDisableGuiOneClickSupport) {
		return true
	}

	return false
}

// SetSetDisableGuiOneClickSupport gets a reference to the given bool and assigns it to the SetDisableGuiOneClickSupport field.
func (o *AdmingroupAdminSetCommands) SetSetDisableGuiOneClickSupport(v bool) {
	o.SetDisableGuiOneClickSupport = &v
}

// GetSetHardwareType returns the SetHardwareType field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetHardwareType() bool {
	if o == nil || IsNil(o.SetHardwareType) {
		var ret bool
		return ret
	}
	return *o.SetHardwareType
}

// GetSetHardwareTypeOk returns a tuple with the SetHardwareType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetHardwareTypeOk() (*bool, bool) {
	if o == nil || IsNil(o.SetHardwareType) {
		return nil, false
	}
	return o.SetHardwareType, true
}

// HasSetHardwareType returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetHardwareType() bool {
	if o != nil && !IsNil(o.SetHardwareType) {
		return true
	}

	return false
}

// SetSetHardwareType gets a reference to the given bool and assigns it to the SetHardwareType field.
func (o *AdmingroupAdminSetCommands) SetSetHardwareType(v bool) {
	o.SetHardwareType = &v
}

// GetSetIbtrap returns the SetIbtrap field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetIbtrap() bool {
	if o == nil || IsNil(o.SetIbtrap) {
		var ret bool
		return ret
	}
	return *o.SetIbtrap
}

// GetSetIbtrapOk returns a tuple with the SetIbtrap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetIbtrapOk() (*bool, bool) {
	if o == nil || IsNil(o.SetIbtrap) {
		return nil, false
	}
	return o.SetIbtrap, true
}

// HasSetIbtrap returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetIbtrap() bool {
	if o != nil && !IsNil(o.SetIbtrap) {
		return true
	}

	return false
}

// SetSetIbtrap gets a reference to the given bool and assigns it to the SetIbtrap field.
func (o *AdmingroupAdminSetCommands) SetSetIbtrap(v bool) {
	o.SetIbtrap = &v
}

// GetSetHwIdent returns the SetHwIdent field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetHwIdent() bool {
	if o == nil || IsNil(o.SetHwIdent) {
		var ret bool
		return ret
	}
	return *o.SetHwIdent
}

// GetSetHwIdentOk returns a tuple with the SetHwIdent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetHwIdentOk() (*bool, bool) {
	if o == nil || IsNil(o.SetHwIdent) {
		return nil, false
	}
	return o.SetHwIdent, true
}

// HasSetHwIdent returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetHwIdent() bool {
	if o != nil && !IsNil(o.SetHwIdent) {
		return true
	}

	return false
}

// SetSetHwIdent gets a reference to the given bool and assigns it to the SetHwIdent field.
func (o *AdmingroupAdminSetCommands) SetSetHwIdent(v bool) {
	o.SetHwIdent = &v
}

// GetSetLines returns the SetLines field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetLines() bool {
	if o == nil || IsNil(o.SetLines) {
		var ret bool
		return ret
	}
	return *o.SetLines
}

// GetSetLinesOk returns a tuple with the SetLines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetLinesOk() (*bool, bool) {
	if o == nil || IsNil(o.SetLines) {
		return nil, false
	}
	return o.SetLines, true
}

// HasSetLines returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetLines() bool {
	if o != nil && !IsNil(o.SetLines) {
		return true
	}

	return false
}

// SetSetLines gets a reference to the given bool and assigns it to the SetLines field.
func (o *AdmingroupAdminSetCommands) SetSetLines(v bool) {
	o.SetLines = &v
}

// GetSetMsMaxConnection returns the SetMsMaxConnection field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetMsMaxConnection() bool {
	if o == nil || IsNil(o.SetMsMaxConnection) {
		var ret bool
		return ret
	}
	return *o.SetMsMaxConnection
}

// GetSetMsMaxConnectionOk returns a tuple with the SetMsMaxConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetMsMaxConnectionOk() (*bool, bool) {
	if o == nil || IsNil(o.SetMsMaxConnection) {
		return nil, false
	}
	return o.SetMsMaxConnection, true
}

// HasSetMsMaxConnection returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetMsMaxConnection() bool {
	if o != nil && !IsNil(o.SetMsMaxConnection) {
		return true
	}

	return false
}

// SetSetMsMaxConnection gets a reference to the given bool and assigns it to the SetMsMaxConnection field.
func (o *AdmingroupAdminSetCommands) SetSetMsMaxConnection(v bool) {
	o.SetMsMaxConnection = &v
}

// GetSetNosafemode returns the SetNosafemode field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetNosafemode() bool {
	if o == nil || IsNil(o.SetNosafemode) {
		var ret bool
		return ret
	}
	return *o.SetNosafemode
}

// GetSetNosafemodeOk returns a tuple with the SetNosafemode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetNosafemodeOk() (*bool, bool) {
	if o == nil || IsNil(o.SetNosafemode) {
		return nil, false
	}
	return o.SetNosafemode, true
}

// HasSetNosafemode returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetNosafemode() bool {
	if o != nil && !IsNil(o.SetNosafemode) {
		return true
	}

	return false
}

// SetSetNosafemode gets a reference to the given bool and assigns it to the SetNosafemode field.
func (o *AdmingroupAdminSetCommands) SetSetNosafemode(v bool) {
	o.SetNosafemode = &v
}

// GetSetOcsp returns the SetOcsp field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetOcsp() bool {
	if o == nil || IsNil(o.SetOcsp) {
		var ret bool
		return ret
	}
	return *o.SetOcsp
}

// GetSetOcspOk returns a tuple with the SetOcsp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetOcspOk() (*bool, bool) {
	if o == nil || IsNil(o.SetOcsp) {
		return nil, false
	}
	return o.SetOcsp, true
}

// HasSetOcsp returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetOcsp() bool {
	if o != nil && !IsNil(o.SetOcsp) {
		return true
	}

	return false
}

// SetSetOcsp gets a reference to the given bool and assigns it to the SetOcsp field.
func (o *AdmingroupAdminSetCommands) SetSetOcsp(v bool) {
	o.SetOcsp = &v
}

// GetSetPurgeRestartObjects returns the SetPurgeRestartObjects field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetPurgeRestartObjects() bool {
	if o == nil || IsNil(o.SetPurgeRestartObjects) {
		var ret bool
		return ret
	}
	return *o.SetPurgeRestartObjects
}

// GetSetPurgeRestartObjectsOk returns a tuple with the SetPurgeRestartObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetPurgeRestartObjectsOk() (*bool, bool) {
	if o == nil || IsNil(o.SetPurgeRestartObjects) {
		return nil, false
	}
	return o.SetPurgeRestartObjects, true
}

// HasSetPurgeRestartObjects returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetPurgeRestartObjects() bool {
	if o != nil && !IsNil(o.SetPurgeRestartObjects) {
		return true
	}

	return false
}

// SetSetPurgeRestartObjects gets a reference to the given bool and assigns it to the SetPurgeRestartObjects field.
func (o *AdmingroupAdminSetCommands) SetSetPurgeRestartObjects(v bool) {
	o.SetPurgeRestartObjects = &v
}

// GetSetReportingUserCapabilities returns the SetReportingUserCapabilities field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetReportingUserCapabilities() bool {
	if o == nil || IsNil(o.SetReportingUserCapabilities) {
		var ret bool
		return ret
	}
	return *o.SetReportingUserCapabilities
}

// GetSetReportingUserCapabilitiesOk returns a tuple with the SetReportingUserCapabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetReportingUserCapabilitiesOk() (*bool, bool) {
	if o == nil || IsNil(o.SetReportingUserCapabilities) {
		return nil, false
	}
	return o.SetReportingUserCapabilities, true
}

// HasSetReportingUserCapabilities returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetReportingUserCapabilities() bool {
	if o != nil && !IsNil(o.SetReportingUserCapabilities) {
		return true
	}

	return false
}

// SetSetReportingUserCapabilities gets a reference to the given bool and assigns it to the SetReportingUserCapabilities field.
func (o *AdmingroupAdminSetCommands) SetSetReportingUserCapabilities(v bool) {
	o.SetReportingUserCapabilities = &v
}

// GetSetRpzRecursiveOnly returns the SetRpzRecursiveOnly field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetRpzRecursiveOnly() bool {
	if o == nil || IsNil(o.SetRpzRecursiveOnly) {
		var ret bool
		return ret
	}
	return *o.SetRpzRecursiveOnly
}

// GetSetRpzRecursiveOnlyOk returns a tuple with the SetRpzRecursiveOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetRpzRecursiveOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.SetRpzRecursiveOnly) {
		return nil, false
	}
	return o.SetRpzRecursiveOnly, true
}

// HasSetRpzRecursiveOnly returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetRpzRecursiveOnly() bool {
	if o != nil && !IsNil(o.SetRpzRecursiveOnly) {
		return true
	}

	return false
}

// SetSetRpzRecursiveOnly gets a reference to the given bool and assigns it to the SetRpzRecursiveOnly field.
func (o *AdmingroupAdminSetCommands) SetSetRpzRecursiveOnly(v bool) {
	o.SetRpzRecursiveOnly = &v
}

// GetSetSafemode returns the SetSafemode field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetSafemode() bool {
	if o == nil || IsNil(o.SetSafemode) {
		var ret bool
		return ret
	}
	return *o.SetSafemode
}

// GetSetSafemodeOk returns a tuple with the SetSafemode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetSafemodeOk() (*bool, bool) {
	if o == nil || IsNil(o.SetSafemode) {
		return nil, false
	}
	return o.SetSafemode, true
}

// HasSetSafemode returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetSafemode() bool {
	if o != nil && !IsNil(o.SetSafemode) {
		return true
	}

	return false
}

// SetSetSafemode gets a reference to the given bool and assigns it to the SetSafemode field.
func (o *AdmingroupAdminSetCommands) SetSetSafemode(v bool) {
	o.SetSafemode = &v
}

// GetSetScheduled returns the SetScheduled field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetScheduled() bool {
	if o == nil || IsNil(o.SetScheduled) {
		var ret bool
		return ret
	}
	return *o.SetScheduled
}

// GetSetScheduledOk returns a tuple with the SetScheduled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetScheduledOk() (*bool, bool) {
	if o == nil || IsNil(o.SetScheduled) {
		return nil, false
	}
	return o.SetScheduled, true
}

// HasSetScheduled returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetScheduled() bool {
	if o != nil && !IsNil(o.SetScheduled) {
		return true
	}

	return false
}

// SetSetScheduled gets a reference to the given bool and assigns it to the SetScheduled field.
func (o *AdmingroupAdminSetCommands) SetSetScheduled(v bool) {
	o.SetScheduled = &v
}

// GetSetSnmptrap returns the SetSnmptrap field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetSnmptrap() bool {
	if o == nil || IsNil(o.SetSnmptrap) {
		var ret bool
		return ret
	}
	return *o.SetSnmptrap
}

// GetSetSnmptrapOk returns a tuple with the SetSnmptrap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetSnmptrapOk() (*bool, bool) {
	if o == nil || IsNil(o.SetSnmptrap) {
		return nil, false
	}
	return o.SetSnmptrap, true
}

// HasSetSnmptrap returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetSnmptrap() bool {
	if o != nil && !IsNil(o.SetSnmptrap) {
		return true
	}

	return false
}

// SetSetSnmptrap gets a reference to the given bool and assigns it to the SetSnmptrap field.
func (o *AdmingroupAdminSetCommands) SetSetSnmptrap(v bool) {
	o.SetSnmptrap = &v
}

// GetSetSysname returns the SetSysname field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetSysname() bool {
	if o == nil || IsNil(o.SetSysname) {
		var ret bool
		return ret
	}
	return *o.SetSysname
}

// GetSetSysnameOk returns a tuple with the SetSysname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetSysnameOk() (*bool, bool) {
	if o == nil || IsNil(o.SetSysname) {
		return nil, false
	}
	return o.SetSysname, true
}

// HasSetSysname returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetSysname() bool {
	if o != nil && !IsNil(o.SetSysname) {
		return true
	}

	return false
}

// SetSetSysname gets a reference to the given bool and assigns it to the SetSysname field.
func (o *AdmingroupAdminSetCommands) SetSetSysname(v bool) {
	o.SetSysname = &v
}

// GetSetTerm returns the SetTerm field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetTerm() bool {
	if o == nil || IsNil(o.SetTerm) {
		var ret bool
		return ret
	}
	return *o.SetTerm
}

// GetSetTermOk returns a tuple with the SetTerm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetTermOk() (*bool, bool) {
	if o == nil || IsNil(o.SetTerm) {
		return nil, false
	}
	return o.SetTerm, true
}

// HasSetTerm returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetTerm() bool {
	if o != nil && !IsNil(o.SetTerm) {
		return true
	}

	return false
}

// SetSetTerm gets a reference to the given bool and assigns it to the SetTerm field.
func (o *AdmingroupAdminSetCommands) SetSetTerm(v bool) {
	o.SetTerm = &v
}

// GetSetThresholdtrap returns the SetThresholdtrap field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetThresholdtrap() bool {
	if o == nil || IsNil(o.SetThresholdtrap) {
		var ret bool
		return ret
	}
	return *o.SetThresholdtrap
}

// GetSetThresholdtrapOk returns a tuple with the SetThresholdtrap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetThresholdtrapOk() (*bool, bool) {
	if o == nil || IsNil(o.SetThresholdtrap) {
		return nil, false
	}
	return o.SetThresholdtrap, true
}

// HasSetThresholdtrap returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetThresholdtrap() bool {
	if o != nil && !IsNil(o.SetThresholdtrap) {
		return true
	}

	return false
}

// SetSetThresholdtrap gets a reference to the given bool and assigns it to the SetThresholdtrap field.
func (o *AdmingroupAdminSetCommands) SetSetThresholdtrap(v bool) {
	o.SetThresholdtrap = &v
}

// GetSetExpertmode returns the SetExpertmode field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetExpertmode() bool {
	if o == nil || IsNil(o.SetExpertmode) {
		var ret bool
		return ret
	}
	return *o.SetExpertmode
}

// GetSetExpertmodeOk returns a tuple with the SetExpertmode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetExpertmodeOk() (*bool, bool) {
	if o == nil || IsNil(o.SetExpertmode) {
		return nil, false
	}
	return o.SetExpertmode, true
}

// HasSetExpertmode returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetExpertmode() bool {
	if o != nil && !IsNil(o.SetExpertmode) {
		return true
	}

	return false
}

// SetSetExpertmode gets a reference to the given bool and assigns it to the SetExpertmode field.
func (o *AdmingroupAdminSetCommands) SetSetExpertmode(v bool) {
	o.SetExpertmode = &v
}

// GetSetMaintenancemode returns the SetMaintenancemode field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetMaintenancemode() bool {
	if o == nil || IsNil(o.SetMaintenancemode) {
		var ret bool
		return ret
	}
	return *o.SetMaintenancemode
}

// GetSetMaintenancemodeOk returns a tuple with the SetMaintenancemode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetMaintenancemodeOk() (*bool, bool) {
	if o == nil || IsNil(o.SetMaintenancemode) {
		return nil, false
	}
	return o.SetMaintenancemode, true
}

// HasSetMaintenancemode returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetMaintenancemode() bool {
	if o != nil && !IsNil(o.SetMaintenancemode) {
		return true
	}

	return false
}

// SetSetMaintenancemode gets a reference to the given bool and assigns it to the SetMaintenancemode field.
func (o *AdmingroupAdminSetCommands) SetSetMaintenancemode(v bool) {
	o.SetMaintenancemode = &v
}

// GetSetTransferReportingData returns the SetTransferReportingData field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetTransferReportingData() bool {
	if o == nil || IsNil(o.SetTransferReportingData) {
		var ret bool
		return ret
	}
	return *o.SetTransferReportingData
}

// GetSetTransferReportingDataOk returns a tuple with the SetTransferReportingData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetTransferReportingDataOk() (*bool, bool) {
	if o == nil || IsNil(o.SetTransferReportingData) {
		return nil, false
	}
	return o.SetTransferReportingData, true
}

// HasSetTransferReportingData returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetTransferReportingData() bool {
	if o != nil && !IsNil(o.SetTransferReportingData) {
		return true
	}

	return false
}

// SetSetTransferReportingData gets a reference to the given bool and assigns it to the SetTransferReportingData field.
func (o *AdmingroupAdminSetCommands) SetSetTransferReportingData(v bool) {
	o.SetTransferReportingData = &v
}

// GetSetTransferSupportbundle returns the SetTransferSupportbundle field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetTransferSupportbundle() bool {
	if o == nil || IsNil(o.SetTransferSupportbundle) {
		var ret bool
		return ret
	}
	return *o.SetTransferSupportbundle
}

// GetSetTransferSupportbundleOk returns a tuple with the SetTransferSupportbundle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetTransferSupportbundleOk() (*bool, bool) {
	if o == nil || IsNil(o.SetTransferSupportbundle) {
		return nil, false
	}
	return o.SetTransferSupportbundle, true
}

// HasSetTransferSupportbundle returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetTransferSupportbundle() bool {
	if o != nil && !IsNil(o.SetTransferSupportbundle) {
		return true
	}

	return false
}

// SetSetTransferSupportbundle gets a reference to the given bool and assigns it to the SetTransferSupportbundle field.
func (o *AdmingroupAdminSetCommands) SetSetTransferSupportbundle(v bool) {
	o.SetTransferSupportbundle = &v
}

// GetSetAnalyticsDatabaseDump returns the SetAnalyticsDatabaseDump field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetAnalyticsDatabaseDump() bool {
	if o == nil || IsNil(o.SetAnalyticsDatabaseDump) {
		var ret bool
		return ret
	}
	return *o.SetAnalyticsDatabaseDump
}

// GetSetAnalyticsDatabaseDumpOk returns a tuple with the SetAnalyticsDatabaseDump field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetAnalyticsDatabaseDumpOk() (*bool, bool) {
	if o == nil || IsNil(o.SetAnalyticsDatabaseDump) {
		return nil, false
	}
	return o.SetAnalyticsDatabaseDump, true
}

// HasSetAnalyticsDatabaseDump returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetAnalyticsDatabaseDump() bool {
	if o != nil && !IsNil(o.SetAnalyticsDatabaseDump) {
		return true
	}

	return false
}

// SetSetAnalyticsDatabaseDump gets a reference to the given bool and assigns it to the SetAnalyticsDatabaseDump field.
func (o *AdmingroupAdminSetCommands) SetSetAnalyticsDatabaseDump(v bool) {
	o.SetAnalyticsDatabaseDump = &v
}

// GetSetAnalyticsParameter returns the SetAnalyticsParameter field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetAnalyticsParameter() bool {
	if o == nil || IsNil(o.SetAnalyticsParameter) {
		var ret bool
		return ret
	}
	return *o.SetAnalyticsParameter
}

// GetSetAnalyticsParameterOk returns a tuple with the SetAnalyticsParameter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetAnalyticsParameterOk() (*bool, bool) {
	if o == nil || IsNil(o.SetAnalyticsParameter) {
		return nil, false
	}
	return o.SetAnalyticsParameter, true
}

// HasSetAnalyticsParameter returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetAnalyticsParameter() bool {
	if o != nil && !IsNil(o.SetAnalyticsParameter) {
		return true
	}

	return false
}

// SetSetAnalyticsParameter gets a reference to the given bool and assigns it to the SetAnalyticsParameter field.
func (o *AdmingroupAdminSetCommands) SetSetAnalyticsParameter(v bool) {
	o.SetAnalyticsParameter = &v
}

// GetSetCollectOldLogs returns the SetCollectOldLogs field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetCollectOldLogs() bool {
	if o == nil || IsNil(o.SetCollectOldLogs) {
		var ret bool
		return ret
	}
	return *o.SetCollectOldLogs
}

// GetSetCollectOldLogsOk returns a tuple with the SetCollectOldLogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetCollectOldLogsOk() (*bool, bool) {
	if o == nil || IsNil(o.SetCollectOldLogs) {
		return nil, false
	}
	return o.SetCollectOldLogs, true
}

// HasSetCollectOldLogs returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetCollectOldLogs() bool {
	if o != nil && !IsNil(o.SetCollectOldLogs) {
		return true
	}

	return false
}

// SetSetCollectOldLogs gets a reference to the given bool and assigns it to the SetCollectOldLogs field.
func (o *AdmingroupAdminSetCommands) SetSetCollectOldLogs(v bool) {
	o.SetCollectOldLogs = &v
}

// GetSetCoreFilesQuota returns the SetCoreFilesQuota field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetCoreFilesQuota() bool {
	if o == nil || IsNil(o.SetCoreFilesQuota) {
		var ret bool
		return ret
	}
	return *o.SetCoreFilesQuota
}

// GetSetCoreFilesQuotaOk returns a tuple with the SetCoreFilesQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetCoreFilesQuotaOk() (*bool, bool) {
	if o == nil || IsNil(o.SetCoreFilesQuota) {
		return nil, false
	}
	return o.SetCoreFilesQuota, true
}

// HasSetCoreFilesQuota returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetCoreFilesQuota() bool {
	if o != nil && !IsNil(o.SetCoreFilesQuota) {
		return true
	}

	return false
}

// SetSetCoreFilesQuota gets a reference to the given bool and assigns it to the SetCoreFilesQuota field.
func (o *AdmingroupAdminSetCommands) SetSetCoreFilesQuota(v bool) {
	o.SetCoreFilesQuota = &v
}

// GetSetHsmGroup returns the SetHsmGroup field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetHsmGroup() bool {
	if o == nil || IsNil(o.SetHsmGroup) {
		var ret bool
		return ret
	}
	return *o.SetHsmGroup
}

// GetSetHsmGroupOk returns a tuple with the SetHsmGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetHsmGroupOk() (*bool, bool) {
	if o == nil || IsNil(o.SetHsmGroup) {
		return nil, false
	}
	return o.SetHsmGroup, true
}

// HasSetHsmGroup returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetHsmGroup() bool {
	if o != nil && !IsNil(o.SetHsmGroup) {
		return true
	}

	return false
}

// SetSetHsmGroup gets a reference to the given bool and assigns it to the SetHsmGroup field.
func (o *AdmingroupAdminSetCommands) SetSetHsmGroup(v bool) {
	o.SetHsmGroup = &v
}

// GetSetWred returns the SetWred field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetWred() bool {
	if o == nil || IsNil(o.SetWred) {
		var ret bool
		return ret
	}
	return *o.SetWred
}

// GetSetWredOk returns a tuple with the SetWred field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetWredOk() (*bool, bool) {
	if o == nil || IsNil(o.SetWred) {
		return nil, false
	}
	return o.SetWred, true
}

// HasSetWred returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetWred() bool {
	if o != nil && !IsNil(o.SetWred) {
		return true
	}

	return false
}

// SetSetWred gets a reference to the given bool and assigns it to the SetWred field.
func (o *AdmingroupAdminSetCommands) SetSetWred(v bool) {
	o.SetWred = &v
}

// GetSetEnableDohKeyLogging returns the SetEnableDohKeyLogging field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetEnableDohKeyLogging() bool {
	if o == nil || IsNil(o.SetEnableDohKeyLogging) {
		var ret bool
		return ret
	}
	return *o.SetEnableDohKeyLogging
}

// GetSetEnableDohKeyLoggingOk returns a tuple with the SetEnableDohKeyLogging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetEnableDohKeyLoggingOk() (*bool, bool) {
	if o == nil || IsNil(o.SetEnableDohKeyLogging) {
		return nil, false
	}
	return o.SetEnableDohKeyLogging, true
}

// HasSetEnableDohKeyLogging returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetEnableDohKeyLogging() bool {
	if o != nil && !IsNil(o.SetEnableDohKeyLogging) {
		return true
	}

	return false
}

// SetSetEnableDohKeyLogging gets a reference to the given bool and assigns it to the SetEnableDohKeyLogging field.
func (o *AdmingroupAdminSetCommands) SetSetEnableDohKeyLogging(v bool) {
	o.SetEnableDohKeyLogging = &v
}

// GetSetEnableDotKeyLogging returns the SetEnableDotKeyLogging field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetEnableDotKeyLogging() bool {
	if o == nil || IsNil(o.SetEnableDotKeyLogging) {
		var ret bool
		return ret
	}
	return *o.SetEnableDotKeyLogging
}

// GetSetEnableDotKeyLoggingOk returns a tuple with the SetEnableDotKeyLogging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetEnableDotKeyLoggingOk() (*bool, bool) {
	if o == nil || IsNil(o.SetEnableDotKeyLogging) {
		return nil, false
	}
	return o.SetEnableDotKeyLogging, true
}

// HasSetEnableDotKeyLogging returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetEnableDotKeyLogging() bool {
	if o != nil && !IsNil(o.SetEnableDotKeyLogging) {
		return true
	}

	return false
}

// SetSetEnableDotKeyLogging gets a reference to the given bool and assigns it to the SetEnableDotKeyLogging field.
func (o *AdmingroupAdminSetCommands) SetSetEnableDotKeyLogging(v bool) {
	o.SetEnableDotKeyLogging = &v
}

// GetSetHotfix returns the SetHotfix field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetHotfix() bool {
	if o == nil || IsNil(o.SetHotfix) {
		var ret bool
		return ret
	}
	return *o.SetHotfix
}

// GetSetHotfixOk returns a tuple with the SetHotfix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetHotfixOk() (*bool, bool) {
	if o == nil || IsNil(o.SetHotfix) {
		return nil, false
	}
	return o.SetHotfix, true
}

// HasSetHotfix returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetHotfix() bool {
	if o != nil && !IsNil(o.SetHotfix) {
		return true
	}

	return false
}

// SetSetHotfix gets a reference to the given bool and assigns it to the SetHotfix field.
func (o *AdmingroupAdminSetCommands) SetSetHotfix(v bool) {
	o.SetHotfix = &v
}

// GetSetMgm returns the SetMgm field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetMgm() bool {
	if o == nil || IsNil(o.SetMgm) {
		var ret bool
		return ret
	}
	return *o.SetMgm
}

// GetSetMgmOk returns a tuple with the SetMgm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetMgmOk() (*bool, bool) {
	if o == nil || IsNil(o.SetMgm) {
		return nil, false
	}
	return o.SetMgm, true
}

// HasSetMgm returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetMgm() bool {
	if o != nil && !IsNil(o.SetMgm) {
		return true
	}

	return false
}

// SetSetMgm gets a reference to the given bool and assigns it to the SetMgm field.
func (o *AdmingroupAdminSetCommands) SetSetMgm(v bool) {
	o.SetMgm = &v
}

// GetSetNtpStratum returns the SetNtpStratum field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetNtpStratum() bool {
	if o == nil || IsNil(o.SetNtpStratum) {
		var ret bool
		return ret
	}
	return *o.SetNtpStratum
}

// GetSetNtpStratumOk returns a tuple with the SetNtpStratum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetNtpStratumOk() (*bool, bool) {
	if o == nil || IsNil(o.SetNtpStratum) {
		return nil, false
	}
	return o.SetNtpStratum, true
}

// HasSetNtpStratum returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetNtpStratum() bool {
	if o != nil && !IsNil(o.SetNtpStratum) {
		return true
	}

	return false
}

// SetSetNtpStratum gets a reference to the given bool and assigns it to the SetNtpStratum field.
func (o *AdmingroupAdminSetCommands) SetSetNtpStratum(v bool) {
	o.SetNtpStratum = &v
}

// GetSetPcDomain returns the SetPcDomain field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetPcDomain() bool {
	if o == nil || IsNil(o.SetPcDomain) {
		var ret bool
		return ret
	}
	return *o.SetPcDomain
}

// GetSetPcDomainOk returns a tuple with the SetPcDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetPcDomainOk() (*bool, bool) {
	if o == nil || IsNil(o.SetPcDomain) {
		return nil, false
	}
	return o.SetPcDomain, true
}

// HasSetPcDomain returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetPcDomain() bool {
	if o != nil && !IsNil(o.SetPcDomain) {
		return true
	}

	return false
}

// SetSetPcDomain gets a reference to the given bool and assigns it to the SetPcDomain field.
func (o *AdmingroupAdminSetCommands) SetSetPcDomain(v bool) {
	o.SetPcDomain = &v
}

// GetSetReportFrequency returns the SetReportFrequency field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetSetReportFrequency() bool {
	if o == nil || IsNil(o.SetReportFrequency) {
		var ret bool
		return ret
	}
	return *o.SetReportFrequency
}

// GetSetReportFrequencyOk returns a tuple with the SetReportFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetSetReportFrequencyOk() (*bool, bool) {
	if o == nil || IsNil(o.SetReportFrequency) {
		return nil, false
	}
	return o.SetReportFrequency, true
}

// HasSetReportFrequency returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasSetReportFrequency() bool {
	if o != nil && !IsNil(o.SetReportFrequency) {
		return true
	}

	return false
}

// SetSetReportFrequency gets a reference to the given bool and assigns it to the SetReportFrequency field.
func (o *AdmingroupAdminSetCommands) SetSetReportFrequency(v bool) {
	o.SetReportFrequency = &v
}

// GetEnableAll returns the EnableAll field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetEnableAll() bool {
	if o == nil || IsNil(o.EnableAll) {
		var ret bool
		return ret
	}
	return *o.EnableAll
}

// GetEnableAllOk returns a tuple with the EnableAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetEnableAllOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableAll) {
		return nil, false
	}
	return o.EnableAll, true
}

// HasEnableAll returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasEnableAll() bool {
	if o != nil && !IsNil(o.EnableAll) {
		return true
	}

	return false
}

// SetEnableAll gets a reference to the given bool and assigns it to the EnableAll field.
func (o *AdmingroupAdminSetCommands) SetEnableAll(v bool) {
	o.EnableAll = &v
}

// GetDisableAll returns the DisableAll field value if set, zero value otherwise.
func (o *AdmingroupAdminSetCommands) GetDisableAll() bool {
	if o == nil || IsNil(o.DisableAll) {
		var ret bool
		return ret
	}
	return *o.DisableAll
}

// GetDisableAllOk returns a tuple with the DisableAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupAdminSetCommands) GetDisableAllOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableAll) {
		return nil, false
	}
	return o.DisableAll, true
}

// HasDisableAll returns a boolean if a field has been set.
func (o *AdmingroupAdminSetCommands) HasDisableAll() bool {
	if o != nil && !IsNil(o.DisableAll) {
		return true
	}

	return false
}

// SetDisableAll gets a reference to the given bool and assigns it to the DisableAll field.
func (o *AdmingroupAdminSetCommands) SetDisableAll(v bool) {
	o.DisableAll = &v
}

func (o AdmingroupAdminSetCommands) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdmingroupAdminSetCommands) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SetAdminGroupAcl) {
		toSerialize["set_admin_group_acl"] = o.SetAdminGroupAcl
	}
	if !IsNil(o.EtBfd) {
		toSerialize["et_bfd"] = o.EtBfd
	}
	if !IsNil(o.SetBfd) {
		toSerialize["set_bfd"] = o.SetBfd
	}
	if !IsNil(o.SetBgp) {
		toSerialize["set_bgp"] = o.SetBgp
	}
	if !IsNil(o.SetCleanMscache) {
		toSerialize["set_clean_mscache"] = o.SetCleanMscache
	}
	if !IsNil(o.SetDebug) {
		toSerialize["set_debug"] = o.SetDebug
	}
	if !IsNil(o.SetDebugAnalytics) {
		toSerialize["set_debug_analytics"] = o.SetDebugAnalytics
	}
	if !IsNil(o.SetDeleteTasksInterval) {
		toSerialize["set_delete_tasks_interval"] = o.SetDeleteTasksInterval
	}
	if !IsNil(o.SetDisableGuiOneClickSupport) {
		toSerialize["set_disable_gui_one_click_support"] = o.SetDisableGuiOneClickSupport
	}
	if !IsNil(o.SetHardwareType) {
		toSerialize["set_hardware_type"] = o.SetHardwareType
	}
	if !IsNil(o.SetIbtrap) {
		toSerialize["set_ibtrap"] = o.SetIbtrap
	}
	if !IsNil(o.SetHwIdent) {
		toSerialize["set_hw_ident"] = o.SetHwIdent
	}
	if !IsNil(o.SetLines) {
		toSerialize["set_lines"] = o.SetLines
	}
	if !IsNil(o.SetMsMaxConnection) {
		toSerialize["set_ms_max_connection"] = o.SetMsMaxConnection
	}
	if !IsNil(o.SetNosafemode) {
		toSerialize["set_nosafemode"] = o.SetNosafemode
	}
	if !IsNil(o.SetOcsp) {
		toSerialize["set_ocsp"] = o.SetOcsp
	}
	if !IsNil(o.SetPurgeRestartObjects) {
		toSerialize["set_purge_restart_objects"] = o.SetPurgeRestartObjects
	}
	if !IsNil(o.SetReportingUserCapabilities) {
		toSerialize["set_reporting_user_capabilities"] = o.SetReportingUserCapabilities
	}
	if !IsNil(o.SetRpzRecursiveOnly) {
		toSerialize["set_rpz_recursive_only"] = o.SetRpzRecursiveOnly
	}
	if !IsNil(o.SetSafemode) {
		toSerialize["set_safemode"] = o.SetSafemode
	}
	if !IsNil(o.SetScheduled) {
		toSerialize["set_scheduled"] = o.SetScheduled
	}
	if !IsNil(o.SetSnmptrap) {
		toSerialize["set_snmptrap"] = o.SetSnmptrap
	}
	if !IsNil(o.SetSysname) {
		toSerialize["set_sysname"] = o.SetSysname
	}
	if !IsNil(o.SetTerm) {
		toSerialize["set_term"] = o.SetTerm
	}
	if !IsNil(o.SetThresholdtrap) {
		toSerialize["set_thresholdtrap"] = o.SetThresholdtrap
	}
	if !IsNil(o.SetExpertmode) {
		toSerialize["set_expertmode"] = o.SetExpertmode
	}
	if !IsNil(o.SetMaintenancemode) {
		toSerialize["set_maintenancemode"] = o.SetMaintenancemode
	}
	if !IsNil(o.SetTransferReportingData) {
		toSerialize["set_transfer_reporting_data"] = o.SetTransferReportingData
	}
	if !IsNil(o.SetTransferSupportbundle) {
		toSerialize["set_transfer_supportbundle"] = o.SetTransferSupportbundle
	}
	if !IsNil(o.SetAnalyticsDatabaseDump) {
		toSerialize["set_analytics_database_dump"] = o.SetAnalyticsDatabaseDump
	}
	if !IsNil(o.SetAnalyticsParameter) {
		toSerialize["set_analytics_parameter"] = o.SetAnalyticsParameter
	}
	if !IsNil(o.SetCollectOldLogs) {
		toSerialize["set_collect_old_logs"] = o.SetCollectOldLogs
	}
	if !IsNil(o.SetCoreFilesQuota) {
		toSerialize["set_core_files_quota"] = o.SetCoreFilesQuota
	}
	if !IsNil(o.SetHsmGroup) {
		toSerialize["set_hsm_group"] = o.SetHsmGroup
	}
	if !IsNil(o.SetWred) {
		toSerialize["set_wred"] = o.SetWred
	}
	if !IsNil(o.SetEnableDohKeyLogging) {
		toSerialize["set_enable_doh_key_logging"] = o.SetEnableDohKeyLogging
	}
	if !IsNil(o.SetEnableDotKeyLogging) {
		toSerialize["set_enable_dot_key_logging"] = o.SetEnableDotKeyLogging
	}
	if !IsNil(o.SetHotfix) {
		toSerialize["set_hotfix"] = o.SetHotfix
	}
	if !IsNil(o.SetMgm) {
		toSerialize["set_mgm"] = o.SetMgm
	}
	if !IsNil(o.SetNtpStratum) {
		toSerialize["set_ntp_stratum"] = o.SetNtpStratum
	}
	if !IsNil(o.SetPcDomain) {
		toSerialize["set_pc_domain"] = o.SetPcDomain
	}
	if !IsNil(o.SetReportFrequency) {
		toSerialize["set_report_frequency"] = o.SetReportFrequency
	}
	if !IsNil(o.EnableAll) {
		toSerialize["enable_all"] = o.EnableAll
	}
	if !IsNil(o.DisableAll) {
		toSerialize["disable_all"] = o.DisableAll
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AdmingroupAdminSetCommands) UnmarshalJSON(data []byte) (err error) {
	varAdmingroupAdminSetCommands := _AdmingroupAdminSetCommands{}

	err = json.Unmarshal(data, &varAdmingroupAdminSetCommands)

	if err != nil {
		return err
	}

	*o = AdmingroupAdminSetCommands(varAdmingroupAdminSetCommands)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "set_admin_group_acl")
		delete(additionalProperties, "et_bfd")
		delete(additionalProperties, "set_bfd")
		delete(additionalProperties, "set_bgp")
		delete(additionalProperties, "set_clean_mscache")
		delete(additionalProperties, "set_debug")
		delete(additionalProperties, "set_debug_analytics")
		delete(additionalProperties, "set_delete_tasks_interval")
		delete(additionalProperties, "set_disable_gui_one_click_support")
		delete(additionalProperties, "set_hardware_type")
		delete(additionalProperties, "set_ibtrap")
		delete(additionalProperties, "set_hw_ident")
		delete(additionalProperties, "set_lines")
		delete(additionalProperties, "set_ms_max_connection")
		delete(additionalProperties, "set_nosafemode")
		delete(additionalProperties, "set_ocsp")
		delete(additionalProperties, "set_purge_restart_objects")
		delete(additionalProperties, "set_reporting_user_capabilities")
		delete(additionalProperties, "set_rpz_recursive_only")
		delete(additionalProperties, "set_safemode")
		delete(additionalProperties, "set_scheduled")
		delete(additionalProperties, "set_snmptrap")
		delete(additionalProperties, "set_sysname")
		delete(additionalProperties, "set_term")
		delete(additionalProperties, "set_thresholdtrap")
		delete(additionalProperties, "set_expertmode")
		delete(additionalProperties, "set_maintenancemode")
		delete(additionalProperties, "set_transfer_reporting_data")
		delete(additionalProperties, "set_transfer_supportbundle")
		delete(additionalProperties, "set_analytics_database_dump")
		delete(additionalProperties, "set_analytics_parameter")
		delete(additionalProperties, "set_collect_old_logs")
		delete(additionalProperties, "set_core_files_quota")
		delete(additionalProperties, "set_hsm_group")
		delete(additionalProperties, "set_wred")
		delete(additionalProperties, "set_enable_doh_key_logging")
		delete(additionalProperties, "set_enable_dot_key_logging")
		delete(additionalProperties, "set_hotfix")
		delete(additionalProperties, "set_mgm")
		delete(additionalProperties, "set_ntp_stratum")
		delete(additionalProperties, "set_pc_domain")
		delete(additionalProperties, "set_report_frequency")
		delete(additionalProperties, "enable_all")
		delete(additionalProperties, "disable_all")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAdmingroupAdminSetCommands struct {
	value *AdmingroupAdminSetCommands
	isSet bool
}

func (v NullableAdmingroupAdminSetCommands) Get() *AdmingroupAdminSetCommands {
	return v.value
}

func (v *NullableAdmingroupAdminSetCommands) Set(val *AdmingroupAdminSetCommands) {
	v.value = val
	v.isSet = true
}

func (v NullableAdmingroupAdminSetCommands) IsSet() bool {
	return v.isSet
}

func (v *NullableAdmingroupAdminSetCommands) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdmingroupAdminSetCommands(val *AdmingroupAdminSetCommands) *NullableAdmingroupAdminSetCommands {
	return &NullableAdmingroupAdminSetCommands{value: val, isSet: true}
}

func (v NullableAdmingroupAdminSetCommands) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdmingroupAdminSetCommands) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
