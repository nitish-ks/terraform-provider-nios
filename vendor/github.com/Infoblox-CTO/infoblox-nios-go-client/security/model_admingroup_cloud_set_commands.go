/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
)

// checks if the AdmingroupCloudSetCommands type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdmingroupCloudSetCommands{}

// AdmingroupCloudSetCommands struct for AdmingroupCloudSetCommands
type AdmingroupCloudSetCommands struct {
	// If True then CLI user has permission to run the command
	SetCloudServicesPortalForceRefresh *bool `json:"set_cloud_services_portal_force_refresh,omitempty"`
	// If True then CLI user has permission to run the command
	SetCloudServicesPortal *bool `json:"set_cloud_services_portal,omitempty"`
	// If True then enable all fields
	EnableAll *bool `json:"enable_all,omitempty"`
	// If True then disable all fields
	DisableAll           *bool `json:"disable_all,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AdmingroupCloudSetCommands AdmingroupCloudSetCommands

// NewAdmingroupCloudSetCommands instantiates a new AdmingroupCloudSetCommands object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdmingroupCloudSetCommands() *AdmingroupCloudSetCommands {
	this := AdmingroupCloudSetCommands{}
	return &this
}

// NewAdmingroupCloudSetCommandsWithDefaults instantiates a new AdmingroupCloudSetCommands object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdmingroupCloudSetCommandsWithDefaults() *AdmingroupCloudSetCommands {
	this := AdmingroupCloudSetCommands{}
	return &this
}

// GetSetCloudServicesPortalForceRefresh returns the SetCloudServicesPortalForceRefresh field value if set, zero value otherwise.
func (o *AdmingroupCloudSetCommands) GetSetCloudServicesPortalForceRefresh() bool {
	if o == nil || IsNil(o.SetCloudServicesPortalForceRefresh) {
		var ret bool
		return ret
	}
	return *o.SetCloudServicesPortalForceRefresh
}

// GetSetCloudServicesPortalForceRefreshOk returns a tuple with the SetCloudServicesPortalForceRefresh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupCloudSetCommands) GetSetCloudServicesPortalForceRefreshOk() (*bool, bool) {
	if o == nil || IsNil(o.SetCloudServicesPortalForceRefresh) {
		return nil, false
	}
	return o.SetCloudServicesPortalForceRefresh, true
}

// HasSetCloudServicesPortalForceRefresh returns a boolean if a field has been set.
func (o *AdmingroupCloudSetCommands) HasSetCloudServicesPortalForceRefresh() bool {
	if o != nil && !IsNil(o.SetCloudServicesPortalForceRefresh) {
		return true
	}

	return false
}

// SetSetCloudServicesPortalForceRefresh gets a reference to the given bool and assigns it to the SetCloudServicesPortalForceRefresh field.
func (o *AdmingroupCloudSetCommands) SetSetCloudServicesPortalForceRefresh(v bool) {
	o.SetCloudServicesPortalForceRefresh = &v
}

// GetSetCloudServicesPortal returns the SetCloudServicesPortal field value if set, zero value otherwise.
func (o *AdmingroupCloudSetCommands) GetSetCloudServicesPortal() bool {
	if o == nil || IsNil(o.SetCloudServicesPortal) {
		var ret bool
		return ret
	}
	return *o.SetCloudServicesPortal
}

// GetSetCloudServicesPortalOk returns a tuple with the SetCloudServicesPortal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupCloudSetCommands) GetSetCloudServicesPortalOk() (*bool, bool) {
	if o == nil || IsNil(o.SetCloudServicesPortal) {
		return nil, false
	}
	return o.SetCloudServicesPortal, true
}

// HasSetCloudServicesPortal returns a boolean if a field has been set.
func (o *AdmingroupCloudSetCommands) HasSetCloudServicesPortal() bool {
	if o != nil && !IsNil(o.SetCloudServicesPortal) {
		return true
	}

	return false
}

// SetSetCloudServicesPortal gets a reference to the given bool and assigns it to the SetCloudServicesPortal field.
func (o *AdmingroupCloudSetCommands) SetSetCloudServicesPortal(v bool) {
	o.SetCloudServicesPortal = &v
}

// GetEnableAll returns the EnableAll field value if set, zero value otherwise.
func (o *AdmingroupCloudSetCommands) GetEnableAll() bool {
	if o == nil || IsNil(o.EnableAll) {
		var ret bool
		return ret
	}
	return *o.EnableAll
}

// GetEnableAllOk returns a tuple with the EnableAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupCloudSetCommands) GetEnableAllOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableAll) {
		return nil, false
	}
	return o.EnableAll, true
}

// HasEnableAll returns a boolean if a field has been set.
func (o *AdmingroupCloudSetCommands) HasEnableAll() bool {
	if o != nil && !IsNil(o.EnableAll) {
		return true
	}

	return false
}

// SetEnableAll gets a reference to the given bool and assigns it to the EnableAll field.
func (o *AdmingroupCloudSetCommands) SetEnableAll(v bool) {
	o.EnableAll = &v
}

// GetDisableAll returns the DisableAll field value if set, zero value otherwise.
func (o *AdmingroupCloudSetCommands) GetDisableAll() bool {
	if o == nil || IsNil(o.DisableAll) {
		var ret bool
		return ret
	}
	return *o.DisableAll
}

// GetDisableAllOk returns a tuple with the DisableAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupCloudSetCommands) GetDisableAllOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableAll) {
		return nil, false
	}
	return o.DisableAll, true
}

// HasDisableAll returns a boolean if a field has been set.
func (o *AdmingroupCloudSetCommands) HasDisableAll() bool {
	if o != nil && !IsNil(o.DisableAll) {
		return true
	}

	return false
}

// SetDisableAll gets a reference to the given bool and assigns it to the DisableAll field.
func (o *AdmingroupCloudSetCommands) SetDisableAll(v bool) {
	o.DisableAll = &v
}

func (o AdmingroupCloudSetCommands) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdmingroupCloudSetCommands) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SetCloudServicesPortalForceRefresh) {
		toSerialize["set_cloud_services_portal_force_refresh"] = o.SetCloudServicesPortalForceRefresh
	}
	if !IsNil(o.SetCloudServicesPortal) {
		toSerialize["set_cloud_services_portal"] = o.SetCloudServicesPortal
	}
	if !IsNil(o.EnableAll) {
		toSerialize["enable_all"] = o.EnableAll
	}
	if !IsNil(o.DisableAll) {
		toSerialize["disable_all"] = o.DisableAll
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AdmingroupCloudSetCommands) UnmarshalJSON(data []byte) (err error) {
	varAdmingroupCloudSetCommands := _AdmingroupCloudSetCommands{}

	err = json.Unmarshal(data, &varAdmingroupCloudSetCommands)

	if err != nil {
		return err
	}

	*o = AdmingroupCloudSetCommands(varAdmingroupCloudSetCommands)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "set_cloud_services_portal_force_refresh")
		delete(additionalProperties, "set_cloud_services_portal")
		delete(additionalProperties, "enable_all")
		delete(additionalProperties, "disable_all")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAdmingroupCloudSetCommands struct {
	value *AdmingroupCloudSetCommands
	isSet bool
}

func (v NullableAdmingroupCloudSetCommands) Get() *AdmingroupCloudSetCommands {
	return v.value
}

func (v *NullableAdmingroupCloudSetCommands) Set(val *AdmingroupCloudSetCommands) {
	v.value = val
	v.isSet = true
}

func (v NullableAdmingroupCloudSetCommands) IsSet() bool {
	return v.isSet
}

func (v *NullableAdmingroupCloudSetCommands) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdmingroupCloudSetCommands(val *AdmingroupCloudSetCommands) *NullableAdmingroupCloudSetCommands {
	return &NullableAdmingroupCloudSetCommands{value: val, isSet: true}
}

func (v NullableAdmingroupCloudSetCommands) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdmingroupCloudSetCommands) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
