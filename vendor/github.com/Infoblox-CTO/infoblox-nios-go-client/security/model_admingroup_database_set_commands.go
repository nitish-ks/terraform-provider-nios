/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
)

// checks if the AdmingroupDatabaseSetCommands type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdmingroupDatabaseSetCommands{}

// AdmingroupDatabaseSetCommands struct for AdmingroupDatabaseSetCommands
type AdmingroupDatabaseSetCommands struct {
	// If True then CLI user has permission to run the command
	SetNamedMaxJournalSize *bool `json:"set_named_max_journal_size,omitempty"`
	// If True then CLI user has permission to run the command
	SetTxnTrace *bool `json:"set_txn_trace,omitempty"`
	// If True then CLI user has permission to run the command
	SetDatabaseTransfer *bool `json:"set_database_transfer,omitempty"`
	// If True then CLI user has permission to run the command
	SetDbRollover *bool `json:"set_db_rollover,omitempty"`
	// If True then CLI user has permission to run the command
	SetDbSnapshot *bool `json:"set_db_snapshot,omitempty"`
	// If True then CLI user has permission to run the command
	SetDbsize *bool `json:"set_dbsize,omitempty"`
	// If True then CLI user has permission to run the command
	SetDebugTools *bool `json:"set_debug_tools,omitempty"`
	// If True then CLI user has permission to run the command
	SetCircTxnTrace *bool `json:"set_circ_txn_trace,omitempty"`
	// If True then enable all fields
	EnableAll *bool `json:"enable_all,omitempty"`
	// If True then disable all fields
	DisableAll           *bool `json:"disable_all,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AdmingroupDatabaseSetCommands AdmingroupDatabaseSetCommands

// NewAdmingroupDatabaseSetCommands instantiates a new AdmingroupDatabaseSetCommands object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdmingroupDatabaseSetCommands() *AdmingroupDatabaseSetCommands {
	this := AdmingroupDatabaseSetCommands{}
	return &this
}

// NewAdmingroupDatabaseSetCommandsWithDefaults instantiates a new AdmingroupDatabaseSetCommands object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdmingroupDatabaseSetCommandsWithDefaults() *AdmingroupDatabaseSetCommands {
	this := AdmingroupDatabaseSetCommands{}
	return &this
}

// GetSetNamedMaxJournalSize returns the SetNamedMaxJournalSize field value if set, zero value otherwise.
func (o *AdmingroupDatabaseSetCommands) GetSetNamedMaxJournalSize() bool {
	if o == nil || IsNil(o.SetNamedMaxJournalSize) {
		var ret bool
		return ret
	}
	return *o.SetNamedMaxJournalSize
}

// GetSetNamedMaxJournalSizeOk returns a tuple with the SetNamedMaxJournalSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDatabaseSetCommands) GetSetNamedMaxJournalSizeOk() (*bool, bool) {
	if o == nil || IsNil(o.SetNamedMaxJournalSize) {
		return nil, false
	}
	return o.SetNamedMaxJournalSize, true
}

// HasSetNamedMaxJournalSize returns a boolean if a field has been set.
func (o *AdmingroupDatabaseSetCommands) HasSetNamedMaxJournalSize() bool {
	if o != nil && !IsNil(o.SetNamedMaxJournalSize) {
		return true
	}

	return false
}

// SetSetNamedMaxJournalSize gets a reference to the given bool and assigns it to the SetNamedMaxJournalSize field.
func (o *AdmingroupDatabaseSetCommands) SetSetNamedMaxJournalSize(v bool) {
	o.SetNamedMaxJournalSize = &v
}

// GetSetTxnTrace returns the SetTxnTrace field value if set, zero value otherwise.
func (o *AdmingroupDatabaseSetCommands) GetSetTxnTrace() bool {
	if o == nil || IsNil(o.SetTxnTrace) {
		var ret bool
		return ret
	}
	return *o.SetTxnTrace
}

// GetSetTxnTraceOk returns a tuple with the SetTxnTrace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDatabaseSetCommands) GetSetTxnTraceOk() (*bool, bool) {
	if o == nil || IsNil(o.SetTxnTrace) {
		return nil, false
	}
	return o.SetTxnTrace, true
}

// HasSetTxnTrace returns a boolean if a field has been set.
func (o *AdmingroupDatabaseSetCommands) HasSetTxnTrace() bool {
	if o != nil && !IsNil(o.SetTxnTrace) {
		return true
	}

	return false
}

// SetSetTxnTrace gets a reference to the given bool and assigns it to the SetTxnTrace field.
func (o *AdmingroupDatabaseSetCommands) SetSetTxnTrace(v bool) {
	o.SetTxnTrace = &v
}

// GetSetDatabaseTransfer returns the SetDatabaseTransfer field value if set, zero value otherwise.
func (o *AdmingroupDatabaseSetCommands) GetSetDatabaseTransfer() bool {
	if o == nil || IsNil(o.SetDatabaseTransfer) {
		var ret bool
		return ret
	}
	return *o.SetDatabaseTransfer
}

// GetSetDatabaseTransferOk returns a tuple with the SetDatabaseTransfer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDatabaseSetCommands) GetSetDatabaseTransferOk() (*bool, bool) {
	if o == nil || IsNil(o.SetDatabaseTransfer) {
		return nil, false
	}
	return o.SetDatabaseTransfer, true
}

// HasSetDatabaseTransfer returns a boolean if a field has been set.
func (o *AdmingroupDatabaseSetCommands) HasSetDatabaseTransfer() bool {
	if o != nil && !IsNil(o.SetDatabaseTransfer) {
		return true
	}

	return false
}

// SetSetDatabaseTransfer gets a reference to the given bool and assigns it to the SetDatabaseTransfer field.
func (o *AdmingroupDatabaseSetCommands) SetSetDatabaseTransfer(v bool) {
	o.SetDatabaseTransfer = &v
}

// GetSetDbRollover returns the SetDbRollover field value if set, zero value otherwise.
func (o *AdmingroupDatabaseSetCommands) GetSetDbRollover() bool {
	if o == nil || IsNil(o.SetDbRollover) {
		var ret bool
		return ret
	}
	return *o.SetDbRollover
}

// GetSetDbRolloverOk returns a tuple with the SetDbRollover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDatabaseSetCommands) GetSetDbRolloverOk() (*bool, bool) {
	if o == nil || IsNil(o.SetDbRollover) {
		return nil, false
	}
	return o.SetDbRollover, true
}

// HasSetDbRollover returns a boolean if a field has been set.
func (o *AdmingroupDatabaseSetCommands) HasSetDbRollover() bool {
	if o != nil && !IsNil(o.SetDbRollover) {
		return true
	}

	return false
}

// SetSetDbRollover gets a reference to the given bool and assigns it to the SetDbRollover field.
func (o *AdmingroupDatabaseSetCommands) SetSetDbRollover(v bool) {
	o.SetDbRollover = &v
}

// GetSetDbSnapshot returns the SetDbSnapshot field value if set, zero value otherwise.
func (o *AdmingroupDatabaseSetCommands) GetSetDbSnapshot() bool {
	if o == nil || IsNil(o.SetDbSnapshot) {
		var ret bool
		return ret
	}
	return *o.SetDbSnapshot
}

// GetSetDbSnapshotOk returns a tuple with the SetDbSnapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDatabaseSetCommands) GetSetDbSnapshotOk() (*bool, bool) {
	if o == nil || IsNil(o.SetDbSnapshot) {
		return nil, false
	}
	return o.SetDbSnapshot, true
}

// HasSetDbSnapshot returns a boolean if a field has been set.
func (o *AdmingroupDatabaseSetCommands) HasSetDbSnapshot() bool {
	if o != nil && !IsNil(o.SetDbSnapshot) {
		return true
	}

	return false
}

// SetSetDbSnapshot gets a reference to the given bool and assigns it to the SetDbSnapshot field.
func (o *AdmingroupDatabaseSetCommands) SetSetDbSnapshot(v bool) {
	o.SetDbSnapshot = &v
}

// GetSetDbsize returns the SetDbsize field value if set, zero value otherwise.
func (o *AdmingroupDatabaseSetCommands) GetSetDbsize() bool {
	if o == nil || IsNil(o.SetDbsize) {
		var ret bool
		return ret
	}
	return *o.SetDbsize
}

// GetSetDbsizeOk returns a tuple with the SetDbsize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDatabaseSetCommands) GetSetDbsizeOk() (*bool, bool) {
	if o == nil || IsNil(o.SetDbsize) {
		return nil, false
	}
	return o.SetDbsize, true
}

// HasSetDbsize returns a boolean if a field has been set.
func (o *AdmingroupDatabaseSetCommands) HasSetDbsize() bool {
	if o != nil && !IsNil(o.SetDbsize) {
		return true
	}

	return false
}

// SetSetDbsize gets a reference to the given bool and assigns it to the SetDbsize field.
func (o *AdmingroupDatabaseSetCommands) SetSetDbsize(v bool) {
	o.SetDbsize = &v
}

// GetSetDebugTools returns the SetDebugTools field value if set, zero value otherwise.
func (o *AdmingroupDatabaseSetCommands) GetSetDebugTools() bool {
	if o == nil || IsNil(o.SetDebugTools) {
		var ret bool
		return ret
	}
	return *o.SetDebugTools
}

// GetSetDebugToolsOk returns a tuple with the SetDebugTools field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDatabaseSetCommands) GetSetDebugToolsOk() (*bool, bool) {
	if o == nil || IsNil(o.SetDebugTools) {
		return nil, false
	}
	return o.SetDebugTools, true
}

// HasSetDebugTools returns a boolean if a field has been set.
func (o *AdmingroupDatabaseSetCommands) HasSetDebugTools() bool {
	if o != nil && !IsNil(o.SetDebugTools) {
		return true
	}

	return false
}

// SetSetDebugTools gets a reference to the given bool and assigns it to the SetDebugTools field.
func (o *AdmingroupDatabaseSetCommands) SetSetDebugTools(v bool) {
	o.SetDebugTools = &v
}

// GetSetCircTxnTrace returns the SetCircTxnTrace field value if set, zero value otherwise.
func (o *AdmingroupDatabaseSetCommands) GetSetCircTxnTrace() bool {
	if o == nil || IsNil(o.SetCircTxnTrace) {
		var ret bool
		return ret
	}
	return *o.SetCircTxnTrace
}

// GetSetCircTxnTraceOk returns a tuple with the SetCircTxnTrace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDatabaseSetCommands) GetSetCircTxnTraceOk() (*bool, bool) {
	if o == nil || IsNil(o.SetCircTxnTrace) {
		return nil, false
	}
	return o.SetCircTxnTrace, true
}

// HasSetCircTxnTrace returns a boolean if a field has been set.
func (o *AdmingroupDatabaseSetCommands) HasSetCircTxnTrace() bool {
	if o != nil && !IsNil(o.SetCircTxnTrace) {
		return true
	}

	return false
}

// SetSetCircTxnTrace gets a reference to the given bool and assigns it to the SetCircTxnTrace field.
func (o *AdmingroupDatabaseSetCommands) SetSetCircTxnTrace(v bool) {
	o.SetCircTxnTrace = &v
}

// GetEnableAll returns the EnableAll field value if set, zero value otherwise.
func (o *AdmingroupDatabaseSetCommands) GetEnableAll() bool {
	if o == nil || IsNil(o.EnableAll) {
		var ret bool
		return ret
	}
	return *o.EnableAll
}

// GetEnableAllOk returns a tuple with the EnableAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDatabaseSetCommands) GetEnableAllOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableAll) {
		return nil, false
	}
	return o.EnableAll, true
}

// HasEnableAll returns a boolean if a field has been set.
func (o *AdmingroupDatabaseSetCommands) HasEnableAll() bool {
	if o != nil && !IsNil(o.EnableAll) {
		return true
	}

	return false
}

// SetEnableAll gets a reference to the given bool and assigns it to the EnableAll field.
func (o *AdmingroupDatabaseSetCommands) SetEnableAll(v bool) {
	o.EnableAll = &v
}

// GetDisableAll returns the DisableAll field value if set, zero value otherwise.
func (o *AdmingroupDatabaseSetCommands) GetDisableAll() bool {
	if o == nil || IsNil(o.DisableAll) {
		var ret bool
		return ret
	}
	return *o.DisableAll
}

// GetDisableAllOk returns a tuple with the DisableAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDatabaseSetCommands) GetDisableAllOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableAll) {
		return nil, false
	}
	return o.DisableAll, true
}

// HasDisableAll returns a boolean if a field has been set.
func (o *AdmingroupDatabaseSetCommands) HasDisableAll() bool {
	if o != nil && !IsNil(o.DisableAll) {
		return true
	}

	return false
}

// SetDisableAll gets a reference to the given bool and assigns it to the DisableAll field.
func (o *AdmingroupDatabaseSetCommands) SetDisableAll(v bool) {
	o.DisableAll = &v
}

func (o AdmingroupDatabaseSetCommands) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdmingroupDatabaseSetCommands) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SetNamedMaxJournalSize) {
		toSerialize["set_named_max_journal_size"] = o.SetNamedMaxJournalSize
	}
	if !IsNil(o.SetTxnTrace) {
		toSerialize["set_txn_trace"] = o.SetTxnTrace
	}
	if !IsNil(o.SetDatabaseTransfer) {
		toSerialize["set_database_transfer"] = o.SetDatabaseTransfer
	}
	if !IsNil(o.SetDbRollover) {
		toSerialize["set_db_rollover"] = o.SetDbRollover
	}
	if !IsNil(o.SetDbSnapshot) {
		toSerialize["set_db_snapshot"] = o.SetDbSnapshot
	}
	if !IsNil(o.SetDbsize) {
		toSerialize["set_dbsize"] = o.SetDbsize
	}
	if !IsNil(o.SetDebugTools) {
		toSerialize["set_debug_tools"] = o.SetDebugTools
	}
	if !IsNil(o.SetCircTxnTrace) {
		toSerialize["set_circ_txn_trace"] = o.SetCircTxnTrace
	}
	if !IsNil(o.EnableAll) {
		toSerialize["enable_all"] = o.EnableAll
	}
	if !IsNil(o.DisableAll) {
		toSerialize["disable_all"] = o.DisableAll
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AdmingroupDatabaseSetCommands) UnmarshalJSON(data []byte) (err error) {
	varAdmingroupDatabaseSetCommands := _AdmingroupDatabaseSetCommands{}

	err = json.Unmarshal(data, &varAdmingroupDatabaseSetCommands)

	if err != nil {
		return err
	}

	*o = AdmingroupDatabaseSetCommands(varAdmingroupDatabaseSetCommands)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "set_named_max_journal_size")
		delete(additionalProperties, "set_txn_trace")
		delete(additionalProperties, "set_database_transfer")
		delete(additionalProperties, "set_db_rollover")
		delete(additionalProperties, "set_db_snapshot")
		delete(additionalProperties, "set_dbsize")
		delete(additionalProperties, "set_debug_tools")
		delete(additionalProperties, "set_circ_txn_trace")
		delete(additionalProperties, "enable_all")
		delete(additionalProperties, "disable_all")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAdmingroupDatabaseSetCommands struct {
	value *AdmingroupDatabaseSetCommands
	isSet bool
}

func (v NullableAdmingroupDatabaseSetCommands) Get() *AdmingroupDatabaseSetCommands {
	return v.value
}

func (v *NullableAdmingroupDatabaseSetCommands) Set(val *AdmingroupDatabaseSetCommands) {
	v.value = val
	v.isSet = true
}

func (v NullableAdmingroupDatabaseSetCommands) IsSet() bool {
	return v.isSet
}

func (v *NullableAdmingroupDatabaseSetCommands) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdmingroupDatabaseSetCommands(val *AdmingroupDatabaseSetCommands) *NullableAdmingroupDatabaseSetCommands {
	return &NullableAdmingroupDatabaseSetCommands{value: val, isSet: true}
}

func (v NullableAdmingroupDatabaseSetCommands) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdmingroupDatabaseSetCommands) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
