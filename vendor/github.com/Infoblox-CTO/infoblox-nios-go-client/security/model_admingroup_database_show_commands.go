/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
)

// checks if the AdmingroupDatabaseShowCommands type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdmingroupDatabaseShowCommands{}

// AdmingroupDatabaseShowCommands struct for AdmingroupDatabaseShowCommands
type AdmingroupDatabaseShowCommands struct {
	// If True then CLI user has permission to run the command
	ShowNamedMaxJournalSize *bool `json:"show_named_max_journal_size,omitempty"`
	// If True then CLI user has permission to run the command
	ShowTxnTrace *bool `json:"show_txn_trace,omitempty"`
	// If True then CLI user has permission to run the command
	ShowDatabaseTransferStatus *bool `json:"show_database_transfer_status,omitempty"`
	// If True then CLI user has permission to run the command
	ShowBackup *bool `json:"show_backup,omitempty"`
	// If True then CLI user has permission to run the command
	ShowDbPh *bool `json:"show_db_ph,omitempty"`
	// If True then CLI user has permission to run the command
	ShowDbsize *bool `json:"show_dbsize,omitempty"`
	// If True then CLI user has permission to run the command
	ShowIbdbstat *bool `json:"show_ibdbstat,omitempty"`
	// If True then enable all fields
	EnableAll *bool `json:"enable_all,omitempty"`
	// If True then disable all fields
	DisableAll           *bool `json:"disable_all,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AdmingroupDatabaseShowCommands AdmingroupDatabaseShowCommands

// NewAdmingroupDatabaseShowCommands instantiates a new AdmingroupDatabaseShowCommands object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdmingroupDatabaseShowCommands() *AdmingroupDatabaseShowCommands {
	this := AdmingroupDatabaseShowCommands{}
	return &this
}

// NewAdmingroupDatabaseShowCommandsWithDefaults instantiates a new AdmingroupDatabaseShowCommands object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdmingroupDatabaseShowCommandsWithDefaults() *AdmingroupDatabaseShowCommands {
	this := AdmingroupDatabaseShowCommands{}
	return &this
}

// GetShowNamedMaxJournalSize returns the ShowNamedMaxJournalSize field value if set, zero value otherwise.
func (o *AdmingroupDatabaseShowCommands) GetShowNamedMaxJournalSize() bool {
	if o == nil || IsNil(o.ShowNamedMaxJournalSize) {
		var ret bool
		return ret
	}
	return *o.ShowNamedMaxJournalSize
}

// GetShowNamedMaxJournalSizeOk returns a tuple with the ShowNamedMaxJournalSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDatabaseShowCommands) GetShowNamedMaxJournalSizeOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowNamedMaxJournalSize) {
		return nil, false
	}
	return o.ShowNamedMaxJournalSize, true
}

// HasShowNamedMaxJournalSize returns a boolean if a field has been set.
func (o *AdmingroupDatabaseShowCommands) HasShowNamedMaxJournalSize() bool {
	if o != nil && !IsNil(o.ShowNamedMaxJournalSize) {
		return true
	}

	return false
}

// SetShowNamedMaxJournalSize gets a reference to the given bool and assigns it to the ShowNamedMaxJournalSize field.
func (o *AdmingroupDatabaseShowCommands) SetShowNamedMaxJournalSize(v bool) {
	o.ShowNamedMaxJournalSize = &v
}

// GetShowTxnTrace returns the ShowTxnTrace field value if set, zero value otherwise.
func (o *AdmingroupDatabaseShowCommands) GetShowTxnTrace() bool {
	if o == nil || IsNil(o.ShowTxnTrace) {
		var ret bool
		return ret
	}
	return *o.ShowTxnTrace
}

// GetShowTxnTraceOk returns a tuple with the ShowTxnTrace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDatabaseShowCommands) GetShowTxnTraceOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowTxnTrace) {
		return nil, false
	}
	return o.ShowTxnTrace, true
}

// HasShowTxnTrace returns a boolean if a field has been set.
func (o *AdmingroupDatabaseShowCommands) HasShowTxnTrace() bool {
	if o != nil && !IsNil(o.ShowTxnTrace) {
		return true
	}

	return false
}

// SetShowTxnTrace gets a reference to the given bool and assigns it to the ShowTxnTrace field.
func (o *AdmingroupDatabaseShowCommands) SetShowTxnTrace(v bool) {
	o.ShowTxnTrace = &v
}

// GetShowDatabaseTransferStatus returns the ShowDatabaseTransferStatus field value if set, zero value otherwise.
func (o *AdmingroupDatabaseShowCommands) GetShowDatabaseTransferStatus() bool {
	if o == nil || IsNil(o.ShowDatabaseTransferStatus) {
		var ret bool
		return ret
	}
	return *o.ShowDatabaseTransferStatus
}

// GetShowDatabaseTransferStatusOk returns a tuple with the ShowDatabaseTransferStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDatabaseShowCommands) GetShowDatabaseTransferStatusOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowDatabaseTransferStatus) {
		return nil, false
	}
	return o.ShowDatabaseTransferStatus, true
}

// HasShowDatabaseTransferStatus returns a boolean if a field has been set.
func (o *AdmingroupDatabaseShowCommands) HasShowDatabaseTransferStatus() bool {
	if o != nil && !IsNil(o.ShowDatabaseTransferStatus) {
		return true
	}

	return false
}

// SetShowDatabaseTransferStatus gets a reference to the given bool and assigns it to the ShowDatabaseTransferStatus field.
func (o *AdmingroupDatabaseShowCommands) SetShowDatabaseTransferStatus(v bool) {
	o.ShowDatabaseTransferStatus = &v
}

// GetShowBackup returns the ShowBackup field value if set, zero value otherwise.
func (o *AdmingroupDatabaseShowCommands) GetShowBackup() bool {
	if o == nil || IsNil(o.ShowBackup) {
		var ret bool
		return ret
	}
	return *o.ShowBackup
}

// GetShowBackupOk returns a tuple with the ShowBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDatabaseShowCommands) GetShowBackupOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowBackup) {
		return nil, false
	}
	return o.ShowBackup, true
}

// HasShowBackup returns a boolean if a field has been set.
func (o *AdmingroupDatabaseShowCommands) HasShowBackup() bool {
	if o != nil && !IsNil(o.ShowBackup) {
		return true
	}

	return false
}

// SetShowBackup gets a reference to the given bool and assigns it to the ShowBackup field.
func (o *AdmingroupDatabaseShowCommands) SetShowBackup(v bool) {
	o.ShowBackup = &v
}

// GetShowDbPh returns the ShowDbPh field value if set, zero value otherwise.
func (o *AdmingroupDatabaseShowCommands) GetShowDbPh() bool {
	if o == nil || IsNil(o.ShowDbPh) {
		var ret bool
		return ret
	}
	return *o.ShowDbPh
}

// GetShowDbPhOk returns a tuple with the ShowDbPh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDatabaseShowCommands) GetShowDbPhOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowDbPh) {
		return nil, false
	}
	return o.ShowDbPh, true
}

// HasShowDbPh returns a boolean if a field has been set.
func (o *AdmingroupDatabaseShowCommands) HasShowDbPh() bool {
	if o != nil && !IsNil(o.ShowDbPh) {
		return true
	}

	return false
}

// SetShowDbPh gets a reference to the given bool and assigns it to the ShowDbPh field.
func (o *AdmingroupDatabaseShowCommands) SetShowDbPh(v bool) {
	o.ShowDbPh = &v
}

// GetShowDbsize returns the ShowDbsize field value if set, zero value otherwise.
func (o *AdmingroupDatabaseShowCommands) GetShowDbsize() bool {
	if o == nil || IsNil(o.ShowDbsize) {
		var ret bool
		return ret
	}
	return *o.ShowDbsize
}

// GetShowDbsizeOk returns a tuple with the ShowDbsize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDatabaseShowCommands) GetShowDbsizeOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowDbsize) {
		return nil, false
	}
	return o.ShowDbsize, true
}

// HasShowDbsize returns a boolean if a field has been set.
func (o *AdmingroupDatabaseShowCommands) HasShowDbsize() bool {
	if o != nil && !IsNil(o.ShowDbsize) {
		return true
	}

	return false
}

// SetShowDbsize gets a reference to the given bool and assigns it to the ShowDbsize field.
func (o *AdmingroupDatabaseShowCommands) SetShowDbsize(v bool) {
	o.ShowDbsize = &v
}

// GetShowIbdbstat returns the ShowIbdbstat field value if set, zero value otherwise.
func (o *AdmingroupDatabaseShowCommands) GetShowIbdbstat() bool {
	if o == nil || IsNil(o.ShowIbdbstat) {
		var ret bool
		return ret
	}
	return *o.ShowIbdbstat
}

// GetShowIbdbstatOk returns a tuple with the ShowIbdbstat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDatabaseShowCommands) GetShowIbdbstatOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowIbdbstat) {
		return nil, false
	}
	return o.ShowIbdbstat, true
}

// HasShowIbdbstat returns a boolean if a field has been set.
func (o *AdmingroupDatabaseShowCommands) HasShowIbdbstat() bool {
	if o != nil && !IsNil(o.ShowIbdbstat) {
		return true
	}

	return false
}

// SetShowIbdbstat gets a reference to the given bool and assigns it to the ShowIbdbstat field.
func (o *AdmingroupDatabaseShowCommands) SetShowIbdbstat(v bool) {
	o.ShowIbdbstat = &v
}

// GetEnableAll returns the EnableAll field value if set, zero value otherwise.
func (o *AdmingroupDatabaseShowCommands) GetEnableAll() bool {
	if o == nil || IsNil(o.EnableAll) {
		var ret bool
		return ret
	}
	return *o.EnableAll
}

// GetEnableAllOk returns a tuple with the EnableAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDatabaseShowCommands) GetEnableAllOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableAll) {
		return nil, false
	}
	return o.EnableAll, true
}

// HasEnableAll returns a boolean if a field has been set.
func (o *AdmingroupDatabaseShowCommands) HasEnableAll() bool {
	if o != nil && !IsNil(o.EnableAll) {
		return true
	}

	return false
}

// SetEnableAll gets a reference to the given bool and assigns it to the EnableAll field.
func (o *AdmingroupDatabaseShowCommands) SetEnableAll(v bool) {
	o.EnableAll = &v
}

// GetDisableAll returns the DisableAll field value if set, zero value otherwise.
func (o *AdmingroupDatabaseShowCommands) GetDisableAll() bool {
	if o == nil || IsNil(o.DisableAll) {
		var ret bool
		return ret
	}
	return *o.DisableAll
}

// GetDisableAllOk returns a tuple with the DisableAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDatabaseShowCommands) GetDisableAllOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableAll) {
		return nil, false
	}
	return o.DisableAll, true
}

// HasDisableAll returns a boolean if a field has been set.
func (o *AdmingroupDatabaseShowCommands) HasDisableAll() bool {
	if o != nil && !IsNil(o.DisableAll) {
		return true
	}

	return false
}

// SetDisableAll gets a reference to the given bool and assigns it to the DisableAll field.
func (o *AdmingroupDatabaseShowCommands) SetDisableAll(v bool) {
	o.DisableAll = &v
}

func (o AdmingroupDatabaseShowCommands) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdmingroupDatabaseShowCommands) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ShowNamedMaxJournalSize) {
		toSerialize["show_named_max_journal_size"] = o.ShowNamedMaxJournalSize
	}
	if !IsNil(o.ShowTxnTrace) {
		toSerialize["show_txn_trace"] = o.ShowTxnTrace
	}
	if !IsNil(o.ShowDatabaseTransferStatus) {
		toSerialize["show_database_transfer_status"] = o.ShowDatabaseTransferStatus
	}
	if !IsNil(o.ShowBackup) {
		toSerialize["show_backup"] = o.ShowBackup
	}
	if !IsNil(o.ShowDbPh) {
		toSerialize["show_db_ph"] = o.ShowDbPh
	}
	if !IsNil(o.ShowDbsize) {
		toSerialize["show_dbsize"] = o.ShowDbsize
	}
	if !IsNil(o.ShowIbdbstat) {
		toSerialize["show_ibdbstat"] = o.ShowIbdbstat
	}
	if !IsNil(o.EnableAll) {
		toSerialize["enable_all"] = o.EnableAll
	}
	if !IsNil(o.DisableAll) {
		toSerialize["disable_all"] = o.DisableAll
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AdmingroupDatabaseShowCommands) UnmarshalJSON(data []byte) (err error) {
	varAdmingroupDatabaseShowCommands := _AdmingroupDatabaseShowCommands{}

	err = json.Unmarshal(data, &varAdmingroupDatabaseShowCommands)

	if err != nil {
		return err
	}

	*o = AdmingroupDatabaseShowCommands(varAdmingroupDatabaseShowCommands)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "show_named_max_journal_size")
		delete(additionalProperties, "show_txn_trace")
		delete(additionalProperties, "show_database_transfer_status")
		delete(additionalProperties, "show_backup")
		delete(additionalProperties, "show_db_ph")
		delete(additionalProperties, "show_dbsize")
		delete(additionalProperties, "show_ibdbstat")
		delete(additionalProperties, "enable_all")
		delete(additionalProperties, "disable_all")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAdmingroupDatabaseShowCommands struct {
	value *AdmingroupDatabaseShowCommands
	isSet bool
}

func (v NullableAdmingroupDatabaseShowCommands) Get() *AdmingroupDatabaseShowCommands {
	return v.value
}

func (v *NullableAdmingroupDatabaseShowCommands) Set(val *AdmingroupDatabaseShowCommands) {
	v.value = val
	v.isSet = true
}

func (v NullableAdmingroupDatabaseShowCommands) IsSet() bool {
	return v.isSet
}

func (v *NullableAdmingroupDatabaseShowCommands) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdmingroupDatabaseShowCommands(val *AdmingroupDatabaseShowCommands) *NullableAdmingroupDatabaseShowCommands {
	return &NullableAdmingroupDatabaseShowCommands{value: val, isSet: true}
}

func (v NullableAdmingroupDatabaseShowCommands) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdmingroupDatabaseShowCommands) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
