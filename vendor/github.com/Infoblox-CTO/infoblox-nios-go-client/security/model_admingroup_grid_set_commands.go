/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
)

// checks if the AdmingroupGridSetCommands type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdmingroupGridSetCommands{}

// AdmingroupGridSetCommands struct for AdmingroupGridSetCommands
type AdmingroupGridSetCommands struct {
	// If True then CLI user has permission to run the command
	SetDefaultRevertWindow *bool `json:"set_default_revert_window,omitempty"`
	// If True then CLI user has permission to run the command
	SetDscp *bool `json:"set_dscp,omitempty"`
	// If True then CLI user has permission to run the command
	SetMembership *bool `json:"set_membership,omitempty"`
	// If True then CLI user has permission to run the command
	SetNogrid *bool `json:"set_nogrid,omitempty"`
	// If True then CLI user has permission to run the command
	SetNomastergrid *bool `json:"set_nomastergrid,omitempty"`
	// If True then CLI user has permission to run the command
	SetPromoteMaster *bool `json:"set_promote_master,omitempty"`
	// If True then CLI user has permission to run the command
	SetRevertGrid *bool `json:"set_revert_grid,omitempty"`
	// If True then CLI user has permission to run the command
	SetToken *bool `json:"set_token,omitempty"`
	// If True then CLI user has permission to run the command
	SetTestPromoteMaster *bool `json:"set_test_promote_master,omitempty"`
	// If True then enable all fields
	EnableAll *bool `json:"enable_all,omitempty"`
	// If True then disable all fields
	DisableAll           *bool `json:"disable_all,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AdmingroupGridSetCommands AdmingroupGridSetCommands

// NewAdmingroupGridSetCommands instantiates a new AdmingroupGridSetCommands object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdmingroupGridSetCommands() *AdmingroupGridSetCommands {
	this := AdmingroupGridSetCommands{}
	return &this
}

// NewAdmingroupGridSetCommandsWithDefaults instantiates a new AdmingroupGridSetCommands object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdmingroupGridSetCommandsWithDefaults() *AdmingroupGridSetCommands {
	this := AdmingroupGridSetCommands{}
	return &this
}

// GetSetDefaultRevertWindow returns the SetDefaultRevertWindow field value if set, zero value otherwise.
func (o *AdmingroupGridSetCommands) GetSetDefaultRevertWindow() bool {
	if o == nil || IsNil(o.SetDefaultRevertWindow) {
		var ret bool
		return ret
	}
	return *o.SetDefaultRevertWindow
}

// GetSetDefaultRevertWindowOk returns a tuple with the SetDefaultRevertWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupGridSetCommands) GetSetDefaultRevertWindowOk() (*bool, bool) {
	if o == nil || IsNil(o.SetDefaultRevertWindow) {
		return nil, false
	}
	return o.SetDefaultRevertWindow, true
}

// HasSetDefaultRevertWindow returns a boolean if a field has been set.
func (o *AdmingroupGridSetCommands) HasSetDefaultRevertWindow() bool {
	if o != nil && !IsNil(o.SetDefaultRevertWindow) {
		return true
	}

	return false
}

// SetSetDefaultRevertWindow gets a reference to the given bool and assigns it to the SetDefaultRevertWindow field.
func (o *AdmingroupGridSetCommands) SetSetDefaultRevertWindow(v bool) {
	o.SetDefaultRevertWindow = &v
}

// GetSetDscp returns the SetDscp field value if set, zero value otherwise.
func (o *AdmingroupGridSetCommands) GetSetDscp() bool {
	if o == nil || IsNil(o.SetDscp) {
		var ret bool
		return ret
	}
	return *o.SetDscp
}

// GetSetDscpOk returns a tuple with the SetDscp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupGridSetCommands) GetSetDscpOk() (*bool, bool) {
	if o == nil || IsNil(o.SetDscp) {
		return nil, false
	}
	return o.SetDscp, true
}

// HasSetDscp returns a boolean if a field has been set.
func (o *AdmingroupGridSetCommands) HasSetDscp() bool {
	if o != nil && !IsNil(o.SetDscp) {
		return true
	}

	return false
}

// SetSetDscp gets a reference to the given bool and assigns it to the SetDscp field.
func (o *AdmingroupGridSetCommands) SetSetDscp(v bool) {
	o.SetDscp = &v
}

// GetSetMembership returns the SetMembership field value if set, zero value otherwise.
func (o *AdmingroupGridSetCommands) GetSetMembership() bool {
	if o == nil || IsNil(o.SetMembership) {
		var ret bool
		return ret
	}
	return *o.SetMembership
}

// GetSetMembershipOk returns a tuple with the SetMembership field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupGridSetCommands) GetSetMembershipOk() (*bool, bool) {
	if o == nil || IsNil(o.SetMembership) {
		return nil, false
	}
	return o.SetMembership, true
}

// HasSetMembership returns a boolean if a field has been set.
func (o *AdmingroupGridSetCommands) HasSetMembership() bool {
	if o != nil && !IsNil(o.SetMembership) {
		return true
	}

	return false
}

// SetSetMembership gets a reference to the given bool and assigns it to the SetMembership field.
func (o *AdmingroupGridSetCommands) SetSetMembership(v bool) {
	o.SetMembership = &v
}

// GetSetNogrid returns the SetNogrid field value if set, zero value otherwise.
func (o *AdmingroupGridSetCommands) GetSetNogrid() bool {
	if o == nil || IsNil(o.SetNogrid) {
		var ret bool
		return ret
	}
	return *o.SetNogrid
}

// GetSetNogridOk returns a tuple with the SetNogrid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupGridSetCommands) GetSetNogridOk() (*bool, bool) {
	if o == nil || IsNil(o.SetNogrid) {
		return nil, false
	}
	return o.SetNogrid, true
}

// HasSetNogrid returns a boolean if a field has been set.
func (o *AdmingroupGridSetCommands) HasSetNogrid() bool {
	if o != nil && !IsNil(o.SetNogrid) {
		return true
	}

	return false
}

// SetSetNogrid gets a reference to the given bool and assigns it to the SetNogrid field.
func (o *AdmingroupGridSetCommands) SetSetNogrid(v bool) {
	o.SetNogrid = &v
}

// GetSetNomastergrid returns the SetNomastergrid field value if set, zero value otherwise.
func (o *AdmingroupGridSetCommands) GetSetNomastergrid() bool {
	if o == nil || IsNil(o.SetNomastergrid) {
		var ret bool
		return ret
	}
	return *o.SetNomastergrid
}

// GetSetNomastergridOk returns a tuple with the SetNomastergrid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupGridSetCommands) GetSetNomastergridOk() (*bool, bool) {
	if o == nil || IsNil(o.SetNomastergrid) {
		return nil, false
	}
	return o.SetNomastergrid, true
}

// HasSetNomastergrid returns a boolean if a field has been set.
func (o *AdmingroupGridSetCommands) HasSetNomastergrid() bool {
	if o != nil && !IsNil(o.SetNomastergrid) {
		return true
	}

	return false
}

// SetSetNomastergrid gets a reference to the given bool and assigns it to the SetNomastergrid field.
func (o *AdmingroupGridSetCommands) SetSetNomastergrid(v bool) {
	o.SetNomastergrid = &v
}

// GetSetPromoteMaster returns the SetPromoteMaster field value if set, zero value otherwise.
func (o *AdmingroupGridSetCommands) GetSetPromoteMaster() bool {
	if o == nil || IsNil(o.SetPromoteMaster) {
		var ret bool
		return ret
	}
	return *o.SetPromoteMaster
}

// GetSetPromoteMasterOk returns a tuple with the SetPromoteMaster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupGridSetCommands) GetSetPromoteMasterOk() (*bool, bool) {
	if o == nil || IsNil(o.SetPromoteMaster) {
		return nil, false
	}
	return o.SetPromoteMaster, true
}

// HasSetPromoteMaster returns a boolean if a field has been set.
func (o *AdmingroupGridSetCommands) HasSetPromoteMaster() bool {
	if o != nil && !IsNil(o.SetPromoteMaster) {
		return true
	}

	return false
}

// SetSetPromoteMaster gets a reference to the given bool and assigns it to the SetPromoteMaster field.
func (o *AdmingroupGridSetCommands) SetSetPromoteMaster(v bool) {
	o.SetPromoteMaster = &v
}

// GetSetRevertGrid returns the SetRevertGrid field value if set, zero value otherwise.
func (o *AdmingroupGridSetCommands) GetSetRevertGrid() bool {
	if o == nil || IsNil(o.SetRevertGrid) {
		var ret bool
		return ret
	}
	return *o.SetRevertGrid
}

// GetSetRevertGridOk returns a tuple with the SetRevertGrid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupGridSetCommands) GetSetRevertGridOk() (*bool, bool) {
	if o == nil || IsNil(o.SetRevertGrid) {
		return nil, false
	}
	return o.SetRevertGrid, true
}

// HasSetRevertGrid returns a boolean if a field has been set.
func (o *AdmingroupGridSetCommands) HasSetRevertGrid() bool {
	if o != nil && !IsNil(o.SetRevertGrid) {
		return true
	}

	return false
}

// SetSetRevertGrid gets a reference to the given bool and assigns it to the SetRevertGrid field.
func (o *AdmingroupGridSetCommands) SetSetRevertGrid(v bool) {
	o.SetRevertGrid = &v
}

// GetSetToken returns the SetToken field value if set, zero value otherwise.
func (o *AdmingroupGridSetCommands) GetSetToken() bool {
	if o == nil || IsNil(o.SetToken) {
		var ret bool
		return ret
	}
	return *o.SetToken
}

// GetSetTokenOk returns a tuple with the SetToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupGridSetCommands) GetSetTokenOk() (*bool, bool) {
	if o == nil || IsNil(o.SetToken) {
		return nil, false
	}
	return o.SetToken, true
}

// HasSetToken returns a boolean if a field has been set.
func (o *AdmingroupGridSetCommands) HasSetToken() bool {
	if o != nil && !IsNil(o.SetToken) {
		return true
	}

	return false
}

// SetSetToken gets a reference to the given bool and assigns it to the SetToken field.
func (o *AdmingroupGridSetCommands) SetSetToken(v bool) {
	o.SetToken = &v
}

// GetSetTestPromoteMaster returns the SetTestPromoteMaster field value if set, zero value otherwise.
func (o *AdmingroupGridSetCommands) GetSetTestPromoteMaster() bool {
	if o == nil || IsNil(o.SetTestPromoteMaster) {
		var ret bool
		return ret
	}
	return *o.SetTestPromoteMaster
}

// GetSetTestPromoteMasterOk returns a tuple with the SetTestPromoteMaster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupGridSetCommands) GetSetTestPromoteMasterOk() (*bool, bool) {
	if o == nil || IsNil(o.SetTestPromoteMaster) {
		return nil, false
	}
	return o.SetTestPromoteMaster, true
}

// HasSetTestPromoteMaster returns a boolean if a field has been set.
func (o *AdmingroupGridSetCommands) HasSetTestPromoteMaster() bool {
	if o != nil && !IsNil(o.SetTestPromoteMaster) {
		return true
	}

	return false
}

// SetSetTestPromoteMaster gets a reference to the given bool and assigns it to the SetTestPromoteMaster field.
func (o *AdmingroupGridSetCommands) SetSetTestPromoteMaster(v bool) {
	o.SetTestPromoteMaster = &v
}

// GetEnableAll returns the EnableAll field value if set, zero value otherwise.
func (o *AdmingroupGridSetCommands) GetEnableAll() bool {
	if o == nil || IsNil(o.EnableAll) {
		var ret bool
		return ret
	}
	return *o.EnableAll
}

// GetEnableAllOk returns a tuple with the EnableAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupGridSetCommands) GetEnableAllOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableAll) {
		return nil, false
	}
	return o.EnableAll, true
}

// HasEnableAll returns a boolean if a field has been set.
func (o *AdmingroupGridSetCommands) HasEnableAll() bool {
	if o != nil && !IsNil(o.EnableAll) {
		return true
	}

	return false
}

// SetEnableAll gets a reference to the given bool and assigns it to the EnableAll field.
func (o *AdmingroupGridSetCommands) SetEnableAll(v bool) {
	o.EnableAll = &v
}

// GetDisableAll returns the DisableAll field value if set, zero value otherwise.
func (o *AdmingroupGridSetCommands) GetDisableAll() bool {
	if o == nil || IsNil(o.DisableAll) {
		var ret bool
		return ret
	}
	return *o.DisableAll
}

// GetDisableAllOk returns a tuple with the DisableAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupGridSetCommands) GetDisableAllOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableAll) {
		return nil, false
	}
	return o.DisableAll, true
}

// HasDisableAll returns a boolean if a field has been set.
func (o *AdmingroupGridSetCommands) HasDisableAll() bool {
	if o != nil && !IsNil(o.DisableAll) {
		return true
	}

	return false
}

// SetDisableAll gets a reference to the given bool and assigns it to the DisableAll field.
func (o *AdmingroupGridSetCommands) SetDisableAll(v bool) {
	o.DisableAll = &v
}

func (o AdmingroupGridSetCommands) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdmingroupGridSetCommands) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SetDefaultRevertWindow) {
		toSerialize["set_default_revert_window"] = o.SetDefaultRevertWindow
	}
	if !IsNil(o.SetDscp) {
		toSerialize["set_dscp"] = o.SetDscp
	}
	if !IsNil(o.SetMembership) {
		toSerialize["set_membership"] = o.SetMembership
	}
	if !IsNil(o.SetNogrid) {
		toSerialize["set_nogrid"] = o.SetNogrid
	}
	if !IsNil(o.SetNomastergrid) {
		toSerialize["set_nomastergrid"] = o.SetNomastergrid
	}
	if !IsNil(o.SetPromoteMaster) {
		toSerialize["set_promote_master"] = o.SetPromoteMaster
	}
	if !IsNil(o.SetRevertGrid) {
		toSerialize["set_revert_grid"] = o.SetRevertGrid
	}
	if !IsNil(o.SetToken) {
		toSerialize["set_token"] = o.SetToken
	}
	if !IsNil(o.SetTestPromoteMaster) {
		toSerialize["set_test_promote_master"] = o.SetTestPromoteMaster
	}
	if !IsNil(o.EnableAll) {
		toSerialize["enable_all"] = o.EnableAll
	}
	if !IsNil(o.DisableAll) {
		toSerialize["disable_all"] = o.DisableAll
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AdmingroupGridSetCommands) UnmarshalJSON(data []byte) (err error) {
	varAdmingroupGridSetCommands := _AdmingroupGridSetCommands{}

	err = json.Unmarshal(data, &varAdmingroupGridSetCommands)

	if err != nil {
		return err
	}

	*o = AdmingroupGridSetCommands(varAdmingroupGridSetCommands)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "set_default_revert_window")
		delete(additionalProperties, "set_dscp")
		delete(additionalProperties, "set_membership")
		delete(additionalProperties, "set_nogrid")
		delete(additionalProperties, "set_nomastergrid")
		delete(additionalProperties, "set_promote_master")
		delete(additionalProperties, "set_revert_grid")
		delete(additionalProperties, "set_token")
		delete(additionalProperties, "set_test_promote_master")
		delete(additionalProperties, "enable_all")
		delete(additionalProperties, "disable_all")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAdmingroupGridSetCommands struct {
	value *AdmingroupGridSetCommands
	isSet bool
}

func (v NullableAdmingroupGridSetCommands) Get() *AdmingroupGridSetCommands {
	return v.value
}

func (v *NullableAdmingroupGridSetCommands) Set(val *AdmingroupGridSetCommands) {
	v.value = val
	v.isSet = true
}

func (v NullableAdmingroupGridSetCommands) IsSet() bool {
	return v.isSet
}

func (v *NullableAdmingroupGridSetCommands) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdmingroupGridSetCommands(val *AdmingroupGridSetCommands) *NullableAdmingroupGridSetCommands {
	return &NullableAdmingroupGridSetCommands{value: val, isSet: true}
}

func (v NullableAdmingroupGridSetCommands) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdmingroupGridSetCommands) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
