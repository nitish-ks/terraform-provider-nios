/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
)

// checks if the AdmingroupGridShowCommands type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdmingroupGridShowCommands{}

// AdmingroupGridShowCommands struct for AdmingroupGridShowCommands
type AdmingroupGridShowCommands struct {
	// If True then CLI user has permission to run the command
	ShowTestPromoteMaster *bool `json:"show_test_promote_master,omitempty"`
	// If True then CLI user has permission to run the command
	ShowToken *bool `json:"show_token,omitempty"`
	// If True then enable all fields
	EnableAll *bool `json:"enable_all,omitempty"`
	// If True then disable all fields
	DisableAll *bool `json:"disable_all,omitempty"`
	// If True then CLI user has permission to run the command
	ShowDscp             *bool `json:"show_dscp,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AdmingroupGridShowCommands AdmingroupGridShowCommands

// NewAdmingroupGridShowCommands instantiates a new AdmingroupGridShowCommands object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdmingroupGridShowCommands() *AdmingroupGridShowCommands {
	this := AdmingroupGridShowCommands{}
	return &this
}

// NewAdmingroupGridShowCommandsWithDefaults instantiates a new AdmingroupGridShowCommands object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdmingroupGridShowCommandsWithDefaults() *AdmingroupGridShowCommands {
	this := AdmingroupGridShowCommands{}
	return &this
}

// GetShowTestPromoteMaster returns the ShowTestPromoteMaster field value if set, zero value otherwise.
func (o *AdmingroupGridShowCommands) GetShowTestPromoteMaster() bool {
	if o == nil || IsNil(o.ShowTestPromoteMaster) {
		var ret bool
		return ret
	}
	return *o.ShowTestPromoteMaster
}

// GetShowTestPromoteMasterOk returns a tuple with the ShowTestPromoteMaster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupGridShowCommands) GetShowTestPromoteMasterOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowTestPromoteMaster) {
		return nil, false
	}
	return o.ShowTestPromoteMaster, true
}

// HasShowTestPromoteMaster returns a boolean if a field has been set.
func (o *AdmingroupGridShowCommands) HasShowTestPromoteMaster() bool {
	if o != nil && !IsNil(o.ShowTestPromoteMaster) {
		return true
	}

	return false
}

// SetShowTestPromoteMaster gets a reference to the given bool and assigns it to the ShowTestPromoteMaster field.
func (o *AdmingroupGridShowCommands) SetShowTestPromoteMaster(v bool) {
	o.ShowTestPromoteMaster = &v
}

// GetShowToken returns the ShowToken field value if set, zero value otherwise.
func (o *AdmingroupGridShowCommands) GetShowToken() bool {
	if o == nil || IsNil(o.ShowToken) {
		var ret bool
		return ret
	}
	return *o.ShowToken
}

// GetShowTokenOk returns a tuple with the ShowToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupGridShowCommands) GetShowTokenOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowToken) {
		return nil, false
	}
	return o.ShowToken, true
}

// HasShowToken returns a boolean if a field has been set.
func (o *AdmingroupGridShowCommands) HasShowToken() bool {
	if o != nil && !IsNil(o.ShowToken) {
		return true
	}

	return false
}

// SetShowToken gets a reference to the given bool and assigns it to the ShowToken field.
func (o *AdmingroupGridShowCommands) SetShowToken(v bool) {
	o.ShowToken = &v
}

// GetEnableAll returns the EnableAll field value if set, zero value otherwise.
func (o *AdmingroupGridShowCommands) GetEnableAll() bool {
	if o == nil || IsNil(o.EnableAll) {
		var ret bool
		return ret
	}
	return *o.EnableAll
}

// GetEnableAllOk returns a tuple with the EnableAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupGridShowCommands) GetEnableAllOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableAll) {
		return nil, false
	}
	return o.EnableAll, true
}

// HasEnableAll returns a boolean if a field has been set.
func (o *AdmingroupGridShowCommands) HasEnableAll() bool {
	if o != nil && !IsNil(o.EnableAll) {
		return true
	}

	return false
}

// SetEnableAll gets a reference to the given bool and assigns it to the EnableAll field.
func (o *AdmingroupGridShowCommands) SetEnableAll(v bool) {
	o.EnableAll = &v
}

// GetDisableAll returns the DisableAll field value if set, zero value otherwise.
func (o *AdmingroupGridShowCommands) GetDisableAll() bool {
	if o == nil || IsNil(o.DisableAll) {
		var ret bool
		return ret
	}
	return *o.DisableAll
}

// GetDisableAllOk returns a tuple with the DisableAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupGridShowCommands) GetDisableAllOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableAll) {
		return nil, false
	}
	return o.DisableAll, true
}

// HasDisableAll returns a boolean if a field has been set.
func (o *AdmingroupGridShowCommands) HasDisableAll() bool {
	if o != nil && !IsNil(o.DisableAll) {
		return true
	}

	return false
}

// SetDisableAll gets a reference to the given bool and assigns it to the DisableAll field.
func (o *AdmingroupGridShowCommands) SetDisableAll(v bool) {
	o.DisableAll = &v
}

// GetShowDscp returns the ShowDscp field value if set, zero value otherwise.
func (o *AdmingroupGridShowCommands) GetShowDscp() bool {
	if o == nil || IsNil(o.ShowDscp) {
		var ret bool
		return ret
	}
	return *o.ShowDscp
}

// GetShowDscpOk returns a tuple with the ShowDscp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupGridShowCommands) GetShowDscpOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowDscp) {
		return nil, false
	}
	return o.ShowDscp, true
}

// HasShowDscp returns a boolean if a field has been set.
func (o *AdmingroupGridShowCommands) HasShowDscp() bool {
	if o != nil && !IsNil(o.ShowDscp) {
		return true
	}

	return false
}

// SetShowDscp gets a reference to the given bool and assigns it to the ShowDscp field.
func (o *AdmingroupGridShowCommands) SetShowDscp(v bool) {
	o.ShowDscp = &v
}

func (o AdmingroupGridShowCommands) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdmingroupGridShowCommands) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ShowTestPromoteMaster) {
		toSerialize["show_test_promote_master"] = o.ShowTestPromoteMaster
	}
	if !IsNil(o.ShowToken) {
		toSerialize["show_token"] = o.ShowToken
	}
	if !IsNil(o.EnableAll) {
		toSerialize["enable_all"] = o.EnableAll
	}
	if !IsNil(o.DisableAll) {
		toSerialize["disable_all"] = o.DisableAll
	}
	if !IsNil(o.ShowDscp) {
		toSerialize["show_dscp"] = o.ShowDscp
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AdmingroupGridShowCommands) UnmarshalJSON(data []byte) (err error) {
	varAdmingroupGridShowCommands := _AdmingroupGridShowCommands{}

	err = json.Unmarshal(data, &varAdmingroupGridShowCommands)

	if err != nil {
		return err
	}

	*o = AdmingroupGridShowCommands(varAdmingroupGridShowCommands)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "show_test_promote_master")
		delete(additionalProperties, "show_token")
		delete(additionalProperties, "enable_all")
		delete(additionalProperties, "disable_all")
		delete(additionalProperties, "show_dscp")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAdmingroupGridShowCommands struct {
	value *AdmingroupGridShowCommands
	isSet bool
}

func (v NullableAdmingroupGridShowCommands) Get() *AdmingroupGridShowCommands {
	return v.value
}

func (v *NullableAdmingroupGridShowCommands) Set(val *AdmingroupGridShowCommands) {
	v.value = val
	v.isSet = true
}

func (v NullableAdmingroupGridShowCommands) IsSet() bool {
	return v.isSet
}

func (v *NullableAdmingroupGridShowCommands) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdmingroupGridShowCommands(val *AdmingroupGridShowCommands) *NullableAdmingroupGridShowCommands {
	return &NullableAdmingroupGridShowCommands{value: val, isSet: true}
}

func (v NullableAdmingroupGridShowCommands) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdmingroupGridShowCommands) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
