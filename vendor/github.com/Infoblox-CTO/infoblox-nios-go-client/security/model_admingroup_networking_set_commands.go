/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
)

// checks if the AdmingroupNetworkingSetCommands type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdmingroupNetworkingSetCommands{}

// AdmingroupNetworkingSetCommands struct for AdmingroupNetworkingSetCommands
type AdmingroupNetworkingSetCommands struct {
	// If True then CLI user has permission to run the command
	SetConnectionLimit *bool `json:"set_connection_limit,omitempty"`
	// If True then CLI user has permission to run the command
	SetDefaultRoute *bool `json:"set_default_route,omitempty"`
	// If True then CLI user has permission to run the command
	SetInterface *bool `json:"set_interface,omitempty"`
	// If True then CLI user has permission to run the command
	SetIpRateLimit *bool `json:"set_ip_rate_limit,omitempty"`
	// If True then CLI user has permission to run the command
	SetIpv6DisableOnDad *bool `json:"set_ipv6_disable_on_dad,omitempty"`
	// If True then CLI user has permission to run the command
	SetIpv6Neighbor *bool `json:"set_ipv6_neighbor,omitempty"`
	// If True then CLI user has permission to run the command
	SetIpv6Ospf *bool `json:"set_ipv6_ospf,omitempty"`
	// If True then CLI user has permission to run the command
	SetIpv6Status *bool `json:"set_ipv6_status,omitempty"`
	// If True then CLI user has permission to run the command
	SetLom *bool `json:"set_lom,omitempty"`
	// If True then CLI user has permission to run the command
	SetMldVersion1 *bool `json:"set_mld_version_1,omitempty"`
	// If True then CLI user has permission to run the command
	SetNamedRecvSockBufSize *bool `json:"set_named_recv_sock_buf_size,omitempty"`
	// If True then CLI user has permission to run the command
	SetNamedTcpClientsLimit *bool `json:"set_named_tcp_clients_limit,omitempty"`
	// If True then CLI user has permission to run the command
	SetNetwork *bool `json:"set_network,omitempty"`
	// If True then CLI user has permission to run the command
	SetOspf *bool `json:"set_ospf,omitempty"`
	// If True then CLI user has permission to run the command
	SetPrompt *bool `json:"set_prompt,omitempty"`
	// If True then CLI user has permission to run the command
	SetRemoteConsole *bool `json:"set_remote_console,omitempty"`
	// If True then CLI user has permission to run the command
	SetStaticRoute *bool `json:"set_static_route,omitempty"`
	// If True then CLI user has permission to run the command
	SetTcpTimestamps *bool `json:"set_tcp_timestamps,omitempty"`
	// If True then CLI user has permission to run the command
	SetTrafficCapture *bool `json:"set_traffic_capture,omitempty"`
	// If True then CLI user has permission to run the command
	SetWinsForwarding *bool `json:"set_wins_forwarding,omitempty"`
	// If True then enable all fields
	EnableAll *bool `json:"enable_all,omitempty"`
	// If True then disable all fields
	DisableAll           *bool `json:"disable_all,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AdmingroupNetworkingSetCommands AdmingroupNetworkingSetCommands

// NewAdmingroupNetworkingSetCommands instantiates a new AdmingroupNetworkingSetCommands object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdmingroupNetworkingSetCommands() *AdmingroupNetworkingSetCommands {
	this := AdmingroupNetworkingSetCommands{}
	return &this
}

// NewAdmingroupNetworkingSetCommandsWithDefaults instantiates a new AdmingroupNetworkingSetCommands object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdmingroupNetworkingSetCommandsWithDefaults() *AdmingroupNetworkingSetCommands {
	this := AdmingroupNetworkingSetCommands{}
	return &this
}

// GetSetConnectionLimit returns the SetConnectionLimit field value if set, zero value otherwise.
func (o *AdmingroupNetworkingSetCommands) GetSetConnectionLimit() bool {
	if o == nil || IsNil(o.SetConnectionLimit) {
		var ret bool
		return ret
	}
	return *o.SetConnectionLimit
}

// GetSetConnectionLimitOk returns a tuple with the SetConnectionLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingSetCommands) GetSetConnectionLimitOk() (*bool, bool) {
	if o == nil || IsNil(o.SetConnectionLimit) {
		return nil, false
	}
	return o.SetConnectionLimit, true
}

// HasSetConnectionLimit returns a boolean if a field has been set.
func (o *AdmingroupNetworkingSetCommands) HasSetConnectionLimit() bool {
	if o != nil && !IsNil(o.SetConnectionLimit) {
		return true
	}

	return false
}

// SetSetConnectionLimit gets a reference to the given bool and assigns it to the SetConnectionLimit field.
func (o *AdmingroupNetworkingSetCommands) SetSetConnectionLimit(v bool) {
	o.SetConnectionLimit = &v
}

// GetSetDefaultRoute returns the SetDefaultRoute field value if set, zero value otherwise.
func (o *AdmingroupNetworkingSetCommands) GetSetDefaultRoute() bool {
	if o == nil || IsNil(o.SetDefaultRoute) {
		var ret bool
		return ret
	}
	return *o.SetDefaultRoute
}

// GetSetDefaultRouteOk returns a tuple with the SetDefaultRoute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingSetCommands) GetSetDefaultRouteOk() (*bool, bool) {
	if o == nil || IsNil(o.SetDefaultRoute) {
		return nil, false
	}
	return o.SetDefaultRoute, true
}

// HasSetDefaultRoute returns a boolean if a field has been set.
func (o *AdmingroupNetworkingSetCommands) HasSetDefaultRoute() bool {
	if o != nil && !IsNil(o.SetDefaultRoute) {
		return true
	}

	return false
}

// SetSetDefaultRoute gets a reference to the given bool and assigns it to the SetDefaultRoute field.
func (o *AdmingroupNetworkingSetCommands) SetSetDefaultRoute(v bool) {
	o.SetDefaultRoute = &v
}

// GetSetInterface returns the SetInterface field value if set, zero value otherwise.
func (o *AdmingroupNetworkingSetCommands) GetSetInterface() bool {
	if o == nil || IsNil(o.SetInterface) {
		var ret bool
		return ret
	}
	return *o.SetInterface
}

// GetSetInterfaceOk returns a tuple with the SetInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingSetCommands) GetSetInterfaceOk() (*bool, bool) {
	if o == nil || IsNil(o.SetInterface) {
		return nil, false
	}
	return o.SetInterface, true
}

// HasSetInterface returns a boolean if a field has been set.
func (o *AdmingroupNetworkingSetCommands) HasSetInterface() bool {
	if o != nil && !IsNil(o.SetInterface) {
		return true
	}

	return false
}

// SetSetInterface gets a reference to the given bool and assigns it to the SetInterface field.
func (o *AdmingroupNetworkingSetCommands) SetSetInterface(v bool) {
	o.SetInterface = &v
}

// GetSetIpRateLimit returns the SetIpRateLimit field value if set, zero value otherwise.
func (o *AdmingroupNetworkingSetCommands) GetSetIpRateLimit() bool {
	if o == nil || IsNil(o.SetIpRateLimit) {
		var ret bool
		return ret
	}
	return *o.SetIpRateLimit
}

// GetSetIpRateLimitOk returns a tuple with the SetIpRateLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingSetCommands) GetSetIpRateLimitOk() (*bool, bool) {
	if o == nil || IsNil(o.SetIpRateLimit) {
		return nil, false
	}
	return o.SetIpRateLimit, true
}

// HasSetIpRateLimit returns a boolean if a field has been set.
func (o *AdmingroupNetworkingSetCommands) HasSetIpRateLimit() bool {
	if o != nil && !IsNil(o.SetIpRateLimit) {
		return true
	}

	return false
}

// SetSetIpRateLimit gets a reference to the given bool and assigns it to the SetIpRateLimit field.
func (o *AdmingroupNetworkingSetCommands) SetSetIpRateLimit(v bool) {
	o.SetIpRateLimit = &v
}

// GetSetIpv6DisableOnDad returns the SetIpv6DisableOnDad field value if set, zero value otherwise.
func (o *AdmingroupNetworkingSetCommands) GetSetIpv6DisableOnDad() bool {
	if o == nil || IsNil(o.SetIpv6DisableOnDad) {
		var ret bool
		return ret
	}
	return *o.SetIpv6DisableOnDad
}

// GetSetIpv6DisableOnDadOk returns a tuple with the SetIpv6DisableOnDad field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingSetCommands) GetSetIpv6DisableOnDadOk() (*bool, bool) {
	if o == nil || IsNil(o.SetIpv6DisableOnDad) {
		return nil, false
	}
	return o.SetIpv6DisableOnDad, true
}

// HasSetIpv6DisableOnDad returns a boolean if a field has been set.
func (o *AdmingroupNetworkingSetCommands) HasSetIpv6DisableOnDad() bool {
	if o != nil && !IsNil(o.SetIpv6DisableOnDad) {
		return true
	}

	return false
}

// SetSetIpv6DisableOnDad gets a reference to the given bool and assigns it to the SetIpv6DisableOnDad field.
func (o *AdmingroupNetworkingSetCommands) SetSetIpv6DisableOnDad(v bool) {
	o.SetIpv6DisableOnDad = &v
}

// GetSetIpv6Neighbor returns the SetIpv6Neighbor field value if set, zero value otherwise.
func (o *AdmingroupNetworkingSetCommands) GetSetIpv6Neighbor() bool {
	if o == nil || IsNil(o.SetIpv6Neighbor) {
		var ret bool
		return ret
	}
	return *o.SetIpv6Neighbor
}

// GetSetIpv6NeighborOk returns a tuple with the SetIpv6Neighbor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingSetCommands) GetSetIpv6NeighborOk() (*bool, bool) {
	if o == nil || IsNil(o.SetIpv6Neighbor) {
		return nil, false
	}
	return o.SetIpv6Neighbor, true
}

// HasSetIpv6Neighbor returns a boolean if a field has been set.
func (o *AdmingroupNetworkingSetCommands) HasSetIpv6Neighbor() bool {
	if o != nil && !IsNil(o.SetIpv6Neighbor) {
		return true
	}

	return false
}

// SetSetIpv6Neighbor gets a reference to the given bool and assigns it to the SetIpv6Neighbor field.
func (o *AdmingroupNetworkingSetCommands) SetSetIpv6Neighbor(v bool) {
	o.SetIpv6Neighbor = &v
}

// GetSetIpv6Ospf returns the SetIpv6Ospf field value if set, zero value otherwise.
func (o *AdmingroupNetworkingSetCommands) GetSetIpv6Ospf() bool {
	if o == nil || IsNil(o.SetIpv6Ospf) {
		var ret bool
		return ret
	}
	return *o.SetIpv6Ospf
}

// GetSetIpv6OspfOk returns a tuple with the SetIpv6Ospf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingSetCommands) GetSetIpv6OspfOk() (*bool, bool) {
	if o == nil || IsNil(o.SetIpv6Ospf) {
		return nil, false
	}
	return o.SetIpv6Ospf, true
}

// HasSetIpv6Ospf returns a boolean if a field has been set.
func (o *AdmingroupNetworkingSetCommands) HasSetIpv6Ospf() bool {
	if o != nil && !IsNil(o.SetIpv6Ospf) {
		return true
	}

	return false
}

// SetSetIpv6Ospf gets a reference to the given bool and assigns it to the SetIpv6Ospf field.
func (o *AdmingroupNetworkingSetCommands) SetSetIpv6Ospf(v bool) {
	o.SetIpv6Ospf = &v
}

// GetSetIpv6Status returns the SetIpv6Status field value if set, zero value otherwise.
func (o *AdmingroupNetworkingSetCommands) GetSetIpv6Status() bool {
	if o == nil || IsNil(o.SetIpv6Status) {
		var ret bool
		return ret
	}
	return *o.SetIpv6Status
}

// GetSetIpv6StatusOk returns a tuple with the SetIpv6Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingSetCommands) GetSetIpv6StatusOk() (*bool, bool) {
	if o == nil || IsNil(o.SetIpv6Status) {
		return nil, false
	}
	return o.SetIpv6Status, true
}

// HasSetIpv6Status returns a boolean if a field has been set.
func (o *AdmingroupNetworkingSetCommands) HasSetIpv6Status() bool {
	if o != nil && !IsNil(o.SetIpv6Status) {
		return true
	}

	return false
}

// SetSetIpv6Status gets a reference to the given bool and assigns it to the SetIpv6Status field.
func (o *AdmingroupNetworkingSetCommands) SetSetIpv6Status(v bool) {
	o.SetIpv6Status = &v
}

// GetSetLom returns the SetLom field value if set, zero value otherwise.
func (o *AdmingroupNetworkingSetCommands) GetSetLom() bool {
	if o == nil || IsNil(o.SetLom) {
		var ret bool
		return ret
	}
	return *o.SetLom
}

// GetSetLomOk returns a tuple with the SetLom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingSetCommands) GetSetLomOk() (*bool, bool) {
	if o == nil || IsNil(o.SetLom) {
		return nil, false
	}
	return o.SetLom, true
}

// HasSetLom returns a boolean if a field has been set.
func (o *AdmingroupNetworkingSetCommands) HasSetLom() bool {
	if o != nil && !IsNil(o.SetLom) {
		return true
	}

	return false
}

// SetSetLom gets a reference to the given bool and assigns it to the SetLom field.
func (o *AdmingroupNetworkingSetCommands) SetSetLom(v bool) {
	o.SetLom = &v
}

// GetSetMldVersion1 returns the SetMldVersion1 field value if set, zero value otherwise.
func (o *AdmingroupNetworkingSetCommands) GetSetMldVersion1() bool {
	if o == nil || IsNil(o.SetMldVersion1) {
		var ret bool
		return ret
	}
	return *o.SetMldVersion1
}

// GetSetMldVersion1Ok returns a tuple with the SetMldVersion1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingSetCommands) GetSetMldVersion1Ok() (*bool, bool) {
	if o == nil || IsNil(o.SetMldVersion1) {
		return nil, false
	}
	return o.SetMldVersion1, true
}

// HasSetMldVersion1 returns a boolean if a field has been set.
func (o *AdmingroupNetworkingSetCommands) HasSetMldVersion1() bool {
	if o != nil && !IsNil(o.SetMldVersion1) {
		return true
	}

	return false
}

// SetSetMldVersion1 gets a reference to the given bool and assigns it to the SetMldVersion1 field.
func (o *AdmingroupNetworkingSetCommands) SetSetMldVersion1(v bool) {
	o.SetMldVersion1 = &v
}

// GetSetNamedRecvSockBufSize returns the SetNamedRecvSockBufSize field value if set, zero value otherwise.
func (o *AdmingroupNetworkingSetCommands) GetSetNamedRecvSockBufSize() bool {
	if o == nil || IsNil(o.SetNamedRecvSockBufSize) {
		var ret bool
		return ret
	}
	return *o.SetNamedRecvSockBufSize
}

// GetSetNamedRecvSockBufSizeOk returns a tuple with the SetNamedRecvSockBufSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingSetCommands) GetSetNamedRecvSockBufSizeOk() (*bool, bool) {
	if o == nil || IsNil(o.SetNamedRecvSockBufSize) {
		return nil, false
	}
	return o.SetNamedRecvSockBufSize, true
}

// HasSetNamedRecvSockBufSize returns a boolean if a field has been set.
func (o *AdmingroupNetworkingSetCommands) HasSetNamedRecvSockBufSize() bool {
	if o != nil && !IsNil(o.SetNamedRecvSockBufSize) {
		return true
	}

	return false
}

// SetSetNamedRecvSockBufSize gets a reference to the given bool and assigns it to the SetNamedRecvSockBufSize field.
func (o *AdmingroupNetworkingSetCommands) SetSetNamedRecvSockBufSize(v bool) {
	o.SetNamedRecvSockBufSize = &v
}

// GetSetNamedTcpClientsLimit returns the SetNamedTcpClientsLimit field value if set, zero value otherwise.
func (o *AdmingroupNetworkingSetCommands) GetSetNamedTcpClientsLimit() bool {
	if o == nil || IsNil(o.SetNamedTcpClientsLimit) {
		var ret bool
		return ret
	}
	return *o.SetNamedTcpClientsLimit
}

// GetSetNamedTcpClientsLimitOk returns a tuple with the SetNamedTcpClientsLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingSetCommands) GetSetNamedTcpClientsLimitOk() (*bool, bool) {
	if o == nil || IsNil(o.SetNamedTcpClientsLimit) {
		return nil, false
	}
	return o.SetNamedTcpClientsLimit, true
}

// HasSetNamedTcpClientsLimit returns a boolean if a field has been set.
func (o *AdmingroupNetworkingSetCommands) HasSetNamedTcpClientsLimit() bool {
	if o != nil && !IsNil(o.SetNamedTcpClientsLimit) {
		return true
	}

	return false
}

// SetSetNamedTcpClientsLimit gets a reference to the given bool and assigns it to the SetNamedTcpClientsLimit field.
func (o *AdmingroupNetworkingSetCommands) SetSetNamedTcpClientsLimit(v bool) {
	o.SetNamedTcpClientsLimit = &v
}

// GetSetNetwork returns the SetNetwork field value if set, zero value otherwise.
func (o *AdmingroupNetworkingSetCommands) GetSetNetwork() bool {
	if o == nil || IsNil(o.SetNetwork) {
		var ret bool
		return ret
	}
	return *o.SetNetwork
}

// GetSetNetworkOk returns a tuple with the SetNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingSetCommands) GetSetNetworkOk() (*bool, bool) {
	if o == nil || IsNil(o.SetNetwork) {
		return nil, false
	}
	return o.SetNetwork, true
}

// HasSetNetwork returns a boolean if a field has been set.
func (o *AdmingroupNetworkingSetCommands) HasSetNetwork() bool {
	if o != nil && !IsNil(o.SetNetwork) {
		return true
	}

	return false
}

// SetSetNetwork gets a reference to the given bool and assigns it to the SetNetwork field.
func (o *AdmingroupNetworkingSetCommands) SetSetNetwork(v bool) {
	o.SetNetwork = &v
}

// GetSetOspf returns the SetOspf field value if set, zero value otherwise.
func (o *AdmingroupNetworkingSetCommands) GetSetOspf() bool {
	if o == nil || IsNil(o.SetOspf) {
		var ret bool
		return ret
	}
	return *o.SetOspf
}

// GetSetOspfOk returns a tuple with the SetOspf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingSetCommands) GetSetOspfOk() (*bool, bool) {
	if o == nil || IsNil(o.SetOspf) {
		return nil, false
	}
	return o.SetOspf, true
}

// HasSetOspf returns a boolean if a field has been set.
func (o *AdmingroupNetworkingSetCommands) HasSetOspf() bool {
	if o != nil && !IsNil(o.SetOspf) {
		return true
	}

	return false
}

// SetSetOspf gets a reference to the given bool and assigns it to the SetOspf field.
func (o *AdmingroupNetworkingSetCommands) SetSetOspf(v bool) {
	o.SetOspf = &v
}

// GetSetPrompt returns the SetPrompt field value if set, zero value otherwise.
func (o *AdmingroupNetworkingSetCommands) GetSetPrompt() bool {
	if o == nil || IsNil(o.SetPrompt) {
		var ret bool
		return ret
	}
	return *o.SetPrompt
}

// GetSetPromptOk returns a tuple with the SetPrompt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingSetCommands) GetSetPromptOk() (*bool, bool) {
	if o == nil || IsNil(o.SetPrompt) {
		return nil, false
	}
	return o.SetPrompt, true
}

// HasSetPrompt returns a boolean if a field has been set.
func (o *AdmingroupNetworkingSetCommands) HasSetPrompt() bool {
	if o != nil && !IsNil(o.SetPrompt) {
		return true
	}

	return false
}

// SetSetPrompt gets a reference to the given bool and assigns it to the SetPrompt field.
func (o *AdmingroupNetworkingSetCommands) SetSetPrompt(v bool) {
	o.SetPrompt = &v
}

// GetSetRemoteConsole returns the SetRemoteConsole field value if set, zero value otherwise.
func (o *AdmingroupNetworkingSetCommands) GetSetRemoteConsole() bool {
	if o == nil || IsNil(o.SetRemoteConsole) {
		var ret bool
		return ret
	}
	return *o.SetRemoteConsole
}

// GetSetRemoteConsoleOk returns a tuple with the SetRemoteConsole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingSetCommands) GetSetRemoteConsoleOk() (*bool, bool) {
	if o == nil || IsNil(o.SetRemoteConsole) {
		return nil, false
	}
	return o.SetRemoteConsole, true
}

// HasSetRemoteConsole returns a boolean if a field has been set.
func (o *AdmingroupNetworkingSetCommands) HasSetRemoteConsole() bool {
	if o != nil && !IsNil(o.SetRemoteConsole) {
		return true
	}

	return false
}

// SetSetRemoteConsole gets a reference to the given bool and assigns it to the SetRemoteConsole field.
func (o *AdmingroupNetworkingSetCommands) SetSetRemoteConsole(v bool) {
	o.SetRemoteConsole = &v
}

// GetSetStaticRoute returns the SetStaticRoute field value if set, zero value otherwise.
func (o *AdmingroupNetworkingSetCommands) GetSetStaticRoute() bool {
	if o == nil || IsNil(o.SetStaticRoute) {
		var ret bool
		return ret
	}
	return *o.SetStaticRoute
}

// GetSetStaticRouteOk returns a tuple with the SetStaticRoute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingSetCommands) GetSetStaticRouteOk() (*bool, bool) {
	if o == nil || IsNil(o.SetStaticRoute) {
		return nil, false
	}
	return o.SetStaticRoute, true
}

// HasSetStaticRoute returns a boolean if a field has been set.
func (o *AdmingroupNetworkingSetCommands) HasSetStaticRoute() bool {
	if o != nil && !IsNil(o.SetStaticRoute) {
		return true
	}

	return false
}

// SetSetStaticRoute gets a reference to the given bool and assigns it to the SetStaticRoute field.
func (o *AdmingroupNetworkingSetCommands) SetSetStaticRoute(v bool) {
	o.SetStaticRoute = &v
}

// GetSetTcpTimestamps returns the SetTcpTimestamps field value if set, zero value otherwise.
func (o *AdmingroupNetworkingSetCommands) GetSetTcpTimestamps() bool {
	if o == nil || IsNil(o.SetTcpTimestamps) {
		var ret bool
		return ret
	}
	return *o.SetTcpTimestamps
}

// GetSetTcpTimestampsOk returns a tuple with the SetTcpTimestamps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingSetCommands) GetSetTcpTimestampsOk() (*bool, bool) {
	if o == nil || IsNil(o.SetTcpTimestamps) {
		return nil, false
	}
	return o.SetTcpTimestamps, true
}

// HasSetTcpTimestamps returns a boolean if a field has been set.
func (o *AdmingroupNetworkingSetCommands) HasSetTcpTimestamps() bool {
	if o != nil && !IsNil(o.SetTcpTimestamps) {
		return true
	}

	return false
}

// SetSetTcpTimestamps gets a reference to the given bool and assigns it to the SetTcpTimestamps field.
func (o *AdmingroupNetworkingSetCommands) SetSetTcpTimestamps(v bool) {
	o.SetTcpTimestamps = &v
}

// GetSetTrafficCapture returns the SetTrafficCapture field value if set, zero value otherwise.
func (o *AdmingroupNetworkingSetCommands) GetSetTrafficCapture() bool {
	if o == nil || IsNil(o.SetTrafficCapture) {
		var ret bool
		return ret
	}
	return *o.SetTrafficCapture
}

// GetSetTrafficCaptureOk returns a tuple with the SetTrafficCapture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingSetCommands) GetSetTrafficCaptureOk() (*bool, bool) {
	if o == nil || IsNil(o.SetTrafficCapture) {
		return nil, false
	}
	return o.SetTrafficCapture, true
}

// HasSetTrafficCapture returns a boolean if a field has been set.
func (o *AdmingroupNetworkingSetCommands) HasSetTrafficCapture() bool {
	if o != nil && !IsNil(o.SetTrafficCapture) {
		return true
	}

	return false
}

// SetSetTrafficCapture gets a reference to the given bool and assigns it to the SetTrafficCapture field.
func (o *AdmingroupNetworkingSetCommands) SetSetTrafficCapture(v bool) {
	o.SetTrafficCapture = &v
}

// GetSetWinsForwarding returns the SetWinsForwarding field value if set, zero value otherwise.
func (o *AdmingroupNetworkingSetCommands) GetSetWinsForwarding() bool {
	if o == nil || IsNil(o.SetWinsForwarding) {
		var ret bool
		return ret
	}
	return *o.SetWinsForwarding
}

// GetSetWinsForwardingOk returns a tuple with the SetWinsForwarding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingSetCommands) GetSetWinsForwardingOk() (*bool, bool) {
	if o == nil || IsNil(o.SetWinsForwarding) {
		return nil, false
	}
	return o.SetWinsForwarding, true
}

// HasSetWinsForwarding returns a boolean if a field has been set.
func (o *AdmingroupNetworkingSetCommands) HasSetWinsForwarding() bool {
	if o != nil && !IsNil(o.SetWinsForwarding) {
		return true
	}

	return false
}

// SetSetWinsForwarding gets a reference to the given bool and assigns it to the SetWinsForwarding field.
func (o *AdmingroupNetworkingSetCommands) SetSetWinsForwarding(v bool) {
	o.SetWinsForwarding = &v
}

// GetEnableAll returns the EnableAll field value if set, zero value otherwise.
func (o *AdmingroupNetworkingSetCommands) GetEnableAll() bool {
	if o == nil || IsNil(o.EnableAll) {
		var ret bool
		return ret
	}
	return *o.EnableAll
}

// GetEnableAllOk returns a tuple with the EnableAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingSetCommands) GetEnableAllOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableAll) {
		return nil, false
	}
	return o.EnableAll, true
}

// HasEnableAll returns a boolean if a field has been set.
func (o *AdmingroupNetworkingSetCommands) HasEnableAll() bool {
	if o != nil && !IsNil(o.EnableAll) {
		return true
	}

	return false
}

// SetEnableAll gets a reference to the given bool and assigns it to the EnableAll field.
func (o *AdmingroupNetworkingSetCommands) SetEnableAll(v bool) {
	o.EnableAll = &v
}

// GetDisableAll returns the DisableAll field value if set, zero value otherwise.
func (o *AdmingroupNetworkingSetCommands) GetDisableAll() bool {
	if o == nil || IsNil(o.DisableAll) {
		var ret bool
		return ret
	}
	return *o.DisableAll
}

// GetDisableAllOk returns a tuple with the DisableAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingSetCommands) GetDisableAllOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableAll) {
		return nil, false
	}
	return o.DisableAll, true
}

// HasDisableAll returns a boolean if a field has been set.
func (o *AdmingroupNetworkingSetCommands) HasDisableAll() bool {
	if o != nil && !IsNil(o.DisableAll) {
		return true
	}

	return false
}

// SetDisableAll gets a reference to the given bool and assigns it to the DisableAll field.
func (o *AdmingroupNetworkingSetCommands) SetDisableAll(v bool) {
	o.DisableAll = &v
}

func (o AdmingroupNetworkingSetCommands) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdmingroupNetworkingSetCommands) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SetConnectionLimit) {
		toSerialize["set_connection_limit"] = o.SetConnectionLimit
	}
	if !IsNil(o.SetDefaultRoute) {
		toSerialize["set_default_route"] = o.SetDefaultRoute
	}
	if !IsNil(o.SetInterface) {
		toSerialize["set_interface"] = o.SetInterface
	}
	if !IsNil(o.SetIpRateLimit) {
		toSerialize["set_ip_rate_limit"] = o.SetIpRateLimit
	}
	if !IsNil(o.SetIpv6DisableOnDad) {
		toSerialize["set_ipv6_disable_on_dad"] = o.SetIpv6DisableOnDad
	}
	if !IsNil(o.SetIpv6Neighbor) {
		toSerialize["set_ipv6_neighbor"] = o.SetIpv6Neighbor
	}
	if !IsNil(o.SetIpv6Ospf) {
		toSerialize["set_ipv6_ospf"] = o.SetIpv6Ospf
	}
	if !IsNil(o.SetIpv6Status) {
		toSerialize["set_ipv6_status"] = o.SetIpv6Status
	}
	if !IsNil(o.SetLom) {
		toSerialize["set_lom"] = o.SetLom
	}
	if !IsNil(o.SetMldVersion1) {
		toSerialize["set_mld_version_1"] = o.SetMldVersion1
	}
	if !IsNil(o.SetNamedRecvSockBufSize) {
		toSerialize["set_named_recv_sock_buf_size"] = o.SetNamedRecvSockBufSize
	}
	if !IsNil(o.SetNamedTcpClientsLimit) {
		toSerialize["set_named_tcp_clients_limit"] = o.SetNamedTcpClientsLimit
	}
	if !IsNil(o.SetNetwork) {
		toSerialize["set_network"] = o.SetNetwork
	}
	if !IsNil(o.SetOspf) {
		toSerialize["set_ospf"] = o.SetOspf
	}
	if !IsNil(o.SetPrompt) {
		toSerialize["set_prompt"] = o.SetPrompt
	}
	if !IsNil(o.SetRemoteConsole) {
		toSerialize["set_remote_console"] = o.SetRemoteConsole
	}
	if !IsNil(o.SetStaticRoute) {
		toSerialize["set_static_route"] = o.SetStaticRoute
	}
	if !IsNil(o.SetTcpTimestamps) {
		toSerialize["set_tcp_timestamps"] = o.SetTcpTimestamps
	}
	if !IsNil(o.SetTrafficCapture) {
		toSerialize["set_traffic_capture"] = o.SetTrafficCapture
	}
	if !IsNil(o.SetWinsForwarding) {
		toSerialize["set_wins_forwarding"] = o.SetWinsForwarding
	}
	if !IsNil(o.EnableAll) {
		toSerialize["enable_all"] = o.EnableAll
	}
	if !IsNil(o.DisableAll) {
		toSerialize["disable_all"] = o.DisableAll
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AdmingroupNetworkingSetCommands) UnmarshalJSON(data []byte) (err error) {
	varAdmingroupNetworkingSetCommands := _AdmingroupNetworkingSetCommands{}

	err = json.Unmarshal(data, &varAdmingroupNetworkingSetCommands)

	if err != nil {
		return err
	}

	*o = AdmingroupNetworkingSetCommands(varAdmingroupNetworkingSetCommands)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "set_connection_limit")
		delete(additionalProperties, "set_default_route")
		delete(additionalProperties, "set_interface")
		delete(additionalProperties, "set_ip_rate_limit")
		delete(additionalProperties, "set_ipv6_disable_on_dad")
		delete(additionalProperties, "set_ipv6_neighbor")
		delete(additionalProperties, "set_ipv6_ospf")
		delete(additionalProperties, "set_ipv6_status")
		delete(additionalProperties, "set_lom")
		delete(additionalProperties, "set_mld_version_1")
		delete(additionalProperties, "set_named_recv_sock_buf_size")
		delete(additionalProperties, "set_named_tcp_clients_limit")
		delete(additionalProperties, "set_network")
		delete(additionalProperties, "set_ospf")
		delete(additionalProperties, "set_prompt")
		delete(additionalProperties, "set_remote_console")
		delete(additionalProperties, "set_static_route")
		delete(additionalProperties, "set_tcp_timestamps")
		delete(additionalProperties, "set_traffic_capture")
		delete(additionalProperties, "set_wins_forwarding")
		delete(additionalProperties, "enable_all")
		delete(additionalProperties, "disable_all")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAdmingroupNetworkingSetCommands struct {
	value *AdmingroupNetworkingSetCommands
	isSet bool
}

func (v NullableAdmingroupNetworkingSetCommands) Get() *AdmingroupNetworkingSetCommands {
	return v.value
}

func (v *NullableAdmingroupNetworkingSetCommands) Set(val *AdmingroupNetworkingSetCommands) {
	v.value = val
	v.isSet = true
}

func (v NullableAdmingroupNetworkingSetCommands) IsSet() bool {
	return v.isSet
}

func (v *NullableAdmingroupNetworkingSetCommands) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdmingroupNetworkingSetCommands(val *AdmingroupNetworkingSetCommands) *NullableAdmingroupNetworkingSetCommands {
	return &NullableAdmingroupNetworkingSetCommands{value: val, isSet: true}
}

func (v NullableAdmingroupNetworkingSetCommands) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdmingroupNetworkingSetCommands) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
