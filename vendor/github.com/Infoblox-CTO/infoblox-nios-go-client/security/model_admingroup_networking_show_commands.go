/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
)

// checks if the AdmingroupNetworkingShowCommands type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdmingroupNetworkingShowCommands{}

// AdmingroupNetworkingShowCommands struct for AdmingroupNetworkingShowCommands
type AdmingroupNetworkingShowCommands struct {
	// If True then CLI user has permission to run the command
	ShowConnectionLimit *bool `json:"show_connection_limit,omitempty"`
	// If True then CLI user has permission to run the command
	ShowConnections *bool `json:"show_connections,omitempty"`
	// If True then CLI user has permission to run the command
	ShowInterface *bool `json:"show_interface,omitempty"`
	// If True then CLI user has permission to run the command
	ShowIpRateLimit *bool `json:"show_ip_rate_limit,omitempty"`
	// If True then CLI user has permission to run the command
	ShowIpv6Bgp *bool `json:"show_ipv6_bgp,omitempty"`
	// If True then CLI user has permission to run the command
	ShowIpv6DisableOnDad *bool `json:"show_ipv6_disable_on_dad,omitempty"`
	// If True then CLI user has permission to run the command
	ShowIpv6Neighbor *bool `json:"show_ipv6_neighbor,omitempty"`
	// If True then CLI user has permission to run the command
	ShowIpv6Ospf *bool `json:"show_ipv6_ospf,omitempty"`
	// If True then CLI user has permission to run the command
	ShowLom *bool `json:"show_lom,omitempty"`
	// If True then CLI user has permission to run the command
	ShowMldVersion *bool `json:"show_mld_version,omitempty"`
	// If True then CLI user has permission to run the command
	ShowNamedRecvSockBufSize *bool `json:"show_named_recv_sock_buf_size,omitempty"`
	// If True then CLI user has permission to run the command
	ShowNamedTcpClientsLimit *bool `json:"show_named_tcp_clients_limit,omitempty"`
	// If True then CLI user has permission to run the command
	ShowNetwork *bool `json:"show_network,omitempty"`
	// If True then CLI user has permission to run the command
	ShowOspf *bool `json:"show_ospf,omitempty"`
	// If True then CLI user has permission to run the command
	ShowRemoteConsole *bool `json:"show_remote_console,omitempty"`
	// If True then CLI user has permission to run the command
	ShowRoutes *bool `json:"show_routes,omitempty"`
	// If True then CLI user has permission to run the command
	ShowStaticRoutes *bool `json:"show_static_routes,omitempty"`
	// If True then CLI user has permission to run the command
	ShowTcpTimestamps *bool `json:"show_tcp_timestamps,omitempty"`
	// If True then CLI user has permission to run the command
	ShowTrafficCaptureStatus *bool `json:"show_traffic_capture_status,omitempty"`
	// If True then CLI user has permission to run the command
	ShowWinsForwarding *bool `json:"show_wins_forwarding,omitempty"`
	// If True then CLI user has permission to run the command
	ShowDefaultRoute *bool `json:"show_default_route,omitempty"`
	// If True then CLI user has permission to run the command
	ShowIproute *bool `json:"show_iproute,omitempty"`
	// If True then CLI user has permission to run the command
	ShowIprule *bool `json:"show_iprule,omitempty"`
	// If True then CLI user has permission to run the command
	ShowIptables *bool `json:"show_iptables,omitempty"`
	// If True then CLI user has permission to run the command
	ShowMtuSize *bool `json:"show_mtu_size,omitempty"`
	// If True then CLI user has permission to run the command
	ShowNetworkConnectivity *bool `json:"show_network_connectivity,omitempty"`
	// If True then CLI user has permission to run the command
	ShowTrafficfiles *bool `json:"show_trafficfiles,omitempty"`
	// If True then CLI user has permission to run the command
	ShowInterfaceStats *bool `json:"show_interface_stats,omitempty"`
	// If True then enable all fields
	EnableAll *bool `json:"enable_all,omitempty"`
	// If True then disable all fields
	DisableAll           *bool `json:"disable_all,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AdmingroupNetworkingShowCommands AdmingroupNetworkingShowCommands

// NewAdmingroupNetworkingShowCommands instantiates a new AdmingroupNetworkingShowCommands object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdmingroupNetworkingShowCommands() *AdmingroupNetworkingShowCommands {
	this := AdmingroupNetworkingShowCommands{}
	return &this
}

// NewAdmingroupNetworkingShowCommandsWithDefaults instantiates a new AdmingroupNetworkingShowCommands object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdmingroupNetworkingShowCommandsWithDefaults() *AdmingroupNetworkingShowCommands {
	this := AdmingroupNetworkingShowCommands{}
	return &this
}

// GetShowConnectionLimit returns the ShowConnectionLimit field value if set, zero value otherwise.
func (o *AdmingroupNetworkingShowCommands) GetShowConnectionLimit() bool {
	if o == nil || IsNil(o.ShowConnectionLimit) {
		var ret bool
		return ret
	}
	return *o.ShowConnectionLimit
}

// GetShowConnectionLimitOk returns a tuple with the ShowConnectionLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingShowCommands) GetShowConnectionLimitOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowConnectionLimit) {
		return nil, false
	}
	return o.ShowConnectionLimit, true
}

// HasShowConnectionLimit returns a boolean if a field has been set.
func (o *AdmingroupNetworkingShowCommands) HasShowConnectionLimit() bool {
	if o != nil && !IsNil(o.ShowConnectionLimit) {
		return true
	}

	return false
}

// SetShowConnectionLimit gets a reference to the given bool and assigns it to the ShowConnectionLimit field.
func (o *AdmingroupNetworkingShowCommands) SetShowConnectionLimit(v bool) {
	o.ShowConnectionLimit = &v
}

// GetShowConnections returns the ShowConnections field value if set, zero value otherwise.
func (o *AdmingroupNetworkingShowCommands) GetShowConnections() bool {
	if o == nil || IsNil(o.ShowConnections) {
		var ret bool
		return ret
	}
	return *o.ShowConnections
}

// GetShowConnectionsOk returns a tuple with the ShowConnections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingShowCommands) GetShowConnectionsOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowConnections) {
		return nil, false
	}
	return o.ShowConnections, true
}

// HasShowConnections returns a boolean if a field has been set.
func (o *AdmingroupNetworkingShowCommands) HasShowConnections() bool {
	if o != nil && !IsNil(o.ShowConnections) {
		return true
	}

	return false
}

// SetShowConnections gets a reference to the given bool and assigns it to the ShowConnections field.
func (o *AdmingroupNetworkingShowCommands) SetShowConnections(v bool) {
	o.ShowConnections = &v
}

// GetShowInterface returns the ShowInterface field value if set, zero value otherwise.
func (o *AdmingroupNetworkingShowCommands) GetShowInterface() bool {
	if o == nil || IsNil(o.ShowInterface) {
		var ret bool
		return ret
	}
	return *o.ShowInterface
}

// GetShowInterfaceOk returns a tuple with the ShowInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingShowCommands) GetShowInterfaceOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowInterface) {
		return nil, false
	}
	return o.ShowInterface, true
}

// HasShowInterface returns a boolean if a field has been set.
func (o *AdmingroupNetworkingShowCommands) HasShowInterface() bool {
	if o != nil && !IsNil(o.ShowInterface) {
		return true
	}

	return false
}

// SetShowInterface gets a reference to the given bool and assigns it to the ShowInterface field.
func (o *AdmingroupNetworkingShowCommands) SetShowInterface(v bool) {
	o.ShowInterface = &v
}

// GetShowIpRateLimit returns the ShowIpRateLimit field value if set, zero value otherwise.
func (o *AdmingroupNetworkingShowCommands) GetShowIpRateLimit() bool {
	if o == nil || IsNil(o.ShowIpRateLimit) {
		var ret bool
		return ret
	}
	return *o.ShowIpRateLimit
}

// GetShowIpRateLimitOk returns a tuple with the ShowIpRateLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingShowCommands) GetShowIpRateLimitOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowIpRateLimit) {
		return nil, false
	}
	return o.ShowIpRateLimit, true
}

// HasShowIpRateLimit returns a boolean if a field has been set.
func (o *AdmingroupNetworkingShowCommands) HasShowIpRateLimit() bool {
	if o != nil && !IsNil(o.ShowIpRateLimit) {
		return true
	}

	return false
}

// SetShowIpRateLimit gets a reference to the given bool and assigns it to the ShowIpRateLimit field.
func (o *AdmingroupNetworkingShowCommands) SetShowIpRateLimit(v bool) {
	o.ShowIpRateLimit = &v
}

// GetShowIpv6Bgp returns the ShowIpv6Bgp field value if set, zero value otherwise.
func (o *AdmingroupNetworkingShowCommands) GetShowIpv6Bgp() bool {
	if o == nil || IsNil(o.ShowIpv6Bgp) {
		var ret bool
		return ret
	}
	return *o.ShowIpv6Bgp
}

// GetShowIpv6BgpOk returns a tuple with the ShowIpv6Bgp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingShowCommands) GetShowIpv6BgpOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowIpv6Bgp) {
		return nil, false
	}
	return o.ShowIpv6Bgp, true
}

// HasShowIpv6Bgp returns a boolean if a field has been set.
func (o *AdmingroupNetworkingShowCommands) HasShowIpv6Bgp() bool {
	if o != nil && !IsNil(o.ShowIpv6Bgp) {
		return true
	}

	return false
}

// SetShowIpv6Bgp gets a reference to the given bool and assigns it to the ShowIpv6Bgp field.
func (o *AdmingroupNetworkingShowCommands) SetShowIpv6Bgp(v bool) {
	o.ShowIpv6Bgp = &v
}

// GetShowIpv6DisableOnDad returns the ShowIpv6DisableOnDad field value if set, zero value otherwise.
func (o *AdmingroupNetworkingShowCommands) GetShowIpv6DisableOnDad() bool {
	if o == nil || IsNil(o.ShowIpv6DisableOnDad) {
		var ret bool
		return ret
	}
	return *o.ShowIpv6DisableOnDad
}

// GetShowIpv6DisableOnDadOk returns a tuple with the ShowIpv6DisableOnDad field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingShowCommands) GetShowIpv6DisableOnDadOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowIpv6DisableOnDad) {
		return nil, false
	}
	return o.ShowIpv6DisableOnDad, true
}

// HasShowIpv6DisableOnDad returns a boolean if a field has been set.
func (o *AdmingroupNetworkingShowCommands) HasShowIpv6DisableOnDad() bool {
	if o != nil && !IsNil(o.ShowIpv6DisableOnDad) {
		return true
	}

	return false
}

// SetShowIpv6DisableOnDad gets a reference to the given bool and assigns it to the ShowIpv6DisableOnDad field.
func (o *AdmingroupNetworkingShowCommands) SetShowIpv6DisableOnDad(v bool) {
	o.ShowIpv6DisableOnDad = &v
}

// GetShowIpv6Neighbor returns the ShowIpv6Neighbor field value if set, zero value otherwise.
func (o *AdmingroupNetworkingShowCommands) GetShowIpv6Neighbor() bool {
	if o == nil || IsNil(o.ShowIpv6Neighbor) {
		var ret bool
		return ret
	}
	return *o.ShowIpv6Neighbor
}

// GetShowIpv6NeighborOk returns a tuple with the ShowIpv6Neighbor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingShowCommands) GetShowIpv6NeighborOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowIpv6Neighbor) {
		return nil, false
	}
	return o.ShowIpv6Neighbor, true
}

// HasShowIpv6Neighbor returns a boolean if a field has been set.
func (o *AdmingroupNetworkingShowCommands) HasShowIpv6Neighbor() bool {
	if o != nil && !IsNil(o.ShowIpv6Neighbor) {
		return true
	}

	return false
}

// SetShowIpv6Neighbor gets a reference to the given bool and assigns it to the ShowIpv6Neighbor field.
func (o *AdmingroupNetworkingShowCommands) SetShowIpv6Neighbor(v bool) {
	o.ShowIpv6Neighbor = &v
}

// GetShowIpv6Ospf returns the ShowIpv6Ospf field value if set, zero value otherwise.
func (o *AdmingroupNetworkingShowCommands) GetShowIpv6Ospf() bool {
	if o == nil || IsNil(o.ShowIpv6Ospf) {
		var ret bool
		return ret
	}
	return *o.ShowIpv6Ospf
}

// GetShowIpv6OspfOk returns a tuple with the ShowIpv6Ospf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingShowCommands) GetShowIpv6OspfOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowIpv6Ospf) {
		return nil, false
	}
	return o.ShowIpv6Ospf, true
}

// HasShowIpv6Ospf returns a boolean if a field has been set.
func (o *AdmingroupNetworkingShowCommands) HasShowIpv6Ospf() bool {
	if o != nil && !IsNil(o.ShowIpv6Ospf) {
		return true
	}

	return false
}

// SetShowIpv6Ospf gets a reference to the given bool and assigns it to the ShowIpv6Ospf field.
func (o *AdmingroupNetworkingShowCommands) SetShowIpv6Ospf(v bool) {
	o.ShowIpv6Ospf = &v
}

// GetShowLom returns the ShowLom field value if set, zero value otherwise.
func (o *AdmingroupNetworkingShowCommands) GetShowLom() bool {
	if o == nil || IsNil(o.ShowLom) {
		var ret bool
		return ret
	}
	return *o.ShowLom
}

// GetShowLomOk returns a tuple with the ShowLom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingShowCommands) GetShowLomOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowLom) {
		return nil, false
	}
	return o.ShowLom, true
}

// HasShowLom returns a boolean if a field has been set.
func (o *AdmingroupNetworkingShowCommands) HasShowLom() bool {
	if o != nil && !IsNil(o.ShowLom) {
		return true
	}

	return false
}

// SetShowLom gets a reference to the given bool and assigns it to the ShowLom field.
func (o *AdmingroupNetworkingShowCommands) SetShowLom(v bool) {
	o.ShowLom = &v
}

// GetShowMldVersion returns the ShowMldVersion field value if set, zero value otherwise.
func (o *AdmingroupNetworkingShowCommands) GetShowMldVersion() bool {
	if o == nil || IsNil(o.ShowMldVersion) {
		var ret bool
		return ret
	}
	return *o.ShowMldVersion
}

// GetShowMldVersionOk returns a tuple with the ShowMldVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingShowCommands) GetShowMldVersionOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowMldVersion) {
		return nil, false
	}
	return o.ShowMldVersion, true
}

// HasShowMldVersion returns a boolean if a field has been set.
func (o *AdmingroupNetworkingShowCommands) HasShowMldVersion() bool {
	if o != nil && !IsNil(o.ShowMldVersion) {
		return true
	}

	return false
}

// SetShowMldVersion gets a reference to the given bool and assigns it to the ShowMldVersion field.
func (o *AdmingroupNetworkingShowCommands) SetShowMldVersion(v bool) {
	o.ShowMldVersion = &v
}

// GetShowNamedRecvSockBufSize returns the ShowNamedRecvSockBufSize field value if set, zero value otherwise.
func (o *AdmingroupNetworkingShowCommands) GetShowNamedRecvSockBufSize() bool {
	if o == nil || IsNil(o.ShowNamedRecvSockBufSize) {
		var ret bool
		return ret
	}
	return *o.ShowNamedRecvSockBufSize
}

// GetShowNamedRecvSockBufSizeOk returns a tuple with the ShowNamedRecvSockBufSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingShowCommands) GetShowNamedRecvSockBufSizeOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowNamedRecvSockBufSize) {
		return nil, false
	}
	return o.ShowNamedRecvSockBufSize, true
}

// HasShowNamedRecvSockBufSize returns a boolean if a field has been set.
func (o *AdmingroupNetworkingShowCommands) HasShowNamedRecvSockBufSize() bool {
	if o != nil && !IsNil(o.ShowNamedRecvSockBufSize) {
		return true
	}

	return false
}

// SetShowNamedRecvSockBufSize gets a reference to the given bool and assigns it to the ShowNamedRecvSockBufSize field.
func (o *AdmingroupNetworkingShowCommands) SetShowNamedRecvSockBufSize(v bool) {
	o.ShowNamedRecvSockBufSize = &v
}

// GetShowNamedTcpClientsLimit returns the ShowNamedTcpClientsLimit field value if set, zero value otherwise.
func (o *AdmingroupNetworkingShowCommands) GetShowNamedTcpClientsLimit() bool {
	if o == nil || IsNil(o.ShowNamedTcpClientsLimit) {
		var ret bool
		return ret
	}
	return *o.ShowNamedTcpClientsLimit
}

// GetShowNamedTcpClientsLimitOk returns a tuple with the ShowNamedTcpClientsLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingShowCommands) GetShowNamedTcpClientsLimitOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowNamedTcpClientsLimit) {
		return nil, false
	}
	return o.ShowNamedTcpClientsLimit, true
}

// HasShowNamedTcpClientsLimit returns a boolean if a field has been set.
func (o *AdmingroupNetworkingShowCommands) HasShowNamedTcpClientsLimit() bool {
	if o != nil && !IsNil(o.ShowNamedTcpClientsLimit) {
		return true
	}

	return false
}

// SetShowNamedTcpClientsLimit gets a reference to the given bool and assigns it to the ShowNamedTcpClientsLimit field.
func (o *AdmingroupNetworkingShowCommands) SetShowNamedTcpClientsLimit(v bool) {
	o.ShowNamedTcpClientsLimit = &v
}

// GetShowNetwork returns the ShowNetwork field value if set, zero value otherwise.
func (o *AdmingroupNetworkingShowCommands) GetShowNetwork() bool {
	if o == nil || IsNil(o.ShowNetwork) {
		var ret bool
		return ret
	}
	return *o.ShowNetwork
}

// GetShowNetworkOk returns a tuple with the ShowNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingShowCommands) GetShowNetworkOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowNetwork) {
		return nil, false
	}
	return o.ShowNetwork, true
}

// HasShowNetwork returns a boolean if a field has been set.
func (o *AdmingroupNetworkingShowCommands) HasShowNetwork() bool {
	if o != nil && !IsNil(o.ShowNetwork) {
		return true
	}

	return false
}

// SetShowNetwork gets a reference to the given bool and assigns it to the ShowNetwork field.
func (o *AdmingroupNetworkingShowCommands) SetShowNetwork(v bool) {
	o.ShowNetwork = &v
}

// GetShowOspf returns the ShowOspf field value if set, zero value otherwise.
func (o *AdmingroupNetworkingShowCommands) GetShowOspf() bool {
	if o == nil || IsNil(o.ShowOspf) {
		var ret bool
		return ret
	}
	return *o.ShowOspf
}

// GetShowOspfOk returns a tuple with the ShowOspf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingShowCommands) GetShowOspfOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowOspf) {
		return nil, false
	}
	return o.ShowOspf, true
}

// HasShowOspf returns a boolean if a field has been set.
func (o *AdmingroupNetworkingShowCommands) HasShowOspf() bool {
	if o != nil && !IsNil(o.ShowOspf) {
		return true
	}

	return false
}

// SetShowOspf gets a reference to the given bool and assigns it to the ShowOspf field.
func (o *AdmingroupNetworkingShowCommands) SetShowOspf(v bool) {
	o.ShowOspf = &v
}

// GetShowRemoteConsole returns the ShowRemoteConsole field value if set, zero value otherwise.
func (o *AdmingroupNetworkingShowCommands) GetShowRemoteConsole() bool {
	if o == nil || IsNil(o.ShowRemoteConsole) {
		var ret bool
		return ret
	}
	return *o.ShowRemoteConsole
}

// GetShowRemoteConsoleOk returns a tuple with the ShowRemoteConsole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingShowCommands) GetShowRemoteConsoleOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowRemoteConsole) {
		return nil, false
	}
	return o.ShowRemoteConsole, true
}

// HasShowRemoteConsole returns a boolean if a field has been set.
func (o *AdmingroupNetworkingShowCommands) HasShowRemoteConsole() bool {
	if o != nil && !IsNil(o.ShowRemoteConsole) {
		return true
	}

	return false
}

// SetShowRemoteConsole gets a reference to the given bool and assigns it to the ShowRemoteConsole field.
func (o *AdmingroupNetworkingShowCommands) SetShowRemoteConsole(v bool) {
	o.ShowRemoteConsole = &v
}

// GetShowRoutes returns the ShowRoutes field value if set, zero value otherwise.
func (o *AdmingroupNetworkingShowCommands) GetShowRoutes() bool {
	if o == nil || IsNil(o.ShowRoutes) {
		var ret bool
		return ret
	}
	return *o.ShowRoutes
}

// GetShowRoutesOk returns a tuple with the ShowRoutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingShowCommands) GetShowRoutesOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowRoutes) {
		return nil, false
	}
	return o.ShowRoutes, true
}

// HasShowRoutes returns a boolean if a field has been set.
func (o *AdmingroupNetworkingShowCommands) HasShowRoutes() bool {
	if o != nil && !IsNil(o.ShowRoutes) {
		return true
	}

	return false
}

// SetShowRoutes gets a reference to the given bool and assigns it to the ShowRoutes field.
func (o *AdmingroupNetworkingShowCommands) SetShowRoutes(v bool) {
	o.ShowRoutes = &v
}

// GetShowStaticRoutes returns the ShowStaticRoutes field value if set, zero value otherwise.
func (o *AdmingroupNetworkingShowCommands) GetShowStaticRoutes() bool {
	if o == nil || IsNil(o.ShowStaticRoutes) {
		var ret bool
		return ret
	}
	return *o.ShowStaticRoutes
}

// GetShowStaticRoutesOk returns a tuple with the ShowStaticRoutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingShowCommands) GetShowStaticRoutesOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowStaticRoutes) {
		return nil, false
	}
	return o.ShowStaticRoutes, true
}

// HasShowStaticRoutes returns a boolean if a field has been set.
func (o *AdmingroupNetworkingShowCommands) HasShowStaticRoutes() bool {
	if o != nil && !IsNil(o.ShowStaticRoutes) {
		return true
	}

	return false
}

// SetShowStaticRoutes gets a reference to the given bool and assigns it to the ShowStaticRoutes field.
func (o *AdmingroupNetworkingShowCommands) SetShowStaticRoutes(v bool) {
	o.ShowStaticRoutes = &v
}

// GetShowTcpTimestamps returns the ShowTcpTimestamps field value if set, zero value otherwise.
func (o *AdmingroupNetworkingShowCommands) GetShowTcpTimestamps() bool {
	if o == nil || IsNil(o.ShowTcpTimestamps) {
		var ret bool
		return ret
	}
	return *o.ShowTcpTimestamps
}

// GetShowTcpTimestampsOk returns a tuple with the ShowTcpTimestamps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingShowCommands) GetShowTcpTimestampsOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowTcpTimestamps) {
		return nil, false
	}
	return o.ShowTcpTimestamps, true
}

// HasShowTcpTimestamps returns a boolean if a field has been set.
func (o *AdmingroupNetworkingShowCommands) HasShowTcpTimestamps() bool {
	if o != nil && !IsNil(o.ShowTcpTimestamps) {
		return true
	}

	return false
}

// SetShowTcpTimestamps gets a reference to the given bool and assigns it to the ShowTcpTimestamps field.
func (o *AdmingroupNetworkingShowCommands) SetShowTcpTimestamps(v bool) {
	o.ShowTcpTimestamps = &v
}

// GetShowTrafficCaptureStatus returns the ShowTrafficCaptureStatus field value if set, zero value otherwise.
func (o *AdmingroupNetworkingShowCommands) GetShowTrafficCaptureStatus() bool {
	if o == nil || IsNil(o.ShowTrafficCaptureStatus) {
		var ret bool
		return ret
	}
	return *o.ShowTrafficCaptureStatus
}

// GetShowTrafficCaptureStatusOk returns a tuple with the ShowTrafficCaptureStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingShowCommands) GetShowTrafficCaptureStatusOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowTrafficCaptureStatus) {
		return nil, false
	}
	return o.ShowTrafficCaptureStatus, true
}

// HasShowTrafficCaptureStatus returns a boolean if a field has been set.
func (o *AdmingroupNetworkingShowCommands) HasShowTrafficCaptureStatus() bool {
	if o != nil && !IsNil(o.ShowTrafficCaptureStatus) {
		return true
	}

	return false
}

// SetShowTrafficCaptureStatus gets a reference to the given bool and assigns it to the ShowTrafficCaptureStatus field.
func (o *AdmingroupNetworkingShowCommands) SetShowTrafficCaptureStatus(v bool) {
	o.ShowTrafficCaptureStatus = &v
}

// GetShowWinsForwarding returns the ShowWinsForwarding field value if set, zero value otherwise.
func (o *AdmingroupNetworkingShowCommands) GetShowWinsForwarding() bool {
	if o == nil || IsNil(o.ShowWinsForwarding) {
		var ret bool
		return ret
	}
	return *o.ShowWinsForwarding
}

// GetShowWinsForwardingOk returns a tuple with the ShowWinsForwarding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingShowCommands) GetShowWinsForwardingOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowWinsForwarding) {
		return nil, false
	}
	return o.ShowWinsForwarding, true
}

// HasShowWinsForwarding returns a boolean if a field has been set.
func (o *AdmingroupNetworkingShowCommands) HasShowWinsForwarding() bool {
	if o != nil && !IsNil(o.ShowWinsForwarding) {
		return true
	}

	return false
}

// SetShowWinsForwarding gets a reference to the given bool and assigns it to the ShowWinsForwarding field.
func (o *AdmingroupNetworkingShowCommands) SetShowWinsForwarding(v bool) {
	o.ShowWinsForwarding = &v
}

// GetShowDefaultRoute returns the ShowDefaultRoute field value if set, zero value otherwise.
func (o *AdmingroupNetworkingShowCommands) GetShowDefaultRoute() bool {
	if o == nil || IsNil(o.ShowDefaultRoute) {
		var ret bool
		return ret
	}
	return *o.ShowDefaultRoute
}

// GetShowDefaultRouteOk returns a tuple with the ShowDefaultRoute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingShowCommands) GetShowDefaultRouteOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowDefaultRoute) {
		return nil, false
	}
	return o.ShowDefaultRoute, true
}

// HasShowDefaultRoute returns a boolean if a field has been set.
func (o *AdmingroupNetworkingShowCommands) HasShowDefaultRoute() bool {
	if o != nil && !IsNil(o.ShowDefaultRoute) {
		return true
	}

	return false
}

// SetShowDefaultRoute gets a reference to the given bool and assigns it to the ShowDefaultRoute field.
func (o *AdmingroupNetworkingShowCommands) SetShowDefaultRoute(v bool) {
	o.ShowDefaultRoute = &v
}

// GetShowIproute returns the ShowIproute field value if set, zero value otherwise.
func (o *AdmingroupNetworkingShowCommands) GetShowIproute() bool {
	if o == nil || IsNil(o.ShowIproute) {
		var ret bool
		return ret
	}
	return *o.ShowIproute
}

// GetShowIprouteOk returns a tuple with the ShowIproute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingShowCommands) GetShowIprouteOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowIproute) {
		return nil, false
	}
	return o.ShowIproute, true
}

// HasShowIproute returns a boolean if a field has been set.
func (o *AdmingroupNetworkingShowCommands) HasShowIproute() bool {
	if o != nil && !IsNil(o.ShowIproute) {
		return true
	}

	return false
}

// SetShowIproute gets a reference to the given bool and assigns it to the ShowIproute field.
func (o *AdmingroupNetworkingShowCommands) SetShowIproute(v bool) {
	o.ShowIproute = &v
}

// GetShowIprule returns the ShowIprule field value if set, zero value otherwise.
func (o *AdmingroupNetworkingShowCommands) GetShowIprule() bool {
	if o == nil || IsNil(o.ShowIprule) {
		var ret bool
		return ret
	}
	return *o.ShowIprule
}

// GetShowIpruleOk returns a tuple with the ShowIprule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingShowCommands) GetShowIpruleOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowIprule) {
		return nil, false
	}
	return o.ShowIprule, true
}

// HasShowIprule returns a boolean if a field has been set.
func (o *AdmingroupNetworkingShowCommands) HasShowIprule() bool {
	if o != nil && !IsNil(o.ShowIprule) {
		return true
	}

	return false
}

// SetShowIprule gets a reference to the given bool and assigns it to the ShowIprule field.
func (o *AdmingroupNetworkingShowCommands) SetShowIprule(v bool) {
	o.ShowIprule = &v
}

// GetShowIptables returns the ShowIptables field value if set, zero value otherwise.
func (o *AdmingroupNetworkingShowCommands) GetShowIptables() bool {
	if o == nil || IsNil(o.ShowIptables) {
		var ret bool
		return ret
	}
	return *o.ShowIptables
}

// GetShowIptablesOk returns a tuple with the ShowIptables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingShowCommands) GetShowIptablesOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowIptables) {
		return nil, false
	}
	return o.ShowIptables, true
}

// HasShowIptables returns a boolean if a field has been set.
func (o *AdmingroupNetworkingShowCommands) HasShowIptables() bool {
	if o != nil && !IsNil(o.ShowIptables) {
		return true
	}

	return false
}

// SetShowIptables gets a reference to the given bool and assigns it to the ShowIptables field.
func (o *AdmingroupNetworkingShowCommands) SetShowIptables(v bool) {
	o.ShowIptables = &v
}

// GetShowMtuSize returns the ShowMtuSize field value if set, zero value otherwise.
func (o *AdmingroupNetworkingShowCommands) GetShowMtuSize() bool {
	if o == nil || IsNil(o.ShowMtuSize) {
		var ret bool
		return ret
	}
	return *o.ShowMtuSize
}

// GetShowMtuSizeOk returns a tuple with the ShowMtuSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingShowCommands) GetShowMtuSizeOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowMtuSize) {
		return nil, false
	}
	return o.ShowMtuSize, true
}

// HasShowMtuSize returns a boolean if a field has been set.
func (o *AdmingroupNetworkingShowCommands) HasShowMtuSize() bool {
	if o != nil && !IsNil(o.ShowMtuSize) {
		return true
	}

	return false
}

// SetShowMtuSize gets a reference to the given bool and assigns it to the ShowMtuSize field.
func (o *AdmingroupNetworkingShowCommands) SetShowMtuSize(v bool) {
	o.ShowMtuSize = &v
}

// GetShowNetworkConnectivity returns the ShowNetworkConnectivity field value if set, zero value otherwise.
func (o *AdmingroupNetworkingShowCommands) GetShowNetworkConnectivity() bool {
	if o == nil || IsNil(o.ShowNetworkConnectivity) {
		var ret bool
		return ret
	}
	return *o.ShowNetworkConnectivity
}

// GetShowNetworkConnectivityOk returns a tuple with the ShowNetworkConnectivity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingShowCommands) GetShowNetworkConnectivityOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowNetworkConnectivity) {
		return nil, false
	}
	return o.ShowNetworkConnectivity, true
}

// HasShowNetworkConnectivity returns a boolean if a field has been set.
func (o *AdmingroupNetworkingShowCommands) HasShowNetworkConnectivity() bool {
	if o != nil && !IsNil(o.ShowNetworkConnectivity) {
		return true
	}

	return false
}

// SetShowNetworkConnectivity gets a reference to the given bool and assigns it to the ShowNetworkConnectivity field.
func (o *AdmingroupNetworkingShowCommands) SetShowNetworkConnectivity(v bool) {
	o.ShowNetworkConnectivity = &v
}

// GetShowTrafficfiles returns the ShowTrafficfiles field value if set, zero value otherwise.
func (o *AdmingroupNetworkingShowCommands) GetShowTrafficfiles() bool {
	if o == nil || IsNil(o.ShowTrafficfiles) {
		var ret bool
		return ret
	}
	return *o.ShowTrafficfiles
}

// GetShowTrafficfilesOk returns a tuple with the ShowTrafficfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingShowCommands) GetShowTrafficfilesOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowTrafficfiles) {
		return nil, false
	}
	return o.ShowTrafficfiles, true
}

// HasShowTrafficfiles returns a boolean if a field has been set.
func (o *AdmingroupNetworkingShowCommands) HasShowTrafficfiles() bool {
	if o != nil && !IsNil(o.ShowTrafficfiles) {
		return true
	}

	return false
}

// SetShowTrafficfiles gets a reference to the given bool and assigns it to the ShowTrafficfiles field.
func (o *AdmingroupNetworkingShowCommands) SetShowTrafficfiles(v bool) {
	o.ShowTrafficfiles = &v
}

// GetShowInterfaceStats returns the ShowInterfaceStats field value if set, zero value otherwise.
func (o *AdmingroupNetworkingShowCommands) GetShowInterfaceStats() bool {
	if o == nil || IsNil(o.ShowInterfaceStats) {
		var ret bool
		return ret
	}
	return *o.ShowInterfaceStats
}

// GetShowInterfaceStatsOk returns a tuple with the ShowInterfaceStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingShowCommands) GetShowInterfaceStatsOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowInterfaceStats) {
		return nil, false
	}
	return o.ShowInterfaceStats, true
}

// HasShowInterfaceStats returns a boolean if a field has been set.
func (o *AdmingroupNetworkingShowCommands) HasShowInterfaceStats() bool {
	if o != nil && !IsNil(o.ShowInterfaceStats) {
		return true
	}

	return false
}

// SetShowInterfaceStats gets a reference to the given bool and assigns it to the ShowInterfaceStats field.
func (o *AdmingroupNetworkingShowCommands) SetShowInterfaceStats(v bool) {
	o.ShowInterfaceStats = &v
}

// GetEnableAll returns the EnableAll field value if set, zero value otherwise.
func (o *AdmingroupNetworkingShowCommands) GetEnableAll() bool {
	if o == nil || IsNil(o.EnableAll) {
		var ret bool
		return ret
	}
	return *o.EnableAll
}

// GetEnableAllOk returns a tuple with the EnableAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingShowCommands) GetEnableAllOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableAll) {
		return nil, false
	}
	return o.EnableAll, true
}

// HasEnableAll returns a boolean if a field has been set.
func (o *AdmingroupNetworkingShowCommands) HasEnableAll() bool {
	if o != nil && !IsNil(o.EnableAll) {
		return true
	}

	return false
}

// SetEnableAll gets a reference to the given bool and assigns it to the EnableAll field.
func (o *AdmingroupNetworkingShowCommands) SetEnableAll(v bool) {
	o.EnableAll = &v
}

// GetDisableAll returns the DisableAll field value if set, zero value otherwise.
func (o *AdmingroupNetworkingShowCommands) GetDisableAll() bool {
	if o == nil || IsNil(o.DisableAll) {
		var ret bool
		return ret
	}
	return *o.DisableAll
}

// GetDisableAllOk returns a tuple with the DisableAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupNetworkingShowCommands) GetDisableAllOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableAll) {
		return nil, false
	}
	return o.DisableAll, true
}

// HasDisableAll returns a boolean if a field has been set.
func (o *AdmingroupNetworkingShowCommands) HasDisableAll() bool {
	if o != nil && !IsNil(o.DisableAll) {
		return true
	}

	return false
}

// SetDisableAll gets a reference to the given bool and assigns it to the DisableAll field.
func (o *AdmingroupNetworkingShowCommands) SetDisableAll(v bool) {
	o.DisableAll = &v
}

func (o AdmingroupNetworkingShowCommands) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdmingroupNetworkingShowCommands) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ShowConnectionLimit) {
		toSerialize["show_connection_limit"] = o.ShowConnectionLimit
	}
	if !IsNil(o.ShowConnections) {
		toSerialize["show_connections"] = o.ShowConnections
	}
	if !IsNil(o.ShowInterface) {
		toSerialize["show_interface"] = o.ShowInterface
	}
	if !IsNil(o.ShowIpRateLimit) {
		toSerialize["show_ip_rate_limit"] = o.ShowIpRateLimit
	}
	if !IsNil(o.ShowIpv6Bgp) {
		toSerialize["show_ipv6_bgp"] = o.ShowIpv6Bgp
	}
	if !IsNil(o.ShowIpv6DisableOnDad) {
		toSerialize["show_ipv6_disable_on_dad"] = o.ShowIpv6DisableOnDad
	}
	if !IsNil(o.ShowIpv6Neighbor) {
		toSerialize["show_ipv6_neighbor"] = o.ShowIpv6Neighbor
	}
	if !IsNil(o.ShowIpv6Ospf) {
		toSerialize["show_ipv6_ospf"] = o.ShowIpv6Ospf
	}
	if !IsNil(o.ShowLom) {
		toSerialize["show_lom"] = o.ShowLom
	}
	if !IsNil(o.ShowMldVersion) {
		toSerialize["show_mld_version"] = o.ShowMldVersion
	}
	if !IsNil(o.ShowNamedRecvSockBufSize) {
		toSerialize["show_named_recv_sock_buf_size"] = o.ShowNamedRecvSockBufSize
	}
	if !IsNil(o.ShowNamedTcpClientsLimit) {
		toSerialize["show_named_tcp_clients_limit"] = o.ShowNamedTcpClientsLimit
	}
	if !IsNil(o.ShowNetwork) {
		toSerialize["show_network"] = o.ShowNetwork
	}
	if !IsNil(o.ShowOspf) {
		toSerialize["show_ospf"] = o.ShowOspf
	}
	if !IsNil(o.ShowRemoteConsole) {
		toSerialize["show_remote_console"] = o.ShowRemoteConsole
	}
	if !IsNil(o.ShowRoutes) {
		toSerialize["show_routes"] = o.ShowRoutes
	}
	if !IsNil(o.ShowStaticRoutes) {
		toSerialize["show_static_routes"] = o.ShowStaticRoutes
	}
	if !IsNil(o.ShowTcpTimestamps) {
		toSerialize["show_tcp_timestamps"] = o.ShowTcpTimestamps
	}
	if !IsNil(o.ShowTrafficCaptureStatus) {
		toSerialize["show_traffic_capture_status"] = o.ShowTrafficCaptureStatus
	}
	if !IsNil(o.ShowWinsForwarding) {
		toSerialize["show_wins_forwarding"] = o.ShowWinsForwarding
	}
	if !IsNil(o.ShowDefaultRoute) {
		toSerialize["show_default_route"] = o.ShowDefaultRoute
	}
	if !IsNil(o.ShowIproute) {
		toSerialize["show_iproute"] = o.ShowIproute
	}
	if !IsNil(o.ShowIprule) {
		toSerialize["show_iprule"] = o.ShowIprule
	}
	if !IsNil(o.ShowIptables) {
		toSerialize["show_iptables"] = o.ShowIptables
	}
	if !IsNil(o.ShowMtuSize) {
		toSerialize["show_mtu_size"] = o.ShowMtuSize
	}
	if !IsNil(o.ShowNetworkConnectivity) {
		toSerialize["show_network_connectivity"] = o.ShowNetworkConnectivity
	}
	if !IsNil(o.ShowTrafficfiles) {
		toSerialize["show_trafficfiles"] = o.ShowTrafficfiles
	}
	if !IsNil(o.ShowInterfaceStats) {
		toSerialize["show_interface_stats"] = o.ShowInterfaceStats
	}
	if !IsNil(o.EnableAll) {
		toSerialize["enable_all"] = o.EnableAll
	}
	if !IsNil(o.DisableAll) {
		toSerialize["disable_all"] = o.DisableAll
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AdmingroupNetworkingShowCommands) UnmarshalJSON(data []byte) (err error) {
	varAdmingroupNetworkingShowCommands := _AdmingroupNetworkingShowCommands{}

	err = json.Unmarshal(data, &varAdmingroupNetworkingShowCommands)

	if err != nil {
		return err
	}

	*o = AdmingroupNetworkingShowCommands(varAdmingroupNetworkingShowCommands)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "show_connection_limit")
		delete(additionalProperties, "show_connections")
		delete(additionalProperties, "show_interface")
		delete(additionalProperties, "show_ip_rate_limit")
		delete(additionalProperties, "show_ipv6_bgp")
		delete(additionalProperties, "show_ipv6_disable_on_dad")
		delete(additionalProperties, "show_ipv6_neighbor")
		delete(additionalProperties, "show_ipv6_ospf")
		delete(additionalProperties, "show_lom")
		delete(additionalProperties, "show_mld_version")
		delete(additionalProperties, "show_named_recv_sock_buf_size")
		delete(additionalProperties, "show_named_tcp_clients_limit")
		delete(additionalProperties, "show_network")
		delete(additionalProperties, "show_ospf")
		delete(additionalProperties, "show_remote_console")
		delete(additionalProperties, "show_routes")
		delete(additionalProperties, "show_static_routes")
		delete(additionalProperties, "show_tcp_timestamps")
		delete(additionalProperties, "show_traffic_capture_status")
		delete(additionalProperties, "show_wins_forwarding")
		delete(additionalProperties, "show_default_route")
		delete(additionalProperties, "show_iproute")
		delete(additionalProperties, "show_iprule")
		delete(additionalProperties, "show_iptables")
		delete(additionalProperties, "show_mtu_size")
		delete(additionalProperties, "show_network_connectivity")
		delete(additionalProperties, "show_trafficfiles")
		delete(additionalProperties, "show_interface_stats")
		delete(additionalProperties, "enable_all")
		delete(additionalProperties, "disable_all")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAdmingroupNetworkingShowCommands struct {
	value *AdmingroupNetworkingShowCommands
	isSet bool
}

func (v NullableAdmingroupNetworkingShowCommands) Get() *AdmingroupNetworkingShowCommands {
	return v.value
}

func (v *NullableAdmingroupNetworkingShowCommands) Set(val *AdmingroupNetworkingShowCommands) {
	v.value = val
	v.isSet = true
}

func (v NullableAdmingroupNetworkingShowCommands) IsSet() bool {
	return v.isSet
}

func (v *NullableAdmingroupNetworkingShowCommands) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdmingroupNetworkingShowCommands(val *AdmingroupNetworkingShowCommands) *NullableAdmingroupNetworkingShowCommands {
	return &NullableAdmingroupNetworkingShowCommands{value: val, isSet: true}
}

func (v NullableAdmingroupNetworkingShowCommands) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdmingroupNetworkingShowCommands) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
