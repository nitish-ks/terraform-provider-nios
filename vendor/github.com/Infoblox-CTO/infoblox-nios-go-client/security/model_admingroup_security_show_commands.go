/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
)

// checks if the AdmingroupSecurityShowCommands type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdmingroupSecurityShowCommands{}

// AdmingroupSecurityShowCommands struct for AdmingroupSecurityShowCommands
type AdmingroupSecurityShowCommands struct {
	// If True then CLI user has permission to run the command
	ShowFipsMode *bool `json:"show_fips_mode,omitempty"`
	// If True then CLI user has permission to run the command
	ShowCcMode *bool `json:"show_cc_mode,omitempty"`
	// If True then CLI user has permission to run the command
	ShowCertificateAuthAdmins *bool `json:"show_certificate_auth_admins,omitempty"`
	// If True then CLI user has permission to run the command
	ShowCertificateAuthServices *bool `json:"show_certificate_auth_services,omitempty"`
	// If True then CLI user has permission to run the command
	ShowCheckAuthNs *bool `json:"show_check_auth_ns,omitempty"`
	// If True then CLI user has permission to run the command
	ShowCheckSslCertificate *bool `json:"show_check_ssl_certificate,omitempty"`
	// If True then CLI user has permission to run the command
	ShowSecurity *bool `json:"show_security,omitempty"`
	// If True then CLI user has permission to run the command
	ShowSessionTimeout *bool `json:"show_session_timeout,omitempty"`
	// If True then CLI user has permission to run the command
	ShowSubscriberSecureData *bool `json:"show_subscriber_secure_data,omitempty"`
	// If True then CLI user has permission to run the command
	ShowSupportAccess *bool `json:"show_support_access,omitempty"`
	// If True then CLI user has permission to run the command
	ShowVpnCertDates *bool `json:"show_vpn_cert_dates,omitempty"`
	// If True then CLI user has permission to run the command
	ShowAdp *bool `json:"show_adp,omitempty"`
	// If True then CLI user has permission to run the command
	ShowAdpDebug *bool `json:"show_adp_debug,omitempty"`
	// If True then CLI user has permission to run the command
	ShowSupportTimeout *bool `json:"show_support_timeout,omitempty"`
	// If True then enable all fields
	EnableAll *bool `json:"enable_all,omitempty"`
	// If True then disable all fields
	DisableAll           *bool `json:"disable_all,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AdmingroupSecurityShowCommands AdmingroupSecurityShowCommands

// NewAdmingroupSecurityShowCommands instantiates a new AdmingroupSecurityShowCommands object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdmingroupSecurityShowCommands() *AdmingroupSecurityShowCommands {
	this := AdmingroupSecurityShowCommands{}
	return &this
}

// NewAdmingroupSecurityShowCommandsWithDefaults instantiates a new AdmingroupSecurityShowCommands object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdmingroupSecurityShowCommandsWithDefaults() *AdmingroupSecurityShowCommands {
	this := AdmingroupSecurityShowCommands{}
	return &this
}

// GetShowFipsMode returns the ShowFipsMode field value if set, zero value otherwise.
func (o *AdmingroupSecurityShowCommands) GetShowFipsMode() bool {
	if o == nil || IsNil(o.ShowFipsMode) {
		var ret bool
		return ret
	}
	return *o.ShowFipsMode
}

// GetShowFipsModeOk returns a tuple with the ShowFipsMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupSecurityShowCommands) GetShowFipsModeOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowFipsMode) {
		return nil, false
	}
	return o.ShowFipsMode, true
}

// HasShowFipsMode returns a boolean if a field has been set.
func (o *AdmingroupSecurityShowCommands) HasShowFipsMode() bool {
	if o != nil && !IsNil(o.ShowFipsMode) {
		return true
	}

	return false
}

// SetShowFipsMode gets a reference to the given bool and assigns it to the ShowFipsMode field.
func (o *AdmingroupSecurityShowCommands) SetShowFipsMode(v bool) {
	o.ShowFipsMode = &v
}

// GetShowCcMode returns the ShowCcMode field value if set, zero value otherwise.
func (o *AdmingroupSecurityShowCommands) GetShowCcMode() bool {
	if o == nil || IsNil(o.ShowCcMode) {
		var ret bool
		return ret
	}
	return *o.ShowCcMode
}

// GetShowCcModeOk returns a tuple with the ShowCcMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupSecurityShowCommands) GetShowCcModeOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowCcMode) {
		return nil, false
	}
	return o.ShowCcMode, true
}

// HasShowCcMode returns a boolean if a field has been set.
func (o *AdmingroupSecurityShowCommands) HasShowCcMode() bool {
	if o != nil && !IsNil(o.ShowCcMode) {
		return true
	}

	return false
}

// SetShowCcMode gets a reference to the given bool and assigns it to the ShowCcMode field.
func (o *AdmingroupSecurityShowCommands) SetShowCcMode(v bool) {
	o.ShowCcMode = &v
}

// GetShowCertificateAuthAdmins returns the ShowCertificateAuthAdmins field value if set, zero value otherwise.
func (o *AdmingroupSecurityShowCommands) GetShowCertificateAuthAdmins() bool {
	if o == nil || IsNil(o.ShowCertificateAuthAdmins) {
		var ret bool
		return ret
	}
	return *o.ShowCertificateAuthAdmins
}

// GetShowCertificateAuthAdminsOk returns a tuple with the ShowCertificateAuthAdmins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupSecurityShowCommands) GetShowCertificateAuthAdminsOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowCertificateAuthAdmins) {
		return nil, false
	}
	return o.ShowCertificateAuthAdmins, true
}

// HasShowCertificateAuthAdmins returns a boolean if a field has been set.
func (o *AdmingroupSecurityShowCommands) HasShowCertificateAuthAdmins() bool {
	if o != nil && !IsNil(o.ShowCertificateAuthAdmins) {
		return true
	}

	return false
}

// SetShowCertificateAuthAdmins gets a reference to the given bool and assigns it to the ShowCertificateAuthAdmins field.
func (o *AdmingroupSecurityShowCommands) SetShowCertificateAuthAdmins(v bool) {
	o.ShowCertificateAuthAdmins = &v
}

// GetShowCertificateAuthServices returns the ShowCertificateAuthServices field value if set, zero value otherwise.
func (o *AdmingroupSecurityShowCommands) GetShowCertificateAuthServices() bool {
	if o == nil || IsNil(o.ShowCertificateAuthServices) {
		var ret bool
		return ret
	}
	return *o.ShowCertificateAuthServices
}

// GetShowCertificateAuthServicesOk returns a tuple with the ShowCertificateAuthServices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupSecurityShowCommands) GetShowCertificateAuthServicesOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowCertificateAuthServices) {
		return nil, false
	}
	return o.ShowCertificateAuthServices, true
}

// HasShowCertificateAuthServices returns a boolean if a field has been set.
func (o *AdmingroupSecurityShowCommands) HasShowCertificateAuthServices() bool {
	if o != nil && !IsNil(o.ShowCertificateAuthServices) {
		return true
	}

	return false
}

// SetShowCertificateAuthServices gets a reference to the given bool and assigns it to the ShowCertificateAuthServices field.
func (o *AdmingroupSecurityShowCommands) SetShowCertificateAuthServices(v bool) {
	o.ShowCertificateAuthServices = &v
}

// GetShowCheckAuthNs returns the ShowCheckAuthNs field value if set, zero value otherwise.
func (o *AdmingroupSecurityShowCommands) GetShowCheckAuthNs() bool {
	if o == nil || IsNil(o.ShowCheckAuthNs) {
		var ret bool
		return ret
	}
	return *o.ShowCheckAuthNs
}

// GetShowCheckAuthNsOk returns a tuple with the ShowCheckAuthNs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupSecurityShowCommands) GetShowCheckAuthNsOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowCheckAuthNs) {
		return nil, false
	}
	return o.ShowCheckAuthNs, true
}

// HasShowCheckAuthNs returns a boolean if a field has been set.
func (o *AdmingroupSecurityShowCommands) HasShowCheckAuthNs() bool {
	if o != nil && !IsNil(o.ShowCheckAuthNs) {
		return true
	}

	return false
}

// SetShowCheckAuthNs gets a reference to the given bool and assigns it to the ShowCheckAuthNs field.
func (o *AdmingroupSecurityShowCommands) SetShowCheckAuthNs(v bool) {
	o.ShowCheckAuthNs = &v
}

// GetShowCheckSslCertificate returns the ShowCheckSslCertificate field value if set, zero value otherwise.
func (o *AdmingroupSecurityShowCommands) GetShowCheckSslCertificate() bool {
	if o == nil || IsNil(o.ShowCheckSslCertificate) {
		var ret bool
		return ret
	}
	return *o.ShowCheckSslCertificate
}

// GetShowCheckSslCertificateOk returns a tuple with the ShowCheckSslCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupSecurityShowCommands) GetShowCheckSslCertificateOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowCheckSslCertificate) {
		return nil, false
	}
	return o.ShowCheckSslCertificate, true
}

// HasShowCheckSslCertificate returns a boolean if a field has been set.
func (o *AdmingroupSecurityShowCommands) HasShowCheckSslCertificate() bool {
	if o != nil && !IsNil(o.ShowCheckSslCertificate) {
		return true
	}

	return false
}

// SetShowCheckSslCertificate gets a reference to the given bool and assigns it to the ShowCheckSslCertificate field.
func (o *AdmingroupSecurityShowCommands) SetShowCheckSslCertificate(v bool) {
	o.ShowCheckSslCertificate = &v
}

// GetShowSecurity returns the ShowSecurity field value if set, zero value otherwise.
func (o *AdmingroupSecurityShowCommands) GetShowSecurity() bool {
	if o == nil || IsNil(o.ShowSecurity) {
		var ret bool
		return ret
	}
	return *o.ShowSecurity
}

// GetShowSecurityOk returns a tuple with the ShowSecurity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupSecurityShowCommands) GetShowSecurityOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowSecurity) {
		return nil, false
	}
	return o.ShowSecurity, true
}

// HasShowSecurity returns a boolean if a field has been set.
func (o *AdmingroupSecurityShowCommands) HasShowSecurity() bool {
	if o != nil && !IsNil(o.ShowSecurity) {
		return true
	}

	return false
}

// SetShowSecurity gets a reference to the given bool and assigns it to the ShowSecurity field.
func (o *AdmingroupSecurityShowCommands) SetShowSecurity(v bool) {
	o.ShowSecurity = &v
}

// GetShowSessionTimeout returns the ShowSessionTimeout field value if set, zero value otherwise.
func (o *AdmingroupSecurityShowCommands) GetShowSessionTimeout() bool {
	if o == nil || IsNil(o.ShowSessionTimeout) {
		var ret bool
		return ret
	}
	return *o.ShowSessionTimeout
}

// GetShowSessionTimeoutOk returns a tuple with the ShowSessionTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupSecurityShowCommands) GetShowSessionTimeoutOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowSessionTimeout) {
		return nil, false
	}
	return o.ShowSessionTimeout, true
}

// HasShowSessionTimeout returns a boolean if a field has been set.
func (o *AdmingroupSecurityShowCommands) HasShowSessionTimeout() bool {
	if o != nil && !IsNil(o.ShowSessionTimeout) {
		return true
	}

	return false
}

// SetShowSessionTimeout gets a reference to the given bool and assigns it to the ShowSessionTimeout field.
func (o *AdmingroupSecurityShowCommands) SetShowSessionTimeout(v bool) {
	o.ShowSessionTimeout = &v
}

// GetShowSubscriberSecureData returns the ShowSubscriberSecureData field value if set, zero value otherwise.
func (o *AdmingroupSecurityShowCommands) GetShowSubscriberSecureData() bool {
	if o == nil || IsNil(o.ShowSubscriberSecureData) {
		var ret bool
		return ret
	}
	return *o.ShowSubscriberSecureData
}

// GetShowSubscriberSecureDataOk returns a tuple with the ShowSubscriberSecureData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupSecurityShowCommands) GetShowSubscriberSecureDataOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowSubscriberSecureData) {
		return nil, false
	}
	return o.ShowSubscriberSecureData, true
}

// HasShowSubscriberSecureData returns a boolean if a field has been set.
func (o *AdmingroupSecurityShowCommands) HasShowSubscriberSecureData() bool {
	if o != nil && !IsNil(o.ShowSubscriberSecureData) {
		return true
	}

	return false
}

// SetShowSubscriberSecureData gets a reference to the given bool and assigns it to the ShowSubscriberSecureData field.
func (o *AdmingroupSecurityShowCommands) SetShowSubscriberSecureData(v bool) {
	o.ShowSubscriberSecureData = &v
}

// GetShowSupportAccess returns the ShowSupportAccess field value if set, zero value otherwise.
func (o *AdmingroupSecurityShowCommands) GetShowSupportAccess() bool {
	if o == nil || IsNil(o.ShowSupportAccess) {
		var ret bool
		return ret
	}
	return *o.ShowSupportAccess
}

// GetShowSupportAccessOk returns a tuple with the ShowSupportAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupSecurityShowCommands) GetShowSupportAccessOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowSupportAccess) {
		return nil, false
	}
	return o.ShowSupportAccess, true
}

// HasShowSupportAccess returns a boolean if a field has been set.
func (o *AdmingroupSecurityShowCommands) HasShowSupportAccess() bool {
	if o != nil && !IsNil(o.ShowSupportAccess) {
		return true
	}

	return false
}

// SetShowSupportAccess gets a reference to the given bool and assigns it to the ShowSupportAccess field.
func (o *AdmingroupSecurityShowCommands) SetShowSupportAccess(v bool) {
	o.ShowSupportAccess = &v
}

// GetShowVpnCertDates returns the ShowVpnCertDates field value if set, zero value otherwise.
func (o *AdmingroupSecurityShowCommands) GetShowVpnCertDates() bool {
	if o == nil || IsNil(o.ShowVpnCertDates) {
		var ret bool
		return ret
	}
	return *o.ShowVpnCertDates
}

// GetShowVpnCertDatesOk returns a tuple with the ShowVpnCertDates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupSecurityShowCommands) GetShowVpnCertDatesOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowVpnCertDates) {
		return nil, false
	}
	return o.ShowVpnCertDates, true
}

// HasShowVpnCertDates returns a boolean if a field has been set.
func (o *AdmingroupSecurityShowCommands) HasShowVpnCertDates() bool {
	if o != nil && !IsNil(o.ShowVpnCertDates) {
		return true
	}

	return false
}

// SetShowVpnCertDates gets a reference to the given bool and assigns it to the ShowVpnCertDates field.
func (o *AdmingroupSecurityShowCommands) SetShowVpnCertDates(v bool) {
	o.ShowVpnCertDates = &v
}

// GetShowAdp returns the ShowAdp field value if set, zero value otherwise.
func (o *AdmingroupSecurityShowCommands) GetShowAdp() bool {
	if o == nil || IsNil(o.ShowAdp) {
		var ret bool
		return ret
	}
	return *o.ShowAdp
}

// GetShowAdpOk returns a tuple with the ShowAdp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupSecurityShowCommands) GetShowAdpOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowAdp) {
		return nil, false
	}
	return o.ShowAdp, true
}

// HasShowAdp returns a boolean if a field has been set.
func (o *AdmingroupSecurityShowCommands) HasShowAdp() bool {
	if o != nil && !IsNil(o.ShowAdp) {
		return true
	}

	return false
}

// SetShowAdp gets a reference to the given bool and assigns it to the ShowAdp field.
func (o *AdmingroupSecurityShowCommands) SetShowAdp(v bool) {
	o.ShowAdp = &v
}

// GetShowAdpDebug returns the ShowAdpDebug field value if set, zero value otherwise.
func (o *AdmingroupSecurityShowCommands) GetShowAdpDebug() bool {
	if o == nil || IsNil(o.ShowAdpDebug) {
		var ret bool
		return ret
	}
	return *o.ShowAdpDebug
}

// GetShowAdpDebugOk returns a tuple with the ShowAdpDebug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupSecurityShowCommands) GetShowAdpDebugOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowAdpDebug) {
		return nil, false
	}
	return o.ShowAdpDebug, true
}

// HasShowAdpDebug returns a boolean if a field has been set.
func (o *AdmingroupSecurityShowCommands) HasShowAdpDebug() bool {
	if o != nil && !IsNil(o.ShowAdpDebug) {
		return true
	}

	return false
}

// SetShowAdpDebug gets a reference to the given bool and assigns it to the ShowAdpDebug field.
func (o *AdmingroupSecurityShowCommands) SetShowAdpDebug(v bool) {
	o.ShowAdpDebug = &v
}

// GetShowSupportTimeout returns the ShowSupportTimeout field value if set, zero value otherwise.
func (o *AdmingroupSecurityShowCommands) GetShowSupportTimeout() bool {
	if o == nil || IsNil(o.ShowSupportTimeout) {
		var ret bool
		return ret
	}
	return *o.ShowSupportTimeout
}

// GetShowSupportTimeoutOk returns a tuple with the ShowSupportTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupSecurityShowCommands) GetShowSupportTimeoutOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowSupportTimeout) {
		return nil, false
	}
	return o.ShowSupportTimeout, true
}

// HasShowSupportTimeout returns a boolean if a field has been set.
func (o *AdmingroupSecurityShowCommands) HasShowSupportTimeout() bool {
	if o != nil && !IsNil(o.ShowSupportTimeout) {
		return true
	}

	return false
}

// SetShowSupportTimeout gets a reference to the given bool and assigns it to the ShowSupportTimeout field.
func (o *AdmingroupSecurityShowCommands) SetShowSupportTimeout(v bool) {
	o.ShowSupportTimeout = &v
}

// GetEnableAll returns the EnableAll field value if set, zero value otherwise.
func (o *AdmingroupSecurityShowCommands) GetEnableAll() bool {
	if o == nil || IsNil(o.EnableAll) {
		var ret bool
		return ret
	}
	return *o.EnableAll
}

// GetEnableAllOk returns a tuple with the EnableAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupSecurityShowCommands) GetEnableAllOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableAll) {
		return nil, false
	}
	return o.EnableAll, true
}

// HasEnableAll returns a boolean if a field has been set.
func (o *AdmingroupSecurityShowCommands) HasEnableAll() bool {
	if o != nil && !IsNil(o.EnableAll) {
		return true
	}

	return false
}

// SetEnableAll gets a reference to the given bool and assigns it to the EnableAll field.
func (o *AdmingroupSecurityShowCommands) SetEnableAll(v bool) {
	o.EnableAll = &v
}

// GetDisableAll returns the DisableAll field value if set, zero value otherwise.
func (o *AdmingroupSecurityShowCommands) GetDisableAll() bool {
	if o == nil || IsNil(o.DisableAll) {
		var ret bool
		return ret
	}
	return *o.DisableAll
}

// GetDisableAllOk returns a tuple with the DisableAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupSecurityShowCommands) GetDisableAllOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableAll) {
		return nil, false
	}
	return o.DisableAll, true
}

// HasDisableAll returns a boolean if a field has been set.
func (o *AdmingroupSecurityShowCommands) HasDisableAll() bool {
	if o != nil && !IsNil(o.DisableAll) {
		return true
	}

	return false
}

// SetDisableAll gets a reference to the given bool and assigns it to the DisableAll field.
func (o *AdmingroupSecurityShowCommands) SetDisableAll(v bool) {
	o.DisableAll = &v
}

func (o AdmingroupSecurityShowCommands) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdmingroupSecurityShowCommands) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ShowFipsMode) {
		toSerialize["show_fips_mode"] = o.ShowFipsMode
	}
	if !IsNil(o.ShowCcMode) {
		toSerialize["show_cc_mode"] = o.ShowCcMode
	}
	if !IsNil(o.ShowCertificateAuthAdmins) {
		toSerialize["show_certificate_auth_admins"] = o.ShowCertificateAuthAdmins
	}
	if !IsNil(o.ShowCertificateAuthServices) {
		toSerialize["show_certificate_auth_services"] = o.ShowCertificateAuthServices
	}
	if !IsNil(o.ShowCheckAuthNs) {
		toSerialize["show_check_auth_ns"] = o.ShowCheckAuthNs
	}
	if !IsNil(o.ShowCheckSslCertificate) {
		toSerialize["show_check_ssl_certificate"] = o.ShowCheckSslCertificate
	}
	if !IsNil(o.ShowSecurity) {
		toSerialize["show_security"] = o.ShowSecurity
	}
	if !IsNil(o.ShowSessionTimeout) {
		toSerialize["show_session_timeout"] = o.ShowSessionTimeout
	}
	if !IsNil(o.ShowSubscriberSecureData) {
		toSerialize["show_subscriber_secure_data"] = o.ShowSubscriberSecureData
	}
	if !IsNil(o.ShowSupportAccess) {
		toSerialize["show_support_access"] = o.ShowSupportAccess
	}
	if !IsNil(o.ShowVpnCertDates) {
		toSerialize["show_vpn_cert_dates"] = o.ShowVpnCertDates
	}
	if !IsNil(o.ShowAdp) {
		toSerialize["show_adp"] = o.ShowAdp
	}
	if !IsNil(o.ShowAdpDebug) {
		toSerialize["show_adp_debug"] = o.ShowAdpDebug
	}
	if !IsNil(o.ShowSupportTimeout) {
		toSerialize["show_support_timeout"] = o.ShowSupportTimeout
	}
	if !IsNil(o.EnableAll) {
		toSerialize["enable_all"] = o.EnableAll
	}
	if !IsNil(o.DisableAll) {
		toSerialize["disable_all"] = o.DisableAll
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AdmingroupSecurityShowCommands) UnmarshalJSON(data []byte) (err error) {
	varAdmingroupSecurityShowCommands := _AdmingroupSecurityShowCommands{}

	err = json.Unmarshal(data, &varAdmingroupSecurityShowCommands)

	if err != nil {
		return err
	}

	*o = AdmingroupSecurityShowCommands(varAdmingroupSecurityShowCommands)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "show_fips_mode")
		delete(additionalProperties, "show_cc_mode")
		delete(additionalProperties, "show_certificate_auth_admins")
		delete(additionalProperties, "show_certificate_auth_services")
		delete(additionalProperties, "show_check_auth_ns")
		delete(additionalProperties, "show_check_ssl_certificate")
		delete(additionalProperties, "show_security")
		delete(additionalProperties, "show_session_timeout")
		delete(additionalProperties, "show_subscriber_secure_data")
		delete(additionalProperties, "show_support_access")
		delete(additionalProperties, "show_vpn_cert_dates")
		delete(additionalProperties, "show_adp")
		delete(additionalProperties, "show_adp_debug")
		delete(additionalProperties, "show_support_timeout")
		delete(additionalProperties, "enable_all")
		delete(additionalProperties, "disable_all")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAdmingroupSecurityShowCommands struct {
	value *AdmingroupSecurityShowCommands
	isSet bool
}

func (v NullableAdmingroupSecurityShowCommands) Get() *AdmingroupSecurityShowCommands {
	return v.value
}

func (v *NullableAdmingroupSecurityShowCommands) Set(val *AdmingroupSecurityShowCommands) {
	v.value = val
	v.isSet = true
}

func (v NullableAdmingroupSecurityShowCommands) IsSet() bool {
	return v.isSet
}

func (v *NullableAdmingroupSecurityShowCommands) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdmingroupSecurityShowCommands(val *AdmingroupSecurityShowCommands) *NullableAdmingroupSecurityShowCommands {
	return &NullableAdmingroupSecurityShowCommands{value: val, isSet: true}
}

func (v NullableAdmingroupSecurityShowCommands) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdmingroupSecurityShowCommands) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
