/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
	"fmt"
)

// CreateNetworkuserResponse - struct for CreateNetworkuserResponse
type CreateNetworkuserResponse struct {
	CreateNetworkuserResponseAsObject *CreateNetworkuserResponseAsObject
	String                            *string
}

// CreateNetworkuserResponseAsObjectAsCreateNetworkuserResponse is a convenience function that returns CreateNetworkuserResponseAsObject wrapped in CreateNetworkuserResponse
func CreateNetworkuserResponseAsObjectAsCreateNetworkuserResponse(v *CreateNetworkuserResponseAsObject) CreateNetworkuserResponse {
	return CreateNetworkuserResponse{
		CreateNetworkuserResponseAsObject: v,
	}
}

// stringAsCreateNetworkuserResponse is a convenience function that returns string wrapped in CreateNetworkuserResponse
func StringAsCreateNetworkuserResponse(v *string) CreateNetworkuserResponse {
	return CreateNetworkuserResponse{
		String: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *CreateNetworkuserResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into CreateNetworkuserResponseAsObject
	err = newStrictDecoder(data).Decode(&dst.CreateNetworkuserResponseAsObject)
	if err == nil {
		jsonCreateNetworkuserResponseAsObject, _ := json.Marshal(dst.CreateNetworkuserResponseAsObject)
		if string(jsonCreateNetworkuserResponseAsObject) == "{}" { // empty struct
			dst.CreateNetworkuserResponseAsObject = nil
		} else {
			match++
		}
	} else {
		dst.CreateNetworkuserResponseAsObject = nil
	}

	// try to unmarshal data into String
	err = newStrictDecoder(data).Decode(&dst.String)
	if err == nil {
		jsonString, _ := json.Marshal(dst.String)
		if string(jsonString) == "{}" { // empty struct
			dst.String = nil
		} else {
			match++
		}
	} else {
		dst.String = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.CreateNetworkuserResponseAsObject = nil
		dst.String = nil

		return fmt.Errorf("data matches more than one schema in oneOf(CreateNetworkuserResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(CreateNetworkuserResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CreateNetworkuserResponse) MarshalJSON() ([]byte, error) {
	if src.CreateNetworkuserResponseAsObject != nil {
		return json.Marshal(&src.CreateNetworkuserResponseAsObject)
	}

	if src.String != nil {
		return json.Marshal(&src.String)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *CreateNetworkuserResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.CreateNetworkuserResponseAsObject != nil {
		return obj.CreateNetworkuserResponseAsObject
	}

	if obj.String != nil {
		return obj.String
	}

	// all schemas are nil
	return nil
}

type NullableCreateNetworkuserResponse struct {
	value *CreateNetworkuserResponse
	isSet bool
}

func (v NullableCreateNetworkuserResponse) Get() *CreateNetworkuserResponse {
	return v.value
}

func (v *NullableCreateNetworkuserResponse) Set(val *CreateNetworkuserResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNetworkuserResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNetworkuserResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNetworkuserResponse(val *CreateNetworkuserResponse) *NullableCreateNetworkuserResponse {
	return &NullableCreateNetworkuserResponse{value: val, isSet: true}
}

func (v NullableCreateNetworkuserResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNetworkuserResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
