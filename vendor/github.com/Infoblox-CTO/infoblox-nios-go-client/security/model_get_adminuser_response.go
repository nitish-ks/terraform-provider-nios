/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
	"fmt"
)

// GetAdminuserResponse - struct for GetAdminuserResponse
type GetAdminuserResponse struct {
	Adminuser                          *Adminuser
	GetAdminuserResponseObjectAsResult *GetAdminuserResponseObjectAsResult
}

// AdminuserAsGetAdminuserResponse is a convenience function that returns Adminuser wrapped in GetAdminuserResponse
func AdminuserAsGetAdminuserResponse(v *Adminuser) GetAdminuserResponse {
	return GetAdminuserResponse{
		Adminuser: v,
	}
}

// GetAdminuserResponseObjectAsResultAsGetAdminuserResponse is a convenience function that returns GetAdminuserResponseObjectAsResult wrapped in GetAdminuserResponse
func GetAdminuserResponseObjectAsResultAsGetAdminuserResponse(v *GetAdminuserResponseObjectAsResult) GetAdminuserResponse {
	return GetAdminuserResponse{
		GetAdminuserResponseObjectAsResult: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetAdminuserResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into Adminuser
	err = newStrictDecoder(data).Decode(&dst.Adminuser)
	if err == nil {
		jsonAdminuser, _ := json.Marshal(dst.Adminuser)
		if string(jsonAdminuser) == "{}" { // empty struct
			dst.Adminuser = nil
		} else {
			match++
		}
	} else {
		dst.Adminuser = nil
	}

	// try to unmarshal data into GetAdminuserResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetAdminuserResponseObjectAsResult)
	if err == nil {
		jsonGetAdminuserResponseObjectAsResult, _ := json.Marshal(dst.GetAdminuserResponseObjectAsResult)
		if string(jsonGetAdminuserResponseObjectAsResult) == "{}" { // empty struct
			dst.GetAdminuserResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetAdminuserResponseObjectAsResult = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.Adminuser = nil
		dst.GetAdminuserResponseObjectAsResult = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetAdminuserResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetAdminuserResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetAdminuserResponse) MarshalJSON() ([]byte, error) {
	if src.Adminuser != nil {
		return json.Marshal(&src.Adminuser)
	}

	if src.GetAdminuserResponseObjectAsResult != nil {
		return json.Marshal(&src.GetAdminuserResponseObjectAsResult)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetAdminuserResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.Adminuser != nil {
		return obj.Adminuser
	}

	if obj.GetAdminuserResponseObjectAsResult != nil {
		return obj.GetAdminuserResponseObjectAsResult
	}

	// all schemas are nil
	return nil
}

type NullableGetAdminuserResponse struct {
	value *GetAdminuserResponse
	isSet bool
}

func (v NullableGetAdminuserResponse) Get() *GetAdminuserResponse {
	return v.value
}

func (v *NullableGetAdminuserResponse) Set(val *GetAdminuserResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAdminuserResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAdminuserResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAdminuserResponse(val *GetAdminuserResponse) *NullableGetAdminuserResponse {
	return &NullableGetAdminuserResponse{value: val, isSet: true}
}

func (v NullableGetAdminuserResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAdminuserResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
