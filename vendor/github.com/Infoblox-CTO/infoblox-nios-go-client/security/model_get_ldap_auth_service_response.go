/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
	"fmt"
)

// GetLdapAuthServiceResponse - struct for GetLdapAuthServiceResponse
type GetLdapAuthServiceResponse struct {
	GetLdapAuthServiceResponseObjectAsResult *GetLdapAuthServiceResponseObjectAsResult
	LdapAuthService                          *LdapAuthService
}

// GetLdapAuthServiceResponseObjectAsResultAsGetLdapAuthServiceResponse is a convenience function that returns GetLdapAuthServiceResponseObjectAsResult wrapped in GetLdapAuthServiceResponse
func GetLdapAuthServiceResponseObjectAsResultAsGetLdapAuthServiceResponse(v *GetLdapAuthServiceResponseObjectAsResult) GetLdapAuthServiceResponse {
	return GetLdapAuthServiceResponse{
		GetLdapAuthServiceResponseObjectAsResult: v,
	}
}

// LdapAuthServiceAsGetLdapAuthServiceResponse is a convenience function that returns LdapAuthService wrapped in GetLdapAuthServiceResponse
func LdapAuthServiceAsGetLdapAuthServiceResponse(v *LdapAuthService) GetLdapAuthServiceResponse {
	return GetLdapAuthServiceResponse{
		LdapAuthService: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetLdapAuthServiceResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetLdapAuthServiceResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetLdapAuthServiceResponseObjectAsResult)
	if err == nil {
		jsonGetLdapAuthServiceResponseObjectAsResult, _ := json.Marshal(dst.GetLdapAuthServiceResponseObjectAsResult)
		if string(jsonGetLdapAuthServiceResponseObjectAsResult) == "{}" { // empty struct
			dst.GetLdapAuthServiceResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetLdapAuthServiceResponseObjectAsResult = nil
	}

	// try to unmarshal data into LdapAuthService
	err = newStrictDecoder(data).Decode(&dst.LdapAuthService)
	if err == nil {
		jsonLdapAuthService, _ := json.Marshal(dst.LdapAuthService)
		if string(jsonLdapAuthService) == "{}" { // empty struct
			dst.LdapAuthService = nil
		} else {
			match++
		}
	} else {
		dst.LdapAuthService = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetLdapAuthServiceResponseObjectAsResult = nil
		dst.LdapAuthService = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetLdapAuthServiceResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetLdapAuthServiceResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetLdapAuthServiceResponse) MarshalJSON() ([]byte, error) {
	if src.GetLdapAuthServiceResponseObjectAsResult != nil {
		return json.Marshal(&src.GetLdapAuthServiceResponseObjectAsResult)
	}

	if src.LdapAuthService != nil {
		return json.Marshal(&src.LdapAuthService)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetLdapAuthServiceResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GetLdapAuthServiceResponseObjectAsResult != nil {
		return obj.GetLdapAuthServiceResponseObjectAsResult
	}

	if obj.LdapAuthService != nil {
		return obj.LdapAuthService
	}

	// all schemas are nil
	return nil
}

type NullableGetLdapAuthServiceResponse struct {
	value *GetLdapAuthServiceResponse
	isSet bool
}

func (v NullableGetLdapAuthServiceResponse) Get() *GetLdapAuthServiceResponse {
	return v.value
}

func (v *NullableGetLdapAuthServiceResponse) Set(val *GetLdapAuthServiceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLdapAuthServiceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLdapAuthServiceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLdapAuthServiceResponse(val *GetLdapAuthServiceResponse) *NullableGetLdapAuthServiceResponse {
	return &NullableGetLdapAuthServiceResponse{value: val, isSet: true}
}

func (v NullableGetLdapAuthServiceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLdapAuthServiceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
