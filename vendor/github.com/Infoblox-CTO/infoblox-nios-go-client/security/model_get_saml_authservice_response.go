/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
	"fmt"
)

// GetSamlAuthserviceResponse - struct for GetSamlAuthserviceResponse
type GetSamlAuthserviceResponse struct {
	GetSamlAuthserviceResponseObjectAsResult *GetSamlAuthserviceResponseObjectAsResult
	SamlAuthservice                          *SamlAuthservice
}

// GetSamlAuthserviceResponseObjectAsResultAsGetSamlAuthserviceResponse is a convenience function that returns GetSamlAuthserviceResponseObjectAsResult wrapped in GetSamlAuthserviceResponse
func GetSamlAuthserviceResponseObjectAsResultAsGetSamlAuthserviceResponse(v *GetSamlAuthserviceResponseObjectAsResult) GetSamlAuthserviceResponse {
	return GetSamlAuthserviceResponse{
		GetSamlAuthserviceResponseObjectAsResult: v,
	}
}

// SamlAuthserviceAsGetSamlAuthserviceResponse is a convenience function that returns SamlAuthservice wrapped in GetSamlAuthserviceResponse
func SamlAuthserviceAsGetSamlAuthserviceResponse(v *SamlAuthservice) GetSamlAuthserviceResponse {
	return GetSamlAuthserviceResponse{
		SamlAuthservice: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetSamlAuthserviceResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetSamlAuthserviceResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetSamlAuthserviceResponseObjectAsResult)
	if err == nil {
		jsonGetSamlAuthserviceResponseObjectAsResult, _ := json.Marshal(dst.GetSamlAuthserviceResponseObjectAsResult)
		if string(jsonGetSamlAuthserviceResponseObjectAsResult) == "{}" { // empty struct
			dst.GetSamlAuthserviceResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetSamlAuthserviceResponseObjectAsResult = nil
	}

	// try to unmarshal data into SamlAuthservice
	err = newStrictDecoder(data).Decode(&dst.SamlAuthservice)
	if err == nil {
		jsonSamlAuthservice, _ := json.Marshal(dst.SamlAuthservice)
		if string(jsonSamlAuthservice) == "{}" { // empty struct
			dst.SamlAuthservice = nil
		} else {
			match++
		}
	} else {
		dst.SamlAuthservice = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetSamlAuthserviceResponseObjectAsResult = nil
		dst.SamlAuthservice = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetSamlAuthserviceResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetSamlAuthserviceResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetSamlAuthserviceResponse) MarshalJSON() ([]byte, error) {
	if src.GetSamlAuthserviceResponseObjectAsResult != nil {
		return json.Marshal(&src.GetSamlAuthserviceResponseObjectAsResult)
	}

	if src.SamlAuthservice != nil {
		return json.Marshal(&src.SamlAuthservice)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetSamlAuthserviceResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GetSamlAuthserviceResponseObjectAsResult != nil {
		return obj.GetSamlAuthserviceResponseObjectAsResult
	}

	if obj.SamlAuthservice != nil {
		return obj.SamlAuthservice
	}

	// all schemas are nil
	return nil
}

type NullableGetSamlAuthserviceResponse struct {
	value *GetSamlAuthserviceResponse
	isSet bool
}

func (v NullableGetSamlAuthserviceResponse) Get() *GetSamlAuthserviceResponse {
	return v.value
}

func (v *NullableGetSamlAuthserviceResponse) Set(val *GetSamlAuthserviceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSamlAuthserviceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSamlAuthserviceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSamlAuthserviceResponse(val *GetSamlAuthserviceResponse) *NullableGetSamlAuthserviceResponse {
	return &NullableGetSamlAuthserviceResponse{value: val, isSet: true}
}

func (v NullableGetSamlAuthserviceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSamlAuthserviceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
