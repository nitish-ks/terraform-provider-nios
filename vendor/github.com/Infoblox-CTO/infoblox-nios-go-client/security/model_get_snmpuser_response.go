/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
	"fmt"
)

// GetSnmpuserResponse - struct for GetSnmpuserResponse
type GetSnmpuserResponse struct {
	GetSnmpuserResponseObjectAsResult *GetSnmpuserResponseObjectAsResult
	Snmpuser                          *Snmpuser
}

// GetSnmpuserResponseObjectAsResultAsGetSnmpuserResponse is a convenience function that returns GetSnmpuserResponseObjectAsResult wrapped in GetSnmpuserResponse
func GetSnmpuserResponseObjectAsResultAsGetSnmpuserResponse(v *GetSnmpuserResponseObjectAsResult) GetSnmpuserResponse {
	return GetSnmpuserResponse{
		GetSnmpuserResponseObjectAsResult: v,
	}
}

// SnmpuserAsGetSnmpuserResponse is a convenience function that returns Snmpuser wrapped in GetSnmpuserResponse
func SnmpuserAsGetSnmpuserResponse(v *Snmpuser) GetSnmpuserResponse {
	return GetSnmpuserResponse{
		Snmpuser: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetSnmpuserResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetSnmpuserResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetSnmpuserResponseObjectAsResult)
	if err == nil {
		jsonGetSnmpuserResponseObjectAsResult, _ := json.Marshal(dst.GetSnmpuserResponseObjectAsResult)
		if string(jsonGetSnmpuserResponseObjectAsResult) == "{}" { // empty struct
			dst.GetSnmpuserResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetSnmpuserResponseObjectAsResult = nil
	}

	// try to unmarshal data into Snmpuser
	err = newStrictDecoder(data).Decode(&dst.Snmpuser)
	if err == nil {
		jsonSnmpuser, _ := json.Marshal(dst.Snmpuser)
		if string(jsonSnmpuser) == "{}" { // empty struct
			dst.Snmpuser = nil
		} else {
			match++
		}
	} else {
		dst.Snmpuser = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetSnmpuserResponseObjectAsResult = nil
		dst.Snmpuser = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetSnmpuserResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetSnmpuserResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetSnmpuserResponse) MarshalJSON() ([]byte, error) {
	if src.GetSnmpuserResponseObjectAsResult != nil {
		return json.Marshal(&src.GetSnmpuserResponseObjectAsResult)
	}

	if src.Snmpuser != nil {
		return json.Marshal(&src.Snmpuser)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetSnmpuserResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GetSnmpuserResponseObjectAsResult != nil {
		return obj.GetSnmpuserResponseObjectAsResult
	}

	if obj.Snmpuser != nil {
		return obj.Snmpuser
	}

	// all schemas are nil
	return nil
}

type NullableGetSnmpuserResponse struct {
	value *GetSnmpuserResponse
	isSet bool
}

func (v NullableGetSnmpuserResponse) Get() *GetSnmpuserResponse {
	return v.value
}

func (v *NullableGetSnmpuserResponse) Set(val *GetSnmpuserResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSnmpuserResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSnmpuserResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSnmpuserResponse(val *GetSnmpuserResponse) *NullableGetSnmpuserResponse {
	return &NullableGetSnmpuserResponse{value: val, isSet: true}
}

func (v NullableGetSnmpuserResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSnmpuserResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
