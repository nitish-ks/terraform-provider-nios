/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
	"fmt"
)

// GetThreatinsightCloudclientResponse - struct for GetThreatinsightCloudclientResponse
type GetThreatinsightCloudclientResponse struct {
	GetThreatinsightCloudclientResponseObjectAsResult *GetThreatinsightCloudclientResponseObjectAsResult
	ThreatinsightCloudclient                          *ThreatinsightCloudclient
}

// GetThreatinsightCloudclientResponseObjectAsResultAsGetThreatinsightCloudclientResponse is a convenience function that returns GetThreatinsightCloudclientResponseObjectAsResult wrapped in GetThreatinsightCloudclientResponse
func GetThreatinsightCloudclientResponseObjectAsResultAsGetThreatinsightCloudclientResponse(v *GetThreatinsightCloudclientResponseObjectAsResult) GetThreatinsightCloudclientResponse {
	return GetThreatinsightCloudclientResponse{
		GetThreatinsightCloudclientResponseObjectAsResult: v,
	}
}

// ThreatinsightCloudclientAsGetThreatinsightCloudclientResponse is a convenience function that returns ThreatinsightCloudclient wrapped in GetThreatinsightCloudclientResponse
func ThreatinsightCloudclientAsGetThreatinsightCloudclientResponse(v *ThreatinsightCloudclient) GetThreatinsightCloudclientResponse {
	return GetThreatinsightCloudclientResponse{
		ThreatinsightCloudclient: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetThreatinsightCloudclientResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetThreatinsightCloudclientResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetThreatinsightCloudclientResponseObjectAsResult)
	if err == nil {
		jsonGetThreatinsightCloudclientResponseObjectAsResult, _ := json.Marshal(dst.GetThreatinsightCloudclientResponseObjectAsResult)
		if string(jsonGetThreatinsightCloudclientResponseObjectAsResult) == "{}" { // empty struct
			dst.GetThreatinsightCloudclientResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetThreatinsightCloudclientResponseObjectAsResult = nil
	}

	// try to unmarshal data into ThreatinsightCloudclient
	err = newStrictDecoder(data).Decode(&dst.ThreatinsightCloudclient)
	if err == nil {
		jsonThreatinsightCloudclient, _ := json.Marshal(dst.ThreatinsightCloudclient)
		if string(jsonThreatinsightCloudclient) == "{}" { // empty struct
			dst.ThreatinsightCloudclient = nil
		} else {
			match++
		}
	} else {
		dst.ThreatinsightCloudclient = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetThreatinsightCloudclientResponseObjectAsResult = nil
		dst.ThreatinsightCloudclient = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetThreatinsightCloudclientResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetThreatinsightCloudclientResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetThreatinsightCloudclientResponse) MarshalJSON() ([]byte, error) {
	if src.GetThreatinsightCloudclientResponseObjectAsResult != nil {
		return json.Marshal(&src.GetThreatinsightCloudclientResponseObjectAsResult)
	}

	if src.ThreatinsightCloudclient != nil {
		return json.Marshal(&src.ThreatinsightCloudclient)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetThreatinsightCloudclientResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GetThreatinsightCloudclientResponseObjectAsResult != nil {
		return obj.GetThreatinsightCloudclientResponseObjectAsResult
	}

	if obj.ThreatinsightCloudclient != nil {
		return obj.ThreatinsightCloudclient
	}

	// all schemas are nil
	return nil
}

type NullableGetThreatinsightCloudclientResponse struct {
	value *GetThreatinsightCloudclientResponse
	isSet bool
}

func (v NullableGetThreatinsightCloudclientResponse) Get() *GetThreatinsightCloudclientResponse {
	return v.value
}

func (v *NullableGetThreatinsightCloudclientResponse) Set(val *GetThreatinsightCloudclientResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetThreatinsightCloudclientResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetThreatinsightCloudclientResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetThreatinsightCloudclientResponse(val *GetThreatinsightCloudclientResponse) *NullableGetThreatinsightCloudclientResponse {
	return &NullableGetThreatinsightCloudclientResponse{value: val, isSet: true}
}

func (v NullableGetThreatinsightCloudclientResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetThreatinsightCloudclientResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
