/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
	"fmt"
)

// GetThreatprotectionRuleResponse - struct for GetThreatprotectionRuleResponse
type GetThreatprotectionRuleResponse struct {
	GetThreatprotectionRuleResponseObjectAsResult *GetThreatprotectionRuleResponseObjectAsResult
	ThreatprotectionRule                          *ThreatprotectionRule
}

// GetThreatprotectionRuleResponseObjectAsResultAsGetThreatprotectionRuleResponse is a convenience function that returns GetThreatprotectionRuleResponseObjectAsResult wrapped in GetThreatprotectionRuleResponse
func GetThreatprotectionRuleResponseObjectAsResultAsGetThreatprotectionRuleResponse(v *GetThreatprotectionRuleResponseObjectAsResult) GetThreatprotectionRuleResponse {
	return GetThreatprotectionRuleResponse{
		GetThreatprotectionRuleResponseObjectAsResult: v,
	}
}

// ThreatprotectionRuleAsGetThreatprotectionRuleResponse is a convenience function that returns ThreatprotectionRule wrapped in GetThreatprotectionRuleResponse
func ThreatprotectionRuleAsGetThreatprotectionRuleResponse(v *ThreatprotectionRule) GetThreatprotectionRuleResponse {
	return GetThreatprotectionRuleResponse{
		ThreatprotectionRule: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetThreatprotectionRuleResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetThreatprotectionRuleResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetThreatprotectionRuleResponseObjectAsResult)
	if err == nil {
		jsonGetThreatprotectionRuleResponseObjectAsResult, _ := json.Marshal(dst.GetThreatprotectionRuleResponseObjectAsResult)
		if string(jsonGetThreatprotectionRuleResponseObjectAsResult) == "{}" { // empty struct
			dst.GetThreatprotectionRuleResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetThreatprotectionRuleResponseObjectAsResult = nil
	}

	// try to unmarshal data into ThreatprotectionRule
	err = newStrictDecoder(data).Decode(&dst.ThreatprotectionRule)
	if err == nil {
		jsonThreatprotectionRule, _ := json.Marshal(dst.ThreatprotectionRule)
		if string(jsonThreatprotectionRule) == "{}" { // empty struct
			dst.ThreatprotectionRule = nil
		} else {
			match++
		}
	} else {
		dst.ThreatprotectionRule = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetThreatprotectionRuleResponseObjectAsResult = nil
		dst.ThreatprotectionRule = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetThreatprotectionRuleResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetThreatprotectionRuleResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetThreatprotectionRuleResponse) MarshalJSON() ([]byte, error) {
	if src.GetThreatprotectionRuleResponseObjectAsResult != nil {
		return json.Marshal(&src.GetThreatprotectionRuleResponseObjectAsResult)
	}

	if src.ThreatprotectionRule != nil {
		return json.Marshal(&src.ThreatprotectionRule)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetThreatprotectionRuleResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GetThreatprotectionRuleResponseObjectAsResult != nil {
		return obj.GetThreatprotectionRuleResponseObjectAsResult
	}

	if obj.ThreatprotectionRule != nil {
		return obj.ThreatprotectionRule
	}

	// all schemas are nil
	return nil
}

type NullableGetThreatprotectionRuleResponse struct {
	value *GetThreatprotectionRuleResponse
	isSet bool
}

func (v NullableGetThreatprotectionRuleResponse) Get() *GetThreatprotectionRuleResponse {
	return v.value
}

func (v *NullableGetThreatprotectionRuleResponse) Set(val *GetThreatprotectionRuleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetThreatprotectionRuleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetThreatprotectionRuleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetThreatprotectionRuleResponse(val *GetThreatprotectionRuleResponse) *NullableGetThreatprotectionRuleResponse {
	return &NullableGetThreatprotectionRuleResponse{value: val, isSet: true}
}

func (v NullableGetThreatprotectionRuleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetThreatprotectionRuleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
