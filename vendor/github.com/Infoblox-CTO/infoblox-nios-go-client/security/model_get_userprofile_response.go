/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
	"fmt"
)

// GetUserprofileResponse - struct for GetUserprofileResponse
type GetUserprofileResponse struct {
	GetUserprofileResponseObjectAsResult *GetUserprofileResponseObjectAsResult
	Userprofile                          *Userprofile
}

// GetUserprofileResponseObjectAsResultAsGetUserprofileResponse is a convenience function that returns GetUserprofileResponseObjectAsResult wrapped in GetUserprofileResponse
func GetUserprofileResponseObjectAsResultAsGetUserprofileResponse(v *GetUserprofileResponseObjectAsResult) GetUserprofileResponse {
	return GetUserprofileResponse{
		GetUserprofileResponseObjectAsResult: v,
	}
}

// UserprofileAsGetUserprofileResponse is a convenience function that returns Userprofile wrapped in GetUserprofileResponse
func UserprofileAsGetUserprofileResponse(v *Userprofile) GetUserprofileResponse {
	return GetUserprofileResponse{
		Userprofile: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetUserprofileResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetUserprofileResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetUserprofileResponseObjectAsResult)
	if err == nil {
		jsonGetUserprofileResponseObjectAsResult, _ := json.Marshal(dst.GetUserprofileResponseObjectAsResult)
		if string(jsonGetUserprofileResponseObjectAsResult) == "{}" { // empty struct
			dst.GetUserprofileResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetUserprofileResponseObjectAsResult = nil
	}

	// try to unmarshal data into Userprofile
	err = newStrictDecoder(data).Decode(&dst.Userprofile)
	if err == nil {
		jsonUserprofile, _ := json.Marshal(dst.Userprofile)
		if string(jsonUserprofile) == "{}" { // empty struct
			dst.Userprofile = nil
		} else {
			match++
		}
	} else {
		dst.Userprofile = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetUserprofileResponseObjectAsResult = nil
		dst.Userprofile = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetUserprofileResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetUserprofileResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetUserprofileResponse) MarshalJSON() ([]byte, error) {
	if src.GetUserprofileResponseObjectAsResult != nil {
		return json.Marshal(&src.GetUserprofileResponseObjectAsResult)
	}

	if src.Userprofile != nil {
		return json.Marshal(&src.Userprofile)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetUserprofileResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GetUserprofileResponseObjectAsResult != nil {
		return obj.GetUserprofileResponseObjectAsResult
	}

	if obj.Userprofile != nil {
		return obj.Userprofile
	}

	// all schemas are nil
	return nil
}

type NullableGetUserprofileResponse struct {
	value *GetUserprofileResponse
	isSet bool
}

func (v NullableGetUserprofileResponse) Get() *GetUserprofileResponse {
	return v.value
}

func (v *NullableGetUserprofileResponse) Set(val *GetUserprofileResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUserprofileResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUserprofileResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUserprofileResponse(val *GetUserprofileResponse) *NullableGetUserprofileResponse {
	return &NullableGetUserprofileResponse{value: val, isSet: true}
}

func (v NullableGetUserprofileResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetUserprofileResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
