/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
)

// checks if the HsmEntrustnshieldgroupEntrustnshieldHsm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HsmEntrustnshieldgroupEntrustnshieldHsm{}

// HsmEntrustnshieldgroupEntrustnshieldHsm struct for HsmEntrustnshieldgroupEntrustnshieldHsm
type HsmEntrustnshieldgroupEntrustnshieldHsm struct {
	// The IPv4 Address of the Entrust nShield HSM device.
	RemoteIp *string `json:"remote_ip,omitempty"`
	// The Entrust nShield HSM device destination port.
	RemotePort *int64 `json:"remote_port,omitempty"`
	// The Entrust nShield HSM device status.
	Status *string `json:"status,omitempty"`
	// The Entrust nShield HSM device electronic serial number.
	RemoteEsn *string `json:"remote_esn,omitempty"`
	// The Entrust nShield HSM device public key digest.
	Keyhash *string `json:"keyhash,omitempty"`
	// Determines whether the Entrust nShield HSM device is disabled.
	Disable              *bool `json:"disable,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _HsmEntrustnshieldgroupEntrustnshieldHsm HsmEntrustnshieldgroupEntrustnshieldHsm

// NewHsmEntrustnshieldgroupEntrustnshieldHsm instantiates a new HsmEntrustnshieldgroupEntrustnshieldHsm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHsmEntrustnshieldgroupEntrustnshieldHsm() *HsmEntrustnshieldgroupEntrustnshieldHsm {
	this := HsmEntrustnshieldgroupEntrustnshieldHsm{}
	return &this
}

// NewHsmEntrustnshieldgroupEntrustnshieldHsmWithDefaults instantiates a new HsmEntrustnshieldgroupEntrustnshieldHsm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHsmEntrustnshieldgroupEntrustnshieldHsmWithDefaults() *HsmEntrustnshieldgroupEntrustnshieldHsm {
	this := HsmEntrustnshieldgroupEntrustnshieldHsm{}
	return &this
}

// GetRemoteIp returns the RemoteIp field value if set, zero value otherwise.
func (o *HsmEntrustnshieldgroupEntrustnshieldHsm) GetRemoteIp() string {
	if o == nil || IsNil(o.RemoteIp) {
		var ret string
		return ret
	}
	return *o.RemoteIp
}

// GetRemoteIpOk returns a tuple with the RemoteIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmEntrustnshieldgroupEntrustnshieldHsm) GetRemoteIpOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteIp) {
		return nil, false
	}
	return o.RemoteIp, true
}

// HasRemoteIp returns a boolean if a field has been set.
func (o *HsmEntrustnshieldgroupEntrustnshieldHsm) HasRemoteIp() bool {
	if o != nil && !IsNil(o.RemoteIp) {
		return true
	}

	return false
}

// SetRemoteIp gets a reference to the given string and assigns it to the RemoteIp field.
func (o *HsmEntrustnshieldgroupEntrustnshieldHsm) SetRemoteIp(v string) {
	o.RemoteIp = &v
}

// GetRemotePort returns the RemotePort field value if set, zero value otherwise.
func (o *HsmEntrustnshieldgroupEntrustnshieldHsm) GetRemotePort() int64 {
	if o == nil || IsNil(o.RemotePort) {
		var ret int64
		return ret
	}
	return *o.RemotePort
}

// GetRemotePortOk returns a tuple with the RemotePort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmEntrustnshieldgroupEntrustnshieldHsm) GetRemotePortOk() (*int64, bool) {
	if o == nil || IsNil(o.RemotePort) {
		return nil, false
	}
	return o.RemotePort, true
}

// HasRemotePort returns a boolean if a field has been set.
func (o *HsmEntrustnshieldgroupEntrustnshieldHsm) HasRemotePort() bool {
	if o != nil && !IsNil(o.RemotePort) {
		return true
	}

	return false
}

// SetRemotePort gets a reference to the given int64 and assigns it to the RemotePort field.
func (o *HsmEntrustnshieldgroupEntrustnshieldHsm) SetRemotePort(v int64) {
	o.RemotePort = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *HsmEntrustnshieldgroupEntrustnshieldHsm) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmEntrustnshieldgroupEntrustnshieldHsm) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *HsmEntrustnshieldgroupEntrustnshieldHsm) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *HsmEntrustnshieldgroupEntrustnshieldHsm) SetStatus(v string) {
	o.Status = &v
}

// GetRemoteEsn returns the RemoteEsn field value if set, zero value otherwise.
func (o *HsmEntrustnshieldgroupEntrustnshieldHsm) GetRemoteEsn() string {
	if o == nil || IsNil(o.RemoteEsn) {
		var ret string
		return ret
	}
	return *o.RemoteEsn
}

// GetRemoteEsnOk returns a tuple with the RemoteEsn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmEntrustnshieldgroupEntrustnshieldHsm) GetRemoteEsnOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteEsn) {
		return nil, false
	}
	return o.RemoteEsn, true
}

// HasRemoteEsn returns a boolean if a field has been set.
func (o *HsmEntrustnshieldgroupEntrustnshieldHsm) HasRemoteEsn() bool {
	if o != nil && !IsNil(o.RemoteEsn) {
		return true
	}

	return false
}

// SetRemoteEsn gets a reference to the given string and assigns it to the RemoteEsn field.
func (o *HsmEntrustnshieldgroupEntrustnshieldHsm) SetRemoteEsn(v string) {
	o.RemoteEsn = &v
}

// GetKeyhash returns the Keyhash field value if set, zero value otherwise.
func (o *HsmEntrustnshieldgroupEntrustnshieldHsm) GetKeyhash() string {
	if o == nil || IsNil(o.Keyhash) {
		var ret string
		return ret
	}
	return *o.Keyhash
}

// GetKeyhashOk returns a tuple with the Keyhash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmEntrustnshieldgroupEntrustnshieldHsm) GetKeyhashOk() (*string, bool) {
	if o == nil || IsNil(o.Keyhash) {
		return nil, false
	}
	return o.Keyhash, true
}

// HasKeyhash returns a boolean if a field has been set.
func (o *HsmEntrustnshieldgroupEntrustnshieldHsm) HasKeyhash() bool {
	if o != nil && !IsNil(o.Keyhash) {
		return true
	}

	return false
}

// SetKeyhash gets a reference to the given string and assigns it to the Keyhash field.
func (o *HsmEntrustnshieldgroupEntrustnshieldHsm) SetKeyhash(v string) {
	o.Keyhash = &v
}

// GetDisable returns the Disable field value if set, zero value otherwise.
func (o *HsmEntrustnshieldgroupEntrustnshieldHsm) GetDisable() bool {
	if o == nil || IsNil(o.Disable) {
		var ret bool
		return ret
	}
	return *o.Disable
}

// GetDisableOk returns a tuple with the Disable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmEntrustnshieldgroupEntrustnshieldHsm) GetDisableOk() (*bool, bool) {
	if o == nil || IsNil(o.Disable) {
		return nil, false
	}
	return o.Disable, true
}

// HasDisable returns a boolean if a field has been set.
func (o *HsmEntrustnshieldgroupEntrustnshieldHsm) HasDisable() bool {
	if o != nil && !IsNil(o.Disable) {
		return true
	}

	return false
}

// SetDisable gets a reference to the given bool and assigns it to the Disable field.
func (o *HsmEntrustnshieldgroupEntrustnshieldHsm) SetDisable(v bool) {
	o.Disable = &v
}

func (o HsmEntrustnshieldgroupEntrustnshieldHsm) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HsmEntrustnshieldgroupEntrustnshieldHsm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RemoteIp) {
		toSerialize["remote_ip"] = o.RemoteIp
	}
	if !IsNil(o.RemotePort) {
		toSerialize["remote_port"] = o.RemotePort
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.RemoteEsn) {
		toSerialize["remote_esn"] = o.RemoteEsn
	}
	if !IsNil(o.Keyhash) {
		toSerialize["keyhash"] = o.Keyhash
	}
	if !IsNil(o.Disable) {
		toSerialize["disable"] = o.Disable
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *HsmEntrustnshieldgroupEntrustnshieldHsm) UnmarshalJSON(data []byte) (err error) {
	varHsmEntrustnshieldgroupEntrustnshieldHsm := _HsmEntrustnshieldgroupEntrustnshieldHsm{}

	err = json.Unmarshal(data, &varHsmEntrustnshieldgroupEntrustnshieldHsm)

	if err != nil {
		return err
	}

	*o = HsmEntrustnshieldgroupEntrustnshieldHsm(varHsmEntrustnshieldgroupEntrustnshieldHsm)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "remote_ip")
		delete(additionalProperties, "remote_port")
		delete(additionalProperties, "status")
		delete(additionalProperties, "remote_esn")
		delete(additionalProperties, "keyhash")
		delete(additionalProperties, "disable")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableHsmEntrustnshieldgroupEntrustnshieldHsm struct {
	value *HsmEntrustnshieldgroupEntrustnshieldHsm
	isSet bool
}

func (v NullableHsmEntrustnshieldgroupEntrustnshieldHsm) Get() *HsmEntrustnshieldgroupEntrustnshieldHsm {
	return v.value
}

func (v *NullableHsmEntrustnshieldgroupEntrustnshieldHsm) Set(val *HsmEntrustnshieldgroupEntrustnshieldHsm) {
	v.value = val
	v.isSet = true
}

func (v NullableHsmEntrustnshieldgroupEntrustnshieldHsm) IsSet() bool {
	return v.isSet
}

func (v *NullableHsmEntrustnshieldgroupEntrustnshieldHsm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHsmEntrustnshieldgroupEntrustnshieldHsm(val *HsmEntrustnshieldgroupEntrustnshieldHsm) *NullableHsmEntrustnshieldgroupEntrustnshieldHsm {
	return &NullableHsmEntrustnshieldgroupEntrustnshieldHsm{value: val, isSet: true}
}

func (v NullableHsmEntrustnshieldgroupEntrustnshieldHsm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHsmEntrustnshieldgroupEntrustnshieldHsm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
