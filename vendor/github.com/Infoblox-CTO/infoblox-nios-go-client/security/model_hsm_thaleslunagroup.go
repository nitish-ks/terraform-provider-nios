/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
)

// checks if the HsmThaleslunagroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HsmThaleslunagroup{}

// HsmThaleslunagroup struct for HsmThaleslunagroup
type HsmThaleslunagroup struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// The HSM Thales Luna group comment.
	Comment *string `json:"comment,omitempty"`
	// The HSM Thales Luna group serial number.
	GroupSn *string `json:"group_sn,omitempty"`
	// The HSM Thales Luna version.
	HsmVersion *string `json:"hsm_version,omitempty"`
	// The HSM Thales Luna group name.
	Name *string `json:"name,omitempty"`
	// The pass phrase used to unlock the HSM Thales Luna keystore.
	PassPhrase *string `json:"pass_phrase,omitempty"`
	// The status of all HSM Thales Luna devices in the group.
	Status *string `json:"status,omitempty"`
	// The list of HSM Thales Luna devices.
	Thalesluna []HsmThaleslunagroupThalesluna `json:"thalesluna,omitempty"`
}

// NewHsmThaleslunagroup instantiates a new HsmThaleslunagroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHsmThaleslunagroup() *HsmThaleslunagroup {
	this := HsmThaleslunagroup{}
	return &this
}

// NewHsmThaleslunagroupWithDefaults instantiates a new HsmThaleslunagroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHsmThaleslunagroupWithDefaults() *HsmThaleslunagroup {
	this := HsmThaleslunagroup{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *HsmThaleslunagroup) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmThaleslunagroup) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *HsmThaleslunagroup) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *HsmThaleslunagroup) SetRef(v string) {
	o.Ref = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *HsmThaleslunagroup) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmThaleslunagroup) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *HsmThaleslunagroup) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *HsmThaleslunagroup) SetComment(v string) {
	o.Comment = &v
}

// GetGroupSn returns the GroupSn field value if set, zero value otherwise.
func (o *HsmThaleslunagroup) GetGroupSn() string {
	if o == nil || IsNil(o.GroupSn) {
		var ret string
		return ret
	}
	return *o.GroupSn
}

// GetGroupSnOk returns a tuple with the GroupSn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmThaleslunagroup) GetGroupSnOk() (*string, bool) {
	if o == nil || IsNil(o.GroupSn) {
		return nil, false
	}
	return o.GroupSn, true
}

// HasGroupSn returns a boolean if a field has been set.
func (o *HsmThaleslunagroup) HasGroupSn() bool {
	if o != nil && !IsNil(o.GroupSn) {
		return true
	}

	return false
}

// SetGroupSn gets a reference to the given string and assigns it to the GroupSn field.
func (o *HsmThaleslunagroup) SetGroupSn(v string) {
	o.GroupSn = &v
}

// GetHsmVersion returns the HsmVersion field value if set, zero value otherwise.
func (o *HsmThaleslunagroup) GetHsmVersion() string {
	if o == nil || IsNil(o.HsmVersion) {
		var ret string
		return ret
	}
	return *o.HsmVersion
}

// GetHsmVersionOk returns a tuple with the HsmVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmThaleslunagroup) GetHsmVersionOk() (*string, bool) {
	if o == nil || IsNil(o.HsmVersion) {
		return nil, false
	}
	return o.HsmVersion, true
}

// HasHsmVersion returns a boolean if a field has been set.
func (o *HsmThaleslunagroup) HasHsmVersion() bool {
	if o != nil && !IsNil(o.HsmVersion) {
		return true
	}

	return false
}

// SetHsmVersion gets a reference to the given string and assigns it to the HsmVersion field.
func (o *HsmThaleslunagroup) SetHsmVersion(v string) {
	o.HsmVersion = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *HsmThaleslunagroup) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmThaleslunagroup) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *HsmThaleslunagroup) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *HsmThaleslunagroup) SetName(v string) {
	o.Name = &v
}

// GetPassPhrase returns the PassPhrase field value if set, zero value otherwise.
func (o *HsmThaleslunagroup) GetPassPhrase() string {
	if o == nil || IsNil(o.PassPhrase) {
		var ret string
		return ret
	}
	return *o.PassPhrase
}

// GetPassPhraseOk returns a tuple with the PassPhrase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmThaleslunagroup) GetPassPhraseOk() (*string, bool) {
	if o == nil || IsNil(o.PassPhrase) {
		return nil, false
	}
	return o.PassPhrase, true
}

// HasPassPhrase returns a boolean if a field has been set.
func (o *HsmThaleslunagroup) HasPassPhrase() bool {
	if o != nil && !IsNil(o.PassPhrase) {
		return true
	}

	return false
}

// SetPassPhrase gets a reference to the given string and assigns it to the PassPhrase field.
func (o *HsmThaleslunagroup) SetPassPhrase(v string) {
	o.PassPhrase = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *HsmThaleslunagroup) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmThaleslunagroup) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *HsmThaleslunagroup) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *HsmThaleslunagroup) SetStatus(v string) {
	o.Status = &v
}

// GetThalesluna returns the Thalesluna field value if set, zero value otherwise.
func (o *HsmThaleslunagroup) GetThalesluna() []HsmThaleslunagroupThalesluna {
	if o == nil || IsNil(o.Thalesluna) {
		var ret []HsmThaleslunagroupThalesluna
		return ret
	}
	return o.Thalesluna
}

// GetThaleslunaOk returns a tuple with the Thalesluna field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmThaleslunagroup) GetThaleslunaOk() ([]HsmThaleslunagroupThalesluna, bool) {
	if o == nil || IsNil(o.Thalesluna) {
		return nil, false
	}
	return o.Thalesluna, true
}

// HasThalesluna returns a boolean if a field has been set.
func (o *HsmThaleslunagroup) HasThalesluna() bool {
	if o != nil && !IsNil(o.Thalesluna) {
		return true
	}

	return false
}

// SetThalesluna gets a reference to the given []HsmThaleslunagroupThalesluna and assigns it to the Thalesluna field.
func (o *HsmThaleslunagroup) SetThalesluna(v []HsmThaleslunagroupThalesluna) {
	o.Thalesluna = v
}

func (o HsmThaleslunagroup) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HsmThaleslunagroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.GroupSn) {
		toSerialize["group_sn"] = o.GroupSn
	}
	if !IsNil(o.HsmVersion) {
		toSerialize["hsm_version"] = o.HsmVersion
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PassPhrase) {
		toSerialize["pass_phrase"] = o.PassPhrase
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Thalesluna) {
		toSerialize["thalesluna"] = o.Thalesluna
	}
	return toSerialize, nil
}

type NullableHsmThaleslunagroup struct {
	value *HsmThaleslunagroup
	isSet bool
}

func (v NullableHsmThaleslunagroup) Get() *HsmThaleslunagroup {
	return v.value
}

func (v *NullableHsmThaleslunagroup) Set(val *HsmThaleslunagroup) {
	v.value = val
	v.isSet = true
}

func (v NullableHsmThaleslunagroup) IsSet() bool {
	return v.isSet
}

func (v *NullableHsmThaleslunagroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHsmThaleslunagroup(val *HsmThaleslunagroup) *NullableHsmThaleslunagroup {
	return &NullableHsmThaleslunagroup{value: val, isSet: true}
}

func (v NullableHsmThaleslunagroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHsmThaleslunagroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
