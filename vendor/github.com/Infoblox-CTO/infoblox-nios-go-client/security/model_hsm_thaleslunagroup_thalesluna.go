/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
)

// checks if the HsmThaleslunagroupThalesluna type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HsmThaleslunagroupThalesluna{}

// HsmThaleslunagroupThalesluna struct for HsmThaleslunagroupThalesluna
type HsmThaleslunagroupThalesluna struct {
	// The HSM Thales Luna device IPv4 Address or FQDN.
	Name *string `json:"name,omitempty"`
	// The HSM Thales Luna device partition serial number (PSN).
	PartitionSerialNumber *string `json:"partition_serial_number,omitempty"`
	// Determines whether the HSM Thales Luna device is disabled.
	Disable *bool `json:"disable,omitempty"`
	// Partition ID that is displayed after the appliance has successfully connected to the HSM Thales Luna device.
	PartitionId *string `json:"partition_id,omitempty"`
	// Determines whether the HSM Thales Luna device is FIPS compliant.
	IsFipsCompliant *bool `json:"is_fips_compliant,omitempty"`
	// The token returned by the uploadinit function call in object fileop for a Thales Luna HSM device certificate.
	ServerCert *string `json:"server_cert,omitempty"`
	// The HSM Thales Luna device partition capacity percentage used.
	PartitionCapacity *int64 `json:"partition_capacity,omitempty"`
	// The HSM Thales Luna device status.
	Status               *string `json:"status,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _HsmThaleslunagroupThalesluna HsmThaleslunagroupThalesluna

// NewHsmThaleslunagroupThalesluna instantiates a new HsmThaleslunagroupThalesluna object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHsmThaleslunagroupThalesluna() *HsmThaleslunagroupThalesluna {
	this := HsmThaleslunagroupThalesluna{}
	return &this
}

// NewHsmThaleslunagroupThaleslunaWithDefaults instantiates a new HsmThaleslunagroupThalesluna object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHsmThaleslunagroupThaleslunaWithDefaults() *HsmThaleslunagroupThalesluna {
	this := HsmThaleslunagroupThalesluna{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *HsmThaleslunagroupThalesluna) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmThaleslunagroupThalesluna) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *HsmThaleslunagroupThalesluna) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *HsmThaleslunagroupThalesluna) SetName(v string) {
	o.Name = &v
}

// GetPartitionSerialNumber returns the PartitionSerialNumber field value if set, zero value otherwise.
func (o *HsmThaleslunagroupThalesluna) GetPartitionSerialNumber() string {
	if o == nil || IsNil(o.PartitionSerialNumber) {
		var ret string
		return ret
	}
	return *o.PartitionSerialNumber
}

// GetPartitionSerialNumberOk returns a tuple with the PartitionSerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmThaleslunagroupThalesluna) GetPartitionSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PartitionSerialNumber) {
		return nil, false
	}
	return o.PartitionSerialNumber, true
}

// HasPartitionSerialNumber returns a boolean if a field has been set.
func (o *HsmThaleslunagroupThalesluna) HasPartitionSerialNumber() bool {
	if o != nil && !IsNil(o.PartitionSerialNumber) {
		return true
	}

	return false
}

// SetPartitionSerialNumber gets a reference to the given string and assigns it to the PartitionSerialNumber field.
func (o *HsmThaleslunagroupThalesluna) SetPartitionSerialNumber(v string) {
	o.PartitionSerialNumber = &v
}

// GetDisable returns the Disable field value if set, zero value otherwise.
func (o *HsmThaleslunagroupThalesluna) GetDisable() bool {
	if o == nil || IsNil(o.Disable) {
		var ret bool
		return ret
	}
	return *o.Disable
}

// GetDisableOk returns a tuple with the Disable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmThaleslunagroupThalesluna) GetDisableOk() (*bool, bool) {
	if o == nil || IsNil(o.Disable) {
		return nil, false
	}
	return o.Disable, true
}

// HasDisable returns a boolean if a field has been set.
func (o *HsmThaleslunagroupThalesluna) HasDisable() bool {
	if o != nil && !IsNil(o.Disable) {
		return true
	}

	return false
}

// SetDisable gets a reference to the given bool and assigns it to the Disable field.
func (o *HsmThaleslunagroupThalesluna) SetDisable(v bool) {
	o.Disable = &v
}

// GetPartitionId returns the PartitionId field value if set, zero value otherwise.
func (o *HsmThaleslunagroupThalesluna) GetPartitionId() string {
	if o == nil || IsNil(o.PartitionId) {
		var ret string
		return ret
	}
	return *o.PartitionId
}

// GetPartitionIdOk returns a tuple with the PartitionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmThaleslunagroupThalesluna) GetPartitionIdOk() (*string, bool) {
	if o == nil || IsNil(o.PartitionId) {
		return nil, false
	}
	return o.PartitionId, true
}

// HasPartitionId returns a boolean if a field has been set.
func (o *HsmThaleslunagroupThalesluna) HasPartitionId() bool {
	if o != nil && !IsNil(o.PartitionId) {
		return true
	}

	return false
}

// SetPartitionId gets a reference to the given string and assigns it to the PartitionId field.
func (o *HsmThaleslunagroupThalesluna) SetPartitionId(v string) {
	o.PartitionId = &v
}

// GetIsFipsCompliant returns the IsFipsCompliant field value if set, zero value otherwise.
func (o *HsmThaleslunagroupThalesluna) GetIsFipsCompliant() bool {
	if o == nil || IsNil(o.IsFipsCompliant) {
		var ret bool
		return ret
	}
	return *o.IsFipsCompliant
}

// GetIsFipsCompliantOk returns a tuple with the IsFipsCompliant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmThaleslunagroupThalesluna) GetIsFipsCompliantOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFipsCompliant) {
		return nil, false
	}
	return o.IsFipsCompliant, true
}

// HasIsFipsCompliant returns a boolean if a field has been set.
func (o *HsmThaleslunagroupThalesluna) HasIsFipsCompliant() bool {
	if o != nil && !IsNil(o.IsFipsCompliant) {
		return true
	}

	return false
}

// SetIsFipsCompliant gets a reference to the given bool and assigns it to the IsFipsCompliant field.
func (o *HsmThaleslunagroupThalesluna) SetIsFipsCompliant(v bool) {
	o.IsFipsCompliant = &v
}

// GetServerCert returns the ServerCert field value if set, zero value otherwise.
func (o *HsmThaleslunagroupThalesluna) GetServerCert() string {
	if o == nil || IsNil(o.ServerCert) {
		var ret string
		return ret
	}
	return *o.ServerCert
}

// GetServerCertOk returns a tuple with the ServerCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmThaleslunagroupThalesluna) GetServerCertOk() (*string, bool) {
	if o == nil || IsNil(o.ServerCert) {
		return nil, false
	}
	return o.ServerCert, true
}

// HasServerCert returns a boolean if a field has been set.
func (o *HsmThaleslunagroupThalesluna) HasServerCert() bool {
	if o != nil && !IsNil(o.ServerCert) {
		return true
	}

	return false
}

// SetServerCert gets a reference to the given string and assigns it to the ServerCert field.
func (o *HsmThaleslunagroupThalesluna) SetServerCert(v string) {
	o.ServerCert = &v
}

// GetPartitionCapacity returns the PartitionCapacity field value if set, zero value otherwise.
func (o *HsmThaleslunagroupThalesluna) GetPartitionCapacity() int64 {
	if o == nil || IsNil(o.PartitionCapacity) {
		var ret int64
		return ret
	}
	return *o.PartitionCapacity
}

// GetPartitionCapacityOk returns a tuple with the PartitionCapacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmThaleslunagroupThalesluna) GetPartitionCapacityOk() (*int64, bool) {
	if o == nil || IsNil(o.PartitionCapacity) {
		return nil, false
	}
	return o.PartitionCapacity, true
}

// HasPartitionCapacity returns a boolean if a field has been set.
func (o *HsmThaleslunagroupThalesluna) HasPartitionCapacity() bool {
	if o != nil && !IsNil(o.PartitionCapacity) {
		return true
	}

	return false
}

// SetPartitionCapacity gets a reference to the given int64 and assigns it to the PartitionCapacity field.
func (o *HsmThaleslunagroupThalesluna) SetPartitionCapacity(v int64) {
	o.PartitionCapacity = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *HsmThaleslunagroupThalesluna) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmThaleslunagroupThalesluna) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *HsmThaleslunagroupThalesluna) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *HsmThaleslunagroupThalesluna) SetStatus(v string) {
	o.Status = &v
}

func (o HsmThaleslunagroupThalesluna) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HsmThaleslunagroupThalesluna) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PartitionSerialNumber) {
		toSerialize["partition_serial_number"] = o.PartitionSerialNumber
	}
	if !IsNil(o.Disable) {
		toSerialize["disable"] = o.Disable
	}
	if !IsNil(o.PartitionId) {
		toSerialize["partition_id"] = o.PartitionId
	}
	if !IsNil(o.IsFipsCompliant) {
		toSerialize["is_fips_compliant"] = o.IsFipsCompliant
	}
	if !IsNil(o.ServerCert) {
		toSerialize["server_cert"] = o.ServerCert
	}
	if !IsNil(o.PartitionCapacity) {
		toSerialize["partition_capacity"] = o.PartitionCapacity
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *HsmThaleslunagroupThalesluna) UnmarshalJSON(data []byte) (err error) {
	varHsmThaleslunagroupThalesluna := _HsmThaleslunagroupThalesluna{}

	err = json.Unmarshal(data, &varHsmThaleslunagroupThalesluna)

	if err != nil {
		return err
	}

	*o = HsmThaleslunagroupThalesluna(varHsmThaleslunagroupThalesluna)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "partition_serial_number")
		delete(additionalProperties, "disable")
		delete(additionalProperties, "partition_id")
		delete(additionalProperties, "is_fips_compliant")
		delete(additionalProperties, "server_cert")
		delete(additionalProperties, "partition_capacity")
		delete(additionalProperties, "status")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableHsmThaleslunagroupThalesluna struct {
	value *HsmThaleslunagroupThalesluna
	isSet bool
}

func (v NullableHsmThaleslunagroupThalesluna) Get() *HsmThaleslunagroupThalesluna {
	return v.value
}

func (v *NullableHsmThaleslunagroupThalesluna) Set(val *HsmThaleslunagroupThalesluna) {
	v.value = val
	v.isSet = true
}

func (v NullableHsmThaleslunagroupThalesluna) IsSet() bool {
	return v.isSet
}

func (v *NullableHsmThaleslunagroupThalesluna) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHsmThaleslunagroupThalesluna(val *HsmThaleslunagroupThalesluna) *NullableHsmThaleslunagroupThalesluna {
	return &NullableHsmThaleslunagroupThalesluna{value: val, isSet: true}
}

func (v NullableHsmThaleslunagroupThalesluna) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHsmThaleslunagroupThalesluna) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
