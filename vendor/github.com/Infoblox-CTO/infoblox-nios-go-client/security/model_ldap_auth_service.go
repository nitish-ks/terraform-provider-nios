/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
)

// checks if the LdapAuthService type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LdapAuthService{}

// LdapAuthService struct for LdapAuthService
type LdapAuthService struct {
	// The reference to the object.
	Ref                     *string                `json:"_ref,omitempty"`
	CheckLdapServerSettings map[string]interface{} `json:"check_ldap_server_settings,omitempty"`
	// The LDAP descriptive comment.
	Comment *string `json:"comment,omitempty"`
	// Determines if the LDAP authentication service is disabled.
	Disable *bool `json:"disable,omitempty"`
	// The mapping LDAP fields to extensible attributes.
	EaMapping []LdapAuthServiceEaMapping `json:"ea_mapping,omitempty"`
	// The name of the LDAP attribute that defines group membership.
	LdapGroupAttribute *string `json:"ldap_group_attribute,omitempty"`
	// The LDAP group authentication type.
	LdapGroupAuthenticationType *string `json:"ldap_group_authentication_type,omitempty"`
	// The LDAP userid attribute that is used for search.
	LdapUserAttribute *string `json:"ldap_user_attribute,omitempty"`
	// The LDAP authentication mode.
	Mode *string `json:"mode,omitempty"`
	// The LDAP authentication service name.
	Name *string `json:"name,omitempty"`
	// The period of time in seconds to wait before trying to contact a LDAP server that has been marked as 'DOWN'.
	RecoveryInterval *int64 `json:"recovery_interval,omitempty"`
	// The maximum number of LDAP authentication attempts.
	Retries *int64 `json:"retries,omitempty"`
	// The starting point of the LDAP search.
	SearchScope *string `json:"search_scope,omitempty"`
	// The list of LDAP servers used for authentication.
	Servers []LdapAuthServiceServers `json:"servers,omitempty"`
	// The LDAP authentication timeout in seconds.
	Timeout *int64 `json:"timeout,omitempty"`
}

// NewLdapAuthService instantiates a new LdapAuthService object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLdapAuthService() *LdapAuthService {
	this := LdapAuthService{}
	return &this
}

// NewLdapAuthServiceWithDefaults instantiates a new LdapAuthService object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLdapAuthServiceWithDefaults() *LdapAuthService {
	this := LdapAuthService{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *LdapAuthService) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapAuthService) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *LdapAuthService) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *LdapAuthService) SetRef(v string) {
	o.Ref = &v
}

// GetCheckLdapServerSettings returns the CheckLdapServerSettings field value if set, zero value otherwise.
func (o *LdapAuthService) GetCheckLdapServerSettings() map[string]interface{} {
	if o == nil || IsNil(o.CheckLdapServerSettings) {
		var ret map[string]interface{}
		return ret
	}
	return o.CheckLdapServerSettings
}

// GetCheckLdapServerSettingsOk returns a tuple with the CheckLdapServerSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapAuthService) GetCheckLdapServerSettingsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CheckLdapServerSettings) {
		return map[string]interface{}{}, false
	}
	return o.CheckLdapServerSettings, true
}

// HasCheckLdapServerSettings returns a boolean if a field has been set.
func (o *LdapAuthService) HasCheckLdapServerSettings() bool {
	if o != nil && !IsNil(o.CheckLdapServerSettings) {
		return true
	}

	return false
}

// SetCheckLdapServerSettings gets a reference to the given map[string]interface{} and assigns it to the CheckLdapServerSettings field.
func (o *LdapAuthService) SetCheckLdapServerSettings(v map[string]interface{}) {
	o.CheckLdapServerSettings = v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *LdapAuthService) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapAuthService) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *LdapAuthService) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *LdapAuthService) SetComment(v string) {
	o.Comment = &v
}

// GetDisable returns the Disable field value if set, zero value otherwise.
func (o *LdapAuthService) GetDisable() bool {
	if o == nil || IsNil(o.Disable) {
		var ret bool
		return ret
	}
	return *o.Disable
}

// GetDisableOk returns a tuple with the Disable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapAuthService) GetDisableOk() (*bool, bool) {
	if o == nil || IsNil(o.Disable) {
		return nil, false
	}
	return o.Disable, true
}

// HasDisable returns a boolean if a field has been set.
func (o *LdapAuthService) HasDisable() bool {
	if o != nil && !IsNil(o.Disable) {
		return true
	}

	return false
}

// SetDisable gets a reference to the given bool and assigns it to the Disable field.
func (o *LdapAuthService) SetDisable(v bool) {
	o.Disable = &v
}

// GetEaMapping returns the EaMapping field value if set, zero value otherwise.
func (o *LdapAuthService) GetEaMapping() []LdapAuthServiceEaMapping {
	if o == nil || IsNil(o.EaMapping) {
		var ret []LdapAuthServiceEaMapping
		return ret
	}
	return o.EaMapping
}

// GetEaMappingOk returns a tuple with the EaMapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapAuthService) GetEaMappingOk() ([]LdapAuthServiceEaMapping, bool) {
	if o == nil || IsNil(o.EaMapping) {
		return nil, false
	}
	return o.EaMapping, true
}

// HasEaMapping returns a boolean if a field has been set.
func (o *LdapAuthService) HasEaMapping() bool {
	if o != nil && !IsNil(o.EaMapping) {
		return true
	}

	return false
}

// SetEaMapping gets a reference to the given []LdapAuthServiceEaMapping and assigns it to the EaMapping field.
func (o *LdapAuthService) SetEaMapping(v []LdapAuthServiceEaMapping) {
	o.EaMapping = v
}

// GetLdapGroupAttribute returns the LdapGroupAttribute field value if set, zero value otherwise.
func (o *LdapAuthService) GetLdapGroupAttribute() string {
	if o == nil || IsNil(o.LdapGroupAttribute) {
		var ret string
		return ret
	}
	return *o.LdapGroupAttribute
}

// GetLdapGroupAttributeOk returns a tuple with the LdapGroupAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapAuthService) GetLdapGroupAttributeOk() (*string, bool) {
	if o == nil || IsNil(o.LdapGroupAttribute) {
		return nil, false
	}
	return o.LdapGroupAttribute, true
}

// HasLdapGroupAttribute returns a boolean if a field has been set.
func (o *LdapAuthService) HasLdapGroupAttribute() bool {
	if o != nil && !IsNil(o.LdapGroupAttribute) {
		return true
	}

	return false
}

// SetLdapGroupAttribute gets a reference to the given string and assigns it to the LdapGroupAttribute field.
func (o *LdapAuthService) SetLdapGroupAttribute(v string) {
	o.LdapGroupAttribute = &v
}

// GetLdapGroupAuthenticationType returns the LdapGroupAuthenticationType field value if set, zero value otherwise.
func (o *LdapAuthService) GetLdapGroupAuthenticationType() string {
	if o == nil || IsNil(o.LdapGroupAuthenticationType) {
		var ret string
		return ret
	}
	return *o.LdapGroupAuthenticationType
}

// GetLdapGroupAuthenticationTypeOk returns a tuple with the LdapGroupAuthenticationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapAuthService) GetLdapGroupAuthenticationTypeOk() (*string, bool) {
	if o == nil || IsNil(o.LdapGroupAuthenticationType) {
		return nil, false
	}
	return o.LdapGroupAuthenticationType, true
}

// HasLdapGroupAuthenticationType returns a boolean if a field has been set.
func (o *LdapAuthService) HasLdapGroupAuthenticationType() bool {
	if o != nil && !IsNil(o.LdapGroupAuthenticationType) {
		return true
	}

	return false
}

// SetLdapGroupAuthenticationType gets a reference to the given string and assigns it to the LdapGroupAuthenticationType field.
func (o *LdapAuthService) SetLdapGroupAuthenticationType(v string) {
	o.LdapGroupAuthenticationType = &v
}

// GetLdapUserAttribute returns the LdapUserAttribute field value if set, zero value otherwise.
func (o *LdapAuthService) GetLdapUserAttribute() string {
	if o == nil || IsNil(o.LdapUserAttribute) {
		var ret string
		return ret
	}
	return *o.LdapUserAttribute
}

// GetLdapUserAttributeOk returns a tuple with the LdapUserAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapAuthService) GetLdapUserAttributeOk() (*string, bool) {
	if o == nil || IsNil(o.LdapUserAttribute) {
		return nil, false
	}
	return o.LdapUserAttribute, true
}

// HasLdapUserAttribute returns a boolean if a field has been set.
func (o *LdapAuthService) HasLdapUserAttribute() bool {
	if o != nil && !IsNil(o.LdapUserAttribute) {
		return true
	}

	return false
}

// SetLdapUserAttribute gets a reference to the given string and assigns it to the LdapUserAttribute field.
func (o *LdapAuthService) SetLdapUserAttribute(v string) {
	o.LdapUserAttribute = &v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *LdapAuthService) GetMode() string {
	if o == nil || IsNil(o.Mode) {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapAuthService) GetModeOk() (*string, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *LdapAuthService) HasMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *LdapAuthService) SetMode(v string) {
	o.Mode = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *LdapAuthService) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapAuthService) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *LdapAuthService) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *LdapAuthService) SetName(v string) {
	o.Name = &v
}

// GetRecoveryInterval returns the RecoveryInterval field value if set, zero value otherwise.
func (o *LdapAuthService) GetRecoveryInterval() int64 {
	if o == nil || IsNil(o.RecoveryInterval) {
		var ret int64
		return ret
	}
	return *o.RecoveryInterval
}

// GetRecoveryIntervalOk returns a tuple with the RecoveryInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapAuthService) GetRecoveryIntervalOk() (*int64, bool) {
	if o == nil || IsNil(o.RecoveryInterval) {
		return nil, false
	}
	return o.RecoveryInterval, true
}

// HasRecoveryInterval returns a boolean if a field has been set.
func (o *LdapAuthService) HasRecoveryInterval() bool {
	if o != nil && !IsNil(o.RecoveryInterval) {
		return true
	}

	return false
}

// SetRecoveryInterval gets a reference to the given int64 and assigns it to the RecoveryInterval field.
func (o *LdapAuthService) SetRecoveryInterval(v int64) {
	o.RecoveryInterval = &v
}

// GetRetries returns the Retries field value if set, zero value otherwise.
func (o *LdapAuthService) GetRetries() int64 {
	if o == nil || IsNil(o.Retries) {
		var ret int64
		return ret
	}
	return *o.Retries
}

// GetRetriesOk returns a tuple with the Retries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapAuthService) GetRetriesOk() (*int64, bool) {
	if o == nil || IsNil(o.Retries) {
		return nil, false
	}
	return o.Retries, true
}

// HasRetries returns a boolean if a field has been set.
func (o *LdapAuthService) HasRetries() bool {
	if o != nil && !IsNil(o.Retries) {
		return true
	}

	return false
}

// SetRetries gets a reference to the given int64 and assigns it to the Retries field.
func (o *LdapAuthService) SetRetries(v int64) {
	o.Retries = &v
}

// GetSearchScope returns the SearchScope field value if set, zero value otherwise.
func (o *LdapAuthService) GetSearchScope() string {
	if o == nil || IsNil(o.SearchScope) {
		var ret string
		return ret
	}
	return *o.SearchScope
}

// GetSearchScopeOk returns a tuple with the SearchScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapAuthService) GetSearchScopeOk() (*string, bool) {
	if o == nil || IsNil(o.SearchScope) {
		return nil, false
	}
	return o.SearchScope, true
}

// HasSearchScope returns a boolean if a field has been set.
func (o *LdapAuthService) HasSearchScope() bool {
	if o != nil && !IsNil(o.SearchScope) {
		return true
	}

	return false
}

// SetSearchScope gets a reference to the given string and assigns it to the SearchScope field.
func (o *LdapAuthService) SetSearchScope(v string) {
	o.SearchScope = &v
}

// GetServers returns the Servers field value if set, zero value otherwise.
func (o *LdapAuthService) GetServers() []LdapAuthServiceServers {
	if o == nil || IsNil(o.Servers) {
		var ret []LdapAuthServiceServers
		return ret
	}
	return o.Servers
}

// GetServersOk returns a tuple with the Servers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapAuthService) GetServersOk() ([]LdapAuthServiceServers, bool) {
	if o == nil || IsNil(o.Servers) {
		return nil, false
	}
	return o.Servers, true
}

// HasServers returns a boolean if a field has been set.
func (o *LdapAuthService) HasServers() bool {
	if o != nil && !IsNil(o.Servers) {
		return true
	}

	return false
}

// SetServers gets a reference to the given []LdapAuthServiceServers and assigns it to the Servers field.
func (o *LdapAuthService) SetServers(v []LdapAuthServiceServers) {
	o.Servers = v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *LdapAuthService) GetTimeout() int64 {
	if o == nil || IsNil(o.Timeout) {
		var ret int64
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapAuthService) GetTimeoutOk() (*int64, bool) {
	if o == nil || IsNil(o.Timeout) {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *LdapAuthService) HasTimeout() bool {
	if o != nil && !IsNil(o.Timeout) {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given int64 and assigns it to the Timeout field.
func (o *LdapAuthService) SetTimeout(v int64) {
	o.Timeout = &v
}

func (o LdapAuthService) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LdapAuthService) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.CheckLdapServerSettings) {
		toSerialize["check_ldap_server_settings"] = o.CheckLdapServerSettings
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.Disable) {
		toSerialize["disable"] = o.Disable
	}
	if !IsNil(o.EaMapping) {
		toSerialize["ea_mapping"] = o.EaMapping
	}
	if !IsNil(o.LdapGroupAttribute) {
		toSerialize["ldap_group_attribute"] = o.LdapGroupAttribute
	}
	if !IsNil(o.LdapGroupAuthenticationType) {
		toSerialize["ldap_group_authentication_type"] = o.LdapGroupAuthenticationType
	}
	if !IsNil(o.LdapUserAttribute) {
		toSerialize["ldap_user_attribute"] = o.LdapUserAttribute
	}
	if !IsNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.RecoveryInterval) {
		toSerialize["recovery_interval"] = o.RecoveryInterval
	}
	if !IsNil(o.Retries) {
		toSerialize["retries"] = o.Retries
	}
	if !IsNil(o.SearchScope) {
		toSerialize["search_scope"] = o.SearchScope
	}
	if !IsNil(o.Servers) {
		toSerialize["servers"] = o.Servers
	}
	if !IsNil(o.Timeout) {
		toSerialize["timeout"] = o.Timeout
	}
	return toSerialize, nil
}

type NullableLdapAuthService struct {
	value *LdapAuthService
	isSet bool
}

func (v NullableLdapAuthService) Get() *LdapAuthService {
	return v.value
}

func (v *NullableLdapAuthService) Set(val *LdapAuthService) {
	v.value = val
	v.isSet = true
}

func (v NullableLdapAuthService) IsSet() bool {
	return v.isSet
}

func (v *NullableLdapAuthService) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLdapAuthService(val *LdapAuthService) *NullableLdapAuthService {
	return &NullableLdapAuthService{value: val, isSet: true}
}

func (v NullableLdapAuthService) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLdapAuthService) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
