/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
	"fmt"
)

// ListLocaluserAuthserviceResponse - struct for ListLocaluserAuthserviceResponse
type ListLocaluserAuthserviceResponse struct {
	ListLocaluserAuthserviceResponseObject *ListLocaluserAuthserviceResponseObject
	ArrayOfLocaluserAuthservice            *[]LocaluserAuthservice
}

// ListLocaluserAuthserviceResponseObjectAsListLocaluserAuthserviceResponse is a convenience function that returns ListLocaluserAuthserviceResponseObject wrapped in ListLocaluserAuthserviceResponse
func ListLocaluserAuthserviceResponseObjectAsListLocaluserAuthserviceResponse(v *ListLocaluserAuthserviceResponseObject) ListLocaluserAuthserviceResponse {
	return ListLocaluserAuthserviceResponse{
		ListLocaluserAuthserviceResponseObject: v,
	}
}

// []LocaluserAuthserviceAsListLocaluserAuthserviceResponse is a convenience function that returns []LocaluserAuthservice wrapped in ListLocaluserAuthserviceResponse
func ArrayOfLocaluserAuthserviceAsListLocaluserAuthserviceResponse(v *[]LocaluserAuthservice) ListLocaluserAuthserviceResponse {
	return ListLocaluserAuthserviceResponse{
		ArrayOfLocaluserAuthservice: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListLocaluserAuthserviceResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListLocaluserAuthserviceResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListLocaluserAuthserviceResponseObject)
	if err == nil {
		jsonListLocaluserAuthserviceResponseObject, _ := json.Marshal(dst.ListLocaluserAuthserviceResponseObject)
		if string(jsonListLocaluserAuthserviceResponseObject) == "{}" { // empty struct
			dst.ListLocaluserAuthserviceResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListLocaluserAuthserviceResponseObject = nil
	}

	// try to unmarshal data into ArrayOfLocaluserAuthservice
	err = newStrictDecoder(data).Decode(&dst.ArrayOfLocaluserAuthservice)
	if err == nil {
		jsonArrayOfLocaluserAuthservice, _ := json.Marshal(dst.ArrayOfLocaluserAuthservice)
		if string(jsonArrayOfLocaluserAuthservice) == "{}" { // empty struct
			dst.ArrayOfLocaluserAuthservice = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfLocaluserAuthservice = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListLocaluserAuthserviceResponseObject = nil
		dst.ArrayOfLocaluserAuthservice = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListLocaluserAuthserviceResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListLocaluserAuthserviceResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListLocaluserAuthserviceResponse) MarshalJSON() ([]byte, error) {
	if src.ListLocaluserAuthserviceResponseObject != nil {
		return json.Marshal(&src.ListLocaluserAuthserviceResponseObject)
	}

	if src.ArrayOfLocaluserAuthservice != nil {
		return json.Marshal(&src.ArrayOfLocaluserAuthservice)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListLocaluserAuthserviceResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListLocaluserAuthserviceResponseObject != nil {
		return obj.ListLocaluserAuthserviceResponseObject
	}

	if obj.ArrayOfLocaluserAuthservice != nil {
		return obj.ArrayOfLocaluserAuthservice
	}

	// all schemas are nil
	return nil
}

type NullableListLocaluserAuthserviceResponse struct {
	value *ListLocaluserAuthserviceResponse
	isSet bool
}

func (v NullableListLocaluserAuthserviceResponse) Get() *ListLocaluserAuthserviceResponse {
	return v.value
}

func (v *NullableListLocaluserAuthserviceResponse) Set(val *ListLocaluserAuthserviceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListLocaluserAuthserviceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListLocaluserAuthserviceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListLocaluserAuthserviceResponse(val *ListLocaluserAuthserviceResponse) *NullableListLocaluserAuthserviceResponse {
	return &NullableListLocaluserAuthserviceResponse{value: val, isSet: true}
}

func (v NullableListLocaluserAuthserviceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListLocaluserAuthserviceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
