/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
	"fmt"
)

// ListSamlAuthserviceResponse - struct for ListSamlAuthserviceResponse
type ListSamlAuthserviceResponse struct {
	ListSamlAuthserviceResponseObject *ListSamlAuthserviceResponseObject
	ArrayOfSamlAuthservice            *[]SamlAuthservice
}

// ListSamlAuthserviceResponseObjectAsListSamlAuthserviceResponse is a convenience function that returns ListSamlAuthserviceResponseObject wrapped in ListSamlAuthserviceResponse
func ListSamlAuthserviceResponseObjectAsListSamlAuthserviceResponse(v *ListSamlAuthserviceResponseObject) ListSamlAuthserviceResponse {
	return ListSamlAuthserviceResponse{
		ListSamlAuthserviceResponseObject: v,
	}
}

// []SamlAuthserviceAsListSamlAuthserviceResponse is a convenience function that returns []SamlAuthservice wrapped in ListSamlAuthserviceResponse
func ArrayOfSamlAuthserviceAsListSamlAuthserviceResponse(v *[]SamlAuthservice) ListSamlAuthserviceResponse {
	return ListSamlAuthserviceResponse{
		ArrayOfSamlAuthservice: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListSamlAuthserviceResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListSamlAuthserviceResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListSamlAuthserviceResponseObject)
	if err == nil {
		jsonListSamlAuthserviceResponseObject, _ := json.Marshal(dst.ListSamlAuthserviceResponseObject)
		if string(jsonListSamlAuthserviceResponseObject) == "{}" { // empty struct
			dst.ListSamlAuthserviceResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListSamlAuthserviceResponseObject = nil
	}

	// try to unmarshal data into ArrayOfSamlAuthservice
	err = newStrictDecoder(data).Decode(&dst.ArrayOfSamlAuthservice)
	if err == nil {
		jsonArrayOfSamlAuthservice, _ := json.Marshal(dst.ArrayOfSamlAuthservice)
		if string(jsonArrayOfSamlAuthservice) == "{}" { // empty struct
			dst.ArrayOfSamlAuthservice = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfSamlAuthservice = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListSamlAuthserviceResponseObject = nil
		dst.ArrayOfSamlAuthservice = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListSamlAuthserviceResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListSamlAuthserviceResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListSamlAuthserviceResponse) MarshalJSON() ([]byte, error) {
	if src.ListSamlAuthserviceResponseObject != nil {
		return json.Marshal(&src.ListSamlAuthserviceResponseObject)
	}

	if src.ArrayOfSamlAuthservice != nil {
		return json.Marshal(&src.ArrayOfSamlAuthservice)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListSamlAuthserviceResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListSamlAuthserviceResponseObject != nil {
		return obj.ListSamlAuthserviceResponseObject
	}

	if obj.ArrayOfSamlAuthservice != nil {
		return obj.ArrayOfSamlAuthservice
	}

	// all schemas are nil
	return nil
}

type NullableListSamlAuthserviceResponse struct {
	value *ListSamlAuthserviceResponse
	isSet bool
}

func (v NullableListSamlAuthserviceResponse) Get() *ListSamlAuthserviceResponse {
	return v.value
}

func (v *NullableListSamlAuthserviceResponse) Set(val *ListSamlAuthserviceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListSamlAuthserviceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListSamlAuthserviceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListSamlAuthserviceResponse(val *ListSamlAuthserviceResponse) *NullableListSamlAuthserviceResponse {
	return &NullableListSamlAuthserviceResponse{value: val, isSet: true}
}

func (v NullableListSamlAuthserviceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListSamlAuthserviceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
