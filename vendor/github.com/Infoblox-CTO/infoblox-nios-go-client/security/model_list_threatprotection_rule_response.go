/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
	"fmt"
)

// ListThreatprotectionRuleResponse - struct for ListThreatprotectionRuleResponse
type ListThreatprotectionRuleResponse struct {
	ListThreatprotectionRuleResponseObject *ListThreatprotectionRuleResponseObject
	ArrayOfThreatprotectionRule            *[]ThreatprotectionRule
}

// ListThreatprotectionRuleResponseObjectAsListThreatprotectionRuleResponse is a convenience function that returns ListThreatprotectionRuleResponseObject wrapped in ListThreatprotectionRuleResponse
func ListThreatprotectionRuleResponseObjectAsListThreatprotectionRuleResponse(v *ListThreatprotectionRuleResponseObject) ListThreatprotectionRuleResponse {
	return ListThreatprotectionRuleResponse{
		ListThreatprotectionRuleResponseObject: v,
	}
}

// []ThreatprotectionRuleAsListThreatprotectionRuleResponse is a convenience function that returns []ThreatprotectionRule wrapped in ListThreatprotectionRuleResponse
func ArrayOfThreatprotectionRuleAsListThreatprotectionRuleResponse(v *[]ThreatprotectionRule) ListThreatprotectionRuleResponse {
	return ListThreatprotectionRuleResponse{
		ArrayOfThreatprotectionRule: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListThreatprotectionRuleResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListThreatprotectionRuleResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListThreatprotectionRuleResponseObject)
	if err == nil {
		jsonListThreatprotectionRuleResponseObject, _ := json.Marshal(dst.ListThreatprotectionRuleResponseObject)
		if string(jsonListThreatprotectionRuleResponseObject) == "{}" { // empty struct
			dst.ListThreatprotectionRuleResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListThreatprotectionRuleResponseObject = nil
	}

	// try to unmarshal data into ArrayOfThreatprotectionRule
	err = newStrictDecoder(data).Decode(&dst.ArrayOfThreatprotectionRule)
	if err == nil {
		jsonArrayOfThreatprotectionRule, _ := json.Marshal(dst.ArrayOfThreatprotectionRule)
		if string(jsonArrayOfThreatprotectionRule) == "{}" { // empty struct
			dst.ArrayOfThreatprotectionRule = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfThreatprotectionRule = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListThreatprotectionRuleResponseObject = nil
		dst.ArrayOfThreatprotectionRule = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListThreatprotectionRuleResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListThreatprotectionRuleResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListThreatprotectionRuleResponse) MarshalJSON() ([]byte, error) {
	if src.ListThreatprotectionRuleResponseObject != nil {
		return json.Marshal(&src.ListThreatprotectionRuleResponseObject)
	}

	if src.ArrayOfThreatprotectionRule != nil {
		return json.Marshal(&src.ArrayOfThreatprotectionRule)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListThreatprotectionRuleResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListThreatprotectionRuleResponseObject != nil {
		return obj.ListThreatprotectionRuleResponseObject
	}

	if obj.ArrayOfThreatprotectionRule != nil {
		return obj.ArrayOfThreatprotectionRule
	}

	// all schemas are nil
	return nil
}

type NullableListThreatprotectionRuleResponse struct {
	value *ListThreatprotectionRuleResponse
	isSet bool
}

func (v NullableListThreatprotectionRuleResponse) Get() *ListThreatprotectionRuleResponse {
	return v.value
}

func (v *NullableListThreatprotectionRuleResponse) Set(val *ListThreatprotectionRuleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListThreatprotectionRuleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListThreatprotectionRuleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListThreatprotectionRuleResponse(val *ListThreatprotectionRuleResponse) *NullableListThreatprotectionRuleResponse {
	return &NullableListThreatprotectionRuleResponse{value: val, isSet: true}
}

func (v NullableListThreatprotectionRuleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListThreatprotectionRuleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
