/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
)

// checks if the Networkuser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Networkuser{}

// Networkuser struct for Networkuser
type Networkuser struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// The IPv4 Address or IPv6 Address of the Network User.
	Address *string `json:"address,omitempty"`
	// The reference of the IPAM IPv4Address or IPv6Address object describing the address of the Network User.
	AddressObject *string `json:"address_object,omitempty"`
	// The Network User data source.
	DataSource *string `json:"data_source,omitempty"`
	// The Network User data source IPv4 Address or IPv6 Address or FQDN address.
	DataSourceIp *string `json:"data_source_ip,omitempty"`
	// The domain name of the Network User.
	Domainname *string `json:"domainname,omitempty"`
	// The first seen timestamp of the Network User.
	FirstSeenTime *int64 `json:"first_seen_time,omitempty"`
	// The group identifier of the Network User.
	Guid *string `json:"guid,omitempty"`
	// The last seen timestamp of the Network User.
	LastSeenTime *int64 `json:"last_seen_time,omitempty"`
	// The last updated timestamp of the Network User.
	LastUpdatedTime *int64 `json:"last_updated_time,omitempty"`
	// The logon identifier of the Network User.
	LogonId *string `json:"logon_id,omitempty"`
	// The logout timestamp of the Network User.
	LogoutTime *int64 `json:"logout_time,omitempty"`
	// The name of the Network User.
	Name *string `json:"name,omitempty"`
	// The reference to the network to which the Network User belongs.
	Network *string `json:"network,omitempty"`
	// The name of the network view in which this Network User resides.
	NetworkView *string `json:"network_view,omitempty"`
	// The status of the Network User.
	UserStatus *string `json:"user_status,omitempty"`
}

// NewNetworkuser instantiates a new Networkuser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkuser() *Networkuser {
	this := Networkuser{}
	return &this
}

// NewNetworkuserWithDefaults instantiates a new Networkuser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkuserWithDefaults() *Networkuser {
	this := Networkuser{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *Networkuser) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Networkuser) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *Networkuser) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *Networkuser) SetRef(v string) {
	o.Ref = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *Networkuser) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Networkuser) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *Networkuser) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *Networkuser) SetAddress(v string) {
	o.Address = &v
}

// GetAddressObject returns the AddressObject field value if set, zero value otherwise.
func (o *Networkuser) GetAddressObject() string {
	if o == nil || IsNil(o.AddressObject) {
		var ret string
		return ret
	}
	return *o.AddressObject
}

// GetAddressObjectOk returns a tuple with the AddressObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Networkuser) GetAddressObjectOk() (*string, bool) {
	if o == nil || IsNil(o.AddressObject) {
		return nil, false
	}
	return o.AddressObject, true
}

// HasAddressObject returns a boolean if a field has been set.
func (o *Networkuser) HasAddressObject() bool {
	if o != nil && !IsNil(o.AddressObject) {
		return true
	}

	return false
}

// SetAddressObject gets a reference to the given string and assigns it to the AddressObject field.
func (o *Networkuser) SetAddressObject(v string) {
	o.AddressObject = &v
}

// GetDataSource returns the DataSource field value if set, zero value otherwise.
func (o *Networkuser) GetDataSource() string {
	if o == nil || IsNil(o.DataSource) {
		var ret string
		return ret
	}
	return *o.DataSource
}

// GetDataSourceOk returns a tuple with the DataSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Networkuser) GetDataSourceOk() (*string, bool) {
	if o == nil || IsNil(o.DataSource) {
		return nil, false
	}
	return o.DataSource, true
}

// HasDataSource returns a boolean if a field has been set.
func (o *Networkuser) HasDataSource() bool {
	if o != nil && !IsNil(o.DataSource) {
		return true
	}

	return false
}

// SetDataSource gets a reference to the given string and assigns it to the DataSource field.
func (o *Networkuser) SetDataSource(v string) {
	o.DataSource = &v
}

// GetDataSourceIp returns the DataSourceIp field value if set, zero value otherwise.
func (o *Networkuser) GetDataSourceIp() string {
	if o == nil || IsNil(o.DataSourceIp) {
		var ret string
		return ret
	}
	return *o.DataSourceIp
}

// GetDataSourceIpOk returns a tuple with the DataSourceIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Networkuser) GetDataSourceIpOk() (*string, bool) {
	if o == nil || IsNil(o.DataSourceIp) {
		return nil, false
	}
	return o.DataSourceIp, true
}

// HasDataSourceIp returns a boolean if a field has been set.
func (o *Networkuser) HasDataSourceIp() bool {
	if o != nil && !IsNil(o.DataSourceIp) {
		return true
	}

	return false
}

// SetDataSourceIp gets a reference to the given string and assigns it to the DataSourceIp field.
func (o *Networkuser) SetDataSourceIp(v string) {
	o.DataSourceIp = &v
}

// GetDomainname returns the Domainname field value if set, zero value otherwise.
func (o *Networkuser) GetDomainname() string {
	if o == nil || IsNil(o.Domainname) {
		var ret string
		return ret
	}
	return *o.Domainname
}

// GetDomainnameOk returns a tuple with the Domainname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Networkuser) GetDomainnameOk() (*string, bool) {
	if o == nil || IsNil(o.Domainname) {
		return nil, false
	}
	return o.Domainname, true
}

// HasDomainname returns a boolean if a field has been set.
func (o *Networkuser) HasDomainname() bool {
	if o != nil && !IsNil(o.Domainname) {
		return true
	}

	return false
}

// SetDomainname gets a reference to the given string and assigns it to the Domainname field.
func (o *Networkuser) SetDomainname(v string) {
	o.Domainname = &v
}

// GetFirstSeenTime returns the FirstSeenTime field value if set, zero value otherwise.
func (o *Networkuser) GetFirstSeenTime() int64 {
	if o == nil || IsNil(o.FirstSeenTime) {
		var ret int64
		return ret
	}
	return *o.FirstSeenTime
}

// GetFirstSeenTimeOk returns a tuple with the FirstSeenTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Networkuser) GetFirstSeenTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.FirstSeenTime) {
		return nil, false
	}
	return o.FirstSeenTime, true
}

// HasFirstSeenTime returns a boolean if a field has been set.
func (o *Networkuser) HasFirstSeenTime() bool {
	if o != nil && !IsNil(o.FirstSeenTime) {
		return true
	}

	return false
}

// SetFirstSeenTime gets a reference to the given int64 and assigns it to the FirstSeenTime field.
func (o *Networkuser) SetFirstSeenTime(v int64) {
	o.FirstSeenTime = &v
}

// GetGuid returns the Guid field value if set, zero value otherwise.
func (o *Networkuser) GetGuid() string {
	if o == nil || IsNil(o.Guid) {
		var ret string
		return ret
	}
	return *o.Guid
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Networkuser) GetGuidOk() (*string, bool) {
	if o == nil || IsNil(o.Guid) {
		return nil, false
	}
	return o.Guid, true
}

// HasGuid returns a boolean if a field has been set.
func (o *Networkuser) HasGuid() bool {
	if o != nil && !IsNil(o.Guid) {
		return true
	}

	return false
}

// SetGuid gets a reference to the given string and assigns it to the Guid field.
func (o *Networkuser) SetGuid(v string) {
	o.Guid = &v
}

// GetLastSeenTime returns the LastSeenTime field value if set, zero value otherwise.
func (o *Networkuser) GetLastSeenTime() int64 {
	if o == nil || IsNil(o.LastSeenTime) {
		var ret int64
		return ret
	}
	return *o.LastSeenTime
}

// GetLastSeenTimeOk returns a tuple with the LastSeenTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Networkuser) GetLastSeenTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.LastSeenTime) {
		return nil, false
	}
	return o.LastSeenTime, true
}

// HasLastSeenTime returns a boolean if a field has been set.
func (o *Networkuser) HasLastSeenTime() bool {
	if o != nil && !IsNil(o.LastSeenTime) {
		return true
	}

	return false
}

// SetLastSeenTime gets a reference to the given int64 and assigns it to the LastSeenTime field.
func (o *Networkuser) SetLastSeenTime(v int64) {
	o.LastSeenTime = &v
}

// GetLastUpdatedTime returns the LastUpdatedTime field value if set, zero value otherwise.
func (o *Networkuser) GetLastUpdatedTime() int64 {
	if o == nil || IsNil(o.LastUpdatedTime) {
		var ret int64
		return ret
	}
	return *o.LastUpdatedTime
}

// GetLastUpdatedTimeOk returns a tuple with the LastUpdatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Networkuser) GetLastUpdatedTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.LastUpdatedTime) {
		return nil, false
	}
	return o.LastUpdatedTime, true
}

// HasLastUpdatedTime returns a boolean if a field has been set.
func (o *Networkuser) HasLastUpdatedTime() bool {
	if o != nil && !IsNil(o.LastUpdatedTime) {
		return true
	}

	return false
}

// SetLastUpdatedTime gets a reference to the given int64 and assigns it to the LastUpdatedTime field.
func (o *Networkuser) SetLastUpdatedTime(v int64) {
	o.LastUpdatedTime = &v
}

// GetLogonId returns the LogonId field value if set, zero value otherwise.
func (o *Networkuser) GetLogonId() string {
	if o == nil || IsNil(o.LogonId) {
		var ret string
		return ret
	}
	return *o.LogonId
}

// GetLogonIdOk returns a tuple with the LogonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Networkuser) GetLogonIdOk() (*string, bool) {
	if o == nil || IsNil(o.LogonId) {
		return nil, false
	}
	return o.LogonId, true
}

// HasLogonId returns a boolean if a field has been set.
func (o *Networkuser) HasLogonId() bool {
	if o != nil && !IsNil(o.LogonId) {
		return true
	}

	return false
}

// SetLogonId gets a reference to the given string and assigns it to the LogonId field.
func (o *Networkuser) SetLogonId(v string) {
	o.LogonId = &v
}

// GetLogoutTime returns the LogoutTime field value if set, zero value otherwise.
func (o *Networkuser) GetLogoutTime() int64 {
	if o == nil || IsNil(o.LogoutTime) {
		var ret int64
		return ret
	}
	return *o.LogoutTime
}

// GetLogoutTimeOk returns a tuple with the LogoutTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Networkuser) GetLogoutTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.LogoutTime) {
		return nil, false
	}
	return o.LogoutTime, true
}

// HasLogoutTime returns a boolean if a field has been set.
func (o *Networkuser) HasLogoutTime() bool {
	if o != nil && !IsNil(o.LogoutTime) {
		return true
	}

	return false
}

// SetLogoutTime gets a reference to the given int64 and assigns it to the LogoutTime field.
func (o *Networkuser) SetLogoutTime(v int64) {
	o.LogoutTime = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Networkuser) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Networkuser) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Networkuser) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Networkuser) SetName(v string) {
	o.Name = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *Networkuser) GetNetwork() string {
	if o == nil || IsNil(o.Network) {
		var ret string
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Networkuser) GetNetworkOk() (*string, bool) {
	if o == nil || IsNil(o.Network) {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *Networkuser) HasNetwork() bool {
	if o != nil && !IsNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given string and assigns it to the Network field.
func (o *Networkuser) SetNetwork(v string) {
	o.Network = &v
}

// GetNetworkView returns the NetworkView field value if set, zero value otherwise.
func (o *Networkuser) GetNetworkView() string {
	if o == nil || IsNil(o.NetworkView) {
		var ret string
		return ret
	}
	return *o.NetworkView
}

// GetNetworkViewOk returns a tuple with the NetworkView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Networkuser) GetNetworkViewOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkView) {
		return nil, false
	}
	return o.NetworkView, true
}

// HasNetworkView returns a boolean if a field has been set.
func (o *Networkuser) HasNetworkView() bool {
	if o != nil && !IsNil(o.NetworkView) {
		return true
	}

	return false
}

// SetNetworkView gets a reference to the given string and assigns it to the NetworkView field.
func (o *Networkuser) SetNetworkView(v string) {
	o.NetworkView = &v
}

// GetUserStatus returns the UserStatus field value if set, zero value otherwise.
func (o *Networkuser) GetUserStatus() string {
	if o == nil || IsNil(o.UserStatus) {
		var ret string
		return ret
	}
	return *o.UserStatus
}

// GetUserStatusOk returns a tuple with the UserStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Networkuser) GetUserStatusOk() (*string, bool) {
	if o == nil || IsNil(o.UserStatus) {
		return nil, false
	}
	return o.UserStatus, true
}

// HasUserStatus returns a boolean if a field has been set.
func (o *Networkuser) HasUserStatus() bool {
	if o != nil && !IsNil(o.UserStatus) {
		return true
	}

	return false
}

// SetUserStatus gets a reference to the given string and assigns it to the UserStatus field.
func (o *Networkuser) SetUserStatus(v string) {
	o.UserStatus = &v
}

func (o Networkuser) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Networkuser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.AddressObject) {
		toSerialize["address_object"] = o.AddressObject
	}
	if !IsNil(o.DataSource) {
		toSerialize["data_source"] = o.DataSource
	}
	if !IsNil(o.DataSourceIp) {
		toSerialize["data_source_ip"] = o.DataSourceIp
	}
	if !IsNil(o.Domainname) {
		toSerialize["domainname"] = o.Domainname
	}
	if !IsNil(o.FirstSeenTime) {
		toSerialize["first_seen_time"] = o.FirstSeenTime
	}
	if !IsNil(o.Guid) {
		toSerialize["guid"] = o.Guid
	}
	if !IsNil(o.LastSeenTime) {
		toSerialize["last_seen_time"] = o.LastSeenTime
	}
	if !IsNil(o.LastUpdatedTime) {
		toSerialize["last_updated_time"] = o.LastUpdatedTime
	}
	if !IsNil(o.LogonId) {
		toSerialize["logon_id"] = o.LogonId
	}
	if !IsNil(o.LogoutTime) {
		toSerialize["logout_time"] = o.LogoutTime
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	if !IsNil(o.NetworkView) {
		toSerialize["network_view"] = o.NetworkView
	}
	if !IsNil(o.UserStatus) {
		toSerialize["user_status"] = o.UserStatus
	}
	return toSerialize, nil
}

type NullableNetworkuser struct {
	value *Networkuser
	isSet bool
}

func (v NullableNetworkuser) Get() *Networkuser {
	return v.value
}

func (v *NullableNetworkuser) Set(val *Networkuser) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkuser) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkuser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkuser(val *Networkuser) *NullableNetworkuser {
	return &NullableNetworkuser{value: val, isSet: true}
}

func (v NullableNetworkuser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkuser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
