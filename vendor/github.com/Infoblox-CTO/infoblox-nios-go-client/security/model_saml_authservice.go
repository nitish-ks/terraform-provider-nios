/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
)

// checks if the SamlAuthservice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SamlAuthservice{}

// SamlAuthservice struct for SamlAuthservice
type SamlAuthservice struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// The descriptive comment for the SAML authentication service.
	Comment *string             `json:"comment,omitempty"`
	Idp     *SamlAuthserviceIdp `json:"idp,omitempty"`
	// The name of the SAML authentication service.
	Name *string `json:"name,omitempty"`
	// The session timeout in seconds.
	SessionTimeout *int64 `json:"session_timeout,omitempty"`
}

// NewSamlAuthservice instantiates a new SamlAuthservice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSamlAuthservice() *SamlAuthservice {
	this := SamlAuthservice{}
	return &this
}

// NewSamlAuthserviceWithDefaults instantiates a new SamlAuthservice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSamlAuthserviceWithDefaults() *SamlAuthservice {
	this := SamlAuthservice{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *SamlAuthservice) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlAuthservice) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *SamlAuthservice) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *SamlAuthservice) SetRef(v string) {
	o.Ref = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *SamlAuthservice) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlAuthservice) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *SamlAuthservice) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *SamlAuthservice) SetComment(v string) {
	o.Comment = &v
}

// GetIdp returns the Idp field value if set, zero value otherwise.
func (o *SamlAuthservice) GetIdp() SamlAuthserviceIdp {
	if o == nil || IsNil(o.Idp) {
		var ret SamlAuthserviceIdp
		return ret
	}
	return *o.Idp
}

// GetIdpOk returns a tuple with the Idp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlAuthservice) GetIdpOk() (*SamlAuthserviceIdp, bool) {
	if o == nil || IsNil(o.Idp) {
		return nil, false
	}
	return o.Idp, true
}

// HasIdp returns a boolean if a field has been set.
func (o *SamlAuthservice) HasIdp() bool {
	if o != nil && !IsNil(o.Idp) {
		return true
	}

	return false
}

// SetIdp gets a reference to the given SamlAuthserviceIdp and assigns it to the Idp field.
func (o *SamlAuthservice) SetIdp(v SamlAuthserviceIdp) {
	o.Idp = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SamlAuthservice) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlAuthservice) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SamlAuthservice) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SamlAuthservice) SetName(v string) {
	o.Name = &v
}

// GetSessionTimeout returns the SessionTimeout field value if set, zero value otherwise.
func (o *SamlAuthservice) GetSessionTimeout() int64 {
	if o == nil || IsNil(o.SessionTimeout) {
		var ret int64
		return ret
	}
	return *o.SessionTimeout
}

// GetSessionTimeoutOk returns a tuple with the SessionTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlAuthservice) GetSessionTimeoutOk() (*int64, bool) {
	if o == nil || IsNil(o.SessionTimeout) {
		return nil, false
	}
	return o.SessionTimeout, true
}

// HasSessionTimeout returns a boolean if a field has been set.
func (o *SamlAuthservice) HasSessionTimeout() bool {
	if o != nil && !IsNil(o.SessionTimeout) {
		return true
	}

	return false
}

// SetSessionTimeout gets a reference to the given int64 and assigns it to the SessionTimeout field.
func (o *SamlAuthservice) SetSessionTimeout(v int64) {
	o.SessionTimeout = &v
}

func (o SamlAuthservice) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SamlAuthservice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.Idp) {
		toSerialize["idp"] = o.Idp
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SessionTimeout) {
		toSerialize["session_timeout"] = o.SessionTimeout
	}
	return toSerialize, nil
}

type NullableSamlAuthservice struct {
	value *SamlAuthservice
	isSet bool
}

func (v NullableSamlAuthservice) Get() *SamlAuthservice {
	return v.value
}

func (v *NullableSamlAuthservice) Set(val *SamlAuthservice) {
	v.value = val
	v.isSet = true
}

func (v NullableSamlAuthservice) IsSet() bool {
	return v.isSet
}

func (v *NullableSamlAuthservice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSamlAuthservice(val *SamlAuthservice) *NullableSamlAuthservice {
	return &NullableSamlAuthservice{value: val, isSet: true}
}

func (v NullableSamlAuthservice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSamlAuthservice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
