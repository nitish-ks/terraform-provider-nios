/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
)

// checks if the SamlAuthserviceIdp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SamlAuthserviceIdp{}

// SamlAuthserviceIdp struct for SamlAuthserviceIdp
type SamlAuthserviceIdp struct {
	// SAML Identity Provider type.
	IdpType *string `json:"idp_type,omitempty"`
	// The SAML Identity Provider descriptive comment.
	Comment *string `json:"comment,omitempty"`
	// Identity Provider Metadata URL.
	MetadataUrl *string `json:"metadata_url,omitempty"`
	// The token returned by the uploadinit function call in object fileop.
	MetadataToken *string `json:"metadata_token,omitempty"`
	// The SAML groupname optional user group attribute.
	Groupname *string `json:"groupname,omitempty"`
	// host name or IP address of the GM
	SsoRedirectUrl       *string `json:"sso_redirect_url,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SamlAuthserviceIdp SamlAuthserviceIdp

// NewSamlAuthserviceIdp instantiates a new SamlAuthserviceIdp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSamlAuthserviceIdp() *SamlAuthserviceIdp {
	this := SamlAuthserviceIdp{}
	return &this
}

// NewSamlAuthserviceIdpWithDefaults instantiates a new SamlAuthserviceIdp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSamlAuthserviceIdpWithDefaults() *SamlAuthserviceIdp {
	this := SamlAuthserviceIdp{}
	return &this
}

// GetIdpType returns the IdpType field value if set, zero value otherwise.
func (o *SamlAuthserviceIdp) GetIdpType() string {
	if o == nil || IsNil(o.IdpType) {
		var ret string
		return ret
	}
	return *o.IdpType
}

// GetIdpTypeOk returns a tuple with the IdpType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlAuthserviceIdp) GetIdpTypeOk() (*string, bool) {
	if o == nil || IsNil(o.IdpType) {
		return nil, false
	}
	return o.IdpType, true
}

// HasIdpType returns a boolean if a field has been set.
func (o *SamlAuthserviceIdp) HasIdpType() bool {
	if o != nil && !IsNil(o.IdpType) {
		return true
	}

	return false
}

// SetIdpType gets a reference to the given string and assigns it to the IdpType field.
func (o *SamlAuthserviceIdp) SetIdpType(v string) {
	o.IdpType = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *SamlAuthserviceIdp) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlAuthserviceIdp) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *SamlAuthserviceIdp) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *SamlAuthserviceIdp) SetComment(v string) {
	o.Comment = &v
}

// GetMetadataUrl returns the MetadataUrl field value if set, zero value otherwise.
func (o *SamlAuthserviceIdp) GetMetadataUrl() string {
	if o == nil || IsNil(o.MetadataUrl) {
		var ret string
		return ret
	}
	return *o.MetadataUrl
}

// GetMetadataUrlOk returns a tuple with the MetadataUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlAuthserviceIdp) GetMetadataUrlOk() (*string, bool) {
	if o == nil || IsNil(o.MetadataUrl) {
		return nil, false
	}
	return o.MetadataUrl, true
}

// HasMetadataUrl returns a boolean if a field has been set.
func (o *SamlAuthserviceIdp) HasMetadataUrl() bool {
	if o != nil && !IsNil(o.MetadataUrl) {
		return true
	}

	return false
}

// SetMetadataUrl gets a reference to the given string and assigns it to the MetadataUrl field.
func (o *SamlAuthserviceIdp) SetMetadataUrl(v string) {
	o.MetadataUrl = &v
}

// GetMetadataToken returns the MetadataToken field value if set, zero value otherwise.
func (o *SamlAuthserviceIdp) GetMetadataToken() string {
	if o == nil || IsNil(o.MetadataToken) {
		var ret string
		return ret
	}
	return *o.MetadataToken
}

// GetMetadataTokenOk returns a tuple with the MetadataToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlAuthserviceIdp) GetMetadataTokenOk() (*string, bool) {
	if o == nil || IsNil(o.MetadataToken) {
		return nil, false
	}
	return o.MetadataToken, true
}

// HasMetadataToken returns a boolean if a field has been set.
func (o *SamlAuthserviceIdp) HasMetadataToken() bool {
	if o != nil && !IsNil(o.MetadataToken) {
		return true
	}

	return false
}

// SetMetadataToken gets a reference to the given string and assigns it to the MetadataToken field.
func (o *SamlAuthserviceIdp) SetMetadataToken(v string) {
	o.MetadataToken = &v
}

// GetGroupname returns the Groupname field value if set, zero value otherwise.
func (o *SamlAuthserviceIdp) GetGroupname() string {
	if o == nil || IsNil(o.Groupname) {
		var ret string
		return ret
	}
	return *o.Groupname
}

// GetGroupnameOk returns a tuple with the Groupname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlAuthserviceIdp) GetGroupnameOk() (*string, bool) {
	if o == nil || IsNil(o.Groupname) {
		return nil, false
	}
	return o.Groupname, true
}

// HasGroupname returns a boolean if a field has been set.
func (o *SamlAuthserviceIdp) HasGroupname() bool {
	if o != nil && !IsNil(o.Groupname) {
		return true
	}

	return false
}

// SetGroupname gets a reference to the given string and assigns it to the Groupname field.
func (o *SamlAuthserviceIdp) SetGroupname(v string) {
	o.Groupname = &v
}

// GetSsoRedirectUrl returns the SsoRedirectUrl field value if set, zero value otherwise.
func (o *SamlAuthserviceIdp) GetSsoRedirectUrl() string {
	if o == nil || IsNil(o.SsoRedirectUrl) {
		var ret string
		return ret
	}
	return *o.SsoRedirectUrl
}

// GetSsoRedirectUrlOk returns a tuple with the SsoRedirectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlAuthserviceIdp) GetSsoRedirectUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SsoRedirectUrl) {
		return nil, false
	}
	return o.SsoRedirectUrl, true
}

// HasSsoRedirectUrl returns a boolean if a field has been set.
func (o *SamlAuthserviceIdp) HasSsoRedirectUrl() bool {
	if o != nil && !IsNil(o.SsoRedirectUrl) {
		return true
	}

	return false
}

// SetSsoRedirectUrl gets a reference to the given string and assigns it to the SsoRedirectUrl field.
func (o *SamlAuthserviceIdp) SetSsoRedirectUrl(v string) {
	o.SsoRedirectUrl = &v
}

func (o SamlAuthserviceIdp) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SamlAuthserviceIdp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IdpType) {
		toSerialize["idp_type"] = o.IdpType
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.MetadataUrl) {
		toSerialize["metadata_url"] = o.MetadataUrl
	}
	if !IsNil(o.MetadataToken) {
		toSerialize["metadata_token"] = o.MetadataToken
	}
	if !IsNil(o.Groupname) {
		toSerialize["groupname"] = o.Groupname
	}
	if !IsNil(o.SsoRedirectUrl) {
		toSerialize["sso_redirect_url"] = o.SsoRedirectUrl
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SamlAuthserviceIdp) UnmarshalJSON(data []byte) (err error) {
	varSamlAuthserviceIdp := _SamlAuthserviceIdp{}

	err = json.Unmarshal(data, &varSamlAuthserviceIdp)

	if err != nil {
		return err
	}

	*o = SamlAuthserviceIdp(varSamlAuthserviceIdp)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "idp_type")
		delete(additionalProperties, "comment")
		delete(additionalProperties, "metadata_url")
		delete(additionalProperties, "metadata_token")
		delete(additionalProperties, "groupname")
		delete(additionalProperties, "sso_redirect_url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSamlAuthserviceIdp struct {
	value *SamlAuthserviceIdp
	isSet bool
}

func (v NullableSamlAuthserviceIdp) Get() *SamlAuthserviceIdp {
	return v.value
}

func (v *NullableSamlAuthserviceIdp) Set(val *SamlAuthserviceIdp) {
	v.value = val
	v.isSet = true
}

func (v NullableSamlAuthserviceIdp) IsSet() bool {
	return v.isSet
}

func (v *NullableSamlAuthserviceIdp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSamlAuthserviceIdp(val *SamlAuthserviceIdp) *NullableSamlAuthserviceIdp {
	return &NullableSamlAuthserviceIdp{value: val, isSet: true}
}

func (v NullableSamlAuthserviceIdp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSamlAuthserviceIdp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
