/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
)

// checks if the TacacsplusAuthservice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TacacsplusAuthservice{}

// TacacsplusAuthservice struct for TacacsplusAuthservice
type TacacsplusAuthservice struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// The number of the accounting retries before giving up and moving on to the next server.
	AcctRetries *int64 `json:"acct_retries,omitempty"`
	// The accounting retry period in milliseconds.
	AcctTimeout *int64 `json:"acct_timeout,omitempty"`
	// The number of the authentication/authorization retries before giving up and moving on to the next server.
	AuthRetries *int64 `json:"auth_retries,omitempty"`
	// The authentication/authorization timeout period in milliseconds.
	AuthTimeout *int64 `json:"auth_timeout,omitempty"`
	// The TACACS+ authentication service descriptive comment.
	Comment *string `json:"comment,omitempty"`
	// Determines whether the TACACS+ authentication service object is disabled.
	Disable *bool `json:"disable,omitempty"`
	// The TACACS+ authentication service name.
	Name *string `json:"name,omitempty"`
	// The list of the TACACS+ servers used for authentication.
	Servers []TacacsplusAuthserviceServers `json:"servers,omitempty"`
}

// NewTacacsplusAuthservice instantiates a new TacacsplusAuthservice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTacacsplusAuthservice() *TacacsplusAuthservice {
	this := TacacsplusAuthservice{}
	return &this
}

// NewTacacsplusAuthserviceWithDefaults instantiates a new TacacsplusAuthservice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTacacsplusAuthserviceWithDefaults() *TacacsplusAuthservice {
	this := TacacsplusAuthservice{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *TacacsplusAuthservice) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TacacsplusAuthservice) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *TacacsplusAuthservice) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *TacacsplusAuthservice) SetRef(v string) {
	o.Ref = &v
}

// GetAcctRetries returns the AcctRetries field value if set, zero value otherwise.
func (o *TacacsplusAuthservice) GetAcctRetries() int64 {
	if o == nil || IsNil(o.AcctRetries) {
		var ret int64
		return ret
	}
	return *o.AcctRetries
}

// GetAcctRetriesOk returns a tuple with the AcctRetries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TacacsplusAuthservice) GetAcctRetriesOk() (*int64, bool) {
	if o == nil || IsNil(o.AcctRetries) {
		return nil, false
	}
	return o.AcctRetries, true
}

// HasAcctRetries returns a boolean if a field has been set.
func (o *TacacsplusAuthservice) HasAcctRetries() bool {
	if o != nil && !IsNil(o.AcctRetries) {
		return true
	}

	return false
}

// SetAcctRetries gets a reference to the given int64 and assigns it to the AcctRetries field.
func (o *TacacsplusAuthservice) SetAcctRetries(v int64) {
	o.AcctRetries = &v
}

// GetAcctTimeout returns the AcctTimeout field value if set, zero value otherwise.
func (o *TacacsplusAuthservice) GetAcctTimeout() int64 {
	if o == nil || IsNil(o.AcctTimeout) {
		var ret int64
		return ret
	}
	return *o.AcctTimeout
}

// GetAcctTimeoutOk returns a tuple with the AcctTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TacacsplusAuthservice) GetAcctTimeoutOk() (*int64, bool) {
	if o == nil || IsNil(o.AcctTimeout) {
		return nil, false
	}
	return o.AcctTimeout, true
}

// HasAcctTimeout returns a boolean if a field has been set.
func (o *TacacsplusAuthservice) HasAcctTimeout() bool {
	if o != nil && !IsNil(o.AcctTimeout) {
		return true
	}

	return false
}

// SetAcctTimeout gets a reference to the given int64 and assigns it to the AcctTimeout field.
func (o *TacacsplusAuthservice) SetAcctTimeout(v int64) {
	o.AcctTimeout = &v
}

// GetAuthRetries returns the AuthRetries field value if set, zero value otherwise.
func (o *TacacsplusAuthservice) GetAuthRetries() int64 {
	if o == nil || IsNil(o.AuthRetries) {
		var ret int64
		return ret
	}
	return *o.AuthRetries
}

// GetAuthRetriesOk returns a tuple with the AuthRetries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TacacsplusAuthservice) GetAuthRetriesOk() (*int64, bool) {
	if o == nil || IsNil(o.AuthRetries) {
		return nil, false
	}
	return o.AuthRetries, true
}

// HasAuthRetries returns a boolean if a field has been set.
func (o *TacacsplusAuthservice) HasAuthRetries() bool {
	if o != nil && !IsNil(o.AuthRetries) {
		return true
	}

	return false
}

// SetAuthRetries gets a reference to the given int64 and assigns it to the AuthRetries field.
func (o *TacacsplusAuthservice) SetAuthRetries(v int64) {
	o.AuthRetries = &v
}

// GetAuthTimeout returns the AuthTimeout field value if set, zero value otherwise.
func (o *TacacsplusAuthservice) GetAuthTimeout() int64 {
	if o == nil || IsNil(o.AuthTimeout) {
		var ret int64
		return ret
	}
	return *o.AuthTimeout
}

// GetAuthTimeoutOk returns a tuple with the AuthTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TacacsplusAuthservice) GetAuthTimeoutOk() (*int64, bool) {
	if o == nil || IsNil(o.AuthTimeout) {
		return nil, false
	}
	return o.AuthTimeout, true
}

// HasAuthTimeout returns a boolean if a field has been set.
func (o *TacacsplusAuthservice) HasAuthTimeout() bool {
	if o != nil && !IsNil(o.AuthTimeout) {
		return true
	}

	return false
}

// SetAuthTimeout gets a reference to the given int64 and assigns it to the AuthTimeout field.
func (o *TacacsplusAuthservice) SetAuthTimeout(v int64) {
	o.AuthTimeout = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *TacacsplusAuthservice) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TacacsplusAuthservice) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *TacacsplusAuthservice) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *TacacsplusAuthservice) SetComment(v string) {
	o.Comment = &v
}

// GetDisable returns the Disable field value if set, zero value otherwise.
func (o *TacacsplusAuthservice) GetDisable() bool {
	if o == nil || IsNil(o.Disable) {
		var ret bool
		return ret
	}
	return *o.Disable
}

// GetDisableOk returns a tuple with the Disable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TacacsplusAuthservice) GetDisableOk() (*bool, bool) {
	if o == nil || IsNil(o.Disable) {
		return nil, false
	}
	return o.Disable, true
}

// HasDisable returns a boolean if a field has been set.
func (o *TacacsplusAuthservice) HasDisable() bool {
	if o != nil && !IsNil(o.Disable) {
		return true
	}

	return false
}

// SetDisable gets a reference to the given bool and assigns it to the Disable field.
func (o *TacacsplusAuthservice) SetDisable(v bool) {
	o.Disable = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TacacsplusAuthservice) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TacacsplusAuthservice) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TacacsplusAuthservice) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TacacsplusAuthservice) SetName(v string) {
	o.Name = &v
}

// GetServers returns the Servers field value if set, zero value otherwise.
func (o *TacacsplusAuthservice) GetServers() []TacacsplusAuthserviceServers {
	if o == nil || IsNil(o.Servers) {
		var ret []TacacsplusAuthserviceServers
		return ret
	}
	return o.Servers
}

// GetServersOk returns a tuple with the Servers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TacacsplusAuthservice) GetServersOk() ([]TacacsplusAuthserviceServers, bool) {
	if o == nil || IsNil(o.Servers) {
		return nil, false
	}
	return o.Servers, true
}

// HasServers returns a boolean if a field has been set.
func (o *TacacsplusAuthservice) HasServers() bool {
	if o != nil && !IsNil(o.Servers) {
		return true
	}

	return false
}

// SetServers gets a reference to the given []TacacsplusAuthserviceServers and assigns it to the Servers field.
func (o *TacacsplusAuthservice) SetServers(v []TacacsplusAuthserviceServers) {
	o.Servers = v
}

func (o TacacsplusAuthservice) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TacacsplusAuthservice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.AcctRetries) {
		toSerialize["acct_retries"] = o.AcctRetries
	}
	if !IsNil(o.AcctTimeout) {
		toSerialize["acct_timeout"] = o.AcctTimeout
	}
	if !IsNil(o.AuthRetries) {
		toSerialize["auth_retries"] = o.AuthRetries
	}
	if !IsNil(o.AuthTimeout) {
		toSerialize["auth_timeout"] = o.AuthTimeout
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.Disable) {
		toSerialize["disable"] = o.Disable
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Servers) {
		toSerialize["servers"] = o.Servers
	}
	return toSerialize, nil
}

type NullableTacacsplusAuthservice struct {
	value *TacacsplusAuthservice
	isSet bool
}

func (v NullableTacacsplusAuthservice) Get() *TacacsplusAuthservice {
	return v.value
}

func (v *NullableTacacsplusAuthservice) Set(val *TacacsplusAuthservice) {
	v.value = val
	v.isSet = true
}

func (v NullableTacacsplusAuthservice) IsSet() bool {
	return v.isSet
}

func (v *NullableTacacsplusAuthservice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTacacsplusAuthservice(val *TacacsplusAuthservice) *NullableTacacsplusAuthservice {
	return &NullableTacacsplusAuthservice{value: val, isSet: true}
}

func (v NullableTacacsplusAuthservice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTacacsplusAuthservice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
