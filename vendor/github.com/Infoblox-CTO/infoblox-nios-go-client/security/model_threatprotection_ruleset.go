/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.12.3
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
)

// checks if the ThreatprotectionRuleset type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ThreatprotectionRuleset{}

// ThreatprotectionRuleset struct for ThreatprotectionRuleset
type ThreatprotectionRuleset struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// Determines the way the ruleset was added.
	AddType *string `json:"add_type,omitempty"`
	// The time when the ruleset was added.
	AddedTime *int64 `json:"added_time,omitempty"`
	// The human readable comment for the ruleset.
	Comment *string `json:"comment,omitempty"`
	// Determines if the ruleset will not be deleted during upgrade.
	DoNotDelete *bool `json:"do_not_delete,omitempty"`
	// Determines if factory reset is enabled for this ruleset.
	IsFactoryResetEnabled *bool `json:"is_factory_reset_enabled,omitempty"`
	// The users of the ruleset.
	UsedBy []string `json:"used_by,omitempty"`
	// The ruleset version.
	Version *string `json:"version,omitempty"`
}

// NewThreatprotectionRuleset instantiates a new ThreatprotectionRuleset object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThreatprotectionRuleset() *ThreatprotectionRuleset {
	this := ThreatprotectionRuleset{}
	return &this
}

// NewThreatprotectionRulesetWithDefaults instantiates a new ThreatprotectionRuleset object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThreatprotectionRulesetWithDefaults() *ThreatprotectionRuleset {
	this := ThreatprotectionRuleset{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *ThreatprotectionRuleset) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreatprotectionRuleset) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *ThreatprotectionRuleset) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *ThreatprotectionRuleset) SetRef(v string) {
	o.Ref = &v
}

// GetAddType returns the AddType field value if set, zero value otherwise.
func (o *ThreatprotectionRuleset) GetAddType() string {
	if o == nil || IsNil(o.AddType) {
		var ret string
		return ret
	}
	return *o.AddType
}

// GetAddTypeOk returns a tuple with the AddType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreatprotectionRuleset) GetAddTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AddType) {
		return nil, false
	}
	return o.AddType, true
}

// HasAddType returns a boolean if a field has been set.
func (o *ThreatprotectionRuleset) HasAddType() bool {
	if o != nil && !IsNil(o.AddType) {
		return true
	}

	return false
}

// SetAddType gets a reference to the given string and assigns it to the AddType field.
func (o *ThreatprotectionRuleset) SetAddType(v string) {
	o.AddType = &v
}

// GetAddedTime returns the AddedTime field value if set, zero value otherwise.
func (o *ThreatprotectionRuleset) GetAddedTime() int64 {
	if o == nil || IsNil(o.AddedTime) {
		var ret int64
		return ret
	}
	return *o.AddedTime
}

// GetAddedTimeOk returns a tuple with the AddedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreatprotectionRuleset) GetAddedTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.AddedTime) {
		return nil, false
	}
	return o.AddedTime, true
}

// HasAddedTime returns a boolean if a field has been set.
func (o *ThreatprotectionRuleset) HasAddedTime() bool {
	if o != nil && !IsNil(o.AddedTime) {
		return true
	}

	return false
}

// SetAddedTime gets a reference to the given int64 and assigns it to the AddedTime field.
func (o *ThreatprotectionRuleset) SetAddedTime(v int64) {
	o.AddedTime = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *ThreatprotectionRuleset) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreatprotectionRuleset) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *ThreatprotectionRuleset) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *ThreatprotectionRuleset) SetComment(v string) {
	o.Comment = &v
}

// GetDoNotDelete returns the DoNotDelete field value if set, zero value otherwise.
func (o *ThreatprotectionRuleset) GetDoNotDelete() bool {
	if o == nil || IsNil(o.DoNotDelete) {
		var ret bool
		return ret
	}
	return *o.DoNotDelete
}

// GetDoNotDeleteOk returns a tuple with the DoNotDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreatprotectionRuleset) GetDoNotDeleteOk() (*bool, bool) {
	if o == nil || IsNil(o.DoNotDelete) {
		return nil, false
	}
	return o.DoNotDelete, true
}

// HasDoNotDelete returns a boolean if a field has been set.
func (o *ThreatprotectionRuleset) HasDoNotDelete() bool {
	if o != nil && !IsNil(o.DoNotDelete) {
		return true
	}

	return false
}

// SetDoNotDelete gets a reference to the given bool and assigns it to the DoNotDelete field.
func (o *ThreatprotectionRuleset) SetDoNotDelete(v bool) {
	o.DoNotDelete = &v
}

// GetIsFactoryResetEnabled returns the IsFactoryResetEnabled field value if set, zero value otherwise.
func (o *ThreatprotectionRuleset) GetIsFactoryResetEnabled() bool {
	if o == nil || IsNil(o.IsFactoryResetEnabled) {
		var ret bool
		return ret
	}
	return *o.IsFactoryResetEnabled
}

// GetIsFactoryResetEnabledOk returns a tuple with the IsFactoryResetEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreatprotectionRuleset) GetIsFactoryResetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFactoryResetEnabled) {
		return nil, false
	}
	return o.IsFactoryResetEnabled, true
}

// HasIsFactoryResetEnabled returns a boolean if a field has been set.
func (o *ThreatprotectionRuleset) HasIsFactoryResetEnabled() bool {
	if o != nil && !IsNil(o.IsFactoryResetEnabled) {
		return true
	}

	return false
}

// SetIsFactoryResetEnabled gets a reference to the given bool and assigns it to the IsFactoryResetEnabled field.
func (o *ThreatprotectionRuleset) SetIsFactoryResetEnabled(v bool) {
	o.IsFactoryResetEnabled = &v
}

// GetUsedBy returns the UsedBy field value if set, zero value otherwise.
func (o *ThreatprotectionRuleset) GetUsedBy() []string {
	if o == nil || IsNil(o.UsedBy) {
		var ret []string
		return ret
	}
	return o.UsedBy
}

// GetUsedByOk returns a tuple with the UsedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreatprotectionRuleset) GetUsedByOk() ([]string, bool) {
	if o == nil || IsNil(o.UsedBy) {
		return nil, false
	}
	return o.UsedBy, true
}

// HasUsedBy returns a boolean if a field has been set.
func (o *ThreatprotectionRuleset) HasUsedBy() bool {
	if o != nil && !IsNil(o.UsedBy) {
		return true
	}

	return false
}

// SetUsedBy gets a reference to the given []string and assigns it to the UsedBy field.
func (o *ThreatprotectionRuleset) SetUsedBy(v []string) {
	o.UsedBy = v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ThreatprotectionRuleset) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreatprotectionRuleset) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ThreatprotectionRuleset) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ThreatprotectionRuleset) SetVersion(v string) {
	o.Version = &v
}

func (o ThreatprotectionRuleset) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ThreatprotectionRuleset) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.AddType) {
		toSerialize["add_type"] = o.AddType
	}
	if !IsNil(o.AddedTime) {
		toSerialize["added_time"] = o.AddedTime
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.DoNotDelete) {
		toSerialize["do_not_delete"] = o.DoNotDelete
	}
	if !IsNil(o.IsFactoryResetEnabled) {
		toSerialize["is_factory_reset_enabled"] = o.IsFactoryResetEnabled
	}
	if !IsNil(o.UsedBy) {
		toSerialize["used_by"] = o.UsedBy
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableThreatprotectionRuleset struct {
	value *ThreatprotectionRuleset
	isSet bool
}

func (v NullableThreatprotectionRuleset) Get() *ThreatprotectionRuleset {
	return v.value
}

func (v *NullableThreatprotectionRuleset) Set(val *ThreatprotectionRuleset) {
	v.value = val
	v.isSet = true
}

func (v NullableThreatprotectionRuleset) IsSet() bool {
	return v.isSet
}

func (v *NullableThreatprotectionRuleset) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThreatprotectionRuleset(val *ThreatprotectionRuleset) *NullableThreatprotectionRuleset {
	return &NullableThreatprotectionRuleset{value: val, isSet: true}
}

func (v NullableThreatprotectionRuleset) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThreatprotectionRuleset) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
