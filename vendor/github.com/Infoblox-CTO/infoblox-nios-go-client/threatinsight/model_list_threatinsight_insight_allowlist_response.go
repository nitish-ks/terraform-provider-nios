/*
Infoblox THREATINSIGHT API

OpenAPI specification for Infoblox NIOS WAPI THREATINSIGHT objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package threatinsight

import (
	"encoding/json"
	"fmt"
)

// ListThreatinsightInsightAllowlistResponse - struct for ListThreatinsightInsightAllowlistResponse
type ListThreatinsightInsightAllowlistResponse struct {
	ListThreatinsightInsightAllowlistResponseObject *ListThreatinsightInsightAllowlistResponseObject
	ArrayOfThreatinsightInsightAllowlist            *[]ThreatinsightInsightAllowlist
}

// ListThreatinsightInsightAllowlistResponseObjectAsListThreatinsightInsightAllowlistResponse is a convenience function that returns ListThreatinsightInsightAllowlistResponseObject wrapped in ListThreatinsightInsightAllowlistResponse
func ListThreatinsightInsightAllowlistResponseObjectAsListThreatinsightInsightAllowlistResponse(v *ListThreatinsightInsightAllowlistResponseObject) ListThreatinsightInsightAllowlistResponse {
	return ListThreatinsightInsightAllowlistResponse{
		ListThreatinsightInsightAllowlistResponseObject: v,
	}
}

// []ThreatinsightInsightAllowlistAsListThreatinsightInsightAllowlistResponse is a convenience function that returns []ThreatinsightInsightAllowlist wrapped in ListThreatinsightInsightAllowlistResponse
func ArrayOfThreatinsightInsightAllowlistAsListThreatinsightInsightAllowlistResponse(v *[]ThreatinsightInsightAllowlist) ListThreatinsightInsightAllowlistResponse {
	return ListThreatinsightInsightAllowlistResponse{
		ArrayOfThreatinsightInsightAllowlist: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListThreatinsightInsightAllowlistResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListThreatinsightInsightAllowlistResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListThreatinsightInsightAllowlistResponseObject)
	if err == nil {
		jsonListThreatinsightInsightAllowlistResponseObject, _ := json.Marshal(dst.ListThreatinsightInsightAllowlistResponseObject)
		if string(jsonListThreatinsightInsightAllowlistResponseObject) == "{}" { // empty struct
			dst.ListThreatinsightInsightAllowlistResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListThreatinsightInsightAllowlistResponseObject = nil
	}

	// try to unmarshal data into ArrayOfThreatinsightInsightAllowlist
	err = newStrictDecoder(data).Decode(&dst.ArrayOfThreatinsightInsightAllowlist)
	if err == nil {
		jsonArrayOfThreatinsightInsightAllowlist, _ := json.Marshal(dst.ArrayOfThreatinsightInsightAllowlist)
		if string(jsonArrayOfThreatinsightInsightAllowlist) == "{}" { // empty struct
			dst.ArrayOfThreatinsightInsightAllowlist = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfThreatinsightInsightAllowlist = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListThreatinsightInsightAllowlistResponseObject = nil
		dst.ArrayOfThreatinsightInsightAllowlist = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListThreatinsightInsightAllowlistResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListThreatinsightInsightAllowlistResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListThreatinsightInsightAllowlistResponse) MarshalJSON() ([]byte, error) {
	if src.ListThreatinsightInsightAllowlistResponseObject != nil {
		return json.Marshal(&src.ListThreatinsightInsightAllowlistResponseObject)
	}

	if src.ArrayOfThreatinsightInsightAllowlist != nil {
		return json.Marshal(&src.ArrayOfThreatinsightInsightAllowlist)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListThreatinsightInsightAllowlistResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListThreatinsightInsightAllowlistResponseObject != nil {
		return obj.ListThreatinsightInsightAllowlistResponseObject
	}

	if obj.ArrayOfThreatinsightInsightAllowlist != nil {
		return obj.ArrayOfThreatinsightInsightAllowlist
	}

	// all schemas are nil
	return nil
}

type NullableListThreatinsightInsightAllowlistResponse struct {
	value *ListThreatinsightInsightAllowlistResponse
	isSet bool
}

func (v NullableListThreatinsightInsightAllowlistResponse) Get() *ListThreatinsightInsightAllowlistResponse {
	return v.value
}

func (v *NullableListThreatinsightInsightAllowlistResponse) Set(val *ListThreatinsightInsightAllowlistResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListThreatinsightInsightAllowlistResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListThreatinsightInsightAllowlistResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListThreatinsightInsightAllowlistResponse(val *ListThreatinsightInsightAllowlistResponse) *NullableListThreatinsightInsightAllowlistResponse {
	return &NullableListThreatinsightInsightAllowlistResponse{value: val, isSet: true}
}

func (v NullableListThreatinsightInsightAllowlistResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListThreatinsightInsightAllowlistResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
