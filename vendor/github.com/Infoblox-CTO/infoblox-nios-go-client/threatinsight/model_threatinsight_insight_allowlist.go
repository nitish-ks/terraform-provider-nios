/*
Infoblox THREATINSIGHT API

OpenAPI specification for Infoblox NIOS WAPI THREATINSIGHT objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package threatinsight

import (
	"encoding/json"
)

// checks if the ThreatinsightInsightAllowlist type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ThreatinsightInsightAllowlist{}

// ThreatinsightInsightAllowlist struct for ThreatinsightInsightAllowlist
type ThreatinsightInsightAllowlist struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// Allowlist version string.
	Version *string `json:"version,omitempty"`
}

// NewThreatinsightInsightAllowlist instantiates a new ThreatinsightInsightAllowlist object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThreatinsightInsightAllowlist() *ThreatinsightInsightAllowlist {
	this := ThreatinsightInsightAllowlist{}
	return &this
}

// NewThreatinsightInsightAllowlistWithDefaults instantiates a new ThreatinsightInsightAllowlist object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThreatinsightInsightAllowlistWithDefaults() *ThreatinsightInsightAllowlist {
	this := ThreatinsightInsightAllowlist{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *ThreatinsightInsightAllowlist) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreatinsightInsightAllowlist) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *ThreatinsightInsightAllowlist) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *ThreatinsightInsightAllowlist) SetRef(v string) {
	o.Ref = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ThreatinsightInsightAllowlist) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreatinsightInsightAllowlist) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ThreatinsightInsightAllowlist) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ThreatinsightInsightAllowlist) SetVersion(v string) {
	o.Version = &v
}

func (o ThreatinsightInsightAllowlist) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ThreatinsightInsightAllowlist) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableThreatinsightInsightAllowlist struct {
	value *ThreatinsightInsightAllowlist
	isSet bool
}

func (v NullableThreatinsightInsightAllowlist) Get() *ThreatinsightInsightAllowlist {
	return v.value
}

func (v *NullableThreatinsightInsightAllowlist) Set(val *ThreatinsightInsightAllowlist) {
	v.value = val
	v.isSet = true
}

func (v NullableThreatinsightInsightAllowlist) IsSet() bool {
	return v.isSet
}

func (v *NullableThreatinsightInsightAllowlist) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThreatinsightInsightAllowlist(val *ThreatinsightInsightAllowlist) *NullableThreatinsightInsightAllowlist {
	return &NullableThreatinsightInsightAllowlist{value: val, isSet: true}
}

func (v NullableThreatinsightInsightAllowlist) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThreatinsightInsightAllowlist) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
