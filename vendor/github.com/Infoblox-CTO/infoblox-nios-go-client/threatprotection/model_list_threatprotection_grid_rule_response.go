/*
Infoblox THREATPROTECTION API

OpenAPI specification for Infoblox NIOS WAPI THREATPROTECTION objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package threatprotection

import (
	"encoding/json"
	"fmt"
)

// ListThreatprotectionGridRuleResponse - struct for ListThreatprotectionGridRuleResponse
type ListThreatprotectionGridRuleResponse struct {
	ListThreatprotectionGridRuleResponseObject *ListThreatprotectionGridRuleResponseObject
	ArrayOfThreatprotectionGridRule            *[]ThreatprotectionGridRule
}

// ListThreatprotectionGridRuleResponseObjectAsListThreatprotectionGridRuleResponse is a convenience function that returns ListThreatprotectionGridRuleResponseObject wrapped in ListThreatprotectionGridRuleResponse
func ListThreatprotectionGridRuleResponseObjectAsListThreatprotectionGridRuleResponse(v *ListThreatprotectionGridRuleResponseObject) ListThreatprotectionGridRuleResponse {
	return ListThreatprotectionGridRuleResponse{
		ListThreatprotectionGridRuleResponseObject: v,
	}
}

// []ThreatprotectionGridRuleAsListThreatprotectionGridRuleResponse is a convenience function that returns []ThreatprotectionGridRule wrapped in ListThreatprotectionGridRuleResponse
func ArrayOfThreatprotectionGridRuleAsListThreatprotectionGridRuleResponse(v *[]ThreatprotectionGridRule) ListThreatprotectionGridRuleResponse {
	return ListThreatprotectionGridRuleResponse{
		ArrayOfThreatprotectionGridRule: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListThreatprotectionGridRuleResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListThreatprotectionGridRuleResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListThreatprotectionGridRuleResponseObject)
	if err == nil {
		jsonListThreatprotectionGridRuleResponseObject, _ := json.Marshal(dst.ListThreatprotectionGridRuleResponseObject)
		if string(jsonListThreatprotectionGridRuleResponseObject) == "{}" { // empty struct
			dst.ListThreatprotectionGridRuleResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListThreatprotectionGridRuleResponseObject = nil
	}

	// try to unmarshal data into ArrayOfThreatprotectionGridRule
	err = newStrictDecoder(data).Decode(&dst.ArrayOfThreatprotectionGridRule)
	if err == nil {
		jsonArrayOfThreatprotectionGridRule, _ := json.Marshal(dst.ArrayOfThreatprotectionGridRule)
		if string(jsonArrayOfThreatprotectionGridRule) == "{}" { // empty struct
			dst.ArrayOfThreatprotectionGridRule = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfThreatprotectionGridRule = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListThreatprotectionGridRuleResponseObject = nil
		dst.ArrayOfThreatprotectionGridRule = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListThreatprotectionGridRuleResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListThreatprotectionGridRuleResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListThreatprotectionGridRuleResponse) MarshalJSON() ([]byte, error) {
	if src.ListThreatprotectionGridRuleResponseObject != nil {
		return json.Marshal(&src.ListThreatprotectionGridRuleResponseObject)
	}

	if src.ArrayOfThreatprotectionGridRule != nil {
		return json.Marshal(&src.ArrayOfThreatprotectionGridRule)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListThreatprotectionGridRuleResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListThreatprotectionGridRuleResponseObject != nil {
		return obj.ListThreatprotectionGridRuleResponseObject
	}

	if obj.ArrayOfThreatprotectionGridRule != nil {
		return obj.ArrayOfThreatprotectionGridRule
	}

	// all schemas are nil
	return nil
}

type NullableListThreatprotectionGridRuleResponse struct {
	value *ListThreatprotectionGridRuleResponse
	isSet bool
}

func (v NullableListThreatprotectionGridRuleResponse) Get() *ListThreatprotectionGridRuleResponse {
	return v.value
}

func (v *NullableListThreatprotectionGridRuleResponse) Set(val *ListThreatprotectionGridRuleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListThreatprotectionGridRuleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListThreatprotectionGridRuleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListThreatprotectionGridRuleResponse(val *ListThreatprotectionGridRuleResponse) *NullableListThreatprotectionGridRuleResponse {
	return &NullableListThreatprotectionGridRuleResponse{value: val, isSet: true}
}

func (v NullableListThreatprotectionGridRuleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListThreatprotectionGridRuleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
