/*
Infoblox THREATPROTECTION API

OpenAPI specification for Infoblox NIOS WAPI THREATPROTECTION objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package threatprotection

import (
	"encoding/json"
)

// checks if the ThreatprotectionProfile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ThreatprotectionProfile{}

// ThreatprotectionProfile struct for ThreatprotectionProfile
type ThreatprotectionProfile struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// The comment for the Threat Protection profile.
	Comment *string `json:"comment,omitempty"`
	// The current Threat Protection profile ruleset.
	CurrentRuleset *string `json:"current_ruleset,omitempty"`
	// Determines if multiple BIND responses via TCP connection are disabled.
	DisableMultipleDnsTcpRequest *bool `json:"disable_multiple_dns_tcp_request,omitempty"`
	// The number of events logged per second per rule.
	EventsPerSecondPerRule *int64 `json:"events_per_second_per_rule,omitempty"`
	// Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.
	ExtAttrs *map[string]ExtAttrs `json:"extattrs,omitempty"`
	// The list of members that are associated with the profile.
	Members []string `json:"members,omitempty"`
	// The name of the Threat Protection profile.
	Name *string `json:"name,omitempty"`
	// The source member. It can be used only during the create operation for cloning a profile from an existing member.
	SourceMember *string `json:"source_member,omitempty"`
	// The source profile. It can be used only during the create operation for cloning a profile from an existing profile.
	SourceProfile *string `json:"source_profile,omitempty"`
	// Use flag for: current_ruleset
	UseCurrentRuleset *bool `json:"use_current_ruleset,omitempty"`
	// Use flag for: disable_multiple_dns_tcp_request
	UseDisableMultipleDnsTcpRequest *bool `json:"use_disable_multiple_dns_tcp_request,omitempty"`
	// Use flag for: events_per_second_per_rule
	UseEventsPerSecondPerRule *bool `json:"use_events_per_second_per_rule,omitempty"`
}

// NewThreatprotectionProfile instantiates a new ThreatprotectionProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThreatprotectionProfile() *ThreatprotectionProfile {
	this := ThreatprotectionProfile{}
	return &this
}

// NewThreatprotectionProfileWithDefaults instantiates a new ThreatprotectionProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThreatprotectionProfileWithDefaults() *ThreatprotectionProfile {
	this := ThreatprotectionProfile{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *ThreatprotectionProfile) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreatprotectionProfile) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *ThreatprotectionProfile) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *ThreatprotectionProfile) SetRef(v string) {
	o.Ref = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *ThreatprotectionProfile) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreatprotectionProfile) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *ThreatprotectionProfile) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *ThreatprotectionProfile) SetComment(v string) {
	o.Comment = &v
}

// GetCurrentRuleset returns the CurrentRuleset field value if set, zero value otherwise.
func (o *ThreatprotectionProfile) GetCurrentRuleset() string {
	if o == nil || IsNil(o.CurrentRuleset) {
		var ret string
		return ret
	}
	return *o.CurrentRuleset
}

// GetCurrentRulesetOk returns a tuple with the CurrentRuleset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreatprotectionProfile) GetCurrentRulesetOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentRuleset) {
		return nil, false
	}
	return o.CurrentRuleset, true
}

// HasCurrentRuleset returns a boolean if a field has been set.
func (o *ThreatprotectionProfile) HasCurrentRuleset() bool {
	if o != nil && !IsNil(o.CurrentRuleset) {
		return true
	}

	return false
}

// SetCurrentRuleset gets a reference to the given string and assigns it to the CurrentRuleset field.
func (o *ThreatprotectionProfile) SetCurrentRuleset(v string) {
	o.CurrentRuleset = &v
}

// GetDisableMultipleDnsTcpRequest returns the DisableMultipleDnsTcpRequest field value if set, zero value otherwise.
func (o *ThreatprotectionProfile) GetDisableMultipleDnsTcpRequest() bool {
	if o == nil || IsNil(o.DisableMultipleDnsTcpRequest) {
		var ret bool
		return ret
	}
	return *o.DisableMultipleDnsTcpRequest
}

// GetDisableMultipleDnsTcpRequestOk returns a tuple with the DisableMultipleDnsTcpRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreatprotectionProfile) GetDisableMultipleDnsTcpRequestOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableMultipleDnsTcpRequest) {
		return nil, false
	}
	return o.DisableMultipleDnsTcpRequest, true
}

// HasDisableMultipleDnsTcpRequest returns a boolean if a field has been set.
func (o *ThreatprotectionProfile) HasDisableMultipleDnsTcpRequest() bool {
	if o != nil && !IsNil(o.DisableMultipleDnsTcpRequest) {
		return true
	}

	return false
}

// SetDisableMultipleDnsTcpRequest gets a reference to the given bool and assigns it to the DisableMultipleDnsTcpRequest field.
func (o *ThreatprotectionProfile) SetDisableMultipleDnsTcpRequest(v bool) {
	o.DisableMultipleDnsTcpRequest = &v
}

// GetEventsPerSecondPerRule returns the EventsPerSecondPerRule field value if set, zero value otherwise.
func (o *ThreatprotectionProfile) GetEventsPerSecondPerRule() int64 {
	if o == nil || IsNil(o.EventsPerSecondPerRule) {
		var ret int64
		return ret
	}
	return *o.EventsPerSecondPerRule
}

// GetEventsPerSecondPerRuleOk returns a tuple with the EventsPerSecondPerRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreatprotectionProfile) GetEventsPerSecondPerRuleOk() (*int64, bool) {
	if o == nil || IsNil(o.EventsPerSecondPerRule) {
		return nil, false
	}
	return o.EventsPerSecondPerRule, true
}

// HasEventsPerSecondPerRule returns a boolean if a field has been set.
func (o *ThreatprotectionProfile) HasEventsPerSecondPerRule() bool {
	if o != nil && !IsNil(o.EventsPerSecondPerRule) {
		return true
	}

	return false
}

// SetEventsPerSecondPerRule gets a reference to the given int64 and assigns it to the EventsPerSecondPerRule field.
func (o *ThreatprotectionProfile) SetEventsPerSecondPerRule(v int64) {
	o.EventsPerSecondPerRule = &v
}

// GetExtAttrs returns the ExtAttrs field value if set, zero value otherwise.
func (o *ThreatprotectionProfile) GetExtAttrs() map[string]ExtAttrs {
	if o == nil || IsNil(o.ExtAttrs) {
		var ret map[string]ExtAttrs
		return ret
	}
	return *o.ExtAttrs
}

// GetExtAttrsOk returns a tuple with the ExtAttrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreatprotectionProfile) GetExtAttrsOk() (*map[string]ExtAttrs, bool) {
	if o == nil || IsNil(o.ExtAttrs) {
		return nil, false
	}
	return o.ExtAttrs, true
}

// HasExtAttrs returns a boolean if a field has been set.
func (o *ThreatprotectionProfile) HasExtAttrs() bool {
	if o != nil && !IsNil(o.ExtAttrs) {
		return true
	}

	return false
}

// SetExtAttrs gets a reference to the given map[string]ExtAttrs and assigns it to the ExtAttrs field.
func (o *ThreatprotectionProfile) SetExtAttrs(v map[string]ExtAttrs) {
	o.ExtAttrs = &v
}

// GetMembers returns the Members field value if set, zero value otherwise.
func (o *ThreatprotectionProfile) GetMembers() []string {
	if o == nil || IsNil(o.Members) {
		var ret []string
		return ret
	}
	return o.Members
}

// GetMembersOk returns a tuple with the Members field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreatprotectionProfile) GetMembersOk() ([]string, bool) {
	if o == nil || IsNil(o.Members) {
		return nil, false
	}
	return o.Members, true
}

// HasMembers returns a boolean if a field has been set.
func (o *ThreatprotectionProfile) HasMembers() bool {
	if o != nil && !IsNil(o.Members) {
		return true
	}

	return false
}

// SetMembers gets a reference to the given []string and assigns it to the Members field.
func (o *ThreatprotectionProfile) SetMembers(v []string) {
	o.Members = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ThreatprotectionProfile) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreatprotectionProfile) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ThreatprotectionProfile) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ThreatprotectionProfile) SetName(v string) {
	o.Name = &v
}

// GetSourceMember returns the SourceMember field value if set, zero value otherwise.
func (o *ThreatprotectionProfile) GetSourceMember() string {
	if o == nil || IsNil(o.SourceMember) {
		var ret string
		return ret
	}
	return *o.SourceMember
}

// GetSourceMemberOk returns a tuple with the SourceMember field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreatprotectionProfile) GetSourceMemberOk() (*string, bool) {
	if o == nil || IsNil(o.SourceMember) {
		return nil, false
	}
	return o.SourceMember, true
}

// HasSourceMember returns a boolean if a field has been set.
func (o *ThreatprotectionProfile) HasSourceMember() bool {
	if o != nil && !IsNil(o.SourceMember) {
		return true
	}

	return false
}

// SetSourceMember gets a reference to the given string and assigns it to the SourceMember field.
func (o *ThreatprotectionProfile) SetSourceMember(v string) {
	o.SourceMember = &v
}

// GetSourceProfile returns the SourceProfile field value if set, zero value otherwise.
func (o *ThreatprotectionProfile) GetSourceProfile() string {
	if o == nil || IsNil(o.SourceProfile) {
		var ret string
		return ret
	}
	return *o.SourceProfile
}

// GetSourceProfileOk returns a tuple with the SourceProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreatprotectionProfile) GetSourceProfileOk() (*string, bool) {
	if o == nil || IsNil(o.SourceProfile) {
		return nil, false
	}
	return o.SourceProfile, true
}

// HasSourceProfile returns a boolean if a field has been set.
func (o *ThreatprotectionProfile) HasSourceProfile() bool {
	if o != nil && !IsNil(o.SourceProfile) {
		return true
	}

	return false
}

// SetSourceProfile gets a reference to the given string and assigns it to the SourceProfile field.
func (o *ThreatprotectionProfile) SetSourceProfile(v string) {
	o.SourceProfile = &v
}

// GetUseCurrentRuleset returns the UseCurrentRuleset field value if set, zero value otherwise.
func (o *ThreatprotectionProfile) GetUseCurrentRuleset() bool {
	if o == nil || IsNil(o.UseCurrentRuleset) {
		var ret bool
		return ret
	}
	return *o.UseCurrentRuleset
}

// GetUseCurrentRulesetOk returns a tuple with the UseCurrentRuleset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreatprotectionProfile) GetUseCurrentRulesetOk() (*bool, bool) {
	if o == nil || IsNil(o.UseCurrentRuleset) {
		return nil, false
	}
	return o.UseCurrentRuleset, true
}

// HasUseCurrentRuleset returns a boolean if a field has been set.
func (o *ThreatprotectionProfile) HasUseCurrentRuleset() bool {
	if o != nil && !IsNil(o.UseCurrentRuleset) {
		return true
	}

	return false
}

// SetUseCurrentRuleset gets a reference to the given bool and assigns it to the UseCurrentRuleset field.
func (o *ThreatprotectionProfile) SetUseCurrentRuleset(v bool) {
	o.UseCurrentRuleset = &v
}

// GetUseDisableMultipleDnsTcpRequest returns the UseDisableMultipleDnsTcpRequest field value if set, zero value otherwise.
func (o *ThreatprotectionProfile) GetUseDisableMultipleDnsTcpRequest() bool {
	if o == nil || IsNil(o.UseDisableMultipleDnsTcpRequest) {
		var ret bool
		return ret
	}
	return *o.UseDisableMultipleDnsTcpRequest
}

// GetUseDisableMultipleDnsTcpRequestOk returns a tuple with the UseDisableMultipleDnsTcpRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreatprotectionProfile) GetUseDisableMultipleDnsTcpRequestOk() (*bool, bool) {
	if o == nil || IsNil(o.UseDisableMultipleDnsTcpRequest) {
		return nil, false
	}
	return o.UseDisableMultipleDnsTcpRequest, true
}

// HasUseDisableMultipleDnsTcpRequest returns a boolean if a field has been set.
func (o *ThreatprotectionProfile) HasUseDisableMultipleDnsTcpRequest() bool {
	if o != nil && !IsNil(o.UseDisableMultipleDnsTcpRequest) {
		return true
	}

	return false
}

// SetUseDisableMultipleDnsTcpRequest gets a reference to the given bool and assigns it to the UseDisableMultipleDnsTcpRequest field.
func (o *ThreatprotectionProfile) SetUseDisableMultipleDnsTcpRequest(v bool) {
	o.UseDisableMultipleDnsTcpRequest = &v
}

// GetUseEventsPerSecondPerRule returns the UseEventsPerSecondPerRule field value if set, zero value otherwise.
func (o *ThreatprotectionProfile) GetUseEventsPerSecondPerRule() bool {
	if o == nil || IsNil(o.UseEventsPerSecondPerRule) {
		var ret bool
		return ret
	}
	return *o.UseEventsPerSecondPerRule
}

// GetUseEventsPerSecondPerRuleOk returns a tuple with the UseEventsPerSecondPerRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreatprotectionProfile) GetUseEventsPerSecondPerRuleOk() (*bool, bool) {
	if o == nil || IsNil(o.UseEventsPerSecondPerRule) {
		return nil, false
	}
	return o.UseEventsPerSecondPerRule, true
}

// HasUseEventsPerSecondPerRule returns a boolean if a field has been set.
func (o *ThreatprotectionProfile) HasUseEventsPerSecondPerRule() bool {
	if o != nil && !IsNil(o.UseEventsPerSecondPerRule) {
		return true
	}

	return false
}

// SetUseEventsPerSecondPerRule gets a reference to the given bool and assigns it to the UseEventsPerSecondPerRule field.
func (o *ThreatprotectionProfile) SetUseEventsPerSecondPerRule(v bool) {
	o.UseEventsPerSecondPerRule = &v
}

func (o ThreatprotectionProfile) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ThreatprotectionProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.CurrentRuleset) {
		toSerialize["current_ruleset"] = o.CurrentRuleset
	}
	if !IsNil(o.DisableMultipleDnsTcpRequest) {
		toSerialize["disable_multiple_dns_tcp_request"] = o.DisableMultipleDnsTcpRequest
	}
	if !IsNil(o.EventsPerSecondPerRule) {
		toSerialize["events_per_second_per_rule"] = o.EventsPerSecondPerRule
	}
	if !IsNil(o.ExtAttrs) {
		toSerialize["extattrs"] = o.ExtAttrs
	}
	if !IsNil(o.Members) {
		toSerialize["members"] = o.Members
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SourceMember) {
		toSerialize["source_member"] = o.SourceMember
	}
	if !IsNil(o.SourceProfile) {
		toSerialize["source_profile"] = o.SourceProfile
	}
	if !IsNil(o.UseCurrentRuleset) {
		toSerialize["use_current_ruleset"] = o.UseCurrentRuleset
	}
	if !IsNil(o.UseDisableMultipleDnsTcpRequest) {
		toSerialize["use_disable_multiple_dns_tcp_request"] = o.UseDisableMultipleDnsTcpRequest
	}
	if !IsNil(o.UseEventsPerSecondPerRule) {
		toSerialize["use_events_per_second_per_rule"] = o.UseEventsPerSecondPerRule
	}
	return toSerialize, nil
}

type NullableThreatprotectionProfile struct {
	value *ThreatprotectionProfile
	isSet bool
}

func (v NullableThreatprotectionProfile) Get() *ThreatprotectionProfile {
	return v.value
}

func (v *NullableThreatprotectionProfile) Set(val *ThreatprotectionProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableThreatprotectionProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableThreatprotectionProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThreatprotectionProfile(val *ThreatprotectionProfile) *NullableThreatprotectionProfile {
	return &NullableThreatprotectionProfile{value: val, isSet: true}
}

func (v NullableThreatprotectionProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThreatprotectionProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
