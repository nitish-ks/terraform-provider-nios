/*
Infoblox CLOUD API

OpenAPI specification for Infoblox NIOS WAPI CLOUD objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud

import (
	"encoding/json"
	"fmt"
)

// GetGcpdnstaskgroupResponse - struct for GetGcpdnstaskgroupResponse
type GetGcpdnstaskgroupResponse struct {
	Gcpdnstaskgroup                          *Gcpdnstaskgroup
	GetGcpdnstaskgroupResponseObjectAsResult *GetGcpdnstaskgroupResponseObjectAsResult
}

// GcpdnstaskgroupAsGetGcpdnstaskgroupResponse is a convenience function that returns Gcpdnstaskgroup wrapped in GetGcpdnstaskgroupResponse
func GcpdnstaskgroupAsGetGcpdnstaskgroupResponse(v *Gcpdnstaskgroup) GetGcpdnstaskgroupResponse {
	return GetGcpdnstaskgroupResponse{
		Gcpdnstaskgroup: v,
	}
}

// GetGcpdnstaskgroupResponseObjectAsResultAsGetGcpdnstaskgroupResponse is a convenience function that returns GetGcpdnstaskgroupResponseObjectAsResult wrapped in GetGcpdnstaskgroupResponse
func GetGcpdnstaskgroupResponseObjectAsResultAsGetGcpdnstaskgroupResponse(v *GetGcpdnstaskgroupResponseObjectAsResult) GetGcpdnstaskgroupResponse {
	return GetGcpdnstaskgroupResponse{
		GetGcpdnstaskgroupResponseObjectAsResult: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetGcpdnstaskgroupResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into Gcpdnstaskgroup
	err = newStrictDecoder(data).Decode(&dst.Gcpdnstaskgroup)
	if err == nil {
		jsonGcpdnstaskgroup, _ := json.Marshal(dst.Gcpdnstaskgroup)
		if string(jsonGcpdnstaskgroup) == "{}" { // empty struct
			dst.Gcpdnstaskgroup = nil
		} else {
			match++
		}
	} else {
		dst.Gcpdnstaskgroup = nil
	}

	// try to unmarshal data into GetGcpdnstaskgroupResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetGcpdnstaskgroupResponseObjectAsResult)
	if err == nil {
		jsonGetGcpdnstaskgroupResponseObjectAsResult, _ := json.Marshal(dst.GetGcpdnstaskgroupResponseObjectAsResult)
		if string(jsonGetGcpdnstaskgroupResponseObjectAsResult) == "{}" { // empty struct
			dst.GetGcpdnstaskgroupResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetGcpdnstaskgroupResponseObjectAsResult = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.Gcpdnstaskgroup = nil
		dst.GetGcpdnstaskgroupResponseObjectAsResult = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetGcpdnstaskgroupResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetGcpdnstaskgroupResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetGcpdnstaskgroupResponse) MarshalJSON() ([]byte, error) {
	if src.Gcpdnstaskgroup != nil {
		return json.Marshal(&src.Gcpdnstaskgroup)
	}

	if src.GetGcpdnstaskgroupResponseObjectAsResult != nil {
		return json.Marshal(&src.GetGcpdnstaskgroupResponseObjectAsResult)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetGcpdnstaskgroupResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.Gcpdnstaskgroup != nil {
		return obj.Gcpdnstaskgroup
	}

	if obj.GetGcpdnstaskgroupResponseObjectAsResult != nil {
		return obj.GetGcpdnstaskgroupResponseObjectAsResult
	}

	// all schemas are nil
	return nil
}

type NullableGetGcpdnstaskgroupResponse struct {
	value *GetGcpdnstaskgroupResponse
	isSet bool
}

func (v NullableGetGcpdnstaskgroupResponse) Get() *GetGcpdnstaskgroupResponse {
	return v.value
}

func (v *NullableGetGcpdnstaskgroupResponse) Set(val *GetGcpdnstaskgroupResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetGcpdnstaskgroupResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetGcpdnstaskgroupResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetGcpdnstaskgroupResponse(val *GetGcpdnstaskgroupResponse) *NullableGetGcpdnstaskgroupResponse {
	return &NullableGetGcpdnstaskgroupResponse{value: val, isSet: true}
}

func (v NullableGetGcpdnstaskgroupResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetGcpdnstaskgroupResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
