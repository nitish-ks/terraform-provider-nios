/*
Infoblox CLOUD API

OpenAPI specification for Infoblox NIOS WAPI CLOUD objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud

import (
	"encoding/json"
	"fmt"
)

// ListAzurednstaskgroupResponse - struct for ListAzurednstaskgroupResponse
type ListAzurednstaskgroupResponse struct {
	ListAzurednstaskgroupResponseObject *ListAzurednstaskgroupResponseObject
	ArrayOfAzurednstaskgroup            *[]Azurednstaskgroup
}

// ListAzurednstaskgroupResponseObjectAsListAzurednstaskgroupResponse is a convenience function that returns ListAzurednstaskgroupResponseObject wrapped in ListAzurednstaskgroupResponse
func ListAzurednstaskgroupResponseObjectAsListAzurednstaskgroupResponse(v *ListAzurednstaskgroupResponseObject) ListAzurednstaskgroupResponse {
	return ListAzurednstaskgroupResponse{
		ListAzurednstaskgroupResponseObject: v,
	}
}

// []AzurednstaskgroupAsListAzurednstaskgroupResponse is a convenience function that returns []Azurednstaskgroup wrapped in ListAzurednstaskgroupResponse
func ArrayOfAzurednstaskgroupAsListAzurednstaskgroupResponse(v *[]Azurednstaskgroup) ListAzurednstaskgroupResponse {
	return ListAzurednstaskgroupResponse{
		ArrayOfAzurednstaskgroup: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListAzurednstaskgroupResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListAzurednstaskgroupResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListAzurednstaskgroupResponseObject)
	if err == nil {
		jsonListAzurednstaskgroupResponseObject, _ := json.Marshal(dst.ListAzurednstaskgroupResponseObject)
		if string(jsonListAzurednstaskgroupResponseObject) == "{}" { // empty struct
			dst.ListAzurednstaskgroupResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListAzurednstaskgroupResponseObject = nil
	}

	// try to unmarshal data into ArrayOfAzurednstaskgroup
	err = newStrictDecoder(data).Decode(&dst.ArrayOfAzurednstaskgroup)
	if err == nil {
		jsonArrayOfAzurednstaskgroup, _ := json.Marshal(dst.ArrayOfAzurednstaskgroup)
		if string(jsonArrayOfAzurednstaskgroup) == "{}" { // empty struct
			dst.ArrayOfAzurednstaskgroup = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfAzurednstaskgroup = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListAzurednstaskgroupResponseObject = nil
		dst.ArrayOfAzurednstaskgroup = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListAzurednstaskgroupResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListAzurednstaskgroupResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListAzurednstaskgroupResponse) MarshalJSON() ([]byte, error) {
	if src.ListAzurednstaskgroupResponseObject != nil {
		return json.Marshal(&src.ListAzurednstaskgroupResponseObject)
	}

	if src.ArrayOfAzurednstaskgroup != nil {
		return json.Marshal(&src.ArrayOfAzurednstaskgroup)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListAzurednstaskgroupResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListAzurednstaskgroupResponseObject != nil {
		return obj.ListAzurednstaskgroupResponseObject
	}

	if obj.ArrayOfAzurednstaskgroup != nil {
		return obj.ArrayOfAzurednstaskgroup
	}

	// all schemas are nil
	return nil
}

type NullableListAzurednstaskgroupResponse struct {
	value *ListAzurednstaskgroupResponse
	isSet bool
}

func (v NullableListAzurednstaskgroupResponse) Get() *ListAzurednstaskgroupResponse {
	return v.value
}

func (v *NullableListAzurednstaskgroupResponse) Set(val *ListAzurednstaskgroupResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListAzurednstaskgroupResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListAzurednstaskgroupResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListAzurednstaskgroupResponse(val *ListAzurednstaskgroupResponse) *NullableListAzurednstaskgroupResponse {
	return &NullableListAzurednstaskgroupResponse{value: val, isSet: true}
}

func (v NullableListAzurednstaskgroupResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListAzurednstaskgroupResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
