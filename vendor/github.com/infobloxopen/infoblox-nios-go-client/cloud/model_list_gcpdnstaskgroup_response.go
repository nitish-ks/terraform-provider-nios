/*
Infoblox CLOUD API

OpenAPI specification for Infoblox NIOS WAPI CLOUD objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud

import (
	"encoding/json"
	"fmt"
)

// ListGcpdnstaskgroupResponse - struct for ListGcpdnstaskgroupResponse
type ListGcpdnstaskgroupResponse struct {
	ListGcpdnstaskgroupResponseObject *ListGcpdnstaskgroupResponseObject
	ArrayOfGcpdnstaskgroup            *[]Gcpdnstaskgroup
}

// ListGcpdnstaskgroupResponseObjectAsListGcpdnstaskgroupResponse is a convenience function that returns ListGcpdnstaskgroupResponseObject wrapped in ListGcpdnstaskgroupResponse
func ListGcpdnstaskgroupResponseObjectAsListGcpdnstaskgroupResponse(v *ListGcpdnstaskgroupResponseObject) ListGcpdnstaskgroupResponse {
	return ListGcpdnstaskgroupResponse{
		ListGcpdnstaskgroupResponseObject: v,
	}
}

// []GcpdnstaskgroupAsListGcpdnstaskgroupResponse is a convenience function that returns []Gcpdnstaskgroup wrapped in ListGcpdnstaskgroupResponse
func ArrayOfGcpdnstaskgroupAsListGcpdnstaskgroupResponse(v *[]Gcpdnstaskgroup) ListGcpdnstaskgroupResponse {
	return ListGcpdnstaskgroupResponse{
		ArrayOfGcpdnstaskgroup: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListGcpdnstaskgroupResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListGcpdnstaskgroupResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListGcpdnstaskgroupResponseObject)
	if err == nil {
		jsonListGcpdnstaskgroupResponseObject, _ := json.Marshal(dst.ListGcpdnstaskgroupResponseObject)
		if string(jsonListGcpdnstaskgroupResponseObject) == "{}" { // empty struct
			dst.ListGcpdnstaskgroupResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListGcpdnstaskgroupResponseObject = nil
	}

	// try to unmarshal data into ArrayOfGcpdnstaskgroup
	err = newStrictDecoder(data).Decode(&dst.ArrayOfGcpdnstaskgroup)
	if err == nil {
		jsonArrayOfGcpdnstaskgroup, _ := json.Marshal(dst.ArrayOfGcpdnstaskgroup)
		if string(jsonArrayOfGcpdnstaskgroup) == "{}" { // empty struct
			dst.ArrayOfGcpdnstaskgroup = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfGcpdnstaskgroup = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListGcpdnstaskgroupResponseObject = nil
		dst.ArrayOfGcpdnstaskgroup = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListGcpdnstaskgroupResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListGcpdnstaskgroupResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListGcpdnstaskgroupResponse) MarshalJSON() ([]byte, error) {
	if src.ListGcpdnstaskgroupResponseObject != nil {
		return json.Marshal(&src.ListGcpdnstaskgroupResponseObject)
	}

	if src.ArrayOfGcpdnstaskgroup != nil {
		return json.Marshal(&src.ArrayOfGcpdnstaskgroup)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListGcpdnstaskgroupResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListGcpdnstaskgroupResponseObject != nil {
		return obj.ListGcpdnstaskgroupResponseObject
	}

	if obj.ArrayOfGcpdnstaskgroup != nil {
		return obj.ArrayOfGcpdnstaskgroup
	}

	// all schemas are nil
	return nil
}

type NullableListGcpdnstaskgroupResponse struct {
	value *ListGcpdnstaskgroupResponse
	isSet bool
}

func (v NullableListGcpdnstaskgroupResponse) Get() *ListGcpdnstaskgroupResponse {
	return v.value
}

func (v *NullableListGcpdnstaskgroupResponse) Set(val *ListGcpdnstaskgroupResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListGcpdnstaskgroupResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListGcpdnstaskgroupResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListGcpdnstaskgroupResponse(val *ListGcpdnstaskgroupResponse) *NullableListGcpdnstaskgroupResponse {
	return &NullableListGcpdnstaskgroupResponse{value: val, isSet: true}
}

func (v NullableListGcpdnstaskgroupResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListGcpdnstaskgroupResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
