/*
Infoblox DHCP API

OpenAPI specification for Infoblox NIOS WAPI DHCP objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dhcp

import (
	"encoding/json"
)

// checks if the GetRangeResponseObjectAsResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRangeResponseObjectAsResult{}

// GetRangeResponseObjectAsResult The response format to retrieve __Range__ objects.
type GetRangeResponseObjectAsResult struct {
	Result *Range `json:"result,omitempty"`
}

// NewGetRangeResponseObjectAsResult instantiates a new GetRangeResponseObjectAsResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRangeResponseObjectAsResult() *GetRangeResponseObjectAsResult {
	this := GetRangeResponseObjectAsResult{}
	return &this
}

// NewGetRangeResponseObjectAsResultWithDefaults instantiates a new GetRangeResponseObjectAsResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRangeResponseObjectAsResultWithDefaults() *GetRangeResponseObjectAsResult {
	this := GetRangeResponseObjectAsResult{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *GetRangeResponseObjectAsResult) GetResult() Range {
	if o == nil || IsNil(o.Result) {
		var ret Range
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRangeResponseObjectAsResult) GetResultOk() (*Range, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *GetRangeResponseObjectAsResult) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given Range and assigns it to the Result field.
func (o *GetRangeResponseObjectAsResult) SetResult(v Range) {
	o.Result = &v
}

func (o GetRangeResponseObjectAsResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRangeResponseObjectAsResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	return toSerialize, nil
}

type NullableGetRangeResponseObjectAsResult struct {
	value *GetRangeResponseObjectAsResult
	isSet bool
}

func (v NullableGetRangeResponseObjectAsResult) Get() *GetRangeResponseObjectAsResult {
	return v.value
}

func (v *NullableGetRangeResponseObjectAsResult) Set(val *GetRangeResponseObjectAsResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRangeResponseObjectAsResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRangeResponseObjectAsResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRangeResponseObjectAsResult(val *GetRangeResponseObjectAsResult) *NullableGetRangeResponseObjectAsResult {
	return &NullableGetRangeResponseObjectAsResult{value: val, isSet: true}
}

func (v NullableGetRangeResponseObjectAsResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRangeResponseObjectAsResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
