/*
Infoblox DISCOVERY API

OpenAPI specification for Infoblox NIOS WAPI DISCOVERY objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discovery

import (
	"encoding/json"
)

// checks if the DiscoveryDeviceinterfaceIfaddrInfos type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DiscoveryDeviceinterfaceIfaddrInfos{}

// DiscoveryDeviceinterfaceIfaddrInfos struct for DiscoveryDeviceinterfaceIfaddrInfos
type DiscoveryDeviceinterfaceIfaddrInfos struct {
	// The IPv4 Address or IPv6 Address of the device.
	Address *string `json:"address,omitempty"`
	// The ref to IPv4/Ipv6 Address.
	AddressObject *string `json:"address_object,omitempty"`
	// The network to which this device belongs, in IPv4 Address/CIDR format.
	Network              *string `json:"network,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DiscoveryDeviceinterfaceIfaddrInfos DiscoveryDeviceinterfaceIfaddrInfos

// NewDiscoveryDeviceinterfaceIfaddrInfos instantiates a new DiscoveryDeviceinterfaceIfaddrInfos object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiscoveryDeviceinterfaceIfaddrInfos() *DiscoveryDeviceinterfaceIfaddrInfos {
	this := DiscoveryDeviceinterfaceIfaddrInfos{}
	return &this
}

// NewDiscoveryDeviceinterfaceIfaddrInfosWithDefaults instantiates a new DiscoveryDeviceinterfaceIfaddrInfos object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiscoveryDeviceinterfaceIfaddrInfosWithDefaults() *DiscoveryDeviceinterfaceIfaddrInfos {
	this := DiscoveryDeviceinterfaceIfaddrInfos{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterfaceIfaddrInfos) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterfaceIfaddrInfos) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterfaceIfaddrInfos) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *DiscoveryDeviceinterfaceIfaddrInfos) SetAddress(v string) {
	o.Address = &v
}

// GetAddressObject returns the AddressObject field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterfaceIfaddrInfos) GetAddressObject() string {
	if o == nil || IsNil(o.AddressObject) {
		var ret string
		return ret
	}
	return *o.AddressObject
}

// GetAddressObjectOk returns a tuple with the AddressObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterfaceIfaddrInfos) GetAddressObjectOk() (*string, bool) {
	if o == nil || IsNil(o.AddressObject) {
		return nil, false
	}
	return o.AddressObject, true
}

// HasAddressObject returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterfaceIfaddrInfos) HasAddressObject() bool {
	if o != nil && !IsNil(o.AddressObject) {
		return true
	}

	return false
}

// SetAddressObject gets a reference to the given string and assigns it to the AddressObject field.
func (o *DiscoveryDeviceinterfaceIfaddrInfos) SetAddressObject(v string) {
	o.AddressObject = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *DiscoveryDeviceinterfaceIfaddrInfos) GetNetwork() string {
	if o == nil || IsNil(o.Network) {
		var ret string
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryDeviceinterfaceIfaddrInfos) GetNetworkOk() (*string, bool) {
	if o == nil || IsNil(o.Network) {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *DiscoveryDeviceinterfaceIfaddrInfos) HasNetwork() bool {
	if o != nil && !IsNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given string and assigns it to the Network field.
func (o *DiscoveryDeviceinterfaceIfaddrInfos) SetNetwork(v string) {
	o.Network = &v
}

func (o DiscoveryDeviceinterfaceIfaddrInfos) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DiscoveryDeviceinterfaceIfaddrInfos) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.AddressObject) {
		toSerialize["address_object"] = o.AddressObject
	}
	if !IsNil(o.Network) {
		toSerialize["network"] = o.Network
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DiscoveryDeviceinterfaceIfaddrInfos) UnmarshalJSON(data []byte) (err error) {
	varDiscoveryDeviceinterfaceIfaddrInfos := _DiscoveryDeviceinterfaceIfaddrInfos{}

	err = json.Unmarshal(data, &varDiscoveryDeviceinterfaceIfaddrInfos)

	if err != nil {
		return err
	}

	*o = DiscoveryDeviceinterfaceIfaddrInfos(varDiscoveryDeviceinterfaceIfaddrInfos)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "address")
		delete(additionalProperties, "address_object")
		delete(additionalProperties, "network")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDiscoveryDeviceinterfaceIfaddrInfos struct {
	value *DiscoveryDeviceinterfaceIfaddrInfos
	isSet bool
}

func (v NullableDiscoveryDeviceinterfaceIfaddrInfos) Get() *DiscoveryDeviceinterfaceIfaddrInfos {
	return v.value
}

func (v *NullableDiscoveryDeviceinterfaceIfaddrInfos) Set(val *DiscoveryDeviceinterfaceIfaddrInfos) {
	v.value = val
	v.isSet = true
}

func (v NullableDiscoveryDeviceinterfaceIfaddrInfos) IsSet() bool {
	return v.isSet
}

func (v *NullableDiscoveryDeviceinterfaceIfaddrInfos) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiscoveryDeviceinterfaceIfaddrInfos(val *DiscoveryDeviceinterfaceIfaddrInfos) *NullableDiscoveryDeviceinterfaceIfaddrInfos {
	return &NullableDiscoveryDeviceinterfaceIfaddrInfos{value: val, isSet: true}
}

func (v NullableDiscoveryDeviceinterfaceIfaddrInfos) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiscoveryDeviceinterfaceIfaddrInfos) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
