/*
Infoblox DISCOVERY API

OpenAPI specification for Infoblox NIOS WAPI DISCOVERY objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discovery

import (
	"encoding/json"
	"fmt"
)

// GetDiscoveryMemberpropertiesResponse - struct for GetDiscoveryMemberpropertiesResponse
type GetDiscoveryMemberpropertiesResponse struct {
	DiscoveryMemberproperties                          *DiscoveryMemberproperties
	GetDiscoveryMemberpropertiesResponseObjectAsResult *GetDiscoveryMemberpropertiesResponseObjectAsResult
}

// DiscoveryMemberpropertiesAsGetDiscoveryMemberpropertiesResponse is a convenience function that returns DiscoveryMemberproperties wrapped in GetDiscoveryMemberpropertiesResponse
func DiscoveryMemberpropertiesAsGetDiscoveryMemberpropertiesResponse(v *DiscoveryMemberproperties) GetDiscoveryMemberpropertiesResponse {
	return GetDiscoveryMemberpropertiesResponse{
		DiscoveryMemberproperties: v,
	}
}

// GetDiscoveryMemberpropertiesResponseObjectAsResultAsGetDiscoveryMemberpropertiesResponse is a convenience function that returns GetDiscoveryMemberpropertiesResponseObjectAsResult wrapped in GetDiscoveryMemberpropertiesResponse
func GetDiscoveryMemberpropertiesResponseObjectAsResultAsGetDiscoveryMemberpropertiesResponse(v *GetDiscoveryMemberpropertiesResponseObjectAsResult) GetDiscoveryMemberpropertiesResponse {
	return GetDiscoveryMemberpropertiesResponse{
		GetDiscoveryMemberpropertiesResponseObjectAsResult: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetDiscoveryMemberpropertiesResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into DiscoveryMemberproperties
	err = newStrictDecoder(data).Decode(&dst.DiscoveryMemberproperties)
	if err == nil {
		jsonDiscoveryMemberproperties, _ := json.Marshal(dst.DiscoveryMemberproperties)
		if string(jsonDiscoveryMemberproperties) == "{}" { // empty struct
			dst.DiscoveryMemberproperties = nil
		} else {
			match++
		}
	} else {
		dst.DiscoveryMemberproperties = nil
	}

	// try to unmarshal data into GetDiscoveryMemberpropertiesResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetDiscoveryMemberpropertiesResponseObjectAsResult)
	if err == nil {
		jsonGetDiscoveryMemberpropertiesResponseObjectAsResult, _ := json.Marshal(dst.GetDiscoveryMemberpropertiesResponseObjectAsResult)
		if string(jsonGetDiscoveryMemberpropertiesResponseObjectAsResult) == "{}" { // empty struct
			dst.GetDiscoveryMemberpropertiesResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetDiscoveryMemberpropertiesResponseObjectAsResult = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.DiscoveryMemberproperties = nil
		dst.GetDiscoveryMemberpropertiesResponseObjectAsResult = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetDiscoveryMemberpropertiesResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetDiscoveryMemberpropertiesResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetDiscoveryMemberpropertiesResponse) MarshalJSON() ([]byte, error) {
	if src.DiscoveryMemberproperties != nil {
		return json.Marshal(&src.DiscoveryMemberproperties)
	}

	if src.GetDiscoveryMemberpropertiesResponseObjectAsResult != nil {
		return json.Marshal(&src.GetDiscoveryMemberpropertiesResponseObjectAsResult)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetDiscoveryMemberpropertiesResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.DiscoveryMemberproperties != nil {
		return obj.DiscoveryMemberproperties
	}

	if obj.GetDiscoveryMemberpropertiesResponseObjectAsResult != nil {
		return obj.GetDiscoveryMemberpropertiesResponseObjectAsResult
	}

	// all schemas are nil
	return nil
}

type NullableGetDiscoveryMemberpropertiesResponse struct {
	value *GetDiscoveryMemberpropertiesResponse
	isSet bool
}

func (v NullableGetDiscoveryMemberpropertiesResponse) Get() *GetDiscoveryMemberpropertiesResponse {
	return v.value
}

func (v *NullableGetDiscoveryMemberpropertiesResponse) Set(val *GetDiscoveryMemberpropertiesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDiscoveryMemberpropertiesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDiscoveryMemberpropertiesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDiscoveryMemberpropertiesResponse(val *GetDiscoveryMemberpropertiesResponse) *NullableGetDiscoveryMemberpropertiesResponse {
	return &NullableGetDiscoveryMemberpropertiesResponse{value: val, isSet: true}
}

func (v NullableGetDiscoveryMemberpropertiesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDiscoveryMemberpropertiesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
