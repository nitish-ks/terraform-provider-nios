/*
Infoblox DISCOVERY API

OpenAPI specification for Infoblox NIOS WAPI DISCOVERY objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discovery

import (
	"encoding/json"
	"fmt"
)

// GetDiscoveryStatusResponse - struct for GetDiscoveryStatusResponse
type GetDiscoveryStatusResponse struct {
	DiscoveryStatus                          *DiscoveryStatus
	GetDiscoveryStatusResponseObjectAsResult *GetDiscoveryStatusResponseObjectAsResult
}

// DiscoveryStatusAsGetDiscoveryStatusResponse is a convenience function that returns DiscoveryStatus wrapped in GetDiscoveryStatusResponse
func DiscoveryStatusAsGetDiscoveryStatusResponse(v *DiscoveryStatus) GetDiscoveryStatusResponse {
	return GetDiscoveryStatusResponse{
		DiscoveryStatus: v,
	}
}

// GetDiscoveryStatusResponseObjectAsResultAsGetDiscoveryStatusResponse is a convenience function that returns GetDiscoveryStatusResponseObjectAsResult wrapped in GetDiscoveryStatusResponse
func GetDiscoveryStatusResponseObjectAsResultAsGetDiscoveryStatusResponse(v *GetDiscoveryStatusResponseObjectAsResult) GetDiscoveryStatusResponse {
	return GetDiscoveryStatusResponse{
		GetDiscoveryStatusResponseObjectAsResult: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetDiscoveryStatusResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into DiscoveryStatus
	err = newStrictDecoder(data).Decode(&dst.DiscoveryStatus)
	if err == nil {
		jsonDiscoveryStatus, _ := json.Marshal(dst.DiscoveryStatus)
		if string(jsonDiscoveryStatus) == "{}" { // empty struct
			dst.DiscoveryStatus = nil
		} else {
			match++
		}
	} else {
		dst.DiscoveryStatus = nil
	}

	// try to unmarshal data into GetDiscoveryStatusResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetDiscoveryStatusResponseObjectAsResult)
	if err == nil {
		jsonGetDiscoveryStatusResponseObjectAsResult, _ := json.Marshal(dst.GetDiscoveryStatusResponseObjectAsResult)
		if string(jsonGetDiscoveryStatusResponseObjectAsResult) == "{}" { // empty struct
			dst.GetDiscoveryStatusResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetDiscoveryStatusResponseObjectAsResult = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.DiscoveryStatus = nil
		dst.GetDiscoveryStatusResponseObjectAsResult = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetDiscoveryStatusResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetDiscoveryStatusResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetDiscoveryStatusResponse) MarshalJSON() ([]byte, error) {
	if src.DiscoveryStatus != nil {
		return json.Marshal(&src.DiscoveryStatus)
	}

	if src.GetDiscoveryStatusResponseObjectAsResult != nil {
		return json.Marshal(&src.GetDiscoveryStatusResponseObjectAsResult)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetDiscoveryStatusResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.DiscoveryStatus != nil {
		return obj.DiscoveryStatus
	}

	if obj.GetDiscoveryStatusResponseObjectAsResult != nil {
		return obj.GetDiscoveryStatusResponseObjectAsResult
	}

	// all schemas are nil
	return nil
}

type NullableGetDiscoveryStatusResponse struct {
	value *GetDiscoveryStatusResponse
	isSet bool
}

func (v NullableGetDiscoveryStatusResponse) Get() *GetDiscoveryStatusResponse {
	return v.value
}

func (v *NullableGetDiscoveryStatusResponse) Set(val *GetDiscoveryStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDiscoveryStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDiscoveryStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDiscoveryStatusResponse(val *GetDiscoveryStatusResponse) *NullableGetDiscoveryStatusResponse {
	return &NullableGetDiscoveryStatusResponse{value: val, isSet: true}
}

func (v NullableGetDiscoveryStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDiscoveryStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
