/*
Infoblox DISCOVERY API

OpenAPI specification for Infoblox NIOS WAPI DISCOVERY objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discovery

import (
	"encoding/json"
	"fmt"
)

// GetVdiscoverytaskResponse - struct for GetVdiscoverytaskResponse
type GetVdiscoverytaskResponse struct {
	GetVdiscoverytaskResponseObjectAsResult *GetVdiscoverytaskResponseObjectAsResult
	Vdiscoverytask                          *Vdiscoverytask
}

// GetVdiscoverytaskResponseObjectAsResultAsGetVdiscoverytaskResponse is a convenience function that returns GetVdiscoverytaskResponseObjectAsResult wrapped in GetVdiscoverytaskResponse
func GetVdiscoverytaskResponseObjectAsResultAsGetVdiscoverytaskResponse(v *GetVdiscoverytaskResponseObjectAsResult) GetVdiscoverytaskResponse {
	return GetVdiscoverytaskResponse{
		GetVdiscoverytaskResponseObjectAsResult: v,
	}
}

// VdiscoverytaskAsGetVdiscoverytaskResponse is a convenience function that returns Vdiscoverytask wrapped in GetVdiscoverytaskResponse
func VdiscoverytaskAsGetVdiscoverytaskResponse(v *Vdiscoverytask) GetVdiscoverytaskResponse {
	return GetVdiscoverytaskResponse{
		Vdiscoverytask: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetVdiscoverytaskResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetVdiscoverytaskResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetVdiscoverytaskResponseObjectAsResult)
	if err == nil {
		jsonGetVdiscoverytaskResponseObjectAsResult, _ := json.Marshal(dst.GetVdiscoverytaskResponseObjectAsResult)
		if string(jsonGetVdiscoverytaskResponseObjectAsResult) == "{}" { // empty struct
			dst.GetVdiscoverytaskResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetVdiscoverytaskResponseObjectAsResult = nil
	}

	// try to unmarshal data into Vdiscoverytask
	err = newStrictDecoder(data).Decode(&dst.Vdiscoverytask)
	if err == nil {
		jsonVdiscoverytask, _ := json.Marshal(dst.Vdiscoverytask)
		if string(jsonVdiscoverytask) == "{}" { // empty struct
			dst.Vdiscoverytask = nil
		} else {
			match++
		}
	} else {
		dst.Vdiscoverytask = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetVdiscoverytaskResponseObjectAsResult = nil
		dst.Vdiscoverytask = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetVdiscoverytaskResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetVdiscoverytaskResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetVdiscoverytaskResponse) MarshalJSON() ([]byte, error) {
	if src.GetVdiscoverytaskResponseObjectAsResult != nil {
		return json.Marshal(&src.GetVdiscoverytaskResponseObjectAsResult)
	}

	if src.Vdiscoverytask != nil {
		return json.Marshal(&src.Vdiscoverytask)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetVdiscoverytaskResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GetVdiscoverytaskResponseObjectAsResult != nil {
		return obj.GetVdiscoverytaskResponseObjectAsResult
	}

	if obj.Vdiscoverytask != nil {
		return obj.Vdiscoverytask
	}

	// all schemas are nil
	return nil
}

type NullableGetVdiscoverytaskResponse struct {
	value *GetVdiscoverytaskResponse
	isSet bool
}

func (v NullableGetVdiscoverytaskResponse) Get() *GetVdiscoverytaskResponse {
	return v.value
}

func (v *NullableGetVdiscoverytaskResponse) Set(val *GetVdiscoverytaskResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetVdiscoverytaskResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetVdiscoverytaskResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetVdiscoverytaskResponse(val *GetVdiscoverytaskResponse) *NullableGetVdiscoverytaskResponse {
	return &NullableGetVdiscoverytaskResponse{value: val, isSet: true}
}

func (v NullableGetVdiscoverytaskResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetVdiscoverytaskResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
