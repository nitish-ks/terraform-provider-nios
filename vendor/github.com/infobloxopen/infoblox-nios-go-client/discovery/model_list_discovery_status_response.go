/*
Infoblox DISCOVERY API

OpenAPI specification for Infoblox NIOS WAPI DISCOVERY objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package discovery

import (
	"encoding/json"
	"fmt"
)

// ListDiscoveryStatusResponse - struct for ListDiscoveryStatusResponse
type ListDiscoveryStatusResponse struct {
	ListDiscoveryStatusResponseObject *ListDiscoveryStatusResponseObject
	ArrayOfDiscoveryStatus            *[]DiscoveryStatus
}

// ListDiscoveryStatusResponseObjectAsListDiscoveryStatusResponse is a convenience function that returns ListDiscoveryStatusResponseObject wrapped in ListDiscoveryStatusResponse
func ListDiscoveryStatusResponseObjectAsListDiscoveryStatusResponse(v *ListDiscoveryStatusResponseObject) ListDiscoveryStatusResponse {
	return ListDiscoveryStatusResponse{
		ListDiscoveryStatusResponseObject: v,
	}
}

// []DiscoveryStatusAsListDiscoveryStatusResponse is a convenience function that returns []DiscoveryStatus wrapped in ListDiscoveryStatusResponse
func ArrayOfDiscoveryStatusAsListDiscoveryStatusResponse(v *[]DiscoveryStatus) ListDiscoveryStatusResponse {
	return ListDiscoveryStatusResponse{
		ArrayOfDiscoveryStatus: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListDiscoveryStatusResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListDiscoveryStatusResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListDiscoveryStatusResponseObject)
	if err == nil {
		jsonListDiscoveryStatusResponseObject, _ := json.Marshal(dst.ListDiscoveryStatusResponseObject)
		if string(jsonListDiscoveryStatusResponseObject) == "{}" { // empty struct
			dst.ListDiscoveryStatusResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListDiscoveryStatusResponseObject = nil
	}

	// try to unmarshal data into ArrayOfDiscoveryStatus
	err = newStrictDecoder(data).Decode(&dst.ArrayOfDiscoveryStatus)
	if err == nil {
		jsonArrayOfDiscoveryStatus, _ := json.Marshal(dst.ArrayOfDiscoveryStatus)
		if string(jsonArrayOfDiscoveryStatus) == "{}" { // empty struct
			dst.ArrayOfDiscoveryStatus = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfDiscoveryStatus = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListDiscoveryStatusResponseObject = nil
		dst.ArrayOfDiscoveryStatus = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListDiscoveryStatusResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListDiscoveryStatusResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListDiscoveryStatusResponse) MarshalJSON() ([]byte, error) {
	if src.ListDiscoveryStatusResponseObject != nil {
		return json.Marshal(&src.ListDiscoveryStatusResponseObject)
	}

	if src.ArrayOfDiscoveryStatus != nil {
		return json.Marshal(&src.ArrayOfDiscoveryStatus)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListDiscoveryStatusResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListDiscoveryStatusResponseObject != nil {
		return obj.ListDiscoveryStatusResponseObject
	}

	if obj.ArrayOfDiscoveryStatus != nil {
		return obj.ArrayOfDiscoveryStatus
	}

	// all schemas are nil
	return nil
}

type NullableListDiscoveryStatusResponse struct {
	value *ListDiscoveryStatusResponse
	isSet bool
}

func (v NullableListDiscoveryStatusResponse) Get() *ListDiscoveryStatusResponse {
	return v.value
}

func (v *NullableListDiscoveryStatusResponse) Set(val *ListDiscoveryStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListDiscoveryStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListDiscoveryStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListDiscoveryStatusResponse(val *ListDiscoveryStatusResponse) *NullableListDiscoveryStatusResponse {
	return &NullableListDiscoveryStatusResponse{value: val, isSet: true}
}

func (v NullableListDiscoveryStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListDiscoveryStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
