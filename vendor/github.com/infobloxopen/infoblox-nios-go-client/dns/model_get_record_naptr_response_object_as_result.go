/*
Infoblox DNS API

OpenAPI specification for Infoblox NIOS WAPI DNS objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dns

import (
	"encoding/json"
)

// checks if the GetRecordNaptrResponseObjectAsResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRecordNaptrResponseObjectAsResult{}

// GetRecordNaptrResponseObjectAsResult The response format to retrieve __RecordNaptr__ objects.
type GetRecordNaptrResponseObjectAsResult struct {
	Result *RecordNaptr `json:"result,omitempty"`
}

// NewGetRecordNaptrResponseObjectAsResult instantiates a new GetRecordNaptrResponseObjectAsResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRecordNaptrResponseObjectAsResult() *GetRecordNaptrResponseObjectAsResult {
	this := GetRecordNaptrResponseObjectAsResult{}
	return &this
}

// NewGetRecordNaptrResponseObjectAsResultWithDefaults instantiates a new GetRecordNaptrResponseObjectAsResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRecordNaptrResponseObjectAsResultWithDefaults() *GetRecordNaptrResponseObjectAsResult {
	this := GetRecordNaptrResponseObjectAsResult{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *GetRecordNaptrResponseObjectAsResult) GetResult() RecordNaptr {
	if o == nil || IsNil(o.Result) {
		var ret RecordNaptr
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRecordNaptrResponseObjectAsResult) GetResultOk() (*RecordNaptr, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *GetRecordNaptrResponseObjectAsResult) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given RecordNaptr and assigns it to the Result field.
func (o *GetRecordNaptrResponseObjectAsResult) SetResult(v RecordNaptr) {
	o.Result = &v
}

func (o GetRecordNaptrResponseObjectAsResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRecordNaptrResponseObjectAsResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	return toSerialize, nil
}

type NullableGetRecordNaptrResponseObjectAsResult struct {
	value *GetRecordNaptrResponseObjectAsResult
	isSet bool
}

func (v NullableGetRecordNaptrResponseObjectAsResult) Get() *GetRecordNaptrResponseObjectAsResult {
	return v.value
}

func (v *NullableGetRecordNaptrResponseObjectAsResult) Set(val *GetRecordNaptrResponseObjectAsResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRecordNaptrResponseObjectAsResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRecordNaptrResponseObjectAsResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRecordNaptrResponseObjectAsResult(val *GetRecordNaptrResponseObjectAsResult) *NullableGetRecordNaptrResponseObjectAsResult {
	return &NullableGetRecordNaptrResponseObjectAsResult{value: val, isSet: true}
}

func (v NullableGetRecordNaptrResponseObjectAsResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRecordNaptrResponseObjectAsResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
