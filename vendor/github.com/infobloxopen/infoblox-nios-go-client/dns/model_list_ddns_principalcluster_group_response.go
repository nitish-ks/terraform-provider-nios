/*
Infoblox DNS API

OpenAPI specification for Infoblox NIOS WAPI DNS objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dns

import (
	"encoding/json"
	"fmt"
)

// ListDdnsPrincipalclusterGroupResponse - struct for ListDdnsPrincipalclusterGroupResponse
type ListDdnsPrincipalclusterGroupResponse struct {
	ListDdnsPrincipalclusterGroupResponseObject *ListDdnsPrincipalclusterGroupResponseObject
	ArrayOfDdnsPrincipalclusterGroup            *[]DdnsPrincipalclusterGroup
}

// ListDdnsPrincipalclusterGroupResponseObjectAsListDdnsPrincipalclusterGroupResponse is a convenience function that returns ListDdnsPrincipalclusterGroupResponseObject wrapped in ListDdnsPrincipalclusterGroupResponse
func ListDdnsPrincipalclusterGroupResponseObjectAsListDdnsPrincipalclusterGroupResponse(v *ListDdnsPrincipalclusterGroupResponseObject) ListDdnsPrincipalclusterGroupResponse {
	return ListDdnsPrincipalclusterGroupResponse{
		ListDdnsPrincipalclusterGroupResponseObject: v,
	}
}

// []DdnsPrincipalclusterGroupAsListDdnsPrincipalclusterGroupResponse is a convenience function that returns []DdnsPrincipalclusterGroup wrapped in ListDdnsPrincipalclusterGroupResponse
func ArrayOfDdnsPrincipalclusterGroupAsListDdnsPrincipalclusterGroupResponse(v *[]DdnsPrincipalclusterGroup) ListDdnsPrincipalclusterGroupResponse {
	return ListDdnsPrincipalclusterGroupResponse{
		ArrayOfDdnsPrincipalclusterGroup: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListDdnsPrincipalclusterGroupResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListDdnsPrincipalclusterGroupResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListDdnsPrincipalclusterGroupResponseObject)
	if err == nil {
		jsonListDdnsPrincipalclusterGroupResponseObject, _ := json.Marshal(dst.ListDdnsPrincipalclusterGroupResponseObject)
		if string(jsonListDdnsPrincipalclusterGroupResponseObject) == "{}" { // empty struct
			dst.ListDdnsPrincipalclusterGroupResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListDdnsPrincipalclusterGroupResponseObject = nil
	}

	// try to unmarshal data into ArrayOfDdnsPrincipalclusterGroup
	err = newStrictDecoder(data).Decode(&dst.ArrayOfDdnsPrincipalclusterGroup)
	if err == nil {
		jsonArrayOfDdnsPrincipalclusterGroup, _ := json.Marshal(dst.ArrayOfDdnsPrincipalclusterGroup)
		if string(jsonArrayOfDdnsPrincipalclusterGroup) == "{}" { // empty struct
			dst.ArrayOfDdnsPrincipalclusterGroup = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfDdnsPrincipalclusterGroup = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListDdnsPrincipalclusterGroupResponseObject = nil
		dst.ArrayOfDdnsPrincipalclusterGroup = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListDdnsPrincipalclusterGroupResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListDdnsPrincipalclusterGroupResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListDdnsPrincipalclusterGroupResponse) MarshalJSON() ([]byte, error) {
	if src.ListDdnsPrincipalclusterGroupResponseObject != nil {
		return json.Marshal(&src.ListDdnsPrincipalclusterGroupResponseObject)
	}

	if src.ArrayOfDdnsPrincipalclusterGroup != nil {
		return json.Marshal(&src.ArrayOfDdnsPrincipalclusterGroup)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListDdnsPrincipalclusterGroupResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListDdnsPrincipalclusterGroupResponseObject != nil {
		return obj.ListDdnsPrincipalclusterGroupResponseObject
	}

	if obj.ArrayOfDdnsPrincipalclusterGroup != nil {
		return obj.ArrayOfDdnsPrincipalclusterGroup
	}

	// all schemas are nil
	return nil
}

type NullableListDdnsPrincipalclusterGroupResponse struct {
	value *ListDdnsPrincipalclusterGroupResponse
	isSet bool
}

func (v NullableListDdnsPrincipalclusterGroupResponse) Get() *ListDdnsPrincipalclusterGroupResponse {
	return v.value
}

func (v *NullableListDdnsPrincipalclusterGroupResponse) Set(val *ListDdnsPrincipalclusterGroupResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListDdnsPrincipalclusterGroupResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListDdnsPrincipalclusterGroupResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListDdnsPrincipalclusterGroupResponse(val *ListDdnsPrincipalclusterGroupResponse) *NullableListDdnsPrincipalclusterGroupResponse {
	return &NullableListDdnsPrincipalclusterGroupResponse{value: val, isSet: true}
}

func (v NullableListDdnsPrincipalclusterGroupResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListDdnsPrincipalclusterGroupResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
