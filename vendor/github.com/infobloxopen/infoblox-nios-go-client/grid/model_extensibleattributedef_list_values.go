/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the ExtensibleattributedefListValues type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExtensibleattributedefListValues{}

// ExtensibleattributedefListValues struct for ExtensibleattributedefListValues
type ExtensibleattributedefListValues struct {
	// Enum value
	Value                *string `json:"value,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ExtensibleattributedefListValues ExtensibleattributedefListValues

// NewExtensibleattributedefListValues instantiates a new ExtensibleattributedefListValues object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtensibleattributedefListValues() *ExtensibleattributedefListValues {
	this := ExtensibleattributedefListValues{}
	return &this
}

// NewExtensibleattributedefListValuesWithDefaults instantiates a new ExtensibleattributedefListValues object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtensibleattributedefListValuesWithDefaults() *ExtensibleattributedefListValues {
	this := ExtensibleattributedefListValues{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ExtensibleattributedefListValues) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtensibleattributedefListValues) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ExtensibleattributedefListValues) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *ExtensibleattributedefListValues) SetValue(v string) {
	o.Value = &v
}

func (o ExtensibleattributedefListValues) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExtensibleattributedefListValues) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ExtensibleattributedefListValues) UnmarshalJSON(data []byte) (err error) {
	varExtensibleattributedefListValues := _ExtensibleattributedefListValues{}

	err = json.Unmarshal(data, &varExtensibleattributedefListValues)

	if err != nil {
		return err
	}

	*o = ExtensibleattributedefListValues(varExtensibleattributedefListValues)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "value")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableExtensibleattributedefListValues struct {
	value *ExtensibleattributedefListValues
	isSet bool
}

func (v NullableExtensibleattributedefListValues) Get() *ExtensibleattributedefListValues {
	return v.value
}

func (v *NullableExtensibleattributedefListValues) Set(val *ExtensibleattributedefListValues) {
	v.value = val
	v.isSet = true
}

func (v NullableExtensibleattributedefListValues) IsSet() bool {
	return v.isSet
}

func (v *NullableExtensibleattributedefListValues) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtensibleattributedefListValues(val *ExtensibleattributedefListValues) *NullableExtensibleattributedefListValues {
	return &NullableExtensibleattributedefListValues{value: val, isSet: true}
}

func (v NullableExtensibleattributedefListValues) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtensibleattributedefListValues) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
