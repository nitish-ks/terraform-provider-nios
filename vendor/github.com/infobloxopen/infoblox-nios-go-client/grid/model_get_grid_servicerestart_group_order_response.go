/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
	"fmt"
)

// GetGridServicerestartGroupOrderResponse - struct for GetGridServicerestartGroupOrderResponse
type GetGridServicerestartGroupOrderResponse struct {
	GetGridServicerestartGroupOrderResponseObjectAsResult *GetGridServicerestartGroupOrderResponseObjectAsResult
	GridServicerestartGroupOrder                          *GridServicerestartGroupOrder
}

// GetGridServicerestartGroupOrderResponseObjectAsResultAsGetGridServicerestartGroupOrderResponse is a convenience function that returns GetGridServicerestartGroupOrderResponseObjectAsResult wrapped in GetGridServicerestartGroupOrderResponse
func GetGridServicerestartGroupOrderResponseObjectAsResultAsGetGridServicerestartGroupOrderResponse(v *GetGridServicerestartGroupOrderResponseObjectAsResult) GetGridServicerestartGroupOrderResponse {
	return GetGridServicerestartGroupOrderResponse{
		GetGridServicerestartGroupOrderResponseObjectAsResult: v,
	}
}

// GridServicerestartGroupOrderAsGetGridServicerestartGroupOrderResponse is a convenience function that returns GridServicerestartGroupOrder wrapped in GetGridServicerestartGroupOrderResponse
func GridServicerestartGroupOrderAsGetGridServicerestartGroupOrderResponse(v *GridServicerestartGroupOrder) GetGridServicerestartGroupOrderResponse {
	return GetGridServicerestartGroupOrderResponse{
		GridServicerestartGroupOrder: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetGridServicerestartGroupOrderResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetGridServicerestartGroupOrderResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetGridServicerestartGroupOrderResponseObjectAsResult)
	if err == nil {
		jsonGetGridServicerestartGroupOrderResponseObjectAsResult, _ := json.Marshal(dst.GetGridServicerestartGroupOrderResponseObjectAsResult)
		if string(jsonGetGridServicerestartGroupOrderResponseObjectAsResult) == "{}" { // empty struct
			dst.GetGridServicerestartGroupOrderResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetGridServicerestartGroupOrderResponseObjectAsResult = nil
	}

	// try to unmarshal data into GridServicerestartGroupOrder
	err = newStrictDecoder(data).Decode(&dst.GridServicerestartGroupOrder)
	if err == nil {
		jsonGridServicerestartGroupOrder, _ := json.Marshal(dst.GridServicerestartGroupOrder)
		if string(jsonGridServicerestartGroupOrder) == "{}" { // empty struct
			dst.GridServicerestartGroupOrder = nil
		} else {
			match++
		}
	} else {
		dst.GridServicerestartGroupOrder = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetGridServicerestartGroupOrderResponseObjectAsResult = nil
		dst.GridServicerestartGroupOrder = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetGridServicerestartGroupOrderResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetGridServicerestartGroupOrderResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetGridServicerestartGroupOrderResponse) MarshalJSON() ([]byte, error) {
	if src.GetGridServicerestartGroupOrderResponseObjectAsResult != nil {
		return json.Marshal(&src.GetGridServicerestartGroupOrderResponseObjectAsResult)
	}

	if src.GridServicerestartGroupOrder != nil {
		return json.Marshal(&src.GridServicerestartGroupOrder)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetGridServicerestartGroupOrderResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GetGridServicerestartGroupOrderResponseObjectAsResult != nil {
		return obj.GetGridServicerestartGroupOrderResponseObjectAsResult
	}

	if obj.GridServicerestartGroupOrder != nil {
		return obj.GridServicerestartGroupOrder
	}

	// all schemas are nil
	return nil
}

type NullableGetGridServicerestartGroupOrderResponse struct {
	value *GetGridServicerestartGroupOrderResponse
	isSet bool
}

func (v NullableGetGridServicerestartGroupOrderResponse) Get() *GetGridServicerestartGroupOrderResponse {
	return v.value
}

func (v *NullableGetGridServicerestartGroupOrderResponse) Set(val *GetGridServicerestartGroupOrderResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetGridServicerestartGroupOrderResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetGridServicerestartGroupOrderResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetGridServicerestartGroupOrderResponse(val *GetGridServicerestartGroupOrderResponse) *NullableGetGridServicerestartGroupOrderResponse {
	return &NullableGetGridServicerestartGroupOrderResponse{value: val, isSet: true}
}

func (v NullableGetGridServicerestartGroupOrderResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetGridServicerestartGroupOrderResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
