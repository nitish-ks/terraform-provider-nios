/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
	"fmt"
)

// GetMemberdfpResponse - struct for GetMemberdfpResponse
type GetMemberdfpResponse struct {
	GetMemberdfpResponseObjectAsResult *GetMemberdfpResponseObjectAsResult
	Memberdfp                          *Memberdfp
}

// GetMemberdfpResponseObjectAsResultAsGetMemberdfpResponse is a convenience function that returns GetMemberdfpResponseObjectAsResult wrapped in GetMemberdfpResponse
func GetMemberdfpResponseObjectAsResultAsGetMemberdfpResponse(v *GetMemberdfpResponseObjectAsResult) GetMemberdfpResponse {
	return GetMemberdfpResponse{
		GetMemberdfpResponseObjectAsResult: v,
	}
}

// MemberdfpAsGetMemberdfpResponse is a convenience function that returns Memberdfp wrapped in GetMemberdfpResponse
func MemberdfpAsGetMemberdfpResponse(v *Memberdfp) GetMemberdfpResponse {
	return GetMemberdfpResponse{
		Memberdfp: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetMemberdfpResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetMemberdfpResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetMemberdfpResponseObjectAsResult)
	if err == nil {
		jsonGetMemberdfpResponseObjectAsResult, _ := json.Marshal(dst.GetMemberdfpResponseObjectAsResult)
		if string(jsonGetMemberdfpResponseObjectAsResult) == "{}" { // empty struct
			dst.GetMemberdfpResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetMemberdfpResponseObjectAsResult = nil
	}

	// try to unmarshal data into Memberdfp
	err = newStrictDecoder(data).Decode(&dst.Memberdfp)
	if err == nil {
		jsonMemberdfp, _ := json.Marshal(dst.Memberdfp)
		if string(jsonMemberdfp) == "{}" { // empty struct
			dst.Memberdfp = nil
		} else {
			match++
		}
	} else {
		dst.Memberdfp = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetMemberdfpResponseObjectAsResult = nil
		dst.Memberdfp = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetMemberdfpResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetMemberdfpResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetMemberdfpResponse) MarshalJSON() ([]byte, error) {
	if src.GetMemberdfpResponseObjectAsResult != nil {
		return json.Marshal(&src.GetMemberdfpResponseObjectAsResult)
	}

	if src.Memberdfp != nil {
		return json.Marshal(&src.Memberdfp)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetMemberdfpResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GetMemberdfpResponseObjectAsResult != nil {
		return obj.GetMemberdfpResponseObjectAsResult
	}

	if obj.Memberdfp != nil {
		return obj.Memberdfp
	}

	// all schemas are nil
	return nil
}

type NullableGetMemberdfpResponse struct {
	value *GetMemberdfpResponse
	isSet bool
}

func (v NullableGetMemberdfpResponse) Get() *GetMemberdfpResponse {
	return v.value
}

func (v *NullableGetMemberdfpResponse) Set(val *GetMemberdfpResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMemberdfpResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMemberdfpResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMemberdfpResponse(val *GetMemberdfpResponse) *NullableGetMemberdfpResponse {
	return &NullableGetMemberdfpResponse{value: val, isSet: true}
}

func (v NullableGetMemberdfpResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMemberdfpResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
