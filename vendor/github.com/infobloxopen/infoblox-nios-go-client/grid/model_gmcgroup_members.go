/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the GmcgroupMembers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GmcgroupMembers{}

// GmcgroupMembers struct for GmcgroupMembers
type GmcgroupMembers struct {
	// The gmcgroup member name.
	Member               *string `json:"member,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GmcgroupMembers GmcgroupMembers

// NewGmcgroupMembers instantiates a new GmcgroupMembers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGmcgroupMembers() *GmcgroupMembers {
	this := GmcgroupMembers{}
	return &this
}

// NewGmcgroupMembersWithDefaults instantiates a new GmcgroupMembers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGmcgroupMembersWithDefaults() *GmcgroupMembers {
	this := GmcgroupMembers{}
	return &this
}

// GetMember returns the Member field value if set, zero value otherwise.
func (o *GmcgroupMembers) GetMember() string {
	if o == nil || IsNil(o.Member) {
		var ret string
		return ret
	}
	return *o.Member
}

// GetMemberOk returns a tuple with the Member field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GmcgroupMembers) GetMemberOk() (*string, bool) {
	if o == nil || IsNil(o.Member) {
		return nil, false
	}
	return o.Member, true
}

// HasMember returns a boolean if a field has been set.
func (o *GmcgroupMembers) HasMember() bool {
	if o != nil && !IsNil(o.Member) {
		return true
	}

	return false
}

// SetMember gets a reference to the given string and assigns it to the Member field.
func (o *GmcgroupMembers) SetMember(v string) {
	o.Member = &v
}

func (o GmcgroupMembers) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GmcgroupMembers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Member) {
		toSerialize["member"] = o.Member
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GmcgroupMembers) UnmarshalJSON(data []byte) (err error) {
	varGmcgroupMembers := _GmcgroupMembers{}

	err = json.Unmarshal(data, &varGmcgroupMembers)

	if err != nil {
		return err
	}

	*o = GmcgroupMembers(varGmcgroupMembers)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "member")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGmcgroupMembers struct {
	value *GmcgroupMembers
	isSet bool
}

func (v NullableGmcgroupMembers) Get() *GmcgroupMembers {
	return v.value
}

func (v *NullableGmcgroupMembers) Set(val *GmcgroupMembers) {
	v.value = val
	v.isSet = true
}

func (v NullableGmcgroupMembers) IsSet() bool {
	return v.isSet
}

func (v *NullableGmcgroupMembers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGmcgroupMembers(val *GmcgroupMembers) *NullableGmcgroupMembers {
	return &NullableGmcgroupMembers{value: val, isSet: true}
}

func (v NullableGmcgroupMembers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGmcgroupMembers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
