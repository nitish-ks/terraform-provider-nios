/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the GridDnsLoggingCategories type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GridDnsLoggingCategories{}

// GridDnsLoggingCategories struct for GridDnsLoggingCategories
type GridDnsLoggingCategories struct {
	// Determines whether the DTC GSLB activity is captured or not.
	LogDtcGslb *bool `json:"log_dtc_gslb,omitempty"`
	// Determines whether the DTC health monitoring information is captured or not.
	LogDtcHealth *bool `json:"log_dtc_health,omitempty"`
	// Determines whether the BIND messages that are not specifically classified are captured or not.
	LogGeneral *bool `json:"log_general,omitempty"`
	// Determines whether the client requests are captured or not.
	LogClient *bool `json:"log_client,omitempty"`
	// Determines whether the configuration file parsing is captured or not.
	LogConfig *bool `json:"log_config,omitempty"`
	// Determines whether the BIND's internal database processes are captured or not.
	LogDatabase *bool `json:"log_database,omitempty"`
	// Determines whether the DNSSEC-signed responses are captured or not.
	LogDnssec *bool `json:"log_dnssec,omitempty"`
	// Determines whether the bad delegation instances are captured or not.
	LogLameServers *bool `json:"log_lame_servers,omitempty"`
	// Determines whether the network operation messages are captured or not.
	LogNetwork *bool `json:"log_network,omitempty"`
	// Determines whether the asynchronous zone change notification messages are captured or not.
	LogNotify *bool `json:"log_notify,omitempty"`
	// Determines whether the query messages are captured or not.
	LogQueries *bool `json:"log_queries,omitempty"`
	// Determines whether the query rewrite messages are captured or not.
	LogQueryRewrite *bool `json:"log_query_rewrite,omitempty"`
	// Determines whether the response messages are captured or not.
	LogResponses *bool `json:"log_responses,omitempty"`
	// Determines whether the DNS resolution instances, including recursive queries from resolvers are captured or not.
	LogResolver *bool `json:"log_resolver,omitempty"`
	// Determines whether the approved and denied requests are captured or not.
	LogSecurity *bool `json:"log_security,omitempty"`
	// Determines whether the dynamic update instances are captured or not.
	LogUpdate *bool `json:"log_update,omitempty"`
	// Determines whether the zone transfer messages from the remote name servers to the appliance are captured or not.
	LogXferIn *bool `json:"log_xfer_in,omitempty"`
	// Determines whether the zone transfer messages from the Infoblox appliance to remote name servers are captured or not.
	LogXferOut *bool `json:"log_xfer_out,omitempty"`
	// Determines whether the security update messages are captured or not.
	LogUpdateSecurity *bool `json:"log_update_security,omitempty"`
	// Determines whether the rate limit messages are captured or not.
	LogRateLimit *bool `json:"log_rate_limit,omitempty"`
	// Determines whether the Response Policy Zone messages are captured or not.
	LogRpz               *bool `json:"log_rpz,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GridDnsLoggingCategories GridDnsLoggingCategories

// NewGridDnsLoggingCategories instantiates a new GridDnsLoggingCategories object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGridDnsLoggingCategories() *GridDnsLoggingCategories {
	this := GridDnsLoggingCategories{}
	return &this
}

// NewGridDnsLoggingCategoriesWithDefaults instantiates a new GridDnsLoggingCategories object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGridDnsLoggingCategoriesWithDefaults() *GridDnsLoggingCategories {
	this := GridDnsLoggingCategories{}
	return &this
}

// GetLogDtcGslb returns the LogDtcGslb field value if set, zero value otherwise.
func (o *GridDnsLoggingCategories) GetLogDtcGslb() bool {
	if o == nil || IsNil(o.LogDtcGslb) {
		var ret bool
		return ret
	}
	return *o.LogDtcGslb
}

// GetLogDtcGslbOk returns a tuple with the LogDtcGslb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsLoggingCategories) GetLogDtcGslbOk() (*bool, bool) {
	if o == nil || IsNil(o.LogDtcGslb) {
		return nil, false
	}
	return o.LogDtcGslb, true
}

// HasLogDtcGslb returns a boolean if a field has been set.
func (o *GridDnsLoggingCategories) HasLogDtcGslb() bool {
	if o != nil && !IsNil(o.LogDtcGslb) {
		return true
	}

	return false
}

// SetLogDtcGslb gets a reference to the given bool and assigns it to the LogDtcGslb field.
func (o *GridDnsLoggingCategories) SetLogDtcGslb(v bool) {
	o.LogDtcGslb = &v
}

// GetLogDtcHealth returns the LogDtcHealth field value if set, zero value otherwise.
func (o *GridDnsLoggingCategories) GetLogDtcHealth() bool {
	if o == nil || IsNil(o.LogDtcHealth) {
		var ret bool
		return ret
	}
	return *o.LogDtcHealth
}

// GetLogDtcHealthOk returns a tuple with the LogDtcHealth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsLoggingCategories) GetLogDtcHealthOk() (*bool, bool) {
	if o == nil || IsNil(o.LogDtcHealth) {
		return nil, false
	}
	return o.LogDtcHealth, true
}

// HasLogDtcHealth returns a boolean if a field has been set.
func (o *GridDnsLoggingCategories) HasLogDtcHealth() bool {
	if o != nil && !IsNil(o.LogDtcHealth) {
		return true
	}

	return false
}

// SetLogDtcHealth gets a reference to the given bool and assigns it to the LogDtcHealth field.
func (o *GridDnsLoggingCategories) SetLogDtcHealth(v bool) {
	o.LogDtcHealth = &v
}

// GetLogGeneral returns the LogGeneral field value if set, zero value otherwise.
func (o *GridDnsLoggingCategories) GetLogGeneral() bool {
	if o == nil || IsNil(o.LogGeneral) {
		var ret bool
		return ret
	}
	return *o.LogGeneral
}

// GetLogGeneralOk returns a tuple with the LogGeneral field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsLoggingCategories) GetLogGeneralOk() (*bool, bool) {
	if o == nil || IsNil(o.LogGeneral) {
		return nil, false
	}
	return o.LogGeneral, true
}

// HasLogGeneral returns a boolean if a field has been set.
func (o *GridDnsLoggingCategories) HasLogGeneral() bool {
	if o != nil && !IsNil(o.LogGeneral) {
		return true
	}

	return false
}

// SetLogGeneral gets a reference to the given bool and assigns it to the LogGeneral field.
func (o *GridDnsLoggingCategories) SetLogGeneral(v bool) {
	o.LogGeneral = &v
}

// GetLogClient returns the LogClient field value if set, zero value otherwise.
func (o *GridDnsLoggingCategories) GetLogClient() bool {
	if o == nil || IsNil(o.LogClient) {
		var ret bool
		return ret
	}
	return *o.LogClient
}

// GetLogClientOk returns a tuple with the LogClient field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsLoggingCategories) GetLogClientOk() (*bool, bool) {
	if o == nil || IsNil(o.LogClient) {
		return nil, false
	}
	return o.LogClient, true
}

// HasLogClient returns a boolean if a field has been set.
func (o *GridDnsLoggingCategories) HasLogClient() bool {
	if o != nil && !IsNil(o.LogClient) {
		return true
	}

	return false
}

// SetLogClient gets a reference to the given bool and assigns it to the LogClient field.
func (o *GridDnsLoggingCategories) SetLogClient(v bool) {
	o.LogClient = &v
}

// GetLogConfig returns the LogConfig field value if set, zero value otherwise.
func (o *GridDnsLoggingCategories) GetLogConfig() bool {
	if o == nil || IsNil(o.LogConfig) {
		var ret bool
		return ret
	}
	return *o.LogConfig
}

// GetLogConfigOk returns a tuple with the LogConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsLoggingCategories) GetLogConfigOk() (*bool, bool) {
	if o == nil || IsNil(o.LogConfig) {
		return nil, false
	}
	return o.LogConfig, true
}

// HasLogConfig returns a boolean if a field has been set.
func (o *GridDnsLoggingCategories) HasLogConfig() bool {
	if o != nil && !IsNil(o.LogConfig) {
		return true
	}

	return false
}

// SetLogConfig gets a reference to the given bool and assigns it to the LogConfig field.
func (o *GridDnsLoggingCategories) SetLogConfig(v bool) {
	o.LogConfig = &v
}

// GetLogDatabase returns the LogDatabase field value if set, zero value otherwise.
func (o *GridDnsLoggingCategories) GetLogDatabase() bool {
	if o == nil || IsNil(o.LogDatabase) {
		var ret bool
		return ret
	}
	return *o.LogDatabase
}

// GetLogDatabaseOk returns a tuple with the LogDatabase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsLoggingCategories) GetLogDatabaseOk() (*bool, bool) {
	if o == nil || IsNil(o.LogDatabase) {
		return nil, false
	}
	return o.LogDatabase, true
}

// HasLogDatabase returns a boolean if a field has been set.
func (o *GridDnsLoggingCategories) HasLogDatabase() bool {
	if o != nil && !IsNil(o.LogDatabase) {
		return true
	}

	return false
}

// SetLogDatabase gets a reference to the given bool and assigns it to the LogDatabase field.
func (o *GridDnsLoggingCategories) SetLogDatabase(v bool) {
	o.LogDatabase = &v
}

// GetLogDnssec returns the LogDnssec field value if set, zero value otherwise.
func (o *GridDnsLoggingCategories) GetLogDnssec() bool {
	if o == nil || IsNil(o.LogDnssec) {
		var ret bool
		return ret
	}
	return *o.LogDnssec
}

// GetLogDnssecOk returns a tuple with the LogDnssec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsLoggingCategories) GetLogDnssecOk() (*bool, bool) {
	if o == nil || IsNil(o.LogDnssec) {
		return nil, false
	}
	return o.LogDnssec, true
}

// HasLogDnssec returns a boolean if a field has been set.
func (o *GridDnsLoggingCategories) HasLogDnssec() bool {
	if o != nil && !IsNil(o.LogDnssec) {
		return true
	}

	return false
}

// SetLogDnssec gets a reference to the given bool and assigns it to the LogDnssec field.
func (o *GridDnsLoggingCategories) SetLogDnssec(v bool) {
	o.LogDnssec = &v
}

// GetLogLameServers returns the LogLameServers field value if set, zero value otherwise.
func (o *GridDnsLoggingCategories) GetLogLameServers() bool {
	if o == nil || IsNil(o.LogLameServers) {
		var ret bool
		return ret
	}
	return *o.LogLameServers
}

// GetLogLameServersOk returns a tuple with the LogLameServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsLoggingCategories) GetLogLameServersOk() (*bool, bool) {
	if o == nil || IsNil(o.LogLameServers) {
		return nil, false
	}
	return o.LogLameServers, true
}

// HasLogLameServers returns a boolean if a field has been set.
func (o *GridDnsLoggingCategories) HasLogLameServers() bool {
	if o != nil && !IsNil(o.LogLameServers) {
		return true
	}

	return false
}

// SetLogLameServers gets a reference to the given bool and assigns it to the LogLameServers field.
func (o *GridDnsLoggingCategories) SetLogLameServers(v bool) {
	o.LogLameServers = &v
}

// GetLogNetwork returns the LogNetwork field value if set, zero value otherwise.
func (o *GridDnsLoggingCategories) GetLogNetwork() bool {
	if o == nil || IsNil(o.LogNetwork) {
		var ret bool
		return ret
	}
	return *o.LogNetwork
}

// GetLogNetworkOk returns a tuple with the LogNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsLoggingCategories) GetLogNetworkOk() (*bool, bool) {
	if o == nil || IsNil(o.LogNetwork) {
		return nil, false
	}
	return o.LogNetwork, true
}

// HasLogNetwork returns a boolean if a field has been set.
func (o *GridDnsLoggingCategories) HasLogNetwork() bool {
	if o != nil && !IsNil(o.LogNetwork) {
		return true
	}

	return false
}

// SetLogNetwork gets a reference to the given bool and assigns it to the LogNetwork field.
func (o *GridDnsLoggingCategories) SetLogNetwork(v bool) {
	o.LogNetwork = &v
}

// GetLogNotify returns the LogNotify field value if set, zero value otherwise.
func (o *GridDnsLoggingCategories) GetLogNotify() bool {
	if o == nil || IsNil(o.LogNotify) {
		var ret bool
		return ret
	}
	return *o.LogNotify
}

// GetLogNotifyOk returns a tuple with the LogNotify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsLoggingCategories) GetLogNotifyOk() (*bool, bool) {
	if o == nil || IsNil(o.LogNotify) {
		return nil, false
	}
	return o.LogNotify, true
}

// HasLogNotify returns a boolean if a field has been set.
func (o *GridDnsLoggingCategories) HasLogNotify() bool {
	if o != nil && !IsNil(o.LogNotify) {
		return true
	}

	return false
}

// SetLogNotify gets a reference to the given bool and assigns it to the LogNotify field.
func (o *GridDnsLoggingCategories) SetLogNotify(v bool) {
	o.LogNotify = &v
}

// GetLogQueries returns the LogQueries field value if set, zero value otherwise.
func (o *GridDnsLoggingCategories) GetLogQueries() bool {
	if o == nil || IsNil(o.LogQueries) {
		var ret bool
		return ret
	}
	return *o.LogQueries
}

// GetLogQueriesOk returns a tuple with the LogQueries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsLoggingCategories) GetLogQueriesOk() (*bool, bool) {
	if o == nil || IsNil(o.LogQueries) {
		return nil, false
	}
	return o.LogQueries, true
}

// HasLogQueries returns a boolean if a field has been set.
func (o *GridDnsLoggingCategories) HasLogQueries() bool {
	if o != nil && !IsNil(o.LogQueries) {
		return true
	}

	return false
}

// SetLogQueries gets a reference to the given bool and assigns it to the LogQueries field.
func (o *GridDnsLoggingCategories) SetLogQueries(v bool) {
	o.LogQueries = &v
}

// GetLogQueryRewrite returns the LogQueryRewrite field value if set, zero value otherwise.
func (o *GridDnsLoggingCategories) GetLogQueryRewrite() bool {
	if o == nil || IsNil(o.LogQueryRewrite) {
		var ret bool
		return ret
	}
	return *o.LogQueryRewrite
}

// GetLogQueryRewriteOk returns a tuple with the LogQueryRewrite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsLoggingCategories) GetLogQueryRewriteOk() (*bool, bool) {
	if o == nil || IsNil(o.LogQueryRewrite) {
		return nil, false
	}
	return o.LogQueryRewrite, true
}

// HasLogQueryRewrite returns a boolean if a field has been set.
func (o *GridDnsLoggingCategories) HasLogQueryRewrite() bool {
	if o != nil && !IsNil(o.LogQueryRewrite) {
		return true
	}

	return false
}

// SetLogQueryRewrite gets a reference to the given bool and assigns it to the LogQueryRewrite field.
func (o *GridDnsLoggingCategories) SetLogQueryRewrite(v bool) {
	o.LogQueryRewrite = &v
}

// GetLogResponses returns the LogResponses field value if set, zero value otherwise.
func (o *GridDnsLoggingCategories) GetLogResponses() bool {
	if o == nil || IsNil(o.LogResponses) {
		var ret bool
		return ret
	}
	return *o.LogResponses
}

// GetLogResponsesOk returns a tuple with the LogResponses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsLoggingCategories) GetLogResponsesOk() (*bool, bool) {
	if o == nil || IsNil(o.LogResponses) {
		return nil, false
	}
	return o.LogResponses, true
}

// HasLogResponses returns a boolean if a field has been set.
func (o *GridDnsLoggingCategories) HasLogResponses() bool {
	if o != nil && !IsNil(o.LogResponses) {
		return true
	}

	return false
}

// SetLogResponses gets a reference to the given bool and assigns it to the LogResponses field.
func (o *GridDnsLoggingCategories) SetLogResponses(v bool) {
	o.LogResponses = &v
}

// GetLogResolver returns the LogResolver field value if set, zero value otherwise.
func (o *GridDnsLoggingCategories) GetLogResolver() bool {
	if o == nil || IsNil(o.LogResolver) {
		var ret bool
		return ret
	}
	return *o.LogResolver
}

// GetLogResolverOk returns a tuple with the LogResolver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsLoggingCategories) GetLogResolverOk() (*bool, bool) {
	if o == nil || IsNil(o.LogResolver) {
		return nil, false
	}
	return o.LogResolver, true
}

// HasLogResolver returns a boolean if a field has been set.
func (o *GridDnsLoggingCategories) HasLogResolver() bool {
	if o != nil && !IsNil(o.LogResolver) {
		return true
	}

	return false
}

// SetLogResolver gets a reference to the given bool and assigns it to the LogResolver field.
func (o *GridDnsLoggingCategories) SetLogResolver(v bool) {
	o.LogResolver = &v
}

// GetLogSecurity returns the LogSecurity field value if set, zero value otherwise.
func (o *GridDnsLoggingCategories) GetLogSecurity() bool {
	if o == nil || IsNil(o.LogSecurity) {
		var ret bool
		return ret
	}
	return *o.LogSecurity
}

// GetLogSecurityOk returns a tuple with the LogSecurity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsLoggingCategories) GetLogSecurityOk() (*bool, bool) {
	if o == nil || IsNil(o.LogSecurity) {
		return nil, false
	}
	return o.LogSecurity, true
}

// HasLogSecurity returns a boolean if a field has been set.
func (o *GridDnsLoggingCategories) HasLogSecurity() bool {
	if o != nil && !IsNil(o.LogSecurity) {
		return true
	}

	return false
}

// SetLogSecurity gets a reference to the given bool and assigns it to the LogSecurity field.
func (o *GridDnsLoggingCategories) SetLogSecurity(v bool) {
	o.LogSecurity = &v
}

// GetLogUpdate returns the LogUpdate field value if set, zero value otherwise.
func (o *GridDnsLoggingCategories) GetLogUpdate() bool {
	if o == nil || IsNil(o.LogUpdate) {
		var ret bool
		return ret
	}
	return *o.LogUpdate
}

// GetLogUpdateOk returns a tuple with the LogUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsLoggingCategories) GetLogUpdateOk() (*bool, bool) {
	if o == nil || IsNil(o.LogUpdate) {
		return nil, false
	}
	return o.LogUpdate, true
}

// HasLogUpdate returns a boolean if a field has been set.
func (o *GridDnsLoggingCategories) HasLogUpdate() bool {
	if o != nil && !IsNil(o.LogUpdate) {
		return true
	}

	return false
}

// SetLogUpdate gets a reference to the given bool and assigns it to the LogUpdate field.
func (o *GridDnsLoggingCategories) SetLogUpdate(v bool) {
	o.LogUpdate = &v
}

// GetLogXferIn returns the LogXferIn field value if set, zero value otherwise.
func (o *GridDnsLoggingCategories) GetLogXferIn() bool {
	if o == nil || IsNil(o.LogXferIn) {
		var ret bool
		return ret
	}
	return *o.LogXferIn
}

// GetLogXferInOk returns a tuple with the LogXferIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsLoggingCategories) GetLogXferInOk() (*bool, bool) {
	if o == nil || IsNil(o.LogXferIn) {
		return nil, false
	}
	return o.LogXferIn, true
}

// HasLogXferIn returns a boolean if a field has been set.
func (o *GridDnsLoggingCategories) HasLogXferIn() bool {
	if o != nil && !IsNil(o.LogXferIn) {
		return true
	}

	return false
}

// SetLogXferIn gets a reference to the given bool and assigns it to the LogXferIn field.
func (o *GridDnsLoggingCategories) SetLogXferIn(v bool) {
	o.LogXferIn = &v
}

// GetLogXferOut returns the LogXferOut field value if set, zero value otherwise.
func (o *GridDnsLoggingCategories) GetLogXferOut() bool {
	if o == nil || IsNil(o.LogXferOut) {
		var ret bool
		return ret
	}
	return *o.LogXferOut
}

// GetLogXferOutOk returns a tuple with the LogXferOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsLoggingCategories) GetLogXferOutOk() (*bool, bool) {
	if o == nil || IsNil(o.LogXferOut) {
		return nil, false
	}
	return o.LogXferOut, true
}

// HasLogXferOut returns a boolean if a field has been set.
func (o *GridDnsLoggingCategories) HasLogXferOut() bool {
	if o != nil && !IsNil(o.LogXferOut) {
		return true
	}

	return false
}

// SetLogXferOut gets a reference to the given bool and assigns it to the LogXferOut field.
func (o *GridDnsLoggingCategories) SetLogXferOut(v bool) {
	o.LogXferOut = &v
}

// GetLogUpdateSecurity returns the LogUpdateSecurity field value if set, zero value otherwise.
func (o *GridDnsLoggingCategories) GetLogUpdateSecurity() bool {
	if o == nil || IsNil(o.LogUpdateSecurity) {
		var ret bool
		return ret
	}
	return *o.LogUpdateSecurity
}

// GetLogUpdateSecurityOk returns a tuple with the LogUpdateSecurity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsLoggingCategories) GetLogUpdateSecurityOk() (*bool, bool) {
	if o == nil || IsNil(o.LogUpdateSecurity) {
		return nil, false
	}
	return o.LogUpdateSecurity, true
}

// HasLogUpdateSecurity returns a boolean if a field has been set.
func (o *GridDnsLoggingCategories) HasLogUpdateSecurity() bool {
	if o != nil && !IsNil(o.LogUpdateSecurity) {
		return true
	}

	return false
}

// SetLogUpdateSecurity gets a reference to the given bool and assigns it to the LogUpdateSecurity field.
func (o *GridDnsLoggingCategories) SetLogUpdateSecurity(v bool) {
	o.LogUpdateSecurity = &v
}

// GetLogRateLimit returns the LogRateLimit field value if set, zero value otherwise.
func (o *GridDnsLoggingCategories) GetLogRateLimit() bool {
	if o == nil || IsNil(o.LogRateLimit) {
		var ret bool
		return ret
	}
	return *o.LogRateLimit
}

// GetLogRateLimitOk returns a tuple with the LogRateLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsLoggingCategories) GetLogRateLimitOk() (*bool, bool) {
	if o == nil || IsNil(o.LogRateLimit) {
		return nil, false
	}
	return o.LogRateLimit, true
}

// HasLogRateLimit returns a boolean if a field has been set.
func (o *GridDnsLoggingCategories) HasLogRateLimit() bool {
	if o != nil && !IsNil(o.LogRateLimit) {
		return true
	}

	return false
}

// SetLogRateLimit gets a reference to the given bool and assigns it to the LogRateLimit field.
func (o *GridDnsLoggingCategories) SetLogRateLimit(v bool) {
	o.LogRateLimit = &v
}

// GetLogRpz returns the LogRpz field value if set, zero value otherwise.
func (o *GridDnsLoggingCategories) GetLogRpz() bool {
	if o == nil || IsNil(o.LogRpz) {
		var ret bool
		return ret
	}
	return *o.LogRpz
}

// GetLogRpzOk returns a tuple with the LogRpz field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridDnsLoggingCategories) GetLogRpzOk() (*bool, bool) {
	if o == nil || IsNil(o.LogRpz) {
		return nil, false
	}
	return o.LogRpz, true
}

// HasLogRpz returns a boolean if a field has been set.
func (o *GridDnsLoggingCategories) HasLogRpz() bool {
	if o != nil && !IsNil(o.LogRpz) {
		return true
	}

	return false
}

// SetLogRpz gets a reference to the given bool and assigns it to the LogRpz field.
func (o *GridDnsLoggingCategories) SetLogRpz(v bool) {
	o.LogRpz = &v
}

func (o GridDnsLoggingCategories) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GridDnsLoggingCategories) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LogDtcGslb) {
		toSerialize["log_dtc_gslb"] = o.LogDtcGslb
	}
	if !IsNil(o.LogDtcHealth) {
		toSerialize["log_dtc_health"] = o.LogDtcHealth
	}
	if !IsNil(o.LogGeneral) {
		toSerialize["log_general"] = o.LogGeneral
	}
	if !IsNil(o.LogClient) {
		toSerialize["log_client"] = o.LogClient
	}
	if !IsNil(o.LogConfig) {
		toSerialize["log_config"] = o.LogConfig
	}
	if !IsNil(o.LogDatabase) {
		toSerialize["log_database"] = o.LogDatabase
	}
	if !IsNil(o.LogDnssec) {
		toSerialize["log_dnssec"] = o.LogDnssec
	}
	if !IsNil(o.LogLameServers) {
		toSerialize["log_lame_servers"] = o.LogLameServers
	}
	if !IsNil(o.LogNetwork) {
		toSerialize["log_network"] = o.LogNetwork
	}
	if !IsNil(o.LogNotify) {
		toSerialize["log_notify"] = o.LogNotify
	}
	if !IsNil(o.LogQueries) {
		toSerialize["log_queries"] = o.LogQueries
	}
	if !IsNil(o.LogQueryRewrite) {
		toSerialize["log_query_rewrite"] = o.LogQueryRewrite
	}
	if !IsNil(o.LogResponses) {
		toSerialize["log_responses"] = o.LogResponses
	}
	if !IsNil(o.LogResolver) {
		toSerialize["log_resolver"] = o.LogResolver
	}
	if !IsNil(o.LogSecurity) {
		toSerialize["log_security"] = o.LogSecurity
	}
	if !IsNil(o.LogUpdate) {
		toSerialize["log_update"] = o.LogUpdate
	}
	if !IsNil(o.LogXferIn) {
		toSerialize["log_xfer_in"] = o.LogXferIn
	}
	if !IsNil(o.LogXferOut) {
		toSerialize["log_xfer_out"] = o.LogXferOut
	}
	if !IsNil(o.LogUpdateSecurity) {
		toSerialize["log_update_security"] = o.LogUpdateSecurity
	}
	if !IsNil(o.LogRateLimit) {
		toSerialize["log_rate_limit"] = o.LogRateLimit
	}
	if !IsNil(o.LogRpz) {
		toSerialize["log_rpz"] = o.LogRpz
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GridDnsLoggingCategories) UnmarshalJSON(data []byte) (err error) {
	varGridDnsLoggingCategories := _GridDnsLoggingCategories{}

	err = json.Unmarshal(data, &varGridDnsLoggingCategories)

	if err != nil {
		return err
	}

	*o = GridDnsLoggingCategories(varGridDnsLoggingCategories)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "log_dtc_gslb")
		delete(additionalProperties, "log_dtc_health")
		delete(additionalProperties, "log_general")
		delete(additionalProperties, "log_client")
		delete(additionalProperties, "log_config")
		delete(additionalProperties, "log_database")
		delete(additionalProperties, "log_dnssec")
		delete(additionalProperties, "log_lame_servers")
		delete(additionalProperties, "log_network")
		delete(additionalProperties, "log_notify")
		delete(additionalProperties, "log_queries")
		delete(additionalProperties, "log_query_rewrite")
		delete(additionalProperties, "log_responses")
		delete(additionalProperties, "log_resolver")
		delete(additionalProperties, "log_security")
		delete(additionalProperties, "log_update")
		delete(additionalProperties, "log_xfer_in")
		delete(additionalProperties, "log_xfer_out")
		delete(additionalProperties, "log_update_security")
		delete(additionalProperties, "log_rate_limit")
		delete(additionalProperties, "log_rpz")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGridDnsLoggingCategories struct {
	value *GridDnsLoggingCategories
	isSet bool
}

func (v NullableGridDnsLoggingCategories) Get() *GridDnsLoggingCategories {
	return v.value
}

func (v *NullableGridDnsLoggingCategories) Set(val *GridDnsLoggingCategories) {
	v.value = val
	v.isSet = true
}

func (v NullableGridDnsLoggingCategories) IsSet() bool {
	return v.isSet
}

func (v *NullableGridDnsLoggingCategories) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGridDnsLoggingCategories(val *GridDnsLoggingCategories) *NullableGridDnsLoggingCategories {
	return &NullableGridDnsLoggingCategories{value: val, isSet: true}
}

func (v NullableGridDnsLoggingCategories) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGridDnsLoggingCategories) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
