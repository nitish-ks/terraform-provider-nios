/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the GridFiledistribution type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GridFiledistribution{}

// GridFiledistribution struct for GridFiledistribution
type GridFiledistribution struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// Determines whether the uploads to Grid members are allowed.
	AllowUploads *bool `json:"allow_uploads,omitempty"`
	// Determines whether to include distributed files in the backup.
	BackupStorage *bool `json:"backup_storage,omitempty"`
	// The value is the percentage of the allocated TFTP storage space that is used, expressed in tenth of a percent. Valid values are from 0 to 1000.
	CurrentUsage *int64 `json:"current_usage,omitempty"`
	// Determines whether the FTP anonymous login is enabled.
	EnableAnonymousFtp *bool `json:"enable_anonymous_ftp,omitempty"`
	// The Grid file distribution global status.
	GlobalStatus *string `json:"global_status,omitempty"`
	// The Grid name.
	Name *string `json:"name,omitempty"`
	// Maximum storage in megabytes allowed on the Grid. The maximum storage space allowed for all file distribution services on a Grid is equal to the storage space allowed to the Grid member with the smallest amount of space allowed.
	StorageLimit *int64 `json:"storage_limit,omitempty"`
}

// NewGridFiledistribution instantiates a new GridFiledistribution object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGridFiledistribution() *GridFiledistribution {
	this := GridFiledistribution{}
	return &this
}

// NewGridFiledistributionWithDefaults instantiates a new GridFiledistribution object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGridFiledistributionWithDefaults() *GridFiledistribution {
	this := GridFiledistribution{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *GridFiledistribution) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridFiledistribution) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *GridFiledistribution) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *GridFiledistribution) SetRef(v string) {
	o.Ref = &v
}

// GetAllowUploads returns the AllowUploads field value if set, zero value otherwise.
func (o *GridFiledistribution) GetAllowUploads() bool {
	if o == nil || IsNil(o.AllowUploads) {
		var ret bool
		return ret
	}
	return *o.AllowUploads
}

// GetAllowUploadsOk returns a tuple with the AllowUploads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridFiledistribution) GetAllowUploadsOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowUploads) {
		return nil, false
	}
	return o.AllowUploads, true
}

// HasAllowUploads returns a boolean if a field has been set.
func (o *GridFiledistribution) HasAllowUploads() bool {
	if o != nil && !IsNil(o.AllowUploads) {
		return true
	}

	return false
}

// SetAllowUploads gets a reference to the given bool and assigns it to the AllowUploads field.
func (o *GridFiledistribution) SetAllowUploads(v bool) {
	o.AllowUploads = &v
}

// GetBackupStorage returns the BackupStorage field value if set, zero value otherwise.
func (o *GridFiledistribution) GetBackupStorage() bool {
	if o == nil || IsNil(o.BackupStorage) {
		var ret bool
		return ret
	}
	return *o.BackupStorage
}

// GetBackupStorageOk returns a tuple with the BackupStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridFiledistribution) GetBackupStorageOk() (*bool, bool) {
	if o == nil || IsNil(o.BackupStorage) {
		return nil, false
	}
	return o.BackupStorage, true
}

// HasBackupStorage returns a boolean if a field has been set.
func (o *GridFiledistribution) HasBackupStorage() bool {
	if o != nil && !IsNil(o.BackupStorage) {
		return true
	}

	return false
}

// SetBackupStorage gets a reference to the given bool and assigns it to the BackupStorage field.
func (o *GridFiledistribution) SetBackupStorage(v bool) {
	o.BackupStorage = &v
}

// GetCurrentUsage returns the CurrentUsage field value if set, zero value otherwise.
func (o *GridFiledistribution) GetCurrentUsage() int64 {
	if o == nil || IsNil(o.CurrentUsage) {
		var ret int64
		return ret
	}
	return *o.CurrentUsage
}

// GetCurrentUsageOk returns a tuple with the CurrentUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridFiledistribution) GetCurrentUsageOk() (*int64, bool) {
	if o == nil || IsNil(o.CurrentUsage) {
		return nil, false
	}
	return o.CurrentUsage, true
}

// HasCurrentUsage returns a boolean if a field has been set.
func (o *GridFiledistribution) HasCurrentUsage() bool {
	if o != nil && !IsNil(o.CurrentUsage) {
		return true
	}

	return false
}

// SetCurrentUsage gets a reference to the given int64 and assigns it to the CurrentUsage field.
func (o *GridFiledistribution) SetCurrentUsage(v int64) {
	o.CurrentUsage = &v
}

// GetEnableAnonymousFtp returns the EnableAnonymousFtp field value if set, zero value otherwise.
func (o *GridFiledistribution) GetEnableAnonymousFtp() bool {
	if o == nil || IsNil(o.EnableAnonymousFtp) {
		var ret bool
		return ret
	}
	return *o.EnableAnonymousFtp
}

// GetEnableAnonymousFtpOk returns a tuple with the EnableAnonymousFtp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridFiledistribution) GetEnableAnonymousFtpOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableAnonymousFtp) {
		return nil, false
	}
	return o.EnableAnonymousFtp, true
}

// HasEnableAnonymousFtp returns a boolean if a field has been set.
func (o *GridFiledistribution) HasEnableAnonymousFtp() bool {
	if o != nil && !IsNil(o.EnableAnonymousFtp) {
		return true
	}

	return false
}

// SetEnableAnonymousFtp gets a reference to the given bool and assigns it to the EnableAnonymousFtp field.
func (o *GridFiledistribution) SetEnableAnonymousFtp(v bool) {
	o.EnableAnonymousFtp = &v
}

// GetGlobalStatus returns the GlobalStatus field value if set, zero value otherwise.
func (o *GridFiledistribution) GetGlobalStatus() string {
	if o == nil || IsNil(o.GlobalStatus) {
		var ret string
		return ret
	}
	return *o.GlobalStatus
}

// GetGlobalStatusOk returns a tuple with the GlobalStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridFiledistribution) GetGlobalStatusOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalStatus) {
		return nil, false
	}
	return o.GlobalStatus, true
}

// HasGlobalStatus returns a boolean if a field has been set.
func (o *GridFiledistribution) HasGlobalStatus() bool {
	if o != nil && !IsNil(o.GlobalStatus) {
		return true
	}

	return false
}

// SetGlobalStatus gets a reference to the given string and assigns it to the GlobalStatus field.
func (o *GridFiledistribution) SetGlobalStatus(v string) {
	o.GlobalStatus = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GridFiledistribution) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridFiledistribution) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GridFiledistribution) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GridFiledistribution) SetName(v string) {
	o.Name = &v
}

// GetStorageLimit returns the StorageLimit field value if set, zero value otherwise.
func (o *GridFiledistribution) GetStorageLimit() int64 {
	if o == nil || IsNil(o.StorageLimit) {
		var ret int64
		return ret
	}
	return *o.StorageLimit
}

// GetStorageLimitOk returns a tuple with the StorageLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridFiledistribution) GetStorageLimitOk() (*int64, bool) {
	if o == nil || IsNil(o.StorageLimit) {
		return nil, false
	}
	return o.StorageLimit, true
}

// HasStorageLimit returns a boolean if a field has been set.
func (o *GridFiledistribution) HasStorageLimit() bool {
	if o != nil && !IsNil(o.StorageLimit) {
		return true
	}

	return false
}

// SetStorageLimit gets a reference to the given int64 and assigns it to the StorageLimit field.
func (o *GridFiledistribution) SetStorageLimit(v int64) {
	o.StorageLimit = &v
}

func (o GridFiledistribution) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GridFiledistribution) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.AllowUploads) {
		toSerialize["allow_uploads"] = o.AllowUploads
	}
	if !IsNil(o.BackupStorage) {
		toSerialize["backup_storage"] = o.BackupStorage
	}
	if !IsNil(o.CurrentUsage) {
		toSerialize["current_usage"] = o.CurrentUsage
	}
	if !IsNil(o.EnableAnonymousFtp) {
		toSerialize["enable_anonymous_ftp"] = o.EnableAnonymousFtp
	}
	if !IsNil(o.GlobalStatus) {
		toSerialize["global_status"] = o.GlobalStatus
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.StorageLimit) {
		toSerialize["storage_limit"] = o.StorageLimit
	}
	return toSerialize, nil
}

type NullableGridFiledistribution struct {
	value *GridFiledistribution
	isSet bool
}

func (v NullableGridFiledistribution) Get() *GridFiledistribution {
	return v.value
}

func (v *NullableGridFiledistribution) Set(val *GridFiledistribution) {
	v.value = val
	v.isSet = true
}

func (v NullableGridFiledistribution) IsSet() bool {
	return v.isSet
}

func (v *NullableGridFiledistribution) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGridFiledistribution(val *GridFiledistribution) *NullableGridFiledistribution {
	return &NullableGridFiledistribution{value: val, isSet: true}
}

func (v NullableGridFiledistribution) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGridFiledistribution) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
