/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the GridThreatinsight type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GridThreatinsight{}

// GridThreatinsight struct for GridThreatinsight
type GridThreatinsight struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// allowlist update policy (manual or automatic)
	AllowlistUpdatePolicy *string `json:"allowlist_update_policy,omitempty"`
	// Disable domain collapsing at grid level
	ConfigureDomainCollapsing *bool `json:"configure_domain_collapsing,omitempty"`
	// The Grid allowlist.
	CurrentAllowlist *string `json:"current_allowlist,omitempty"`
	// The current threat insight module set.
	CurrentModuleset *string `json:"current_moduleset,omitempty"`
	// The list of response policy zones for DNS tunnelling requests.
	DnsTunnelBlockListRpzZones []string `json:"dns_tunnel_block_list_rpz_zones,omitempty"`
	// Level of domain collapsing
	DomainCollapsingLevel *int64 `json:"domain_collapsing_level,omitempty"`
	// Indicates whether auto download service is enabled
	EnableAllowlistAutoDownload *bool `json:"enable_allowlist_auto_download,omitempty"`
	// Indicates whether the custom scheduled settings for auto download is enabled. If false then default frequency is once per 24 hours
	EnableAllowlistScheduledDownload *bool `json:"enable_allowlist_scheduled_download,omitempty"`
	// Determines whether the automatic threat insight module set download is enabled.
	EnableAutoDownload *bool `json:"enable_auto_download,omitempty"`
	// Determines whether the scheduled download of the threat insight module set is enabled.
	EnableScheduledDownload *bool `json:"enable_scheduled_download,omitempty"`
	// The last update time for the threat insight allowlist.
	LastAllowlistUpdateTime *int64 `json:"last_allowlist_update_time,omitempty"`
	// The version number of the last updated threat insight allowlist.
	LastAllowlistUpdateVersion *string `json:"last_allowlist_update_version,omitempty"`
	// Timestamp of last checked allowlist
	LastCheckedForAllowlistUpdate *int64 `json:"last_checked_for_allowlist_update,omitempty"`
	// The last update time for the threat analytics moduleset package.
	LastCheckedForPackageUpdate *int64 `json:"last_checked_for_package_update,omitempty"`
	// The last time when the threat insight module set was checked for the update.
	LastCheckedForUpdate *int64 `json:"last_checked_for_update,omitempty"`
	// The last update time for the threat insight module set.
	LastModuleUpdateTime *int64 `json:"last_module_update_time,omitempty"`
	// The version number of the last updated threat insight module set.
	LastModuleUpdateVersion *string `json:"last_module_update_version,omitempty"`
	// The version number of the last updated Moduleset package.
	LastUpdatedPackageVersion *string `json:"last_updated_package_version,omitempty"`
	// The update policy for the threat insight module set.
	ModuleUpdatePolicy *string `json:"module_update_policy,omitempty"`
	// The Grid name.
	Name                       *string                                      `json:"name,omitempty"`
	ScheduledAllowlistDownload *GridThreatinsightScheduledAllowlistDownload `json:"scheduled_allowlist_download,omitempty"`
	ScheduledDownload          *GridThreatinsightScheduledDownload          `json:"scheduled_download,omitempty"`
}

// NewGridThreatinsight instantiates a new GridThreatinsight object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGridThreatinsight() *GridThreatinsight {
	this := GridThreatinsight{}
	return &this
}

// NewGridThreatinsightWithDefaults instantiates a new GridThreatinsight object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGridThreatinsightWithDefaults() *GridThreatinsight {
	this := GridThreatinsight{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *GridThreatinsight) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatinsight) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *GridThreatinsight) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *GridThreatinsight) SetRef(v string) {
	o.Ref = &v
}

// GetAllowlistUpdatePolicy returns the AllowlistUpdatePolicy field value if set, zero value otherwise.
func (o *GridThreatinsight) GetAllowlistUpdatePolicy() string {
	if o == nil || IsNil(o.AllowlistUpdatePolicy) {
		var ret string
		return ret
	}
	return *o.AllowlistUpdatePolicy
}

// GetAllowlistUpdatePolicyOk returns a tuple with the AllowlistUpdatePolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatinsight) GetAllowlistUpdatePolicyOk() (*string, bool) {
	if o == nil || IsNil(o.AllowlistUpdatePolicy) {
		return nil, false
	}
	return o.AllowlistUpdatePolicy, true
}

// HasAllowlistUpdatePolicy returns a boolean if a field has been set.
func (o *GridThreatinsight) HasAllowlistUpdatePolicy() bool {
	if o != nil && !IsNil(o.AllowlistUpdatePolicy) {
		return true
	}

	return false
}

// SetAllowlistUpdatePolicy gets a reference to the given string and assigns it to the AllowlistUpdatePolicy field.
func (o *GridThreatinsight) SetAllowlistUpdatePolicy(v string) {
	o.AllowlistUpdatePolicy = &v
}

// GetConfigureDomainCollapsing returns the ConfigureDomainCollapsing field value if set, zero value otherwise.
func (o *GridThreatinsight) GetConfigureDomainCollapsing() bool {
	if o == nil || IsNil(o.ConfigureDomainCollapsing) {
		var ret bool
		return ret
	}
	return *o.ConfigureDomainCollapsing
}

// GetConfigureDomainCollapsingOk returns a tuple with the ConfigureDomainCollapsing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatinsight) GetConfigureDomainCollapsingOk() (*bool, bool) {
	if o == nil || IsNil(o.ConfigureDomainCollapsing) {
		return nil, false
	}
	return o.ConfigureDomainCollapsing, true
}

// HasConfigureDomainCollapsing returns a boolean if a field has been set.
func (o *GridThreatinsight) HasConfigureDomainCollapsing() bool {
	if o != nil && !IsNil(o.ConfigureDomainCollapsing) {
		return true
	}

	return false
}

// SetConfigureDomainCollapsing gets a reference to the given bool and assigns it to the ConfigureDomainCollapsing field.
func (o *GridThreatinsight) SetConfigureDomainCollapsing(v bool) {
	o.ConfigureDomainCollapsing = &v
}

// GetCurrentAllowlist returns the CurrentAllowlist field value if set, zero value otherwise.
func (o *GridThreatinsight) GetCurrentAllowlist() string {
	if o == nil || IsNil(o.CurrentAllowlist) {
		var ret string
		return ret
	}
	return *o.CurrentAllowlist
}

// GetCurrentAllowlistOk returns a tuple with the CurrentAllowlist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatinsight) GetCurrentAllowlistOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentAllowlist) {
		return nil, false
	}
	return o.CurrentAllowlist, true
}

// HasCurrentAllowlist returns a boolean if a field has been set.
func (o *GridThreatinsight) HasCurrentAllowlist() bool {
	if o != nil && !IsNil(o.CurrentAllowlist) {
		return true
	}

	return false
}

// SetCurrentAllowlist gets a reference to the given string and assigns it to the CurrentAllowlist field.
func (o *GridThreatinsight) SetCurrentAllowlist(v string) {
	o.CurrentAllowlist = &v
}

// GetCurrentModuleset returns the CurrentModuleset field value if set, zero value otherwise.
func (o *GridThreatinsight) GetCurrentModuleset() string {
	if o == nil || IsNil(o.CurrentModuleset) {
		var ret string
		return ret
	}
	return *o.CurrentModuleset
}

// GetCurrentModulesetOk returns a tuple with the CurrentModuleset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatinsight) GetCurrentModulesetOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentModuleset) {
		return nil, false
	}
	return o.CurrentModuleset, true
}

// HasCurrentModuleset returns a boolean if a field has been set.
func (o *GridThreatinsight) HasCurrentModuleset() bool {
	if o != nil && !IsNil(o.CurrentModuleset) {
		return true
	}

	return false
}

// SetCurrentModuleset gets a reference to the given string and assigns it to the CurrentModuleset field.
func (o *GridThreatinsight) SetCurrentModuleset(v string) {
	o.CurrentModuleset = &v
}

// GetDnsTunnelBlockListRpzZones returns the DnsTunnelBlockListRpzZones field value if set, zero value otherwise.
func (o *GridThreatinsight) GetDnsTunnelBlockListRpzZones() []string {
	if o == nil || IsNil(o.DnsTunnelBlockListRpzZones) {
		var ret []string
		return ret
	}
	return o.DnsTunnelBlockListRpzZones
}

// GetDnsTunnelBlockListRpzZonesOk returns a tuple with the DnsTunnelBlockListRpzZones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatinsight) GetDnsTunnelBlockListRpzZonesOk() ([]string, bool) {
	if o == nil || IsNil(o.DnsTunnelBlockListRpzZones) {
		return nil, false
	}
	return o.DnsTunnelBlockListRpzZones, true
}

// HasDnsTunnelBlockListRpzZones returns a boolean if a field has been set.
func (o *GridThreatinsight) HasDnsTunnelBlockListRpzZones() bool {
	if o != nil && !IsNil(o.DnsTunnelBlockListRpzZones) {
		return true
	}

	return false
}

// SetDnsTunnelBlockListRpzZones gets a reference to the given []string and assigns it to the DnsTunnelBlockListRpzZones field.
func (o *GridThreatinsight) SetDnsTunnelBlockListRpzZones(v []string) {
	o.DnsTunnelBlockListRpzZones = v
}

// GetDomainCollapsingLevel returns the DomainCollapsingLevel field value if set, zero value otherwise.
func (o *GridThreatinsight) GetDomainCollapsingLevel() int64 {
	if o == nil || IsNil(o.DomainCollapsingLevel) {
		var ret int64
		return ret
	}
	return *o.DomainCollapsingLevel
}

// GetDomainCollapsingLevelOk returns a tuple with the DomainCollapsingLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatinsight) GetDomainCollapsingLevelOk() (*int64, bool) {
	if o == nil || IsNil(o.DomainCollapsingLevel) {
		return nil, false
	}
	return o.DomainCollapsingLevel, true
}

// HasDomainCollapsingLevel returns a boolean if a field has been set.
func (o *GridThreatinsight) HasDomainCollapsingLevel() bool {
	if o != nil && !IsNil(o.DomainCollapsingLevel) {
		return true
	}

	return false
}

// SetDomainCollapsingLevel gets a reference to the given int64 and assigns it to the DomainCollapsingLevel field.
func (o *GridThreatinsight) SetDomainCollapsingLevel(v int64) {
	o.DomainCollapsingLevel = &v
}

// GetEnableAllowlistAutoDownload returns the EnableAllowlistAutoDownload field value if set, zero value otherwise.
func (o *GridThreatinsight) GetEnableAllowlistAutoDownload() bool {
	if o == nil || IsNil(o.EnableAllowlistAutoDownload) {
		var ret bool
		return ret
	}
	return *o.EnableAllowlistAutoDownload
}

// GetEnableAllowlistAutoDownloadOk returns a tuple with the EnableAllowlistAutoDownload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatinsight) GetEnableAllowlistAutoDownloadOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableAllowlistAutoDownload) {
		return nil, false
	}
	return o.EnableAllowlistAutoDownload, true
}

// HasEnableAllowlistAutoDownload returns a boolean if a field has been set.
func (o *GridThreatinsight) HasEnableAllowlistAutoDownload() bool {
	if o != nil && !IsNil(o.EnableAllowlistAutoDownload) {
		return true
	}

	return false
}

// SetEnableAllowlistAutoDownload gets a reference to the given bool and assigns it to the EnableAllowlistAutoDownload field.
func (o *GridThreatinsight) SetEnableAllowlistAutoDownload(v bool) {
	o.EnableAllowlistAutoDownload = &v
}

// GetEnableAllowlistScheduledDownload returns the EnableAllowlistScheduledDownload field value if set, zero value otherwise.
func (o *GridThreatinsight) GetEnableAllowlistScheduledDownload() bool {
	if o == nil || IsNil(o.EnableAllowlistScheduledDownload) {
		var ret bool
		return ret
	}
	return *o.EnableAllowlistScheduledDownload
}

// GetEnableAllowlistScheduledDownloadOk returns a tuple with the EnableAllowlistScheduledDownload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatinsight) GetEnableAllowlistScheduledDownloadOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableAllowlistScheduledDownload) {
		return nil, false
	}
	return o.EnableAllowlistScheduledDownload, true
}

// HasEnableAllowlistScheduledDownload returns a boolean if a field has been set.
func (o *GridThreatinsight) HasEnableAllowlistScheduledDownload() bool {
	if o != nil && !IsNil(o.EnableAllowlistScheduledDownload) {
		return true
	}

	return false
}

// SetEnableAllowlistScheduledDownload gets a reference to the given bool and assigns it to the EnableAllowlistScheduledDownload field.
func (o *GridThreatinsight) SetEnableAllowlistScheduledDownload(v bool) {
	o.EnableAllowlistScheduledDownload = &v
}

// GetEnableAutoDownload returns the EnableAutoDownload field value if set, zero value otherwise.
func (o *GridThreatinsight) GetEnableAutoDownload() bool {
	if o == nil || IsNil(o.EnableAutoDownload) {
		var ret bool
		return ret
	}
	return *o.EnableAutoDownload
}

// GetEnableAutoDownloadOk returns a tuple with the EnableAutoDownload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatinsight) GetEnableAutoDownloadOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableAutoDownload) {
		return nil, false
	}
	return o.EnableAutoDownload, true
}

// HasEnableAutoDownload returns a boolean if a field has been set.
func (o *GridThreatinsight) HasEnableAutoDownload() bool {
	if o != nil && !IsNil(o.EnableAutoDownload) {
		return true
	}

	return false
}

// SetEnableAutoDownload gets a reference to the given bool and assigns it to the EnableAutoDownload field.
func (o *GridThreatinsight) SetEnableAutoDownload(v bool) {
	o.EnableAutoDownload = &v
}

// GetEnableScheduledDownload returns the EnableScheduledDownload field value if set, zero value otherwise.
func (o *GridThreatinsight) GetEnableScheduledDownload() bool {
	if o == nil || IsNil(o.EnableScheduledDownload) {
		var ret bool
		return ret
	}
	return *o.EnableScheduledDownload
}

// GetEnableScheduledDownloadOk returns a tuple with the EnableScheduledDownload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatinsight) GetEnableScheduledDownloadOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableScheduledDownload) {
		return nil, false
	}
	return o.EnableScheduledDownload, true
}

// HasEnableScheduledDownload returns a boolean if a field has been set.
func (o *GridThreatinsight) HasEnableScheduledDownload() bool {
	if o != nil && !IsNil(o.EnableScheduledDownload) {
		return true
	}

	return false
}

// SetEnableScheduledDownload gets a reference to the given bool and assigns it to the EnableScheduledDownload field.
func (o *GridThreatinsight) SetEnableScheduledDownload(v bool) {
	o.EnableScheduledDownload = &v
}

// GetLastAllowlistUpdateTime returns the LastAllowlistUpdateTime field value if set, zero value otherwise.
func (o *GridThreatinsight) GetLastAllowlistUpdateTime() int64 {
	if o == nil || IsNil(o.LastAllowlistUpdateTime) {
		var ret int64
		return ret
	}
	return *o.LastAllowlistUpdateTime
}

// GetLastAllowlistUpdateTimeOk returns a tuple with the LastAllowlistUpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatinsight) GetLastAllowlistUpdateTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.LastAllowlistUpdateTime) {
		return nil, false
	}
	return o.LastAllowlistUpdateTime, true
}

// HasLastAllowlistUpdateTime returns a boolean if a field has been set.
func (o *GridThreatinsight) HasLastAllowlistUpdateTime() bool {
	if o != nil && !IsNil(o.LastAllowlistUpdateTime) {
		return true
	}

	return false
}

// SetLastAllowlistUpdateTime gets a reference to the given int64 and assigns it to the LastAllowlistUpdateTime field.
func (o *GridThreatinsight) SetLastAllowlistUpdateTime(v int64) {
	o.LastAllowlistUpdateTime = &v
}

// GetLastAllowlistUpdateVersion returns the LastAllowlistUpdateVersion field value if set, zero value otherwise.
func (o *GridThreatinsight) GetLastAllowlistUpdateVersion() string {
	if o == nil || IsNil(o.LastAllowlistUpdateVersion) {
		var ret string
		return ret
	}
	return *o.LastAllowlistUpdateVersion
}

// GetLastAllowlistUpdateVersionOk returns a tuple with the LastAllowlistUpdateVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatinsight) GetLastAllowlistUpdateVersionOk() (*string, bool) {
	if o == nil || IsNil(o.LastAllowlistUpdateVersion) {
		return nil, false
	}
	return o.LastAllowlistUpdateVersion, true
}

// HasLastAllowlistUpdateVersion returns a boolean if a field has been set.
func (o *GridThreatinsight) HasLastAllowlistUpdateVersion() bool {
	if o != nil && !IsNil(o.LastAllowlistUpdateVersion) {
		return true
	}

	return false
}

// SetLastAllowlistUpdateVersion gets a reference to the given string and assigns it to the LastAllowlistUpdateVersion field.
func (o *GridThreatinsight) SetLastAllowlistUpdateVersion(v string) {
	o.LastAllowlistUpdateVersion = &v
}

// GetLastCheckedForAllowlistUpdate returns the LastCheckedForAllowlistUpdate field value if set, zero value otherwise.
func (o *GridThreatinsight) GetLastCheckedForAllowlistUpdate() int64 {
	if o == nil || IsNil(o.LastCheckedForAllowlistUpdate) {
		var ret int64
		return ret
	}
	return *o.LastCheckedForAllowlistUpdate
}

// GetLastCheckedForAllowlistUpdateOk returns a tuple with the LastCheckedForAllowlistUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatinsight) GetLastCheckedForAllowlistUpdateOk() (*int64, bool) {
	if o == nil || IsNil(o.LastCheckedForAllowlistUpdate) {
		return nil, false
	}
	return o.LastCheckedForAllowlistUpdate, true
}

// HasLastCheckedForAllowlistUpdate returns a boolean if a field has been set.
func (o *GridThreatinsight) HasLastCheckedForAllowlistUpdate() bool {
	if o != nil && !IsNil(o.LastCheckedForAllowlistUpdate) {
		return true
	}

	return false
}

// SetLastCheckedForAllowlistUpdate gets a reference to the given int64 and assigns it to the LastCheckedForAllowlistUpdate field.
func (o *GridThreatinsight) SetLastCheckedForAllowlistUpdate(v int64) {
	o.LastCheckedForAllowlistUpdate = &v
}

// GetLastCheckedForPackageUpdate returns the LastCheckedForPackageUpdate field value if set, zero value otherwise.
func (o *GridThreatinsight) GetLastCheckedForPackageUpdate() int64 {
	if o == nil || IsNil(o.LastCheckedForPackageUpdate) {
		var ret int64
		return ret
	}
	return *o.LastCheckedForPackageUpdate
}

// GetLastCheckedForPackageUpdateOk returns a tuple with the LastCheckedForPackageUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatinsight) GetLastCheckedForPackageUpdateOk() (*int64, bool) {
	if o == nil || IsNil(o.LastCheckedForPackageUpdate) {
		return nil, false
	}
	return o.LastCheckedForPackageUpdate, true
}

// HasLastCheckedForPackageUpdate returns a boolean if a field has been set.
func (o *GridThreatinsight) HasLastCheckedForPackageUpdate() bool {
	if o != nil && !IsNil(o.LastCheckedForPackageUpdate) {
		return true
	}

	return false
}

// SetLastCheckedForPackageUpdate gets a reference to the given int64 and assigns it to the LastCheckedForPackageUpdate field.
func (o *GridThreatinsight) SetLastCheckedForPackageUpdate(v int64) {
	o.LastCheckedForPackageUpdate = &v
}

// GetLastCheckedForUpdate returns the LastCheckedForUpdate field value if set, zero value otherwise.
func (o *GridThreatinsight) GetLastCheckedForUpdate() int64 {
	if o == nil || IsNil(o.LastCheckedForUpdate) {
		var ret int64
		return ret
	}
	return *o.LastCheckedForUpdate
}

// GetLastCheckedForUpdateOk returns a tuple with the LastCheckedForUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatinsight) GetLastCheckedForUpdateOk() (*int64, bool) {
	if o == nil || IsNil(o.LastCheckedForUpdate) {
		return nil, false
	}
	return o.LastCheckedForUpdate, true
}

// HasLastCheckedForUpdate returns a boolean if a field has been set.
func (o *GridThreatinsight) HasLastCheckedForUpdate() bool {
	if o != nil && !IsNil(o.LastCheckedForUpdate) {
		return true
	}

	return false
}

// SetLastCheckedForUpdate gets a reference to the given int64 and assigns it to the LastCheckedForUpdate field.
func (o *GridThreatinsight) SetLastCheckedForUpdate(v int64) {
	o.LastCheckedForUpdate = &v
}

// GetLastModuleUpdateTime returns the LastModuleUpdateTime field value if set, zero value otherwise.
func (o *GridThreatinsight) GetLastModuleUpdateTime() int64 {
	if o == nil || IsNil(o.LastModuleUpdateTime) {
		var ret int64
		return ret
	}
	return *o.LastModuleUpdateTime
}

// GetLastModuleUpdateTimeOk returns a tuple with the LastModuleUpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatinsight) GetLastModuleUpdateTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.LastModuleUpdateTime) {
		return nil, false
	}
	return o.LastModuleUpdateTime, true
}

// HasLastModuleUpdateTime returns a boolean if a field has been set.
func (o *GridThreatinsight) HasLastModuleUpdateTime() bool {
	if o != nil && !IsNil(o.LastModuleUpdateTime) {
		return true
	}

	return false
}

// SetLastModuleUpdateTime gets a reference to the given int64 and assigns it to the LastModuleUpdateTime field.
func (o *GridThreatinsight) SetLastModuleUpdateTime(v int64) {
	o.LastModuleUpdateTime = &v
}

// GetLastModuleUpdateVersion returns the LastModuleUpdateVersion field value if set, zero value otherwise.
func (o *GridThreatinsight) GetLastModuleUpdateVersion() string {
	if o == nil || IsNil(o.LastModuleUpdateVersion) {
		var ret string
		return ret
	}
	return *o.LastModuleUpdateVersion
}

// GetLastModuleUpdateVersionOk returns a tuple with the LastModuleUpdateVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatinsight) GetLastModuleUpdateVersionOk() (*string, bool) {
	if o == nil || IsNil(o.LastModuleUpdateVersion) {
		return nil, false
	}
	return o.LastModuleUpdateVersion, true
}

// HasLastModuleUpdateVersion returns a boolean if a field has been set.
func (o *GridThreatinsight) HasLastModuleUpdateVersion() bool {
	if o != nil && !IsNil(o.LastModuleUpdateVersion) {
		return true
	}

	return false
}

// SetLastModuleUpdateVersion gets a reference to the given string and assigns it to the LastModuleUpdateVersion field.
func (o *GridThreatinsight) SetLastModuleUpdateVersion(v string) {
	o.LastModuleUpdateVersion = &v
}

// GetLastUpdatedPackageVersion returns the LastUpdatedPackageVersion field value if set, zero value otherwise.
func (o *GridThreatinsight) GetLastUpdatedPackageVersion() string {
	if o == nil || IsNil(o.LastUpdatedPackageVersion) {
		var ret string
		return ret
	}
	return *o.LastUpdatedPackageVersion
}

// GetLastUpdatedPackageVersionOk returns a tuple with the LastUpdatedPackageVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatinsight) GetLastUpdatedPackageVersionOk() (*string, bool) {
	if o == nil || IsNil(o.LastUpdatedPackageVersion) {
		return nil, false
	}
	return o.LastUpdatedPackageVersion, true
}

// HasLastUpdatedPackageVersion returns a boolean if a field has been set.
func (o *GridThreatinsight) HasLastUpdatedPackageVersion() bool {
	if o != nil && !IsNil(o.LastUpdatedPackageVersion) {
		return true
	}

	return false
}

// SetLastUpdatedPackageVersion gets a reference to the given string and assigns it to the LastUpdatedPackageVersion field.
func (o *GridThreatinsight) SetLastUpdatedPackageVersion(v string) {
	o.LastUpdatedPackageVersion = &v
}

// GetModuleUpdatePolicy returns the ModuleUpdatePolicy field value if set, zero value otherwise.
func (o *GridThreatinsight) GetModuleUpdatePolicy() string {
	if o == nil || IsNil(o.ModuleUpdatePolicy) {
		var ret string
		return ret
	}
	return *o.ModuleUpdatePolicy
}

// GetModuleUpdatePolicyOk returns a tuple with the ModuleUpdatePolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatinsight) GetModuleUpdatePolicyOk() (*string, bool) {
	if o == nil || IsNil(o.ModuleUpdatePolicy) {
		return nil, false
	}
	return o.ModuleUpdatePolicy, true
}

// HasModuleUpdatePolicy returns a boolean if a field has been set.
func (o *GridThreatinsight) HasModuleUpdatePolicy() bool {
	if o != nil && !IsNil(o.ModuleUpdatePolicy) {
		return true
	}

	return false
}

// SetModuleUpdatePolicy gets a reference to the given string and assigns it to the ModuleUpdatePolicy field.
func (o *GridThreatinsight) SetModuleUpdatePolicy(v string) {
	o.ModuleUpdatePolicy = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GridThreatinsight) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatinsight) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GridThreatinsight) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GridThreatinsight) SetName(v string) {
	o.Name = &v
}

// GetScheduledAllowlistDownload returns the ScheduledAllowlistDownload field value if set, zero value otherwise.
func (o *GridThreatinsight) GetScheduledAllowlistDownload() GridThreatinsightScheduledAllowlistDownload {
	if o == nil || IsNil(o.ScheduledAllowlistDownload) {
		var ret GridThreatinsightScheduledAllowlistDownload
		return ret
	}
	return *o.ScheduledAllowlistDownload
}

// GetScheduledAllowlistDownloadOk returns a tuple with the ScheduledAllowlistDownload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatinsight) GetScheduledAllowlistDownloadOk() (*GridThreatinsightScheduledAllowlistDownload, bool) {
	if o == nil || IsNil(o.ScheduledAllowlistDownload) {
		return nil, false
	}
	return o.ScheduledAllowlistDownload, true
}

// HasScheduledAllowlistDownload returns a boolean if a field has been set.
func (o *GridThreatinsight) HasScheduledAllowlistDownload() bool {
	if o != nil && !IsNil(o.ScheduledAllowlistDownload) {
		return true
	}

	return false
}

// SetScheduledAllowlistDownload gets a reference to the given GridThreatinsightScheduledAllowlistDownload and assigns it to the ScheduledAllowlistDownload field.
func (o *GridThreatinsight) SetScheduledAllowlistDownload(v GridThreatinsightScheduledAllowlistDownload) {
	o.ScheduledAllowlistDownload = &v
}

// GetScheduledDownload returns the ScheduledDownload field value if set, zero value otherwise.
func (o *GridThreatinsight) GetScheduledDownload() GridThreatinsightScheduledDownload {
	if o == nil || IsNil(o.ScheduledDownload) {
		var ret GridThreatinsightScheduledDownload
		return ret
	}
	return *o.ScheduledDownload
}

// GetScheduledDownloadOk returns a tuple with the ScheduledDownload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatinsight) GetScheduledDownloadOk() (*GridThreatinsightScheduledDownload, bool) {
	if o == nil || IsNil(o.ScheduledDownload) {
		return nil, false
	}
	return o.ScheduledDownload, true
}

// HasScheduledDownload returns a boolean if a field has been set.
func (o *GridThreatinsight) HasScheduledDownload() bool {
	if o != nil && !IsNil(o.ScheduledDownload) {
		return true
	}

	return false
}

// SetScheduledDownload gets a reference to the given GridThreatinsightScheduledDownload and assigns it to the ScheduledDownload field.
func (o *GridThreatinsight) SetScheduledDownload(v GridThreatinsightScheduledDownload) {
	o.ScheduledDownload = &v
}

func (o GridThreatinsight) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GridThreatinsight) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.AllowlistUpdatePolicy) {
		toSerialize["allowlist_update_policy"] = o.AllowlistUpdatePolicy
	}
	if !IsNil(o.ConfigureDomainCollapsing) {
		toSerialize["configure_domain_collapsing"] = o.ConfigureDomainCollapsing
	}
	if !IsNil(o.CurrentAllowlist) {
		toSerialize["current_allowlist"] = o.CurrentAllowlist
	}
	if !IsNil(o.CurrentModuleset) {
		toSerialize["current_moduleset"] = o.CurrentModuleset
	}
	if !IsNil(o.DnsTunnelBlockListRpzZones) {
		toSerialize["dns_tunnel_block_list_rpz_zones"] = o.DnsTunnelBlockListRpzZones
	}
	if !IsNil(o.DomainCollapsingLevel) {
		toSerialize["domain_collapsing_level"] = o.DomainCollapsingLevel
	}
	if !IsNil(o.EnableAllowlistAutoDownload) {
		toSerialize["enable_allowlist_auto_download"] = o.EnableAllowlistAutoDownload
	}
	if !IsNil(o.EnableAllowlistScheduledDownload) {
		toSerialize["enable_allowlist_scheduled_download"] = o.EnableAllowlistScheduledDownload
	}
	if !IsNil(o.EnableAutoDownload) {
		toSerialize["enable_auto_download"] = o.EnableAutoDownload
	}
	if !IsNil(o.EnableScheduledDownload) {
		toSerialize["enable_scheduled_download"] = o.EnableScheduledDownload
	}
	if !IsNil(o.LastAllowlistUpdateTime) {
		toSerialize["last_allowlist_update_time"] = o.LastAllowlistUpdateTime
	}
	if !IsNil(o.LastAllowlistUpdateVersion) {
		toSerialize["last_allowlist_update_version"] = o.LastAllowlistUpdateVersion
	}
	if !IsNil(o.LastCheckedForAllowlistUpdate) {
		toSerialize["last_checked_for_allowlist_update"] = o.LastCheckedForAllowlistUpdate
	}
	if !IsNil(o.LastCheckedForPackageUpdate) {
		toSerialize["last_checked_for_package_update"] = o.LastCheckedForPackageUpdate
	}
	if !IsNil(o.LastCheckedForUpdate) {
		toSerialize["last_checked_for_update"] = o.LastCheckedForUpdate
	}
	if !IsNil(o.LastModuleUpdateTime) {
		toSerialize["last_module_update_time"] = o.LastModuleUpdateTime
	}
	if !IsNil(o.LastModuleUpdateVersion) {
		toSerialize["last_module_update_version"] = o.LastModuleUpdateVersion
	}
	if !IsNil(o.LastUpdatedPackageVersion) {
		toSerialize["last_updated_package_version"] = o.LastUpdatedPackageVersion
	}
	if !IsNil(o.ModuleUpdatePolicy) {
		toSerialize["module_update_policy"] = o.ModuleUpdatePolicy
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ScheduledAllowlistDownload) {
		toSerialize["scheduled_allowlist_download"] = o.ScheduledAllowlistDownload
	}
	if !IsNil(o.ScheduledDownload) {
		toSerialize["scheduled_download"] = o.ScheduledDownload
	}
	return toSerialize, nil
}

type NullableGridThreatinsight struct {
	value *GridThreatinsight
	isSet bool
}

func (v NullableGridThreatinsight) Get() *GridThreatinsight {
	return v.value
}

func (v *NullableGridThreatinsight) Set(val *GridThreatinsight) {
	v.value = val
	v.isSet = true
}

func (v NullableGridThreatinsight) IsSet() bool {
	return v.isSet
}

func (v *NullableGridThreatinsight) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGridThreatinsight(val *GridThreatinsight) *NullableGridThreatinsight {
	return &NullableGridThreatinsight{value: val, isSet: true}
}

func (v NullableGridThreatinsight) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGridThreatinsight) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
