/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the GridThreatprotection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GridThreatprotection{}

// GridThreatprotection struct for GridThreatprotection
type GridThreatprotection struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// The current Grid ruleset.
	CurrentRuleset *string `json:"current_ruleset,omitempty"`
	// Determines if multiple BIND responses via TCP connection are disabled.
	DisableMultipleDnsTcpRequest *bool `json:"disable_multiple_dns_tcp_request,omitempty"`
	// Determines if DNS responses are sent from acceleration cache before applying Threat Protection rules. Recommended for better performance when using DNS Cache Acceleration.
	EnableAccelRespBeforeThreatProtection *bool `json:"enable_accel_resp_before_threat_protection,omitempty"`
	// Determines if auto download service is enabled.
	EnableAutoDownload *bool `json:"enable_auto_download,omitempty"`
	// Determines if NAT (Network Address Translation) mapping for threat protection is enabled or not.
	EnableNatRules *bool `json:"enable_nat_rules,omitempty"`
	// Determines if scheduled download is enabled. The default frequency is once in every 24 hours if it is disabled.
	EnableScheduledDownload *bool `json:"enable_scheduled_download,omitempty"`
	// The number of events logged per second per rule.
	EventsPerSecondPerRule *int64 `json:"events_per_second_per_rule,omitempty"`
	// The Grid name.
	GridName *string `json:"grid_name,omitempty"`
	// The time when the Grid last checked for updates.
	LastCheckedForUpdate *int64 `json:"last_checked_for_update,omitempty"`
	// The last rule update timestamp.
	LastRuleUpdateTimestamp *int64 `json:"last_rule_update_timestamp,omitempty"`
	// The version of last rule update.
	LastRuleUpdateVersion *string `json:"last_rule_update_version,omitempty"`
	// The list of NAT mapping rules for threat protection.
	NatRules         []GridThreatprotectionNatRules        `json:"nat_rules,omitempty"`
	OutboundSettings *GridThreatprotectionOutboundSettings `json:"outbound_settings,omitempty"`
	// The update rule policy.
	RuleUpdatePolicy  *string                                `json:"rule_update_policy,omitempty"`
	ScheduledDownload *GridThreatprotectionScheduledDownload `json:"scheduled_download,omitempty"`
}

// NewGridThreatprotection instantiates a new GridThreatprotection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGridThreatprotection() *GridThreatprotection {
	this := GridThreatprotection{}
	return &this
}

// NewGridThreatprotectionWithDefaults instantiates a new GridThreatprotection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGridThreatprotectionWithDefaults() *GridThreatprotection {
	this := GridThreatprotection{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *GridThreatprotection) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatprotection) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *GridThreatprotection) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *GridThreatprotection) SetRef(v string) {
	o.Ref = &v
}

// GetCurrentRuleset returns the CurrentRuleset field value if set, zero value otherwise.
func (o *GridThreatprotection) GetCurrentRuleset() string {
	if o == nil || IsNil(o.CurrentRuleset) {
		var ret string
		return ret
	}
	return *o.CurrentRuleset
}

// GetCurrentRulesetOk returns a tuple with the CurrentRuleset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatprotection) GetCurrentRulesetOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentRuleset) {
		return nil, false
	}
	return o.CurrentRuleset, true
}

// HasCurrentRuleset returns a boolean if a field has been set.
func (o *GridThreatprotection) HasCurrentRuleset() bool {
	if o != nil && !IsNil(o.CurrentRuleset) {
		return true
	}

	return false
}

// SetCurrentRuleset gets a reference to the given string and assigns it to the CurrentRuleset field.
func (o *GridThreatprotection) SetCurrentRuleset(v string) {
	o.CurrentRuleset = &v
}

// GetDisableMultipleDnsTcpRequest returns the DisableMultipleDnsTcpRequest field value if set, zero value otherwise.
func (o *GridThreatprotection) GetDisableMultipleDnsTcpRequest() bool {
	if o == nil || IsNil(o.DisableMultipleDnsTcpRequest) {
		var ret bool
		return ret
	}
	return *o.DisableMultipleDnsTcpRequest
}

// GetDisableMultipleDnsTcpRequestOk returns a tuple with the DisableMultipleDnsTcpRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatprotection) GetDisableMultipleDnsTcpRequestOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableMultipleDnsTcpRequest) {
		return nil, false
	}
	return o.DisableMultipleDnsTcpRequest, true
}

// HasDisableMultipleDnsTcpRequest returns a boolean if a field has been set.
func (o *GridThreatprotection) HasDisableMultipleDnsTcpRequest() bool {
	if o != nil && !IsNil(o.DisableMultipleDnsTcpRequest) {
		return true
	}

	return false
}

// SetDisableMultipleDnsTcpRequest gets a reference to the given bool and assigns it to the DisableMultipleDnsTcpRequest field.
func (o *GridThreatprotection) SetDisableMultipleDnsTcpRequest(v bool) {
	o.DisableMultipleDnsTcpRequest = &v
}

// GetEnableAccelRespBeforeThreatProtection returns the EnableAccelRespBeforeThreatProtection field value if set, zero value otherwise.
func (o *GridThreatprotection) GetEnableAccelRespBeforeThreatProtection() bool {
	if o == nil || IsNil(o.EnableAccelRespBeforeThreatProtection) {
		var ret bool
		return ret
	}
	return *o.EnableAccelRespBeforeThreatProtection
}

// GetEnableAccelRespBeforeThreatProtectionOk returns a tuple with the EnableAccelRespBeforeThreatProtection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatprotection) GetEnableAccelRespBeforeThreatProtectionOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableAccelRespBeforeThreatProtection) {
		return nil, false
	}
	return o.EnableAccelRespBeforeThreatProtection, true
}

// HasEnableAccelRespBeforeThreatProtection returns a boolean if a field has been set.
func (o *GridThreatprotection) HasEnableAccelRespBeforeThreatProtection() bool {
	if o != nil && !IsNil(o.EnableAccelRespBeforeThreatProtection) {
		return true
	}

	return false
}

// SetEnableAccelRespBeforeThreatProtection gets a reference to the given bool and assigns it to the EnableAccelRespBeforeThreatProtection field.
func (o *GridThreatprotection) SetEnableAccelRespBeforeThreatProtection(v bool) {
	o.EnableAccelRespBeforeThreatProtection = &v
}

// GetEnableAutoDownload returns the EnableAutoDownload field value if set, zero value otherwise.
func (o *GridThreatprotection) GetEnableAutoDownload() bool {
	if o == nil || IsNil(o.EnableAutoDownload) {
		var ret bool
		return ret
	}
	return *o.EnableAutoDownload
}

// GetEnableAutoDownloadOk returns a tuple with the EnableAutoDownload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatprotection) GetEnableAutoDownloadOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableAutoDownload) {
		return nil, false
	}
	return o.EnableAutoDownload, true
}

// HasEnableAutoDownload returns a boolean if a field has been set.
func (o *GridThreatprotection) HasEnableAutoDownload() bool {
	if o != nil && !IsNil(o.EnableAutoDownload) {
		return true
	}

	return false
}

// SetEnableAutoDownload gets a reference to the given bool and assigns it to the EnableAutoDownload field.
func (o *GridThreatprotection) SetEnableAutoDownload(v bool) {
	o.EnableAutoDownload = &v
}

// GetEnableNatRules returns the EnableNatRules field value if set, zero value otherwise.
func (o *GridThreatprotection) GetEnableNatRules() bool {
	if o == nil || IsNil(o.EnableNatRules) {
		var ret bool
		return ret
	}
	return *o.EnableNatRules
}

// GetEnableNatRulesOk returns a tuple with the EnableNatRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatprotection) GetEnableNatRulesOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableNatRules) {
		return nil, false
	}
	return o.EnableNatRules, true
}

// HasEnableNatRules returns a boolean if a field has been set.
func (o *GridThreatprotection) HasEnableNatRules() bool {
	if o != nil && !IsNil(o.EnableNatRules) {
		return true
	}

	return false
}

// SetEnableNatRules gets a reference to the given bool and assigns it to the EnableNatRules field.
func (o *GridThreatprotection) SetEnableNatRules(v bool) {
	o.EnableNatRules = &v
}

// GetEnableScheduledDownload returns the EnableScheduledDownload field value if set, zero value otherwise.
func (o *GridThreatprotection) GetEnableScheduledDownload() bool {
	if o == nil || IsNil(o.EnableScheduledDownload) {
		var ret bool
		return ret
	}
	return *o.EnableScheduledDownload
}

// GetEnableScheduledDownloadOk returns a tuple with the EnableScheduledDownload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatprotection) GetEnableScheduledDownloadOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableScheduledDownload) {
		return nil, false
	}
	return o.EnableScheduledDownload, true
}

// HasEnableScheduledDownload returns a boolean if a field has been set.
func (o *GridThreatprotection) HasEnableScheduledDownload() bool {
	if o != nil && !IsNil(o.EnableScheduledDownload) {
		return true
	}

	return false
}

// SetEnableScheduledDownload gets a reference to the given bool and assigns it to the EnableScheduledDownload field.
func (o *GridThreatprotection) SetEnableScheduledDownload(v bool) {
	o.EnableScheduledDownload = &v
}

// GetEventsPerSecondPerRule returns the EventsPerSecondPerRule field value if set, zero value otherwise.
func (o *GridThreatprotection) GetEventsPerSecondPerRule() int64 {
	if o == nil || IsNil(o.EventsPerSecondPerRule) {
		var ret int64
		return ret
	}
	return *o.EventsPerSecondPerRule
}

// GetEventsPerSecondPerRuleOk returns a tuple with the EventsPerSecondPerRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatprotection) GetEventsPerSecondPerRuleOk() (*int64, bool) {
	if o == nil || IsNil(o.EventsPerSecondPerRule) {
		return nil, false
	}
	return o.EventsPerSecondPerRule, true
}

// HasEventsPerSecondPerRule returns a boolean if a field has been set.
func (o *GridThreatprotection) HasEventsPerSecondPerRule() bool {
	if o != nil && !IsNil(o.EventsPerSecondPerRule) {
		return true
	}

	return false
}

// SetEventsPerSecondPerRule gets a reference to the given int64 and assigns it to the EventsPerSecondPerRule field.
func (o *GridThreatprotection) SetEventsPerSecondPerRule(v int64) {
	o.EventsPerSecondPerRule = &v
}

// GetGridName returns the GridName field value if set, zero value otherwise.
func (o *GridThreatprotection) GetGridName() string {
	if o == nil || IsNil(o.GridName) {
		var ret string
		return ret
	}
	return *o.GridName
}

// GetGridNameOk returns a tuple with the GridName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatprotection) GetGridNameOk() (*string, bool) {
	if o == nil || IsNil(o.GridName) {
		return nil, false
	}
	return o.GridName, true
}

// HasGridName returns a boolean if a field has been set.
func (o *GridThreatprotection) HasGridName() bool {
	if o != nil && !IsNil(o.GridName) {
		return true
	}

	return false
}

// SetGridName gets a reference to the given string and assigns it to the GridName field.
func (o *GridThreatprotection) SetGridName(v string) {
	o.GridName = &v
}

// GetLastCheckedForUpdate returns the LastCheckedForUpdate field value if set, zero value otherwise.
func (o *GridThreatprotection) GetLastCheckedForUpdate() int64 {
	if o == nil || IsNil(o.LastCheckedForUpdate) {
		var ret int64
		return ret
	}
	return *o.LastCheckedForUpdate
}

// GetLastCheckedForUpdateOk returns a tuple with the LastCheckedForUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatprotection) GetLastCheckedForUpdateOk() (*int64, bool) {
	if o == nil || IsNil(o.LastCheckedForUpdate) {
		return nil, false
	}
	return o.LastCheckedForUpdate, true
}

// HasLastCheckedForUpdate returns a boolean if a field has been set.
func (o *GridThreatprotection) HasLastCheckedForUpdate() bool {
	if o != nil && !IsNil(o.LastCheckedForUpdate) {
		return true
	}

	return false
}

// SetLastCheckedForUpdate gets a reference to the given int64 and assigns it to the LastCheckedForUpdate field.
func (o *GridThreatprotection) SetLastCheckedForUpdate(v int64) {
	o.LastCheckedForUpdate = &v
}

// GetLastRuleUpdateTimestamp returns the LastRuleUpdateTimestamp field value if set, zero value otherwise.
func (o *GridThreatprotection) GetLastRuleUpdateTimestamp() int64 {
	if o == nil || IsNil(o.LastRuleUpdateTimestamp) {
		var ret int64
		return ret
	}
	return *o.LastRuleUpdateTimestamp
}

// GetLastRuleUpdateTimestampOk returns a tuple with the LastRuleUpdateTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatprotection) GetLastRuleUpdateTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.LastRuleUpdateTimestamp) {
		return nil, false
	}
	return o.LastRuleUpdateTimestamp, true
}

// HasLastRuleUpdateTimestamp returns a boolean if a field has been set.
func (o *GridThreatprotection) HasLastRuleUpdateTimestamp() bool {
	if o != nil && !IsNil(o.LastRuleUpdateTimestamp) {
		return true
	}

	return false
}

// SetLastRuleUpdateTimestamp gets a reference to the given int64 and assigns it to the LastRuleUpdateTimestamp field.
func (o *GridThreatprotection) SetLastRuleUpdateTimestamp(v int64) {
	o.LastRuleUpdateTimestamp = &v
}

// GetLastRuleUpdateVersion returns the LastRuleUpdateVersion field value if set, zero value otherwise.
func (o *GridThreatprotection) GetLastRuleUpdateVersion() string {
	if o == nil || IsNil(o.LastRuleUpdateVersion) {
		var ret string
		return ret
	}
	return *o.LastRuleUpdateVersion
}

// GetLastRuleUpdateVersionOk returns a tuple with the LastRuleUpdateVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatprotection) GetLastRuleUpdateVersionOk() (*string, bool) {
	if o == nil || IsNil(o.LastRuleUpdateVersion) {
		return nil, false
	}
	return o.LastRuleUpdateVersion, true
}

// HasLastRuleUpdateVersion returns a boolean if a field has been set.
func (o *GridThreatprotection) HasLastRuleUpdateVersion() bool {
	if o != nil && !IsNil(o.LastRuleUpdateVersion) {
		return true
	}

	return false
}

// SetLastRuleUpdateVersion gets a reference to the given string and assigns it to the LastRuleUpdateVersion field.
func (o *GridThreatprotection) SetLastRuleUpdateVersion(v string) {
	o.LastRuleUpdateVersion = &v
}

// GetNatRules returns the NatRules field value if set, zero value otherwise.
func (o *GridThreatprotection) GetNatRules() []GridThreatprotectionNatRules {
	if o == nil || IsNil(o.NatRules) {
		var ret []GridThreatprotectionNatRules
		return ret
	}
	return o.NatRules
}

// GetNatRulesOk returns a tuple with the NatRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatprotection) GetNatRulesOk() ([]GridThreatprotectionNatRules, bool) {
	if o == nil || IsNil(o.NatRules) {
		return nil, false
	}
	return o.NatRules, true
}

// HasNatRules returns a boolean if a field has been set.
func (o *GridThreatprotection) HasNatRules() bool {
	if o != nil && !IsNil(o.NatRules) {
		return true
	}

	return false
}

// SetNatRules gets a reference to the given []GridThreatprotectionNatRules and assigns it to the NatRules field.
func (o *GridThreatprotection) SetNatRules(v []GridThreatprotectionNatRules) {
	o.NatRules = v
}

// GetOutboundSettings returns the OutboundSettings field value if set, zero value otherwise.
func (o *GridThreatprotection) GetOutboundSettings() GridThreatprotectionOutboundSettings {
	if o == nil || IsNil(o.OutboundSettings) {
		var ret GridThreatprotectionOutboundSettings
		return ret
	}
	return *o.OutboundSettings
}

// GetOutboundSettingsOk returns a tuple with the OutboundSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatprotection) GetOutboundSettingsOk() (*GridThreatprotectionOutboundSettings, bool) {
	if o == nil || IsNil(o.OutboundSettings) {
		return nil, false
	}
	return o.OutboundSettings, true
}

// HasOutboundSettings returns a boolean if a field has been set.
func (o *GridThreatprotection) HasOutboundSettings() bool {
	if o != nil && !IsNil(o.OutboundSettings) {
		return true
	}

	return false
}

// SetOutboundSettings gets a reference to the given GridThreatprotectionOutboundSettings and assigns it to the OutboundSettings field.
func (o *GridThreatprotection) SetOutboundSettings(v GridThreatprotectionOutboundSettings) {
	o.OutboundSettings = &v
}

// GetRuleUpdatePolicy returns the RuleUpdatePolicy field value if set, zero value otherwise.
func (o *GridThreatprotection) GetRuleUpdatePolicy() string {
	if o == nil || IsNil(o.RuleUpdatePolicy) {
		var ret string
		return ret
	}
	return *o.RuleUpdatePolicy
}

// GetRuleUpdatePolicyOk returns a tuple with the RuleUpdatePolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatprotection) GetRuleUpdatePolicyOk() (*string, bool) {
	if o == nil || IsNil(o.RuleUpdatePolicy) {
		return nil, false
	}
	return o.RuleUpdatePolicy, true
}

// HasRuleUpdatePolicy returns a boolean if a field has been set.
func (o *GridThreatprotection) HasRuleUpdatePolicy() bool {
	if o != nil && !IsNil(o.RuleUpdatePolicy) {
		return true
	}

	return false
}

// SetRuleUpdatePolicy gets a reference to the given string and assigns it to the RuleUpdatePolicy field.
func (o *GridThreatprotection) SetRuleUpdatePolicy(v string) {
	o.RuleUpdatePolicy = &v
}

// GetScheduledDownload returns the ScheduledDownload field value if set, zero value otherwise.
func (o *GridThreatprotection) GetScheduledDownload() GridThreatprotectionScheduledDownload {
	if o == nil || IsNil(o.ScheduledDownload) {
		var ret GridThreatprotectionScheduledDownload
		return ret
	}
	return *o.ScheduledDownload
}

// GetScheduledDownloadOk returns a tuple with the ScheduledDownload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridThreatprotection) GetScheduledDownloadOk() (*GridThreatprotectionScheduledDownload, bool) {
	if o == nil || IsNil(o.ScheduledDownload) {
		return nil, false
	}
	return o.ScheduledDownload, true
}

// HasScheduledDownload returns a boolean if a field has been set.
func (o *GridThreatprotection) HasScheduledDownload() bool {
	if o != nil && !IsNil(o.ScheduledDownload) {
		return true
	}

	return false
}

// SetScheduledDownload gets a reference to the given GridThreatprotectionScheduledDownload and assigns it to the ScheduledDownload field.
func (o *GridThreatprotection) SetScheduledDownload(v GridThreatprotectionScheduledDownload) {
	o.ScheduledDownload = &v
}

func (o GridThreatprotection) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GridThreatprotection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.CurrentRuleset) {
		toSerialize["current_ruleset"] = o.CurrentRuleset
	}
	if !IsNil(o.DisableMultipleDnsTcpRequest) {
		toSerialize["disable_multiple_dns_tcp_request"] = o.DisableMultipleDnsTcpRequest
	}
	if !IsNil(o.EnableAccelRespBeforeThreatProtection) {
		toSerialize["enable_accel_resp_before_threat_protection"] = o.EnableAccelRespBeforeThreatProtection
	}
	if !IsNil(o.EnableAutoDownload) {
		toSerialize["enable_auto_download"] = o.EnableAutoDownload
	}
	if !IsNil(o.EnableNatRules) {
		toSerialize["enable_nat_rules"] = o.EnableNatRules
	}
	if !IsNil(o.EnableScheduledDownload) {
		toSerialize["enable_scheduled_download"] = o.EnableScheduledDownload
	}
	if !IsNil(o.EventsPerSecondPerRule) {
		toSerialize["events_per_second_per_rule"] = o.EventsPerSecondPerRule
	}
	if !IsNil(o.GridName) {
		toSerialize["grid_name"] = o.GridName
	}
	if !IsNil(o.LastCheckedForUpdate) {
		toSerialize["last_checked_for_update"] = o.LastCheckedForUpdate
	}
	if !IsNil(o.LastRuleUpdateTimestamp) {
		toSerialize["last_rule_update_timestamp"] = o.LastRuleUpdateTimestamp
	}
	if !IsNil(o.LastRuleUpdateVersion) {
		toSerialize["last_rule_update_version"] = o.LastRuleUpdateVersion
	}
	if !IsNil(o.NatRules) {
		toSerialize["nat_rules"] = o.NatRules
	}
	if !IsNil(o.OutboundSettings) {
		toSerialize["outbound_settings"] = o.OutboundSettings
	}
	if !IsNil(o.RuleUpdatePolicy) {
		toSerialize["rule_update_policy"] = o.RuleUpdatePolicy
	}
	if !IsNil(o.ScheduledDownload) {
		toSerialize["scheduled_download"] = o.ScheduledDownload
	}
	return toSerialize, nil
}

type NullableGridThreatprotection struct {
	value *GridThreatprotection
	isSet bool
}

func (v NullableGridThreatprotection) Get() *GridThreatprotection {
	return v.value
}

func (v *NullableGridThreatprotection) Set(val *GridThreatprotection) {
	v.value = val
	v.isSet = true
}

func (v NullableGridThreatprotection) IsSet() bool {
	return v.isSet
}

func (v *NullableGridThreatprotection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGridThreatprotection(val *GridThreatprotection) *NullableGridThreatprotection {
	return &NullableGridThreatprotection{value: val, isSet: true}
}

func (v NullableGridThreatprotection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGridThreatprotection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
