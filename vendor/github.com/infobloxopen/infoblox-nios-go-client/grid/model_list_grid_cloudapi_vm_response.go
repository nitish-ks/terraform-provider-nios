/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
	"fmt"
)

// ListGridCloudapiVmResponse - struct for ListGridCloudapiVmResponse
type ListGridCloudapiVmResponse struct {
	ListGridCloudapiVmResponseObject *ListGridCloudapiVmResponseObject
	ArrayOfGridCloudapiVm            *[]GridCloudapiVm
}

// ListGridCloudapiVmResponseObjectAsListGridCloudapiVmResponse is a convenience function that returns ListGridCloudapiVmResponseObject wrapped in ListGridCloudapiVmResponse
func ListGridCloudapiVmResponseObjectAsListGridCloudapiVmResponse(v *ListGridCloudapiVmResponseObject) ListGridCloudapiVmResponse {
	return ListGridCloudapiVmResponse{
		ListGridCloudapiVmResponseObject: v,
	}
}

// []GridCloudapiVmAsListGridCloudapiVmResponse is a convenience function that returns []GridCloudapiVm wrapped in ListGridCloudapiVmResponse
func ArrayOfGridCloudapiVmAsListGridCloudapiVmResponse(v *[]GridCloudapiVm) ListGridCloudapiVmResponse {
	return ListGridCloudapiVmResponse{
		ArrayOfGridCloudapiVm: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListGridCloudapiVmResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListGridCloudapiVmResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListGridCloudapiVmResponseObject)
	if err == nil {
		jsonListGridCloudapiVmResponseObject, _ := json.Marshal(dst.ListGridCloudapiVmResponseObject)
		if string(jsonListGridCloudapiVmResponseObject) == "{}" { // empty struct
			dst.ListGridCloudapiVmResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListGridCloudapiVmResponseObject = nil
	}

	// try to unmarshal data into ArrayOfGridCloudapiVm
	err = newStrictDecoder(data).Decode(&dst.ArrayOfGridCloudapiVm)
	if err == nil {
		jsonArrayOfGridCloudapiVm, _ := json.Marshal(dst.ArrayOfGridCloudapiVm)
		if string(jsonArrayOfGridCloudapiVm) == "{}" { // empty struct
			dst.ArrayOfGridCloudapiVm = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfGridCloudapiVm = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListGridCloudapiVmResponseObject = nil
		dst.ArrayOfGridCloudapiVm = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListGridCloudapiVmResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListGridCloudapiVmResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListGridCloudapiVmResponse) MarshalJSON() ([]byte, error) {
	if src.ListGridCloudapiVmResponseObject != nil {
		return json.Marshal(&src.ListGridCloudapiVmResponseObject)
	}

	if src.ArrayOfGridCloudapiVm != nil {
		return json.Marshal(&src.ArrayOfGridCloudapiVm)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListGridCloudapiVmResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListGridCloudapiVmResponseObject != nil {
		return obj.ListGridCloudapiVmResponseObject
	}

	if obj.ArrayOfGridCloudapiVm != nil {
		return obj.ArrayOfGridCloudapiVm
	}

	// all schemas are nil
	return nil
}

type NullableListGridCloudapiVmResponse struct {
	value *ListGridCloudapiVmResponse
	isSet bool
}

func (v NullableListGridCloudapiVmResponse) Get() *ListGridCloudapiVmResponse {
	return v.value
}

func (v *NullableListGridCloudapiVmResponse) Set(val *ListGridCloudapiVmResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListGridCloudapiVmResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListGridCloudapiVmResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListGridCloudapiVmResponse(val *ListGridCloudapiVmResponse) *NullableListGridCloudapiVmResponse {
	return &NullableListGridCloudapiVmResponse{value: val, isSet: true}
}

func (v NullableListGridCloudapiVmResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListGridCloudapiVmResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
