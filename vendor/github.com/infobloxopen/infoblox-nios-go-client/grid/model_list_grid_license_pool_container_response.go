/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
	"fmt"
)

// ListGridLicensePoolContainerResponse - struct for ListGridLicensePoolContainerResponse
type ListGridLicensePoolContainerResponse struct {
	ListGridLicensePoolContainerResponseObject *ListGridLicensePoolContainerResponseObject
	ArrayOfGridLicensePoolContainer            *[]GridLicensePoolContainer
}

// ListGridLicensePoolContainerResponseObjectAsListGridLicensePoolContainerResponse is a convenience function that returns ListGridLicensePoolContainerResponseObject wrapped in ListGridLicensePoolContainerResponse
func ListGridLicensePoolContainerResponseObjectAsListGridLicensePoolContainerResponse(v *ListGridLicensePoolContainerResponseObject) ListGridLicensePoolContainerResponse {
	return ListGridLicensePoolContainerResponse{
		ListGridLicensePoolContainerResponseObject: v,
	}
}

// []GridLicensePoolContainerAsListGridLicensePoolContainerResponse is a convenience function that returns []GridLicensePoolContainer wrapped in ListGridLicensePoolContainerResponse
func ArrayOfGridLicensePoolContainerAsListGridLicensePoolContainerResponse(v *[]GridLicensePoolContainer) ListGridLicensePoolContainerResponse {
	return ListGridLicensePoolContainerResponse{
		ArrayOfGridLicensePoolContainer: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListGridLicensePoolContainerResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListGridLicensePoolContainerResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListGridLicensePoolContainerResponseObject)
	if err == nil {
		jsonListGridLicensePoolContainerResponseObject, _ := json.Marshal(dst.ListGridLicensePoolContainerResponseObject)
		if string(jsonListGridLicensePoolContainerResponseObject) == "{}" { // empty struct
			dst.ListGridLicensePoolContainerResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListGridLicensePoolContainerResponseObject = nil
	}

	// try to unmarshal data into ArrayOfGridLicensePoolContainer
	err = newStrictDecoder(data).Decode(&dst.ArrayOfGridLicensePoolContainer)
	if err == nil {
		jsonArrayOfGridLicensePoolContainer, _ := json.Marshal(dst.ArrayOfGridLicensePoolContainer)
		if string(jsonArrayOfGridLicensePoolContainer) == "{}" { // empty struct
			dst.ArrayOfGridLicensePoolContainer = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfGridLicensePoolContainer = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListGridLicensePoolContainerResponseObject = nil
		dst.ArrayOfGridLicensePoolContainer = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListGridLicensePoolContainerResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListGridLicensePoolContainerResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListGridLicensePoolContainerResponse) MarshalJSON() ([]byte, error) {
	if src.ListGridLicensePoolContainerResponseObject != nil {
		return json.Marshal(&src.ListGridLicensePoolContainerResponseObject)
	}

	if src.ArrayOfGridLicensePoolContainer != nil {
		return json.Marshal(&src.ArrayOfGridLicensePoolContainer)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListGridLicensePoolContainerResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListGridLicensePoolContainerResponseObject != nil {
		return obj.ListGridLicensePoolContainerResponseObject
	}

	if obj.ArrayOfGridLicensePoolContainer != nil {
		return obj.ArrayOfGridLicensePoolContainer
	}

	// all schemas are nil
	return nil
}

type NullableListGridLicensePoolContainerResponse struct {
	value *ListGridLicensePoolContainerResponse
	isSet bool
}

func (v NullableListGridLicensePoolContainerResponse) Get() *ListGridLicensePoolContainerResponse {
	return v.value
}

func (v *NullableListGridLicensePoolContainerResponse) Set(val *ListGridLicensePoolContainerResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListGridLicensePoolContainerResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListGridLicensePoolContainerResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListGridLicensePoolContainerResponse(val *ListGridLicensePoolContainerResponse) *NullableListGridLicensePoolContainerResponse {
	return &NullableListGridLicensePoolContainerResponse{value: val, isSet: true}
}

func (v NullableListGridLicensePoolContainerResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListGridLicensePoolContainerResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
