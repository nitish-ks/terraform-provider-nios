/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
	"fmt"
)

// ListMemberdfpResponse - struct for ListMemberdfpResponse
type ListMemberdfpResponse struct {
	ListMemberdfpResponseObject *ListMemberdfpResponseObject
	ArrayOfMemberdfp            *[]Memberdfp
}

// ListMemberdfpResponseObjectAsListMemberdfpResponse is a convenience function that returns ListMemberdfpResponseObject wrapped in ListMemberdfpResponse
func ListMemberdfpResponseObjectAsListMemberdfpResponse(v *ListMemberdfpResponseObject) ListMemberdfpResponse {
	return ListMemberdfpResponse{
		ListMemberdfpResponseObject: v,
	}
}

// []MemberdfpAsListMemberdfpResponse is a convenience function that returns []Memberdfp wrapped in ListMemberdfpResponse
func ArrayOfMemberdfpAsListMemberdfpResponse(v *[]Memberdfp) ListMemberdfpResponse {
	return ListMemberdfpResponse{
		ArrayOfMemberdfp: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListMemberdfpResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListMemberdfpResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListMemberdfpResponseObject)
	if err == nil {
		jsonListMemberdfpResponseObject, _ := json.Marshal(dst.ListMemberdfpResponseObject)
		if string(jsonListMemberdfpResponseObject) == "{}" { // empty struct
			dst.ListMemberdfpResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListMemberdfpResponseObject = nil
	}

	// try to unmarshal data into ArrayOfMemberdfp
	err = newStrictDecoder(data).Decode(&dst.ArrayOfMemberdfp)
	if err == nil {
		jsonArrayOfMemberdfp, _ := json.Marshal(dst.ArrayOfMemberdfp)
		if string(jsonArrayOfMemberdfp) == "{}" { // empty struct
			dst.ArrayOfMemberdfp = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfMemberdfp = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListMemberdfpResponseObject = nil
		dst.ArrayOfMemberdfp = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListMemberdfpResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListMemberdfpResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListMemberdfpResponse) MarshalJSON() ([]byte, error) {
	if src.ListMemberdfpResponseObject != nil {
		return json.Marshal(&src.ListMemberdfpResponseObject)
	}

	if src.ArrayOfMemberdfp != nil {
		return json.Marshal(&src.ArrayOfMemberdfp)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListMemberdfpResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListMemberdfpResponseObject != nil {
		return obj.ListMemberdfpResponseObject
	}

	if obj.ArrayOfMemberdfp != nil {
		return obj.ArrayOfMemberdfp
	}

	// all schemas are nil
	return nil
}

type NullableListMemberdfpResponse struct {
	value *ListMemberdfpResponse
	isSet bool
}

func (v NullableListMemberdfpResponse) Get() *ListMemberdfpResponse {
	return v.value
}

func (v *NullableListMemberdfpResponse) Set(val *ListMemberdfpResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListMemberdfpResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListMemberdfpResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListMemberdfpResponse(val *ListMemberdfpResponse) *NullableListMemberdfpResponse {
	return &NullableListMemberdfpResponse{value: val, isSet: true}
}

func (v NullableListMemberdfpResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListMemberdfpResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
