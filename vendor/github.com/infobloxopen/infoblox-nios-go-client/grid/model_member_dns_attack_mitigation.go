/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the MemberDnsAttackMitigation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberDnsAttackMitigation{}

// MemberDnsAttackMitigation struct for MemberDnsAttackMitigation
type MemberDnsAttackMitigation struct {
	DetectChr *MemberdnsattackmitigationDetectChr `json:"detect_chr,omitempty"`
	// The cache utilization (in percentage) when Cache Hit Ratio (CHR) starts.
	DetectChrGrace          *int64                                            `json:"detect_chr_grace,omitempty"`
	DetectNxdomainResponses *MemberdnsattackmitigationDetectNxdomainResponses `json:"detect_nxdomain_responses,omitempty"`
	DetectUdpDrop           *MemberdnsattackmitigationDetectUdpDrop           `json:"detect_udp_drop,omitempty"`
	// The minimum time interval (in seconds) between changes in attack status.
	Interval             *int64 `json:"interval,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MemberDnsAttackMitigation MemberDnsAttackMitigation

// NewMemberDnsAttackMitigation instantiates a new MemberDnsAttackMitigation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberDnsAttackMitigation() *MemberDnsAttackMitigation {
	this := MemberDnsAttackMitigation{}
	return &this
}

// NewMemberDnsAttackMitigationWithDefaults instantiates a new MemberDnsAttackMitigation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberDnsAttackMitigationWithDefaults() *MemberDnsAttackMitigation {
	this := MemberDnsAttackMitigation{}
	return &this
}

// GetDetectChr returns the DetectChr field value if set, zero value otherwise.
func (o *MemberDnsAttackMitigation) GetDetectChr() MemberdnsattackmitigationDetectChr {
	if o == nil || IsNil(o.DetectChr) {
		var ret MemberdnsattackmitigationDetectChr
		return ret
	}
	return *o.DetectChr
}

// GetDetectChrOk returns a tuple with the DetectChr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberDnsAttackMitigation) GetDetectChrOk() (*MemberdnsattackmitigationDetectChr, bool) {
	if o == nil || IsNil(o.DetectChr) {
		return nil, false
	}
	return o.DetectChr, true
}

// HasDetectChr returns a boolean if a field has been set.
func (o *MemberDnsAttackMitigation) HasDetectChr() bool {
	if o != nil && !IsNil(o.DetectChr) {
		return true
	}

	return false
}

// SetDetectChr gets a reference to the given MemberdnsattackmitigationDetectChr and assigns it to the DetectChr field.
func (o *MemberDnsAttackMitigation) SetDetectChr(v MemberdnsattackmitigationDetectChr) {
	o.DetectChr = &v
}

// GetDetectChrGrace returns the DetectChrGrace field value if set, zero value otherwise.
func (o *MemberDnsAttackMitigation) GetDetectChrGrace() int64 {
	if o == nil || IsNil(o.DetectChrGrace) {
		var ret int64
		return ret
	}
	return *o.DetectChrGrace
}

// GetDetectChrGraceOk returns a tuple with the DetectChrGrace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberDnsAttackMitigation) GetDetectChrGraceOk() (*int64, bool) {
	if o == nil || IsNil(o.DetectChrGrace) {
		return nil, false
	}
	return o.DetectChrGrace, true
}

// HasDetectChrGrace returns a boolean if a field has been set.
func (o *MemberDnsAttackMitigation) HasDetectChrGrace() bool {
	if o != nil && !IsNil(o.DetectChrGrace) {
		return true
	}

	return false
}

// SetDetectChrGrace gets a reference to the given int64 and assigns it to the DetectChrGrace field.
func (o *MemberDnsAttackMitigation) SetDetectChrGrace(v int64) {
	o.DetectChrGrace = &v
}

// GetDetectNxdomainResponses returns the DetectNxdomainResponses field value if set, zero value otherwise.
func (o *MemberDnsAttackMitigation) GetDetectNxdomainResponses() MemberdnsattackmitigationDetectNxdomainResponses {
	if o == nil || IsNil(o.DetectNxdomainResponses) {
		var ret MemberdnsattackmitigationDetectNxdomainResponses
		return ret
	}
	return *o.DetectNxdomainResponses
}

// GetDetectNxdomainResponsesOk returns a tuple with the DetectNxdomainResponses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberDnsAttackMitigation) GetDetectNxdomainResponsesOk() (*MemberdnsattackmitigationDetectNxdomainResponses, bool) {
	if o == nil || IsNil(o.DetectNxdomainResponses) {
		return nil, false
	}
	return o.DetectNxdomainResponses, true
}

// HasDetectNxdomainResponses returns a boolean if a field has been set.
func (o *MemberDnsAttackMitigation) HasDetectNxdomainResponses() bool {
	if o != nil && !IsNil(o.DetectNxdomainResponses) {
		return true
	}

	return false
}

// SetDetectNxdomainResponses gets a reference to the given MemberdnsattackmitigationDetectNxdomainResponses and assigns it to the DetectNxdomainResponses field.
func (o *MemberDnsAttackMitigation) SetDetectNxdomainResponses(v MemberdnsattackmitigationDetectNxdomainResponses) {
	o.DetectNxdomainResponses = &v
}

// GetDetectUdpDrop returns the DetectUdpDrop field value if set, zero value otherwise.
func (o *MemberDnsAttackMitigation) GetDetectUdpDrop() MemberdnsattackmitigationDetectUdpDrop {
	if o == nil || IsNil(o.DetectUdpDrop) {
		var ret MemberdnsattackmitigationDetectUdpDrop
		return ret
	}
	return *o.DetectUdpDrop
}

// GetDetectUdpDropOk returns a tuple with the DetectUdpDrop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberDnsAttackMitigation) GetDetectUdpDropOk() (*MemberdnsattackmitigationDetectUdpDrop, bool) {
	if o == nil || IsNil(o.DetectUdpDrop) {
		return nil, false
	}
	return o.DetectUdpDrop, true
}

// HasDetectUdpDrop returns a boolean if a field has been set.
func (o *MemberDnsAttackMitigation) HasDetectUdpDrop() bool {
	if o != nil && !IsNil(o.DetectUdpDrop) {
		return true
	}

	return false
}

// SetDetectUdpDrop gets a reference to the given MemberdnsattackmitigationDetectUdpDrop and assigns it to the DetectUdpDrop field.
func (o *MemberDnsAttackMitigation) SetDetectUdpDrop(v MemberdnsattackmitigationDetectUdpDrop) {
	o.DetectUdpDrop = &v
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *MemberDnsAttackMitigation) GetInterval() int64 {
	if o == nil || IsNil(o.Interval) {
		var ret int64
		return ret
	}
	return *o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberDnsAttackMitigation) GetIntervalOk() (*int64, bool) {
	if o == nil || IsNil(o.Interval) {
		return nil, false
	}
	return o.Interval, true
}

// HasInterval returns a boolean if a field has been set.
func (o *MemberDnsAttackMitigation) HasInterval() bool {
	if o != nil && !IsNil(o.Interval) {
		return true
	}

	return false
}

// SetInterval gets a reference to the given int64 and assigns it to the Interval field.
func (o *MemberDnsAttackMitigation) SetInterval(v int64) {
	o.Interval = &v
}

func (o MemberDnsAttackMitigation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberDnsAttackMitigation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DetectChr) {
		toSerialize["detect_chr"] = o.DetectChr
	}
	if !IsNil(o.DetectChrGrace) {
		toSerialize["detect_chr_grace"] = o.DetectChrGrace
	}
	if !IsNil(o.DetectNxdomainResponses) {
		toSerialize["detect_nxdomain_responses"] = o.DetectNxdomainResponses
	}
	if !IsNil(o.DetectUdpDrop) {
		toSerialize["detect_udp_drop"] = o.DetectUdpDrop
	}
	if !IsNil(o.Interval) {
		toSerialize["interval"] = o.Interval
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MemberDnsAttackMitigation) UnmarshalJSON(data []byte) (err error) {
	varMemberDnsAttackMitigation := _MemberDnsAttackMitigation{}

	err = json.Unmarshal(data, &varMemberDnsAttackMitigation)

	if err != nil {
		return err
	}

	*o = MemberDnsAttackMitigation(varMemberDnsAttackMitigation)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "detect_chr")
		delete(additionalProperties, "detect_chr_grace")
		delete(additionalProperties, "detect_nxdomain_responses")
		delete(additionalProperties, "detect_udp_drop")
		delete(additionalProperties, "interval")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMemberDnsAttackMitigation struct {
	value *MemberDnsAttackMitigation
	isSet bool
}

func (v NullableMemberDnsAttackMitigation) Get() *MemberDnsAttackMitigation {
	return v.value
}

func (v *NullableMemberDnsAttackMitigation) Set(val *MemberDnsAttackMitigation) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberDnsAttackMitigation) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberDnsAttackMitigation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberDnsAttackMitigation(val *MemberDnsAttackMitigation) *NullableMemberDnsAttackMitigation {
	return &NullableMemberDnsAttackMitigation{value: val, isSet: true}
}

func (v NullableMemberDnsAttackMitigation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberDnsAttackMitigation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
