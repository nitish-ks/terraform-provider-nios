/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the MemberThreatprotection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberThreatprotection{}

// MemberThreatprotection struct for MemberThreatprotection
type MemberThreatprotection struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// The human readable comment for member threat protection properties.
	Comment *string `json:"comment,omitempty"`
	// The ruleset used for threat protection.
	CurrentRuleset *string `json:"current_ruleset,omitempty"`
	// Determines if multiple BIND responses via TCP connection is enabled or not.
	DisableMultipleDnsTcpRequest *bool `json:"disable_multiple_dns_tcp_request,omitempty"`
	// Determines if DNS responses are sent from acceleration cache before applying Threat Protection rules. Recommended for better performance when using DNS Cache Acceleration.
	EnableAccelRespBeforeThreatProtection *bool `json:"enable_accel_resp_before_threat_protection,omitempty"`
	// Determines if NAT (Network Address Translation) mapping for threat protection is enabled or not.
	EnableNatRules *bool `json:"enable_nat_rules,omitempty"`
	// Determines if the Threat protection service is enabled or not.
	EnableService *bool `json:"enable_service,omitempty"`
	// The number of events logged per second per rule.
	EventsPerSecondPerRule *int64 `json:"events_per_second_per_rule,omitempty"`
	// The hardware model of the member.
	HardwareModel *string `json:"hardware_model,omitempty"`
	// The hardware type of the member.
	HardwareType *string `json:"hardware_type,omitempty"`
	// A Grid member name.
	HostName *string `json:"host_name,omitempty"`
	// The IPv4 address of member threat protection service.
	Ipv4address *string `json:"ipv4address,omitempty"`
	// The IPv6 address of member threat protection service.
	Ipv6address *string `json:"ipv6address,omitempty"`
	// The list of NAT rules.
	NatRules         []MemberThreatprotectionNatRules        `json:"nat_rules,omitempty"`
	OutboundSettings *MemberThreatprotectionOutboundSettings `json:"outbound_settings,omitempty"`
	// The Threat Protection profile associated with the member.
	Profile *string `json:"profile,omitempty"`
	// Use flag for: current_ruleset
	UseCurrentRuleset *bool `json:"use_current_ruleset,omitempty"`
	// Use flag for: disable_multiple_dns_tcp_request
	UseDisableMultipleDnsTcpRequest *bool `json:"use_disable_multiple_dns_tcp_request,omitempty"`
	// Use flag for: enable_accel_resp_before_threat_protection
	UseEnableAccelRespBeforeThreatProtection *bool `json:"use_enable_accel_resp_before_threat_protection,omitempty"`
	// Use flag for: enable_nat_rules
	UseEnableNatRules *bool `json:"use_enable_nat_rules,omitempty"`
	// Use flag for: events_per_second_per_rule
	UseEventsPerSecondPerRule *bool `json:"use_events_per_second_per_rule,omitempty"`
	// Use flag for: outbound_settings
	UseOutboundSettings *bool `json:"use_outbound_settings,omitempty"`
}

// NewMemberThreatprotection instantiates a new MemberThreatprotection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberThreatprotection() *MemberThreatprotection {
	this := MemberThreatprotection{}
	return &this
}

// NewMemberThreatprotectionWithDefaults instantiates a new MemberThreatprotection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberThreatprotectionWithDefaults() *MemberThreatprotection {
	this := MemberThreatprotection{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *MemberThreatprotection) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberThreatprotection) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *MemberThreatprotection) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *MemberThreatprotection) SetRef(v string) {
	o.Ref = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *MemberThreatprotection) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberThreatprotection) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *MemberThreatprotection) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *MemberThreatprotection) SetComment(v string) {
	o.Comment = &v
}

// GetCurrentRuleset returns the CurrentRuleset field value if set, zero value otherwise.
func (o *MemberThreatprotection) GetCurrentRuleset() string {
	if o == nil || IsNil(o.CurrentRuleset) {
		var ret string
		return ret
	}
	return *o.CurrentRuleset
}

// GetCurrentRulesetOk returns a tuple with the CurrentRuleset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberThreatprotection) GetCurrentRulesetOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentRuleset) {
		return nil, false
	}
	return o.CurrentRuleset, true
}

// HasCurrentRuleset returns a boolean if a field has been set.
func (o *MemberThreatprotection) HasCurrentRuleset() bool {
	if o != nil && !IsNil(o.CurrentRuleset) {
		return true
	}

	return false
}

// SetCurrentRuleset gets a reference to the given string and assigns it to the CurrentRuleset field.
func (o *MemberThreatprotection) SetCurrentRuleset(v string) {
	o.CurrentRuleset = &v
}

// GetDisableMultipleDnsTcpRequest returns the DisableMultipleDnsTcpRequest field value if set, zero value otherwise.
func (o *MemberThreatprotection) GetDisableMultipleDnsTcpRequest() bool {
	if o == nil || IsNil(o.DisableMultipleDnsTcpRequest) {
		var ret bool
		return ret
	}
	return *o.DisableMultipleDnsTcpRequest
}

// GetDisableMultipleDnsTcpRequestOk returns a tuple with the DisableMultipleDnsTcpRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberThreatprotection) GetDisableMultipleDnsTcpRequestOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableMultipleDnsTcpRequest) {
		return nil, false
	}
	return o.DisableMultipleDnsTcpRequest, true
}

// HasDisableMultipleDnsTcpRequest returns a boolean if a field has been set.
func (o *MemberThreatprotection) HasDisableMultipleDnsTcpRequest() bool {
	if o != nil && !IsNil(o.DisableMultipleDnsTcpRequest) {
		return true
	}

	return false
}

// SetDisableMultipleDnsTcpRequest gets a reference to the given bool and assigns it to the DisableMultipleDnsTcpRequest field.
func (o *MemberThreatprotection) SetDisableMultipleDnsTcpRequest(v bool) {
	o.DisableMultipleDnsTcpRequest = &v
}

// GetEnableAccelRespBeforeThreatProtection returns the EnableAccelRespBeforeThreatProtection field value if set, zero value otherwise.
func (o *MemberThreatprotection) GetEnableAccelRespBeforeThreatProtection() bool {
	if o == nil || IsNil(o.EnableAccelRespBeforeThreatProtection) {
		var ret bool
		return ret
	}
	return *o.EnableAccelRespBeforeThreatProtection
}

// GetEnableAccelRespBeforeThreatProtectionOk returns a tuple with the EnableAccelRespBeforeThreatProtection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberThreatprotection) GetEnableAccelRespBeforeThreatProtectionOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableAccelRespBeforeThreatProtection) {
		return nil, false
	}
	return o.EnableAccelRespBeforeThreatProtection, true
}

// HasEnableAccelRespBeforeThreatProtection returns a boolean if a field has been set.
func (o *MemberThreatprotection) HasEnableAccelRespBeforeThreatProtection() bool {
	if o != nil && !IsNil(o.EnableAccelRespBeforeThreatProtection) {
		return true
	}

	return false
}

// SetEnableAccelRespBeforeThreatProtection gets a reference to the given bool and assigns it to the EnableAccelRespBeforeThreatProtection field.
func (o *MemberThreatprotection) SetEnableAccelRespBeforeThreatProtection(v bool) {
	o.EnableAccelRespBeforeThreatProtection = &v
}

// GetEnableNatRules returns the EnableNatRules field value if set, zero value otherwise.
func (o *MemberThreatprotection) GetEnableNatRules() bool {
	if o == nil || IsNil(o.EnableNatRules) {
		var ret bool
		return ret
	}
	return *o.EnableNatRules
}

// GetEnableNatRulesOk returns a tuple with the EnableNatRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberThreatprotection) GetEnableNatRulesOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableNatRules) {
		return nil, false
	}
	return o.EnableNatRules, true
}

// HasEnableNatRules returns a boolean if a field has been set.
func (o *MemberThreatprotection) HasEnableNatRules() bool {
	if o != nil && !IsNil(o.EnableNatRules) {
		return true
	}

	return false
}

// SetEnableNatRules gets a reference to the given bool and assigns it to the EnableNatRules field.
func (o *MemberThreatprotection) SetEnableNatRules(v bool) {
	o.EnableNatRules = &v
}

// GetEnableService returns the EnableService field value if set, zero value otherwise.
func (o *MemberThreatprotection) GetEnableService() bool {
	if o == nil || IsNil(o.EnableService) {
		var ret bool
		return ret
	}
	return *o.EnableService
}

// GetEnableServiceOk returns a tuple with the EnableService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberThreatprotection) GetEnableServiceOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableService) {
		return nil, false
	}
	return o.EnableService, true
}

// HasEnableService returns a boolean if a field has been set.
func (o *MemberThreatprotection) HasEnableService() bool {
	if o != nil && !IsNil(o.EnableService) {
		return true
	}

	return false
}

// SetEnableService gets a reference to the given bool and assigns it to the EnableService field.
func (o *MemberThreatprotection) SetEnableService(v bool) {
	o.EnableService = &v
}

// GetEventsPerSecondPerRule returns the EventsPerSecondPerRule field value if set, zero value otherwise.
func (o *MemberThreatprotection) GetEventsPerSecondPerRule() int64 {
	if o == nil || IsNil(o.EventsPerSecondPerRule) {
		var ret int64
		return ret
	}
	return *o.EventsPerSecondPerRule
}

// GetEventsPerSecondPerRuleOk returns a tuple with the EventsPerSecondPerRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberThreatprotection) GetEventsPerSecondPerRuleOk() (*int64, bool) {
	if o == nil || IsNil(o.EventsPerSecondPerRule) {
		return nil, false
	}
	return o.EventsPerSecondPerRule, true
}

// HasEventsPerSecondPerRule returns a boolean if a field has been set.
func (o *MemberThreatprotection) HasEventsPerSecondPerRule() bool {
	if o != nil && !IsNil(o.EventsPerSecondPerRule) {
		return true
	}

	return false
}

// SetEventsPerSecondPerRule gets a reference to the given int64 and assigns it to the EventsPerSecondPerRule field.
func (o *MemberThreatprotection) SetEventsPerSecondPerRule(v int64) {
	o.EventsPerSecondPerRule = &v
}

// GetHardwareModel returns the HardwareModel field value if set, zero value otherwise.
func (o *MemberThreatprotection) GetHardwareModel() string {
	if o == nil || IsNil(o.HardwareModel) {
		var ret string
		return ret
	}
	return *o.HardwareModel
}

// GetHardwareModelOk returns a tuple with the HardwareModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberThreatprotection) GetHardwareModelOk() (*string, bool) {
	if o == nil || IsNil(o.HardwareModel) {
		return nil, false
	}
	return o.HardwareModel, true
}

// HasHardwareModel returns a boolean if a field has been set.
func (o *MemberThreatprotection) HasHardwareModel() bool {
	if o != nil && !IsNil(o.HardwareModel) {
		return true
	}

	return false
}

// SetHardwareModel gets a reference to the given string and assigns it to the HardwareModel field.
func (o *MemberThreatprotection) SetHardwareModel(v string) {
	o.HardwareModel = &v
}

// GetHardwareType returns the HardwareType field value if set, zero value otherwise.
func (o *MemberThreatprotection) GetHardwareType() string {
	if o == nil || IsNil(o.HardwareType) {
		var ret string
		return ret
	}
	return *o.HardwareType
}

// GetHardwareTypeOk returns a tuple with the HardwareType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberThreatprotection) GetHardwareTypeOk() (*string, bool) {
	if o == nil || IsNil(o.HardwareType) {
		return nil, false
	}
	return o.HardwareType, true
}

// HasHardwareType returns a boolean if a field has been set.
func (o *MemberThreatprotection) HasHardwareType() bool {
	if o != nil && !IsNil(o.HardwareType) {
		return true
	}

	return false
}

// SetHardwareType gets a reference to the given string and assigns it to the HardwareType field.
func (o *MemberThreatprotection) SetHardwareType(v string) {
	o.HardwareType = &v
}

// GetHostName returns the HostName field value if set, zero value otherwise.
func (o *MemberThreatprotection) GetHostName() string {
	if o == nil || IsNil(o.HostName) {
		var ret string
		return ret
	}
	return *o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberThreatprotection) GetHostNameOk() (*string, bool) {
	if o == nil || IsNil(o.HostName) {
		return nil, false
	}
	return o.HostName, true
}

// HasHostName returns a boolean if a field has been set.
func (o *MemberThreatprotection) HasHostName() bool {
	if o != nil && !IsNil(o.HostName) {
		return true
	}

	return false
}

// SetHostName gets a reference to the given string and assigns it to the HostName field.
func (o *MemberThreatprotection) SetHostName(v string) {
	o.HostName = &v
}

// GetIpv4address returns the Ipv4address field value if set, zero value otherwise.
func (o *MemberThreatprotection) GetIpv4address() string {
	if o == nil || IsNil(o.Ipv4address) {
		var ret string
		return ret
	}
	return *o.Ipv4address
}

// GetIpv4addressOk returns a tuple with the Ipv4address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberThreatprotection) GetIpv4addressOk() (*string, bool) {
	if o == nil || IsNil(o.Ipv4address) {
		return nil, false
	}
	return o.Ipv4address, true
}

// HasIpv4address returns a boolean if a field has been set.
func (o *MemberThreatprotection) HasIpv4address() bool {
	if o != nil && !IsNil(o.Ipv4address) {
		return true
	}

	return false
}

// SetIpv4address gets a reference to the given string and assigns it to the Ipv4address field.
func (o *MemberThreatprotection) SetIpv4address(v string) {
	o.Ipv4address = &v
}

// GetIpv6address returns the Ipv6address field value if set, zero value otherwise.
func (o *MemberThreatprotection) GetIpv6address() string {
	if o == nil || IsNil(o.Ipv6address) {
		var ret string
		return ret
	}
	return *o.Ipv6address
}

// GetIpv6addressOk returns a tuple with the Ipv6address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberThreatprotection) GetIpv6addressOk() (*string, bool) {
	if o == nil || IsNil(o.Ipv6address) {
		return nil, false
	}
	return o.Ipv6address, true
}

// HasIpv6address returns a boolean if a field has been set.
func (o *MemberThreatprotection) HasIpv6address() bool {
	if o != nil && !IsNil(o.Ipv6address) {
		return true
	}

	return false
}

// SetIpv6address gets a reference to the given string and assigns it to the Ipv6address field.
func (o *MemberThreatprotection) SetIpv6address(v string) {
	o.Ipv6address = &v
}

// GetNatRules returns the NatRules field value if set, zero value otherwise.
func (o *MemberThreatprotection) GetNatRules() []MemberThreatprotectionNatRules {
	if o == nil || IsNil(o.NatRules) {
		var ret []MemberThreatprotectionNatRules
		return ret
	}
	return o.NatRules
}

// GetNatRulesOk returns a tuple with the NatRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberThreatprotection) GetNatRulesOk() ([]MemberThreatprotectionNatRules, bool) {
	if o == nil || IsNil(o.NatRules) {
		return nil, false
	}
	return o.NatRules, true
}

// HasNatRules returns a boolean if a field has been set.
func (o *MemberThreatprotection) HasNatRules() bool {
	if o != nil && !IsNil(o.NatRules) {
		return true
	}

	return false
}

// SetNatRules gets a reference to the given []MemberThreatprotectionNatRules and assigns it to the NatRules field.
func (o *MemberThreatprotection) SetNatRules(v []MemberThreatprotectionNatRules) {
	o.NatRules = v
}

// GetOutboundSettings returns the OutboundSettings field value if set, zero value otherwise.
func (o *MemberThreatprotection) GetOutboundSettings() MemberThreatprotectionOutboundSettings {
	if o == nil || IsNil(o.OutboundSettings) {
		var ret MemberThreatprotectionOutboundSettings
		return ret
	}
	return *o.OutboundSettings
}

// GetOutboundSettingsOk returns a tuple with the OutboundSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberThreatprotection) GetOutboundSettingsOk() (*MemberThreatprotectionOutboundSettings, bool) {
	if o == nil || IsNil(o.OutboundSettings) {
		return nil, false
	}
	return o.OutboundSettings, true
}

// HasOutboundSettings returns a boolean if a field has been set.
func (o *MemberThreatprotection) HasOutboundSettings() bool {
	if o != nil && !IsNil(o.OutboundSettings) {
		return true
	}

	return false
}

// SetOutboundSettings gets a reference to the given MemberThreatprotectionOutboundSettings and assigns it to the OutboundSettings field.
func (o *MemberThreatprotection) SetOutboundSettings(v MemberThreatprotectionOutboundSettings) {
	o.OutboundSettings = &v
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *MemberThreatprotection) GetProfile() string {
	if o == nil || IsNil(o.Profile) {
		var ret string
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberThreatprotection) GetProfileOk() (*string, bool) {
	if o == nil || IsNil(o.Profile) {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *MemberThreatprotection) HasProfile() bool {
	if o != nil && !IsNil(o.Profile) {
		return true
	}

	return false
}

// SetProfile gets a reference to the given string and assigns it to the Profile field.
func (o *MemberThreatprotection) SetProfile(v string) {
	o.Profile = &v
}

// GetUseCurrentRuleset returns the UseCurrentRuleset field value if set, zero value otherwise.
func (o *MemberThreatprotection) GetUseCurrentRuleset() bool {
	if o == nil || IsNil(o.UseCurrentRuleset) {
		var ret bool
		return ret
	}
	return *o.UseCurrentRuleset
}

// GetUseCurrentRulesetOk returns a tuple with the UseCurrentRuleset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberThreatprotection) GetUseCurrentRulesetOk() (*bool, bool) {
	if o == nil || IsNil(o.UseCurrentRuleset) {
		return nil, false
	}
	return o.UseCurrentRuleset, true
}

// HasUseCurrentRuleset returns a boolean if a field has been set.
func (o *MemberThreatprotection) HasUseCurrentRuleset() bool {
	if o != nil && !IsNil(o.UseCurrentRuleset) {
		return true
	}

	return false
}

// SetUseCurrentRuleset gets a reference to the given bool and assigns it to the UseCurrentRuleset field.
func (o *MemberThreatprotection) SetUseCurrentRuleset(v bool) {
	o.UseCurrentRuleset = &v
}

// GetUseDisableMultipleDnsTcpRequest returns the UseDisableMultipleDnsTcpRequest field value if set, zero value otherwise.
func (o *MemberThreatprotection) GetUseDisableMultipleDnsTcpRequest() bool {
	if o == nil || IsNil(o.UseDisableMultipleDnsTcpRequest) {
		var ret bool
		return ret
	}
	return *o.UseDisableMultipleDnsTcpRequest
}

// GetUseDisableMultipleDnsTcpRequestOk returns a tuple with the UseDisableMultipleDnsTcpRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberThreatprotection) GetUseDisableMultipleDnsTcpRequestOk() (*bool, bool) {
	if o == nil || IsNil(o.UseDisableMultipleDnsTcpRequest) {
		return nil, false
	}
	return o.UseDisableMultipleDnsTcpRequest, true
}

// HasUseDisableMultipleDnsTcpRequest returns a boolean if a field has been set.
func (o *MemberThreatprotection) HasUseDisableMultipleDnsTcpRequest() bool {
	if o != nil && !IsNil(o.UseDisableMultipleDnsTcpRequest) {
		return true
	}

	return false
}

// SetUseDisableMultipleDnsTcpRequest gets a reference to the given bool and assigns it to the UseDisableMultipleDnsTcpRequest field.
func (o *MemberThreatprotection) SetUseDisableMultipleDnsTcpRequest(v bool) {
	o.UseDisableMultipleDnsTcpRequest = &v
}

// GetUseEnableAccelRespBeforeThreatProtection returns the UseEnableAccelRespBeforeThreatProtection field value if set, zero value otherwise.
func (o *MemberThreatprotection) GetUseEnableAccelRespBeforeThreatProtection() bool {
	if o == nil || IsNil(o.UseEnableAccelRespBeforeThreatProtection) {
		var ret bool
		return ret
	}
	return *o.UseEnableAccelRespBeforeThreatProtection
}

// GetUseEnableAccelRespBeforeThreatProtectionOk returns a tuple with the UseEnableAccelRespBeforeThreatProtection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberThreatprotection) GetUseEnableAccelRespBeforeThreatProtectionOk() (*bool, bool) {
	if o == nil || IsNil(o.UseEnableAccelRespBeforeThreatProtection) {
		return nil, false
	}
	return o.UseEnableAccelRespBeforeThreatProtection, true
}

// HasUseEnableAccelRespBeforeThreatProtection returns a boolean if a field has been set.
func (o *MemberThreatprotection) HasUseEnableAccelRespBeforeThreatProtection() bool {
	if o != nil && !IsNil(o.UseEnableAccelRespBeforeThreatProtection) {
		return true
	}

	return false
}

// SetUseEnableAccelRespBeforeThreatProtection gets a reference to the given bool and assigns it to the UseEnableAccelRespBeforeThreatProtection field.
func (o *MemberThreatprotection) SetUseEnableAccelRespBeforeThreatProtection(v bool) {
	o.UseEnableAccelRespBeforeThreatProtection = &v
}

// GetUseEnableNatRules returns the UseEnableNatRules field value if set, zero value otherwise.
func (o *MemberThreatprotection) GetUseEnableNatRules() bool {
	if o == nil || IsNil(o.UseEnableNatRules) {
		var ret bool
		return ret
	}
	return *o.UseEnableNatRules
}

// GetUseEnableNatRulesOk returns a tuple with the UseEnableNatRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberThreatprotection) GetUseEnableNatRulesOk() (*bool, bool) {
	if o == nil || IsNil(o.UseEnableNatRules) {
		return nil, false
	}
	return o.UseEnableNatRules, true
}

// HasUseEnableNatRules returns a boolean if a field has been set.
func (o *MemberThreatprotection) HasUseEnableNatRules() bool {
	if o != nil && !IsNil(o.UseEnableNatRules) {
		return true
	}

	return false
}

// SetUseEnableNatRules gets a reference to the given bool and assigns it to the UseEnableNatRules field.
func (o *MemberThreatprotection) SetUseEnableNatRules(v bool) {
	o.UseEnableNatRules = &v
}

// GetUseEventsPerSecondPerRule returns the UseEventsPerSecondPerRule field value if set, zero value otherwise.
func (o *MemberThreatprotection) GetUseEventsPerSecondPerRule() bool {
	if o == nil || IsNil(o.UseEventsPerSecondPerRule) {
		var ret bool
		return ret
	}
	return *o.UseEventsPerSecondPerRule
}

// GetUseEventsPerSecondPerRuleOk returns a tuple with the UseEventsPerSecondPerRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberThreatprotection) GetUseEventsPerSecondPerRuleOk() (*bool, bool) {
	if o == nil || IsNil(o.UseEventsPerSecondPerRule) {
		return nil, false
	}
	return o.UseEventsPerSecondPerRule, true
}

// HasUseEventsPerSecondPerRule returns a boolean if a field has been set.
func (o *MemberThreatprotection) HasUseEventsPerSecondPerRule() bool {
	if o != nil && !IsNil(o.UseEventsPerSecondPerRule) {
		return true
	}

	return false
}

// SetUseEventsPerSecondPerRule gets a reference to the given bool and assigns it to the UseEventsPerSecondPerRule field.
func (o *MemberThreatprotection) SetUseEventsPerSecondPerRule(v bool) {
	o.UseEventsPerSecondPerRule = &v
}

// GetUseOutboundSettings returns the UseOutboundSettings field value if set, zero value otherwise.
func (o *MemberThreatprotection) GetUseOutboundSettings() bool {
	if o == nil || IsNil(o.UseOutboundSettings) {
		var ret bool
		return ret
	}
	return *o.UseOutboundSettings
}

// GetUseOutboundSettingsOk returns a tuple with the UseOutboundSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberThreatprotection) GetUseOutboundSettingsOk() (*bool, bool) {
	if o == nil || IsNil(o.UseOutboundSettings) {
		return nil, false
	}
	return o.UseOutboundSettings, true
}

// HasUseOutboundSettings returns a boolean if a field has been set.
func (o *MemberThreatprotection) HasUseOutboundSettings() bool {
	if o != nil && !IsNil(o.UseOutboundSettings) {
		return true
	}

	return false
}

// SetUseOutboundSettings gets a reference to the given bool and assigns it to the UseOutboundSettings field.
func (o *MemberThreatprotection) SetUseOutboundSettings(v bool) {
	o.UseOutboundSettings = &v
}

func (o MemberThreatprotection) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberThreatprotection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.CurrentRuleset) {
		toSerialize["current_ruleset"] = o.CurrentRuleset
	}
	if !IsNil(o.DisableMultipleDnsTcpRequest) {
		toSerialize["disable_multiple_dns_tcp_request"] = o.DisableMultipleDnsTcpRequest
	}
	if !IsNil(o.EnableAccelRespBeforeThreatProtection) {
		toSerialize["enable_accel_resp_before_threat_protection"] = o.EnableAccelRespBeforeThreatProtection
	}
	if !IsNil(o.EnableNatRules) {
		toSerialize["enable_nat_rules"] = o.EnableNatRules
	}
	if !IsNil(o.EnableService) {
		toSerialize["enable_service"] = o.EnableService
	}
	if !IsNil(o.EventsPerSecondPerRule) {
		toSerialize["events_per_second_per_rule"] = o.EventsPerSecondPerRule
	}
	if !IsNil(o.HardwareModel) {
		toSerialize["hardware_model"] = o.HardwareModel
	}
	if !IsNil(o.HardwareType) {
		toSerialize["hardware_type"] = o.HardwareType
	}
	if !IsNil(o.HostName) {
		toSerialize["host_name"] = o.HostName
	}
	if !IsNil(o.Ipv4address) {
		toSerialize["ipv4address"] = o.Ipv4address
	}
	if !IsNil(o.Ipv6address) {
		toSerialize["ipv6address"] = o.Ipv6address
	}
	if !IsNil(o.NatRules) {
		toSerialize["nat_rules"] = o.NatRules
	}
	if !IsNil(o.OutboundSettings) {
		toSerialize["outbound_settings"] = o.OutboundSettings
	}
	if !IsNil(o.Profile) {
		toSerialize["profile"] = o.Profile
	}
	if !IsNil(o.UseCurrentRuleset) {
		toSerialize["use_current_ruleset"] = o.UseCurrentRuleset
	}
	if !IsNil(o.UseDisableMultipleDnsTcpRequest) {
		toSerialize["use_disable_multiple_dns_tcp_request"] = o.UseDisableMultipleDnsTcpRequest
	}
	if !IsNil(o.UseEnableAccelRespBeforeThreatProtection) {
		toSerialize["use_enable_accel_resp_before_threat_protection"] = o.UseEnableAccelRespBeforeThreatProtection
	}
	if !IsNil(o.UseEnableNatRules) {
		toSerialize["use_enable_nat_rules"] = o.UseEnableNatRules
	}
	if !IsNil(o.UseEventsPerSecondPerRule) {
		toSerialize["use_events_per_second_per_rule"] = o.UseEventsPerSecondPerRule
	}
	if !IsNil(o.UseOutboundSettings) {
		toSerialize["use_outbound_settings"] = o.UseOutboundSettings
	}
	return toSerialize, nil
}

type NullableMemberThreatprotection struct {
	value *MemberThreatprotection
	isSet bool
}

func (v NullableMemberThreatprotection) Get() *MemberThreatprotection {
	return v.value
}

func (v *NullableMemberThreatprotection) Set(val *MemberThreatprotection) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberThreatprotection) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberThreatprotection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberThreatprotection(val *MemberThreatprotection) *NullableMemberThreatprotection {
	return &NullableMemberThreatprotection{value: val, isSet: true}
}

func (v NullableMemberThreatprotection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberThreatprotection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
