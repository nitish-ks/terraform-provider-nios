/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the MemberTrafficCaptureQpsSetting type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberTrafficCaptureQpsSetting{}

// MemberTrafficCaptureQpsSetting struct for MemberTrafficCaptureQpsSetting
type MemberTrafficCaptureQpsSetting struct {
	// Enable triggering automated traffic capture based on DNS queries per second threshold.
	QpsTriggerEnable *bool `json:"qps_trigger_enable,omitempty"`
	// DNS queries per second threshold below which traffic capture will be triggered.
	QpsThreshold *int64 `json:"qps_threshold,omitempty"`
	// DNS queries per second threshold below which traffic capture will be stopped.
	QpsReset             *int64 `json:"qps_reset,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MemberTrafficCaptureQpsSetting MemberTrafficCaptureQpsSetting

// NewMemberTrafficCaptureQpsSetting instantiates a new MemberTrafficCaptureQpsSetting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberTrafficCaptureQpsSetting() *MemberTrafficCaptureQpsSetting {
	this := MemberTrafficCaptureQpsSetting{}
	return &this
}

// NewMemberTrafficCaptureQpsSettingWithDefaults instantiates a new MemberTrafficCaptureQpsSetting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberTrafficCaptureQpsSettingWithDefaults() *MemberTrafficCaptureQpsSetting {
	this := MemberTrafficCaptureQpsSetting{}
	return &this
}

// GetQpsTriggerEnable returns the QpsTriggerEnable field value if set, zero value otherwise.
func (o *MemberTrafficCaptureQpsSetting) GetQpsTriggerEnable() bool {
	if o == nil || IsNil(o.QpsTriggerEnable) {
		var ret bool
		return ret
	}
	return *o.QpsTriggerEnable
}

// GetQpsTriggerEnableOk returns a tuple with the QpsTriggerEnable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTrafficCaptureQpsSetting) GetQpsTriggerEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.QpsTriggerEnable) {
		return nil, false
	}
	return o.QpsTriggerEnable, true
}

// HasQpsTriggerEnable returns a boolean if a field has been set.
func (o *MemberTrafficCaptureQpsSetting) HasQpsTriggerEnable() bool {
	if o != nil && !IsNil(o.QpsTriggerEnable) {
		return true
	}

	return false
}

// SetQpsTriggerEnable gets a reference to the given bool and assigns it to the QpsTriggerEnable field.
func (o *MemberTrafficCaptureQpsSetting) SetQpsTriggerEnable(v bool) {
	o.QpsTriggerEnable = &v
}

// GetQpsThreshold returns the QpsThreshold field value if set, zero value otherwise.
func (o *MemberTrafficCaptureQpsSetting) GetQpsThreshold() int64 {
	if o == nil || IsNil(o.QpsThreshold) {
		var ret int64
		return ret
	}
	return *o.QpsThreshold
}

// GetQpsThresholdOk returns a tuple with the QpsThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTrafficCaptureQpsSetting) GetQpsThresholdOk() (*int64, bool) {
	if o == nil || IsNil(o.QpsThreshold) {
		return nil, false
	}
	return o.QpsThreshold, true
}

// HasQpsThreshold returns a boolean if a field has been set.
func (o *MemberTrafficCaptureQpsSetting) HasQpsThreshold() bool {
	if o != nil && !IsNil(o.QpsThreshold) {
		return true
	}

	return false
}

// SetQpsThreshold gets a reference to the given int64 and assigns it to the QpsThreshold field.
func (o *MemberTrafficCaptureQpsSetting) SetQpsThreshold(v int64) {
	o.QpsThreshold = &v
}

// GetQpsReset returns the QpsReset field value if set, zero value otherwise.
func (o *MemberTrafficCaptureQpsSetting) GetQpsReset() int64 {
	if o == nil || IsNil(o.QpsReset) {
		var ret int64
		return ret
	}
	return *o.QpsReset
}

// GetQpsResetOk returns a tuple with the QpsReset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTrafficCaptureQpsSetting) GetQpsResetOk() (*int64, bool) {
	if o == nil || IsNil(o.QpsReset) {
		return nil, false
	}
	return o.QpsReset, true
}

// HasQpsReset returns a boolean if a field has been set.
func (o *MemberTrafficCaptureQpsSetting) HasQpsReset() bool {
	if o != nil && !IsNil(o.QpsReset) {
		return true
	}

	return false
}

// SetQpsReset gets a reference to the given int64 and assigns it to the QpsReset field.
func (o *MemberTrafficCaptureQpsSetting) SetQpsReset(v int64) {
	o.QpsReset = &v
}

func (o MemberTrafficCaptureQpsSetting) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberTrafficCaptureQpsSetting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.QpsTriggerEnable) {
		toSerialize["qps_trigger_enable"] = o.QpsTriggerEnable
	}
	if !IsNil(o.QpsThreshold) {
		toSerialize["qps_threshold"] = o.QpsThreshold
	}
	if !IsNil(o.QpsReset) {
		toSerialize["qps_reset"] = o.QpsReset
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MemberTrafficCaptureQpsSetting) UnmarshalJSON(data []byte) (err error) {
	varMemberTrafficCaptureQpsSetting := _MemberTrafficCaptureQpsSetting{}

	err = json.Unmarshal(data, &varMemberTrafficCaptureQpsSetting)

	if err != nil {
		return err
	}

	*o = MemberTrafficCaptureQpsSetting(varMemberTrafficCaptureQpsSetting)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "qps_trigger_enable")
		delete(additionalProperties, "qps_threshold")
		delete(additionalProperties, "qps_reset")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMemberTrafficCaptureQpsSetting struct {
	value *MemberTrafficCaptureQpsSetting
	isSet bool
}

func (v NullableMemberTrafficCaptureQpsSetting) Get() *MemberTrafficCaptureQpsSetting {
	return v.value
}

func (v *NullableMemberTrafficCaptureQpsSetting) Set(val *MemberTrafficCaptureQpsSetting) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberTrafficCaptureQpsSetting) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberTrafficCaptureQpsSetting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberTrafficCaptureQpsSetting(val *MemberTrafficCaptureQpsSetting) *NullableMemberTrafficCaptureQpsSetting {
	return &NullableMemberTrafficCaptureQpsSetting{value: val, isSet: true}
}

func (v NullableMemberTrafficCaptureQpsSetting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberTrafficCaptureQpsSetting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
