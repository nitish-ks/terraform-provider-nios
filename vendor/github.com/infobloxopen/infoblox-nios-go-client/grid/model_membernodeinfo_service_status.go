/*
Infoblox GRID API

OpenAPI specification for Infoblox NIOS WAPI GRID objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grid

import (
	"encoding/json"
)

// checks if the MembernodeinfoServiceStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembernodeinfoServiceStatus{}

// MembernodeinfoServiceStatus struct for MembernodeinfoServiceStatus
type MembernodeinfoServiceStatus struct {
	// The description of the current service status.
	Description *string `json:"description,omitempty"`
	// The service status.
	Status *string `json:"status,omitempty"`
	// The service identifier.
	Service              *string `json:"service,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MembernodeinfoServiceStatus MembernodeinfoServiceStatus

// NewMembernodeinfoServiceStatus instantiates a new MembernodeinfoServiceStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembernodeinfoServiceStatus() *MembernodeinfoServiceStatus {
	this := MembernodeinfoServiceStatus{}
	return &this
}

// NewMembernodeinfoServiceStatusWithDefaults instantiates a new MembernodeinfoServiceStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembernodeinfoServiceStatusWithDefaults() *MembernodeinfoServiceStatus {
	this := MembernodeinfoServiceStatus{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MembernodeinfoServiceStatus) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembernodeinfoServiceStatus) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MembernodeinfoServiceStatus) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MembernodeinfoServiceStatus) SetDescription(v string) {
	o.Description = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *MembernodeinfoServiceStatus) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembernodeinfoServiceStatus) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MembernodeinfoServiceStatus) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *MembernodeinfoServiceStatus) SetStatus(v string) {
	o.Status = &v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *MembernodeinfoServiceStatus) GetService() string {
	if o == nil || IsNil(o.Service) {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembernodeinfoServiceStatus) GetServiceOk() (*string, bool) {
	if o == nil || IsNil(o.Service) {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *MembernodeinfoServiceStatus) HasService() bool {
	if o != nil && !IsNil(o.Service) {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *MembernodeinfoServiceStatus) SetService(v string) {
	o.Service = &v
}

func (o MembernodeinfoServiceStatus) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembernodeinfoServiceStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Service) {
		toSerialize["service"] = o.Service
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MembernodeinfoServiceStatus) UnmarshalJSON(data []byte) (err error) {
	varMembernodeinfoServiceStatus := _MembernodeinfoServiceStatus{}

	err = json.Unmarshal(data, &varMembernodeinfoServiceStatus)

	if err != nil {
		return err
	}

	*o = MembernodeinfoServiceStatus(varMembernodeinfoServiceStatus)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "description")
		delete(additionalProperties, "status")
		delete(additionalProperties, "service")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMembernodeinfoServiceStatus struct {
	value *MembernodeinfoServiceStatus
	isSet bool
}

func (v NullableMembernodeinfoServiceStatus) Get() *MembernodeinfoServiceStatus {
	return v.value
}

func (v *NullableMembernodeinfoServiceStatus) Set(val *MembernodeinfoServiceStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableMembernodeinfoServiceStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableMembernodeinfoServiceStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembernodeinfoServiceStatus(val *MembernodeinfoServiceStatus) *NullableMembernodeinfoServiceStatus {
	return &NullableMembernodeinfoServiceStatus{value: val, isSet: true}
}

func (v NullableMembernodeinfoServiceStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembernodeinfoServiceStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
