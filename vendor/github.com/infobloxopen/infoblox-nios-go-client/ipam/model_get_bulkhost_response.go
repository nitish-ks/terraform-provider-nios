/*
Infoblox IPAM API

OpenAPI specification for Infoblox NIOS WAPI IPAM objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipam

import (
	"encoding/json"
	"fmt"
)

// GetBulkhostResponse - struct for GetBulkhostResponse
type GetBulkhostResponse struct {
	Bulkhost                          *Bulkhost
	GetBulkhostResponseObjectAsResult *GetBulkhostResponseObjectAsResult
}

// BulkhostAsGetBulkhostResponse is a convenience function that returns Bulkhost wrapped in GetBulkhostResponse
func BulkhostAsGetBulkhostResponse(v *Bulkhost) GetBulkhostResponse {
	return GetBulkhostResponse{
		Bulkhost: v,
	}
}

// GetBulkhostResponseObjectAsResultAsGetBulkhostResponse is a convenience function that returns GetBulkhostResponseObjectAsResult wrapped in GetBulkhostResponse
func GetBulkhostResponseObjectAsResultAsGetBulkhostResponse(v *GetBulkhostResponseObjectAsResult) GetBulkhostResponse {
	return GetBulkhostResponse{
		GetBulkhostResponseObjectAsResult: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetBulkhostResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into Bulkhost
	err = newStrictDecoder(data).Decode(&dst.Bulkhost)
	if err == nil {
		jsonBulkhost, _ := json.Marshal(dst.Bulkhost)
		if string(jsonBulkhost) == "{}" { // empty struct
			dst.Bulkhost = nil
		} else {
			match++
		}
	} else {
		dst.Bulkhost = nil
	}

	// try to unmarshal data into GetBulkhostResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetBulkhostResponseObjectAsResult)
	if err == nil {
		jsonGetBulkhostResponseObjectAsResult, _ := json.Marshal(dst.GetBulkhostResponseObjectAsResult)
		if string(jsonGetBulkhostResponseObjectAsResult) == "{}" { // empty struct
			dst.GetBulkhostResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetBulkhostResponseObjectAsResult = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.Bulkhost = nil
		dst.GetBulkhostResponseObjectAsResult = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetBulkhostResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetBulkhostResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetBulkhostResponse) MarshalJSON() ([]byte, error) {
	if src.Bulkhost != nil {
		return json.Marshal(&src.Bulkhost)
	}

	if src.GetBulkhostResponseObjectAsResult != nil {
		return json.Marshal(&src.GetBulkhostResponseObjectAsResult)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetBulkhostResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.Bulkhost != nil {
		return obj.Bulkhost
	}

	if obj.GetBulkhostResponseObjectAsResult != nil {
		return obj.GetBulkhostResponseObjectAsResult
	}

	// all schemas are nil
	return nil
}

type NullableGetBulkhostResponse struct {
	value *GetBulkhostResponse
	isSet bool
}

func (v NullableGetBulkhostResponse) Get() *GetBulkhostResponse {
	return v.value
}

func (v *NullableGetBulkhostResponse) Set(val *GetBulkhostResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBulkhostResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBulkhostResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBulkhostResponse(val *GetBulkhostResponse) *NullableGetBulkhostResponse {
	return &NullableGetBulkhostResponse{value: val, isSet: true}
}

func (v NullableGetBulkhostResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBulkhostResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
