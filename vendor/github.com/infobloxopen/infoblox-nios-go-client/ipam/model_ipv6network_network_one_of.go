/*
Infoblox IPAM API

OpenAPI specification for Infoblox NIOS WAPI IPAM objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipam

import (
	"encoding/json"
)

// checks if the Ipv6networkNetworkOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Ipv6networkNetworkOneOf{}

// Ipv6networkNetworkOneOf ipv6network: The network address in IPv6 Address/CIDR format. For regular expression searches, only the IPv6 Address portion is supported. Searches for the CIDR portion is always an exact match. For example, both network containers 16::0/28 and 26::0/24 are matched by expression '.6' and only 26::0/24 is matched by '.6/24'.
type Ipv6networkNetworkOneOf struct {
	ObjectFunction   *string                `json:"_object_function,omitempty"`
	Parameters       map[string]interface{} `json:"_parameters,omitempty"`
	ResultField      *string                `json:"_result_field,omitempty"`
	Object           *string                `json:"_object,omitempty"`
	ObjectParameters map[string]interface{} `json:"_object_parameters,omitempty"`
	// A WAPI object reference on which the function calls. Either _object or _object_ref must be set.
	ObjectRef            *string `json:"_object_ref,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Ipv6networkNetworkOneOf Ipv6networkNetworkOneOf

// NewIpv6networkNetworkOneOf instantiates a new Ipv6networkNetworkOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpv6networkNetworkOneOf() *Ipv6networkNetworkOneOf {
	this := Ipv6networkNetworkOneOf{}
	return &this
}

// NewIpv6networkNetworkOneOfWithDefaults instantiates a new Ipv6networkNetworkOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpv6networkNetworkOneOfWithDefaults() *Ipv6networkNetworkOneOf {
	this := Ipv6networkNetworkOneOf{}
	return &this
}

// GetObjectFunction returns the ObjectFunction field value if set, zero value otherwise.
func (o *Ipv6networkNetworkOneOf) GetObjectFunction() string {
	if o == nil || IsNil(o.ObjectFunction) {
		var ret string
		return ret
	}
	return *o.ObjectFunction
}

// GetObjectFunctionOk returns a tuple with the ObjectFunction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ipv6networkNetworkOneOf) GetObjectFunctionOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectFunction) {
		return nil, false
	}
	return o.ObjectFunction, true
}

// HasObjectFunction returns a boolean if a field has been set.
func (o *Ipv6networkNetworkOneOf) HasObjectFunction() bool {
	if o != nil && !IsNil(o.ObjectFunction) {
		return true
	}

	return false
}

// SetObjectFunction gets a reference to the given string and assigns it to the ObjectFunction field.
func (o *Ipv6networkNetworkOneOf) SetObjectFunction(v string) {
	o.ObjectFunction = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *Ipv6networkNetworkOneOf) GetParameters() map[string]interface{} {
	if o == nil || IsNil(o.Parameters) {
		var ret map[string]interface{}
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ipv6networkNetworkOneOf) GetParametersOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Parameters) {
		return map[string]interface{}{}, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *Ipv6networkNetworkOneOf) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given map[string]interface{} and assigns it to the Parameters field.
func (o *Ipv6networkNetworkOneOf) SetParameters(v map[string]interface{}) {
	o.Parameters = v
}

// GetResultField returns the ResultField field value if set, zero value otherwise.
func (o *Ipv6networkNetworkOneOf) GetResultField() string {
	if o == nil || IsNil(o.ResultField) {
		var ret string
		return ret
	}
	return *o.ResultField
}

// GetResultFieldOk returns a tuple with the ResultField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ipv6networkNetworkOneOf) GetResultFieldOk() (*string, bool) {
	if o == nil || IsNil(o.ResultField) {
		return nil, false
	}
	return o.ResultField, true
}

// HasResultField returns a boolean if a field has been set.
func (o *Ipv6networkNetworkOneOf) HasResultField() bool {
	if o != nil && !IsNil(o.ResultField) {
		return true
	}

	return false
}

// SetResultField gets a reference to the given string and assigns it to the ResultField field.
func (o *Ipv6networkNetworkOneOf) SetResultField(v string) {
	o.ResultField = &v
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *Ipv6networkNetworkOneOf) GetObject() string {
	if o == nil || IsNil(o.Object) {
		var ret string
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ipv6networkNetworkOneOf) GetObjectOk() (*string, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *Ipv6networkNetworkOneOf) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given string and assigns it to the Object field.
func (o *Ipv6networkNetworkOneOf) SetObject(v string) {
	o.Object = &v
}

// GetObjectParameters returns the ObjectParameters field value if set, zero value otherwise.
func (o *Ipv6networkNetworkOneOf) GetObjectParameters() map[string]interface{} {
	if o == nil || IsNil(o.ObjectParameters) {
		var ret map[string]interface{}
		return ret
	}
	return o.ObjectParameters
}

// GetObjectParametersOk returns a tuple with the ObjectParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ipv6networkNetworkOneOf) GetObjectParametersOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ObjectParameters) {
		return map[string]interface{}{}, false
	}
	return o.ObjectParameters, true
}

// HasObjectParameters returns a boolean if a field has been set.
func (o *Ipv6networkNetworkOneOf) HasObjectParameters() bool {
	if o != nil && !IsNil(o.ObjectParameters) {
		return true
	}

	return false
}

// SetObjectParameters gets a reference to the given map[string]interface{} and assigns it to the ObjectParameters field.
func (o *Ipv6networkNetworkOneOf) SetObjectParameters(v map[string]interface{}) {
	o.ObjectParameters = v
}

// GetObjectRef returns the ObjectRef field value if set, zero value otherwise.
func (o *Ipv6networkNetworkOneOf) GetObjectRef() string {
	if o == nil || IsNil(o.ObjectRef) {
		var ret string
		return ret
	}
	return *o.ObjectRef
}

// GetObjectRefOk returns a tuple with the ObjectRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ipv6networkNetworkOneOf) GetObjectRefOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectRef) {
		return nil, false
	}
	return o.ObjectRef, true
}

// HasObjectRef returns a boolean if a field has been set.
func (o *Ipv6networkNetworkOneOf) HasObjectRef() bool {
	if o != nil && !IsNil(o.ObjectRef) {
		return true
	}

	return false
}

// SetObjectRef gets a reference to the given string and assigns it to the ObjectRef field.
func (o *Ipv6networkNetworkOneOf) SetObjectRef(v string) {
	o.ObjectRef = &v
}

func (o Ipv6networkNetworkOneOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Ipv6networkNetworkOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ObjectFunction) {
		toSerialize["_object_function"] = o.ObjectFunction
	}
	if !IsNil(o.Parameters) {
		toSerialize["_parameters"] = o.Parameters
	}
	if !IsNil(o.ResultField) {
		toSerialize["_result_field"] = o.ResultField
	}
	if !IsNil(o.Object) {
		toSerialize["_object"] = o.Object
	}
	if !IsNil(o.ObjectParameters) {
		toSerialize["_object_parameters"] = o.ObjectParameters
	}
	if !IsNil(o.ObjectRef) {
		toSerialize["_object_ref"] = o.ObjectRef
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Ipv6networkNetworkOneOf) UnmarshalJSON(data []byte) (err error) {
	varIpv6networkNetworkOneOf := _Ipv6networkNetworkOneOf{}

	err = json.Unmarshal(data, &varIpv6networkNetworkOneOf)

	if err != nil {
		return err
	}

	*o = Ipv6networkNetworkOneOf(varIpv6networkNetworkOneOf)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "_object_function")
		delete(additionalProperties, "_parameters")
		delete(additionalProperties, "_result_field")
		delete(additionalProperties, "_object")
		delete(additionalProperties, "_object_parameters")
		delete(additionalProperties, "_object_ref")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIpv6networkNetworkOneOf struct {
	value *Ipv6networkNetworkOneOf
	isSet bool
}

func (v NullableIpv6networkNetworkOneOf) Get() *Ipv6networkNetworkOneOf {
	return v.value
}

func (v *NullableIpv6networkNetworkOneOf) Set(val *Ipv6networkNetworkOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableIpv6networkNetworkOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableIpv6networkNetworkOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpv6networkNetworkOneOf(val *Ipv6networkNetworkOneOf) *NullableIpv6networkNetworkOneOf {
	return &NullableIpv6networkNetworkOneOf{value: val, isSet: true}
}

func (v NullableIpv6networkNetworkOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpv6networkNetworkOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
