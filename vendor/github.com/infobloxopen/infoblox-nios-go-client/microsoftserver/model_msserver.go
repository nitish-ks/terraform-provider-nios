/*
Infoblox MICROSOFTSERVER API

OpenAPI specification for Infoblox NIOS WAPI MICROSOFTSERVER objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package microsoftserver

import (
	"encoding/json"
)

// checks if the Msserver type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Msserver{}

// Msserver struct for Msserver
type Msserver struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// The Active Directory domain to which this server belongs (if applicable).
	AdDomain *string          `json:"ad_domain,omitempty"`
	AdSites  *MsserverAdSites `json:"ad_sites,omitempty"`
	AdUser   *MsserverAdUser  `json:"ad_user,omitempty"`
	// The address or FQDN of the server.
	Address *string `json:"address,omitempty"`
	// User comments for this Microsoft Server
	Comment *string `json:"comment,omitempty"`
	// Result of the last RPC connection attempt made
	ConnectionStatus *string `json:"connection_status,omitempty"`
	// Detail of the last connection attempt made
	ConnectionStatusDetail *string             `json:"connection_status_detail,omitempty"`
	DhcpServer             *MsserverDhcpServer `json:"dhcp_server,omitempty"`
	// Allow/forbids usage of this Microsoft Server
	Disabled  *bool              `json:"disabled,omitempty"`
	DnsServer *MsserverDnsServer `json:"dns_server,omitempty"`
	// Reference to the DNS view
	DnsView *string `json:"dns_view,omitempty"`
	// Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.
	ExtAttrs *map[string]ExtAttrs `json:"extattrs,omitempty"`
	// eference to the assigned grid member
	GridMember *string `json:"grid_member,omitempty"`
	// Timestamp of the last message received
	LastSeen *int64 `json:"last_seen,omitempty"`
	// Directs logging of sync messages either to syslog or mslog
	LogDestination *string `json:"log_destination,omitempty"`
	// Log level for this Microsoft Server
	LogLevel *string `json:"log_level,omitempty"`
	// Microsoft Server login name, with optional domainname
	LoginName *string `json:"login_name,omitempty"`
	// Microsoft Server login password
	LoginPassword *string `json:"login_password,omitempty"`
	// Hostname of grid member managing this Microsoft Server
	ManagingMember *string `json:"managing_member,omitempty"`
	// Maximum number of connections to MS server
	MsMaxConnection *int64 `json:"ms_max_connection,omitempty"`
	// Timeout in seconds of RPC connections for this MS Server
	MsRpcTimeoutInSeconds *int64 `json:"ms_rpc_timeout_in_seconds,omitempty"`
	// Reference to the network view
	NetworkView *string `json:"network_view,omitempty"`
	// Enable read-only management for this Microsoft Server
	ReadOnly *bool `json:"read_only,omitempty"`
	// The root Active Directory domain to which this server belongs (if applicable).
	RootAdDomain *string `json:"root_ad_domain,omitempty"`
	// Gives the server name as reported by itself
	ServerName *string `json:"server_name,omitempty"`
	// Minimum number of minutes between two synchronizations
	SynchronizationMinDelay *int64 `json:"synchronization_min_delay,omitempty"`
	// Synchronization status summary
	SynchronizationStatus *string `json:"synchronization_status,omitempty"`
	// Detail status if synchronization_status is ERROR
	SynchronizationStatusDetail *string `json:"synchronization_status_detail,omitempty"`
	// Override log_destination inherited from grid level
	UseLogDestination *bool `json:"use_log_destination,omitempty"`
	// Override grid ms_max_connection setting
	UseMsMaxConnection *bool `json:"use_ms_max_connection,omitempty"`
	// Flag to override cluster RPC timeout
	UseMsRpcTimeoutInSeconds *bool `json:"use_ms_rpc_timeout_in_seconds,omitempty"`
	// Version of the Microsoft Server
	Version *string `json:"version,omitempty"`
}

// NewMsserver instantiates a new Msserver object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMsserver() *Msserver {
	this := Msserver{}
	return &this
}

// NewMsserverWithDefaults instantiates a new Msserver object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMsserverWithDefaults() *Msserver {
	this := Msserver{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *Msserver) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *Msserver) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *Msserver) SetRef(v string) {
	o.Ref = &v
}

// GetAdDomain returns the AdDomain field value if set, zero value otherwise.
func (o *Msserver) GetAdDomain() string {
	if o == nil || IsNil(o.AdDomain) {
		var ret string
		return ret
	}
	return *o.AdDomain
}

// GetAdDomainOk returns a tuple with the AdDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetAdDomainOk() (*string, bool) {
	if o == nil || IsNil(o.AdDomain) {
		return nil, false
	}
	return o.AdDomain, true
}

// HasAdDomain returns a boolean if a field has been set.
func (o *Msserver) HasAdDomain() bool {
	if o != nil && !IsNil(o.AdDomain) {
		return true
	}

	return false
}

// SetAdDomain gets a reference to the given string and assigns it to the AdDomain field.
func (o *Msserver) SetAdDomain(v string) {
	o.AdDomain = &v
}

// GetAdSites returns the AdSites field value if set, zero value otherwise.
func (o *Msserver) GetAdSites() MsserverAdSites {
	if o == nil || IsNil(o.AdSites) {
		var ret MsserverAdSites
		return ret
	}
	return *o.AdSites
}

// GetAdSitesOk returns a tuple with the AdSites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetAdSitesOk() (*MsserverAdSites, bool) {
	if o == nil || IsNil(o.AdSites) {
		return nil, false
	}
	return o.AdSites, true
}

// HasAdSites returns a boolean if a field has been set.
func (o *Msserver) HasAdSites() bool {
	if o != nil && !IsNil(o.AdSites) {
		return true
	}

	return false
}

// SetAdSites gets a reference to the given MsserverAdSites and assigns it to the AdSites field.
func (o *Msserver) SetAdSites(v MsserverAdSites) {
	o.AdSites = &v
}

// GetAdUser returns the AdUser field value if set, zero value otherwise.
func (o *Msserver) GetAdUser() MsserverAdUser {
	if o == nil || IsNil(o.AdUser) {
		var ret MsserverAdUser
		return ret
	}
	return *o.AdUser
}

// GetAdUserOk returns a tuple with the AdUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetAdUserOk() (*MsserverAdUser, bool) {
	if o == nil || IsNil(o.AdUser) {
		return nil, false
	}
	return o.AdUser, true
}

// HasAdUser returns a boolean if a field has been set.
func (o *Msserver) HasAdUser() bool {
	if o != nil && !IsNil(o.AdUser) {
		return true
	}

	return false
}

// SetAdUser gets a reference to the given MsserverAdUser and assigns it to the AdUser field.
func (o *Msserver) SetAdUser(v MsserverAdUser) {
	o.AdUser = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *Msserver) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *Msserver) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *Msserver) SetAddress(v string) {
	o.Address = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *Msserver) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *Msserver) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *Msserver) SetComment(v string) {
	o.Comment = &v
}

// GetConnectionStatus returns the ConnectionStatus field value if set, zero value otherwise.
func (o *Msserver) GetConnectionStatus() string {
	if o == nil || IsNil(o.ConnectionStatus) {
		var ret string
		return ret
	}
	return *o.ConnectionStatus
}

// GetConnectionStatusOk returns a tuple with the ConnectionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetConnectionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionStatus) {
		return nil, false
	}
	return o.ConnectionStatus, true
}

// HasConnectionStatus returns a boolean if a field has been set.
func (o *Msserver) HasConnectionStatus() bool {
	if o != nil && !IsNil(o.ConnectionStatus) {
		return true
	}

	return false
}

// SetConnectionStatus gets a reference to the given string and assigns it to the ConnectionStatus field.
func (o *Msserver) SetConnectionStatus(v string) {
	o.ConnectionStatus = &v
}

// GetConnectionStatusDetail returns the ConnectionStatusDetail field value if set, zero value otherwise.
func (o *Msserver) GetConnectionStatusDetail() string {
	if o == nil || IsNil(o.ConnectionStatusDetail) {
		var ret string
		return ret
	}
	return *o.ConnectionStatusDetail
}

// GetConnectionStatusDetailOk returns a tuple with the ConnectionStatusDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetConnectionStatusDetailOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionStatusDetail) {
		return nil, false
	}
	return o.ConnectionStatusDetail, true
}

// HasConnectionStatusDetail returns a boolean if a field has been set.
func (o *Msserver) HasConnectionStatusDetail() bool {
	if o != nil && !IsNil(o.ConnectionStatusDetail) {
		return true
	}

	return false
}

// SetConnectionStatusDetail gets a reference to the given string and assigns it to the ConnectionStatusDetail field.
func (o *Msserver) SetConnectionStatusDetail(v string) {
	o.ConnectionStatusDetail = &v
}

// GetDhcpServer returns the DhcpServer field value if set, zero value otherwise.
func (o *Msserver) GetDhcpServer() MsserverDhcpServer {
	if o == nil || IsNil(o.DhcpServer) {
		var ret MsserverDhcpServer
		return ret
	}
	return *o.DhcpServer
}

// GetDhcpServerOk returns a tuple with the DhcpServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetDhcpServerOk() (*MsserverDhcpServer, bool) {
	if o == nil || IsNil(o.DhcpServer) {
		return nil, false
	}
	return o.DhcpServer, true
}

// HasDhcpServer returns a boolean if a field has been set.
func (o *Msserver) HasDhcpServer() bool {
	if o != nil && !IsNil(o.DhcpServer) {
		return true
	}

	return false
}

// SetDhcpServer gets a reference to the given MsserverDhcpServer and assigns it to the DhcpServer field.
func (o *Msserver) SetDhcpServer(v MsserverDhcpServer) {
	o.DhcpServer = &v
}

// GetDisabled returns the Disabled field value if set, zero value otherwise.
func (o *Msserver) GetDisabled() bool {
	if o == nil || IsNil(o.Disabled) {
		var ret bool
		return ret
	}
	return *o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Disabled) {
		return nil, false
	}
	return o.Disabled, true
}

// HasDisabled returns a boolean if a field has been set.
func (o *Msserver) HasDisabled() bool {
	if o != nil && !IsNil(o.Disabled) {
		return true
	}

	return false
}

// SetDisabled gets a reference to the given bool and assigns it to the Disabled field.
func (o *Msserver) SetDisabled(v bool) {
	o.Disabled = &v
}

// GetDnsServer returns the DnsServer field value if set, zero value otherwise.
func (o *Msserver) GetDnsServer() MsserverDnsServer {
	if o == nil || IsNil(o.DnsServer) {
		var ret MsserverDnsServer
		return ret
	}
	return *o.DnsServer
}

// GetDnsServerOk returns a tuple with the DnsServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetDnsServerOk() (*MsserverDnsServer, bool) {
	if o == nil || IsNil(o.DnsServer) {
		return nil, false
	}
	return o.DnsServer, true
}

// HasDnsServer returns a boolean if a field has been set.
func (o *Msserver) HasDnsServer() bool {
	if o != nil && !IsNil(o.DnsServer) {
		return true
	}

	return false
}

// SetDnsServer gets a reference to the given MsserverDnsServer and assigns it to the DnsServer field.
func (o *Msserver) SetDnsServer(v MsserverDnsServer) {
	o.DnsServer = &v
}

// GetDnsView returns the DnsView field value if set, zero value otherwise.
func (o *Msserver) GetDnsView() string {
	if o == nil || IsNil(o.DnsView) {
		var ret string
		return ret
	}
	return *o.DnsView
}

// GetDnsViewOk returns a tuple with the DnsView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetDnsViewOk() (*string, bool) {
	if o == nil || IsNil(o.DnsView) {
		return nil, false
	}
	return o.DnsView, true
}

// HasDnsView returns a boolean if a field has been set.
func (o *Msserver) HasDnsView() bool {
	if o != nil && !IsNil(o.DnsView) {
		return true
	}

	return false
}

// SetDnsView gets a reference to the given string and assigns it to the DnsView field.
func (o *Msserver) SetDnsView(v string) {
	o.DnsView = &v
}

// GetExtAttrs returns the ExtAttrs field value if set, zero value otherwise.
func (o *Msserver) GetExtAttrs() map[string]ExtAttrs {
	if o == nil || IsNil(o.ExtAttrs) {
		var ret map[string]ExtAttrs
		return ret
	}
	return *o.ExtAttrs
}

// GetExtAttrsOk returns a tuple with the ExtAttrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetExtAttrsOk() (*map[string]ExtAttrs, bool) {
	if o == nil || IsNil(o.ExtAttrs) {
		return nil, false
	}
	return o.ExtAttrs, true
}

// HasExtAttrs returns a boolean if a field has been set.
func (o *Msserver) HasExtAttrs() bool {
	if o != nil && !IsNil(o.ExtAttrs) {
		return true
	}

	return false
}

// SetExtAttrs gets a reference to the given map[string]ExtAttrs and assigns it to the ExtAttrs field.
func (o *Msserver) SetExtAttrs(v map[string]ExtAttrs) {
	o.ExtAttrs = &v
}

// GetGridMember returns the GridMember field value if set, zero value otherwise.
func (o *Msserver) GetGridMember() string {
	if o == nil || IsNil(o.GridMember) {
		var ret string
		return ret
	}
	return *o.GridMember
}

// GetGridMemberOk returns a tuple with the GridMember field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetGridMemberOk() (*string, bool) {
	if o == nil || IsNil(o.GridMember) {
		return nil, false
	}
	return o.GridMember, true
}

// HasGridMember returns a boolean if a field has been set.
func (o *Msserver) HasGridMember() bool {
	if o != nil && !IsNil(o.GridMember) {
		return true
	}

	return false
}

// SetGridMember gets a reference to the given string and assigns it to the GridMember field.
func (o *Msserver) SetGridMember(v string) {
	o.GridMember = &v
}

// GetLastSeen returns the LastSeen field value if set, zero value otherwise.
func (o *Msserver) GetLastSeen() int64 {
	if o == nil || IsNil(o.LastSeen) {
		var ret int64
		return ret
	}
	return *o.LastSeen
}

// GetLastSeenOk returns a tuple with the LastSeen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetLastSeenOk() (*int64, bool) {
	if o == nil || IsNil(o.LastSeen) {
		return nil, false
	}
	return o.LastSeen, true
}

// HasLastSeen returns a boolean if a field has been set.
func (o *Msserver) HasLastSeen() bool {
	if o != nil && !IsNil(o.LastSeen) {
		return true
	}

	return false
}

// SetLastSeen gets a reference to the given int64 and assigns it to the LastSeen field.
func (o *Msserver) SetLastSeen(v int64) {
	o.LastSeen = &v
}

// GetLogDestination returns the LogDestination field value if set, zero value otherwise.
func (o *Msserver) GetLogDestination() string {
	if o == nil || IsNil(o.LogDestination) {
		var ret string
		return ret
	}
	return *o.LogDestination
}

// GetLogDestinationOk returns a tuple with the LogDestination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetLogDestinationOk() (*string, bool) {
	if o == nil || IsNil(o.LogDestination) {
		return nil, false
	}
	return o.LogDestination, true
}

// HasLogDestination returns a boolean if a field has been set.
func (o *Msserver) HasLogDestination() bool {
	if o != nil && !IsNil(o.LogDestination) {
		return true
	}

	return false
}

// SetLogDestination gets a reference to the given string and assigns it to the LogDestination field.
func (o *Msserver) SetLogDestination(v string) {
	o.LogDestination = &v
}

// GetLogLevel returns the LogLevel field value if set, zero value otherwise.
func (o *Msserver) GetLogLevel() string {
	if o == nil || IsNil(o.LogLevel) {
		var ret string
		return ret
	}
	return *o.LogLevel
}

// GetLogLevelOk returns a tuple with the LogLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetLogLevelOk() (*string, bool) {
	if o == nil || IsNil(o.LogLevel) {
		return nil, false
	}
	return o.LogLevel, true
}

// HasLogLevel returns a boolean if a field has been set.
func (o *Msserver) HasLogLevel() bool {
	if o != nil && !IsNil(o.LogLevel) {
		return true
	}

	return false
}

// SetLogLevel gets a reference to the given string and assigns it to the LogLevel field.
func (o *Msserver) SetLogLevel(v string) {
	o.LogLevel = &v
}

// GetLoginName returns the LoginName field value if set, zero value otherwise.
func (o *Msserver) GetLoginName() string {
	if o == nil || IsNil(o.LoginName) {
		var ret string
		return ret
	}
	return *o.LoginName
}

// GetLoginNameOk returns a tuple with the LoginName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetLoginNameOk() (*string, bool) {
	if o == nil || IsNil(o.LoginName) {
		return nil, false
	}
	return o.LoginName, true
}

// HasLoginName returns a boolean if a field has been set.
func (o *Msserver) HasLoginName() bool {
	if o != nil && !IsNil(o.LoginName) {
		return true
	}

	return false
}

// SetLoginName gets a reference to the given string and assigns it to the LoginName field.
func (o *Msserver) SetLoginName(v string) {
	o.LoginName = &v
}

// GetLoginPassword returns the LoginPassword field value if set, zero value otherwise.
func (o *Msserver) GetLoginPassword() string {
	if o == nil || IsNil(o.LoginPassword) {
		var ret string
		return ret
	}
	return *o.LoginPassword
}

// GetLoginPasswordOk returns a tuple with the LoginPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetLoginPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.LoginPassword) {
		return nil, false
	}
	return o.LoginPassword, true
}

// HasLoginPassword returns a boolean if a field has been set.
func (o *Msserver) HasLoginPassword() bool {
	if o != nil && !IsNil(o.LoginPassword) {
		return true
	}

	return false
}

// SetLoginPassword gets a reference to the given string and assigns it to the LoginPassword field.
func (o *Msserver) SetLoginPassword(v string) {
	o.LoginPassword = &v
}

// GetManagingMember returns the ManagingMember field value if set, zero value otherwise.
func (o *Msserver) GetManagingMember() string {
	if o == nil || IsNil(o.ManagingMember) {
		var ret string
		return ret
	}
	return *o.ManagingMember
}

// GetManagingMemberOk returns a tuple with the ManagingMember field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetManagingMemberOk() (*string, bool) {
	if o == nil || IsNil(o.ManagingMember) {
		return nil, false
	}
	return o.ManagingMember, true
}

// HasManagingMember returns a boolean if a field has been set.
func (o *Msserver) HasManagingMember() bool {
	if o != nil && !IsNil(o.ManagingMember) {
		return true
	}

	return false
}

// SetManagingMember gets a reference to the given string and assigns it to the ManagingMember field.
func (o *Msserver) SetManagingMember(v string) {
	o.ManagingMember = &v
}

// GetMsMaxConnection returns the MsMaxConnection field value if set, zero value otherwise.
func (o *Msserver) GetMsMaxConnection() int64 {
	if o == nil || IsNil(o.MsMaxConnection) {
		var ret int64
		return ret
	}
	return *o.MsMaxConnection
}

// GetMsMaxConnectionOk returns a tuple with the MsMaxConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetMsMaxConnectionOk() (*int64, bool) {
	if o == nil || IsNil(o.MsMaxConnection) {
		return nil, false
	}
	return o.MsMaxConnection, true
}

// HasMsMaxConnection returns a boolean if a field has been set.
func (o *Msserver) HasMsMaxConnection() bool {
	if o != nil && !IsNil(o.MsMaxConnection) {
		return true
	}

	return false
}

// SetMsMaxConnection gets a reference to the given int64 and assigns it to the MsMaxConnection field.
func (o *Msserver) SetMsMaxConnection(v int64) {
	o.MsMaxConnection = &v
}

// GetMsRpcTimeoutInSeconds returns the MsRpcTimeoutInSeconds field value if set, zero value otherwise.
func (o *Msserver) GetMsRpcTimeoutInSeconds() int64 {
	if o == nil || IsNil(o.MsRpcTimeoutInSeconds) {
		var ret int64
		return ret
	}
	return *o.MsRpcTimeoutInSeconds
}

// GetMsRpcTimeoutInSecondsOk returns a tuple with the MsRpcTimeoutInSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetMsRpcTimeoutInSecondsOk() (*int64, bool) {
	if o == nil || IsNil(o.MsRpcTimeoutInSeconds) {
		return nil, false
	}
	return o.MsRpcTimeoutInSeconds, true
}

// HasMsRpcTimeoutInSeconds returns a boolean if a field has been set.
func (o *Msserver) HasMsRpcTimeoutInSeconds() bool {
	if o != nil && !IsNil(o.MsRpcTimeoutInSeconds) {
		return true
	}

	return false
}

// SetMsRpcTimeoutInSeconds gets a reference to the given int64 and assigns it to the MsRpcTimeoutInSeconds field.
func (o *Msserver) SetMsRpcTimeoutInSeconds(v int64) {
	o.MsRpcTimeoutInSeconds = &v
}

// GetNetworkView returns the NetworkView field value if set, zero value otherwise.
func (o *Msserver) GetNetworkView() string {
	if o == nil || IsNil(o.NetworkView) {
		var ret string
		return ret
	}
	return *o.NetworkView
}

// GetNetworkViewOk returns a tuple with the NetworkView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetNetworkViewOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkView) {
		return nil, false
	}
	return o.NetworkView, true
}

// HasNetworkView returns a boolean if a field has been set.
func (o *Msserver) HasNetworkView() bool {
	if o != nil && !IsNil(o.NetworkView) {
		return true
	}

	return false
}

// SetNetworkView gets a reference to the given string and assigns it to the NetworkView field.
func (o *Msserver) SetNetworkView(v string) {
	o.NetworkView = &v
}

// GetReadOnly returns the ReadOnly field value if set, zero value otherwise.
func (o *Msserver) GetReadOnly() bool {
	if o == nil || IsNil(o.ReadOnly) {
		var ret bool
		return ret
	}
	return *o.ReadOnly
}

// GetReadOnlyOk returns a tuple with the ReadOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetReadOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.ReadOnly) {
		return nil, false
	}
	return o.ReadOnly, true
}

// HasReadOnly returns a boolean if a field has been set.
func (o *Msserver) HasReadOnly() bool {
	if o != nil && !IsNil(o.ReadOnly) {
		return true
	}

	return false
}

// SetReadOnly gets a reference to the given bool and assigns it to the ReadOnly field.
func (o *Msserver) SetReadOnly(v bool) {
	o.ReadOnly = &v
}

// GetRootAdDomain returns the RootAdDomain field value if set, zero value otherwise.
func (o *Msserver) GetRootAdDomain() string {
	if o == nil || IsNil(o.RootAdDomain) {
		var ret string
		return ret
	}
	return *o.RootAdDomain
}

// GetRootAdDomainOk returns a tuple with the RootAdDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetRootAdDomainOk() (*string, bool) {
	if o == nil || IsNil(o.RootAdDomain) {
		return nil, false
	}
	return o.RootAdDomain, true
}

// HasRootAdDomain returns a boolean if a field has been set.
func (o *Msserver) HasRootAdDomain() bool {
	if o != nil && !IsNil(o.RootAdDomain) {
		return true
	}

	return false
}

// SetRootAdDomain gets a reference to the given string and assigns it to the RootAdDomain field.
func (o *Msserver) SetRootAdDomain(v string) {
	o.RootAdDomain = &v
}

// GetServerName returns the ServerName field value if set, zero value otherwise.
func (o *Msserver) GetServerName() string {
	if o == nil || IsNil(o.ServerName) {
		var ret string
		return ret
	}
	return *o.ServerName
}

// GetServerNameOk returns a tuple with the ServerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetServerNameOk() (*string, bool) {
	if o == nil || IsNil(o.ServerName) {
		return nil, false
	}
	return o.ServerName, true
}

// HasServerName returns a boolean if a field has been set.
func (o *Msserver) HasServerName() bool {
	if o != nil && !IsNil(o.ServerName) {
		return true
	}

	return false
}

// SetServerName gets a reference to the given string and assigns it to the ServerName field.
func (o *Msserver) SetServerName(v string) {
	o.ServerName = &v
}

// GetSynchronizationMinDelay returns the SynchronizationMinDelay field value if set, zero value otherwise.
func (o *Msserver) GetSynchronizationMinDelay() int64 {
	if o == nil || IsNil(o.SynchronizationMinDelay) {
		var ret int64
		return ret
	}
	return *o.SynchronizationMinDelay
}

// GetSynchronizationMinDelayOk returns a tuple with the SynchronizationMinDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetSynchronizationMinDelayOk() (*int64, bool) {
	if o == nil || IsNil(o.SynchronizationMinDelay) {
		return nil, false
	}
	return o.SynchronizationMinDelay, true
}

// HasSynchronizationMinDelay returns a boolean if a field has been set.
func (o *Msserver) HasSynchronizationMinDelay() bool {
	if o != nil && !IsNil(o.SynchronizationMinDelay) {
		return true
	}

	return false
}

// SetSynchronizationMinDelay gets a reference to the given int64 and assigns it to the SynchronizationMinDelay field.
func (o *Msserver) SetSynchronizationMinDelay(v int64) {
	o.SynchronizationMinDelay = &v
}

// GetSynchronizationStatus returns the SynchronizationStatus field value if set, zero value otherwise.
func (o *Msserver) GetSynchronizationStatus() string {
	if o == nil || IsNil(o.SynchronizationStatus) {
		var ret string
		return ret
	}
	return *o.SynchronizationStatus
}

// GetSynchronizationStatusOk returns a tuple with the SynchronizationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetSynchronizationStatusOk() (*string, bool) {
	if o == nil || IsNil(o.SynchronizationStatus) {
		return nil, false
	}
	return o.SynchronizationStatus, true
}

// HasSynchronizationStatus returns a boolean if a field has been set.
func (o *Msserver) HasSynchronizationStatus() bool {
	if o != nil && !IsNil(o.SynchronizationStatus) {
		return true
	}

	return false
}

// SetSynchronizationStatus gets a reference to the given string and assigns it to the SynchronizationStatus field.
func (o *Msserver) SetSynchronizationStatus(v string) {
	o.SynchronizationStatus = &v
}

// GetSynchronizationStatusDetail returns the SynchronizationStatusDetail field value if set, zero value otherwise.
func (o *Msserver) GetSynchronizationStatusDetail() string {
	if o == nil || IsNil(o.SynchronizationStatusDetail) {
		var ret string
		return ret
	}
	return *o.SynchronizationStatusDetail
}

// GetSynchronizationStatusDetailOk returns a tuple with the SynchronizationStatusDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetSynchronizationStatusDetailOk() (*string, bool) {
	if o == nil || IsNil(o.SynchronizationStatusDetail) {
		return nil, false
	}
	return o.SynchronizationStatusDetail, true
}

// HasSynchronizationStatusDetail returns a boolean if a field has been set.
func (o *Msserver) HasSynchronizationStatusDetail() bool {
	if o != nil && !IsNil(o.SynchronizationStatusDetail) {
		return true
	}

	return false
}

// SetSynchronizationStatusDetail gets a reference to the given string and assigns it to the SynchronizationStatusDetail field.
func (o *Msserver) SetSynchronizationStatusDetail(v string) {
	o.SynchronizationStatusDetail = &v
}

// GetUseLogDestination returns the UseLogDestination field value if set, zero value otherwise.
func (o *Msserver) GetUseLogDestination() bool {
	if o == nil || IsNil(o.UseLogDestination) {
		var ret bool
		return ret
	}
	return *o.UseLogDestination
}

// GetUseLogDestinationOk returns a tuple with the UseLogDestination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetUseLogDestinationOk() (*bool, bool) {
	if o == nil || IsNil(o.UseLogDestination) {
		return nil, false
	}
	return o.UseLogDestination, true
}

// HasUseLogDestination returns a boolean if a field has been set.
func (o *Msserver) HasUseLogDestination() bool {
	if o != nil && !IsNil(o.UseLogDestination) {
		return true
	}

	return false
}

// SetUseLogDestination gets a reference to the given bool and assigns it to the UseLogDestination field.
func (o *Msserver) SetUseLogDestination(v bool) {
	o.UseLogDestination = &v
}

// GetUseMsMaxConnection returns the UseMsMaxConnection field value if set, zero value otherwise.
func (o *Msserver) GetUseMsMaxConnection() bool {
	if o == nil || IsNil(o.UseMsMaxConnection) {
		var ret bool
		return ret
	}
	return *o.UseMsMaxConnection
}

// GetUseMsMaxConnectionOk returns a tuple with the UseMsMaxConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetUseMsMaxConnectionOk() (*bool, bool) {
	if o == nil || IsNil(o.UseMsMaxConnection) {
		return nil, false
	}
	return o.UseMsMaxConnection, true
}

// HasUseMsMaxConnection returns a boolean if a field has been set.
func (o *Msserver) HasUseMsMaxConnection() bool {
	if o != nil && !IsNil(o.UseMsMaxConnection) {
		return true
	}

	return false
}

// SetUseMsMaxConnection gets a reference to the given bool and assigns it to the UseMsMaxConnection field.
func (o *Msserver) SetUseMsMaxConnection(v bool) {
	o.UseMsMaxConnection = &v
}

// GetUseMsRpcTimeoutInSeconds returns the UseMsRpcTimeoutInSeconds field value if set, zero value otherwise.
func (o *Msserver) GetUseMsRpcTimeoutInSeconds() bool {
	if o == nil || IsNil(o.UseMsRpcTimeoutInSeconds) {
		var ret bool
		return ret
	}
	return *o.UseMsRpcTimeoutInSeconds
}

// GetUseMsRpcTimeoutInSecondsOk returns a tuple with the UseMsRpcTimeoutInSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetUseMsRpcTimeoutInSecondsOk() (*bool, bool) {
	if o == nil || IsNil(o.UseMsRpcTimeoutInSeconds) {
		return nil, false
	}
	return o.UseMsRpcTimeoutInSeconds, true
}

// HasUseMsRpcTimeoutInSeconds returns a boolean if a field has been set.
func (o *Msserver) HasUseMsRpcTimeoutInSeconds() bool {
	if o != nil && !IsNil(o.UseMsRpcTimeoutInSeconds) {
		return true
	}

	return false
}

// SetUseMsRpcTimeoutInSeconds gets a reference to the given bool and assigns it to the UseMsRpcTimeoutInSeconds field.
func (o *Msserver) SetUseMsRpcTimeoutInSeconds(v bool) {
	o.UseMsRpcTimeoutInSeconds = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *Msserver) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Msserver) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *Msserver) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *Msserver) SetVersion(v string) {
	o.Version = &v
}

func (o Msserver) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Msserver) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.AdDomain) {
		toSerialize["ad_domain"] = o.AdDomain
	}
	if !IsNil(o.AdSites) {
		toSerialize["ad_sites"] = o.AdSites
	}
	if !IsNil(o.AdUser) {
		toSerialize["ad_user"] = o.AdUser
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.ConnectionStatus) {
		toSerialize["connection_status"] = o.ConnectionStatus
	}
	if !IsNil(o.ConnectionStatusDetail) {
		toSerialize["connection_status_detail"] = o.ConnectionStatusDetail
	}
	if !IsNil(o.DhcpServer) {
		toSerialize["dhcp_server"] = o.DhcpServer
	}
	if !IsNil(o.Disabled) {
		toSerialize["disabled"] = o.Disabled
	}
	if !IsNil(o.DnsServer) {
		toSerialize["dns_server"] = o.DnsServer
	}
	if !IsNil(o.DnsView) {
		toSerialize["dns_view"] = o.DnsView
	}
	if !IsNil(o.ExtAttrs) {
		toSerialize["extattrs"] = o.ExtAttrs
	}
	if !IsNil(o.GridMember) {
		toSerialize["grid_member"] = o.GridMember
	}
	if !IsNil(o.LastSeen) {
		toSerialize["last_seen"] = o.LastSeen
	}
	if !IsNil(o.LogDestination) {
		toSerialize["log_destination"] = o.LogDestination
	}
	if !IsNil(o.LogLevel) {
		toSerialize["log_level"] = o.LogLevel
	}
	if !IsNil(o.LoginName) {
		toSerialize["login_name"] = o.LoginName
	}
	if !IsNil(o.LoginPassword) {
		toSerialize["login_password"] = o.LoginPassword
	}
	if !IsNil(o.ManagingMember) {
		toSerialize["managing_member"] = o.ManagingMember
	}
	if !IsNil(o.MsMaxConnection) {
		toSerialize["ms_max_connection"] = o.MsMaxConnection
	}
	if !IsNil(o.MsRpcTimeoutInSeconds) {
		toSerialize["ms_rpc_timeout_in_seconds"] = o.MsRpcTimeoutInSeconds
	}
	if !IsNil(o.NetworkView) {
		toSerialize["network_view"] = o.NetworkView
	}
	if !IsNil(o.ReadOnly) {
		toSerialize["read_only"] = o.ReadOnly
	}
	if !IsNil(o.RootAdDomain) {
		toSerialize["root_ad_domain"] = o.RootAdDomain
	}
	if !IsNil(o.ServerName) {
		toSerialize["server_name"] = o.ServerName
	}
	if !IsNil(o.SynchronizationMinDelay) {
		toSerialize["synchronization_min_delay"] = o.SynchronizationMinDelay
	}
	if !IsNil(o.SynchronizationStatus) {
		toSerialize["synchronization_status"] = o.SynchronizationStatus
	}
	if !IsNil(o.SynchronizationStatusDetail) {
		toSerialize["synchronization_status_detail"] = o.SynchronizationStatusDetail
	}
	if !IsNil(o.UseLogDestination) {
		toSerialize["use_log_destination"] = o.UseLogDestination
	}
	if !IsNil(o.UseMsMaxConnection) {
		toSerialize["use_ms_max_connection"] = o.UseMsMaxConnection
	}
	if !IsNil(o.UseMsRpcTimeoutInSeconds) {
		toSerialize["use_ms_rpc_timeout_in_seconds"] = o.UseMsRpcTimeoutInSeconds
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableMsserver struct {
	value *Msserver
	isSet bool
}

func (v NullableMsserver) Get() *Msserver {
	return v.value
}

func (v *NullableMsserver) Set(val *Msserver) {
	v.value = val
	v.isSet = true
}

func (v NullableMsserver) IsSet() bool {
	return v.isSet
}

func (v *NullableMsserver) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMsserver(val *Msserver) *NullableMsserver {
	return &NullableMsserver{value: val, isSet: true}
}

func (v NullableMsserver) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMsserver) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
