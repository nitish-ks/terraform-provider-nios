/*
Infoblox MICROSOFTSERVER API

OpenAPI specification for Infoblox NIOS WAPI MICROSOFTSERVER objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package microsoftserver

import (
	"encoding/json"
)

// checks if the MsserverAdsitesDomain type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MsserverAdsitesDomain{}

// MsserverAdsitesDomain struct for MsserverAdsitesDomain
type MsserverAdsitesDomain struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// The name of the Extensible Attribute Definition object that is linked to the Active Directory Sites Domain.
	EaDefinition *string `json:"ea_definition,omitempty"`
	// The IP address or FQDN of the managing master for the MS server, if applicable.
	MsSyncMasterName *string `json:"ms_sync_master_name,omitempty"`
	// The name of the Active Directory Domain properties object.
	Name *string `json:"name,omitempty"`
	// The NetBIOS name of the Active Directory Domain properties object.
	Netbios *string `json:"netbios,omitempty"`
	// The name of the network view in which the Active Directory Domain resides.
	NetworkView *string `json:"network_view,omitempty"`
	// Determines whether the Active Directory Domain properties object is a read-only object.
	ReadOnly *bool `json:"read_only,omitempty"`
}

// NewMsserverAdsitesDomain instantiates a new MsserverAdsitesDomain object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMsserverAdsitesDomain() *MsserverAdsitesDomain {
	this := MsserverAdsitesDomain{}
	return &this
}

// NewMsserverAdsitesDomainWithDefaults instantiates a new MsserverAdsitesDomain object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMsserverAdsitesDomainWithDefaults() *MsserverAdsitesDomain {
	this := MsserverAdsitesDomain{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *MsserverAdsitesDomain) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsserverAdsitesDomain) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *MsserverAdsitesDomain) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *MsserverAdsitesDomain) SetRef(v string) {
	o.Ref = &v
}

// GetEaDefinition returns the EaDefinition field value if set, zero value otherwise.
func (o *MsserverAdsitesDomain) GetEaDefinition() string {
	if o == nil || IsNil(o.EaDefinition) {
		var ret string
		return ret
	}
	return *o.EaDefinition
}

// GetEaDefinitionOk returns a tuple with the EaDefinition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsserverAdsitesDomain) GetEaDefinitionOk() (*string, bool) {
	if o == nil || IsNil(o.EaDefinition) {
		return nil, false
	}
	return o.EaDefinition, true
}

// HasEaDefinition returns a boolean if a field has been set.
func (o *MsserverAdsitesDomain) HasEaDefinition() bool {
	if o != nil && !IsNil(o.EaDefinition) {
		return true
	}

	return false
}

// SetEaDefinition gets a reference to the given string and assigns it to the EaDefinition field.
func (o *MsserverAdsitesDomain) SetEaDefinition(v string) {
	o.EaDefinition = &v
}

// GetMsSyncMasterName returns the MsSyncMasterName field value if set, zero value otherwise.
func (o *MsserverAdsitesDomain) GetMsSyncMasterName() string {
	if o == nil || IsNil(o.MsSyncMasterName) {
		var ret string
		return ret
	}
	return *o.MsSyncMasterName
}

// GetMsSyncMasterNameOk returns a tuple with the MsSyncMasterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsserverAdsitesDomain) GetMsSyncMasterNameOk() (*string, bool) {
	if o == nil || IsNil(o.MsSyncMasterName) {
		return nil, false
	}
	return o.MsSyncMasterName, true
}

// HasMsSyncMasterName returns a boolean if a field has been set.
func (o *MsserverAdsitesDomain) HasMsSyncMasterName() bool {
	if o != nil && !IsNil(o.MsSyncMasterName) {
		return true
	}

	return false
}

// SetMsSyncMasterName gets a reference to the given string and assigns it to the MsSyncMasterName field.
func (o *MsserverAdsitesDomain) SetMsSyncMasterName(v string) {
	o.MsSyncMasterName = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MsserverAdsitesDomain) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsserverAdsitesDomain) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MsserverAdsitesDomain) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MsserverAdsitesDomain) SetName(v string) {
	o.Name = &v
}

// GetNetbios returns the Netbios field value if set, zero value otherwise.
func (o *MsserverAdsitesDomain) GetNetbios() string {
	if o == nil || IsNil(o.Netbios) {
		var ret string
		return ret
	}
	return *o.Netbios
}

// GetNetbiosOk returns a tuple with the Netbios field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsserverAdsitesDomain) GetNetbiosOk() (*string, bool) {
	if o == nil || IsNil(o.Netbios) {
		return nil, false
	}
	return o.Netbios, true
}

// HasNetbios returns a boolean if a field has been set.
func (o *MsserverAdsitesDomain) HasNetbios() bool {
	if o != nil && !IsNil(o.Netbios) {
		return true
	}

	return false
}

// SetNetbios gets a reference to the given string and assigns it to the Netbios field.
func (o *MsserverAdsitesDomain) SetNetbios(v string) {
	o.Netbios = &v
}

// GetNetworkView returns the NetworkView field value if set, zero value otherwise.
func (o *MsserverAdsitesDomain) GetNetworkView() string {
	if o == nil || IsNil(o.NetworkView) {
		var ret string
		return ret
	}
	return *o.NetworkView
}

// GetNetworkViewOk returns a tuple with the NetworkView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsserverAdsitesDomain) GetNetworkViewOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkView) {
		return nil, false
	}
	return o.NetworkView, true
}

// HasNetworkView returns a boolean if a field has been set.
func (o *MsserverAdsitesDomain) HasNetworkView() bool {
	if o != nil && !IsNil(o.NetworkView) {
		return true
	}

	return false
}

// SetNetworkView gets a reference to the given string and assigns it to the NetworkView field.
func (o *MsserverAdsitesDomain) SetNetworkView(v string) {
	o.NetworkView = &v
}

// GetReadOnly returns the ReadOnly field value if set, zero value otherwise.
func (o *MsserverAdsitesDomain) GetReadOnly() bool {
	if o == nil || IsNil(o.ReadOnly) {
		var ret bool
		return ret
	}
	return *o.ReadOnly
}

// GetReadOnlyOk returns a tuple with the ReadOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsserverAdsitesDomain) GetReadOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.ReadOnly) {
		return nil, false
	}
	return o.ReadOnly, true
}

// HasReadOnly returns a boolean if a field has been set.
func (o *MsserverAdsitesDomain) HasReadOnly() bool {
	if o != nil && !IsNil(o.ReadOnly) {
		return true
	}

	return false
}

// SetReadOnly gets a reference to the given bool and assigns it to the ReadOnly field.
func (o *MsserverAdsitesDomain) SetReadOnly(v bool) {
	o.ReadOnly = &v
}

func (o MsserverAdsitesDomain) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MsserverAdsitesDomain) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.EaDefinition) {
		toSerialize["ea_definition"] = o.EaDefinition
	}
	if !IsNil(o.MsSyncMasterName) {
		toSerialize["ms_sync_master_name"] = o.MsSyncMasterName
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Netbios) {
		toSerialize["netbios"] = o.Netbios
	}
	if !IsNil(o.NetworkView) {
		toSerialize["network_view"] = o.NetworkView
	}
	if !IsNil(o.ReadOnly) {
		toSerialize["read_only"] = o.ReadOnly
	}
	return toSerialize, nil
}

type NullableMsserverAdsitesDomain struct {
	value *MsserverAdsitesDomain
	isSet bool
}

func (v NullableMsserverAdsitesDomain) Get() *MsserverAdsitesDomain {
	return v.value
}

func (v *NullableMsserverAdsitesDomain) Set(val *MsserverAdsitesDomain) {
	v.value = val
	v.isSet = true
}

func (v NullableMsserverAdsitesDomain) IsSet() bool {
	return v.isSet
}

func (v *NullableMsserverAdsitesDomain) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMsserverAdsitesDomain(val *MsserverAdsitesDomain) *NullableMsserverAdsitesDomain {
	return &NullableMsserverAdsitesDomain{value: val, isSet: true}
}

func (v NullableMsserverAdsitesDomain) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMsserverAdsitesDomain) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
