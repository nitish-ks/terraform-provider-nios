/*
Infoblox MISC API

OpenAPI specification for Infoblox NIOS WAPI MISC objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package misc

import (
	"github.com/infobloxopen/infoblox-nios-go-client/internal"
	"github.com/infobloxopen/infoblox-nios-go-client/option"
)

const serviceBasePath = "/wapi/v2.13.6"

// APIClient manages communication with the Infoblox MISC API 2.13.6
// In most cases there should be only one, shared, APIClient.
type APIClient struct {
	*internal.APIClient

	// API Services
	AllendpointsAPI AllendpointsAPI
	BfdtemplateAPI BfdtemplateAPI
	CapacityreportAPI CapacityreportAPI
	CsvimporttaskAPI CsvimporttaskAPI
	DatacollectionclusterAPI DatacollectionclusterAPI
	DbObjectsAPI DbObjectsAPI
	DbsnapshotAPI DbsnapshotAPI
	DeletedObjectsAPI DeletedObjectsAPI
	DxlEndpointAPI DxlEndpointAPI
	FileopAPI FileopAPI
	KerberoskeyAPI KerberoskeyAPI
	OutboundCloudclientAPI OutboundCloudclientAPI
	PxgridEndpointAPI PxgridEndpointAPI
	RulesetAPI RulesetAPI
	ScavengingtaskAPI ScavengingtaskAPI
	ScheduledtaskAPI ScheduledtaskAPI
	SearchAPI SearchAPI
	SyslogEndpointAPI SyslogEndpointAPI
	TaxiiAPI TaxiiAPI
	TftpfiledirAPI TftpfiledirAPI
}

// NewAPIClient creates a new API client.
// The client can be configured with a variadic option. The following options are available:
// - WithClientName(string) sets the name of the client using the SDK.
// - WithNIOSHostUrl(string) sets the URL for NIOS Portal.
// - WithNIOSUsername(string) sets the Username for the NIOS Portal.
// - WithNIOSPassword(string) sets the Password for the NIOS Portal.
// - WithHTTPClient(*http.Client) sets the HTTPClient to use for the SDK.
// - WithDefaultExtAttrs(map[string]struct{ Value string }) sets the tags the client can set by default for objects that has tags support.
// - WithDebug() sets the debug mode.
func NewAPIClient(options ...option.ClientOption) *APIClient {
	cfg := internal.NewConfiguration()
	for _, o := range options {
		o(cfg)
	}

	c := &APIClient{}
	c.APIClient = internal.NewAPIClient(serviceBasePath, cfg)

	// API Services
	c.AllendpointsAPI = (*AllendpointsAPIService)(&c.Common)
	c.BfdtemplateAPI = (*BfdtemplateAPIService)(&c.Common)
	c.CapacityreportAPI = (*CapacityreportAPIService)(&c.Common)
	c.CsvimporttaskAPI = (*CsvimporttaskAPIService)(&c.Common)
	c.DatacollectionclusterAPI = (*DatacollectionclusterAPIService)(&c.Common)
	c.DbObjectsAPI = (*DbObjectsAPIService)(&c.Common)
	c.DbsnapshotAPI = (*DbsnapshotAPIService)(&c.Common)
	c.DeletedObjectsAPI = (*DeletedObjectsAPIService)(&c.Common)
	c.DxlEndpointAPI = (*DxlEndpointAPIService)(&c.Common)
	c.FileopAPI = (*FileopAPIService)(&c.Common)
	c.KerberoskeyAPI = (*KerberoskeyAPIService)(&c.Common)
	c.OutboundCloudclientAPI = (*OutboundCloudclientAPIService)(&c.Common)
	c.PxgridEndpointAPI = (*PxgridEndpointAPIService)(&c.Common)
	c.RulesetAPI = (*RulesetAPIService)(&c.Common)
	c.ScavengingtaskAPI = (*ScavengingtaskAPIService)(&c.Common)
	c.ScheduledtaskAPI = (*ScheduledtaskAPIService)(&c.Common)
	c.SearchAPI = (*SearchAPIService)(&c.Common)
	c.SyslogEndpointAPI = (*SyslogEndpointAPIService)(&c.Common)
	c.TaxiiAPI = (*TaxiiAPIService)(&c.Common)
	c.TftpfiledirAPI = (*TftpfiledirAPIService)(&c.Common)

	return c
}