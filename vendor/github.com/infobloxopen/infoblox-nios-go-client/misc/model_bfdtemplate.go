/*
Infoblox MISC API

OpenAPI specification for Infoblox NIOS WAPI MISC objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package misc

import (
	"encoding/json"
)

// checks if the Bfdtemplate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Bfdtemplate{}

// Bfdtemplate struct for Bfdtemplate
type Bfdtemplate struct {
	// The reference to the object.
	Ref *string `json:"_ref,omitempty"`
	// The authentication key for BFD protocol message-digest authentication.
	AuthenticationKey *string `json:"authentication_key,omitempty"`
	// The authentication key identifier for BFD protocol authentication. Valid values are between 1 and 255.
	AuthenticationKeyId *int64 `json:"authentication_key_id,omitempty"`
	// The authentication type for BFD protocol.
	AuthenticationType *string `json:"authentication_type,omitempty"`
	// The detection time multiplier value for BFD protocol. The negotiated transmit interval, multiplied by this value, provides the detection time for the receiving system in asynchronous BFD mode. Valid values are between 3 and 50.
	DetectionMultiplier *int64 `json:"detection_multiplier,omitempty"`
	// The minimum receive time (in seconds) for BFD protocol. Valid values are between 50 and 9999.
	MinRxInterval *int64 `json:"min_rx_interval,omitempty"`
	// The minimum transmission time (in seconds) for BFD protocol. Valid values are between 50 and 9999.
	MinTxInterval *int64 `json:"min_tx_interval,omitempty"`
	// The name of the BFD template object.
	Name *string `json:"name,omitempty"`
}

// NewBfdtemplate instantiates a new Bfdtemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBfdtemplate() *Bfdtemplate {
	this := Bfdtemplate{}
	return &this
}

// NewBfdtemplateWithDefaults instantiates a new Bfdtemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBfdtemplateWithDefaults() *Bfdtemplate {
	this := Bfdtemplate{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *Bfdtemplate) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bfdtemplate) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *Bfdtemplate) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *Bfdtemplate) SetRef(v string) {
	o.Ref = &v
}

// GetAuthenticationKey returns the AuthenticationKey field value if set, zero value otherwise.
func (o *Bfdtemplate) GetAuthenticationKey() string {
	if o == nil || IsNil(o.AuthenticationKey) {
		var ret string
		return ret
	}
	return *o.AuthenticationKey
}

// GetAuthenticationKeyOk returns a tuple with the AuthenticationKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bfdtemplate) GetAuthenticationKeyOk() (*string, bool) {
	if o == nil || IsNil(o.AuthenticationKey) {
		return nil, false
	}
	return o.AuthenticationKey, true
}

// HasAuthenticationKey returns a boolean if a field has been set.
func (o *Bfdtemplate) HasAuthenticationKey() bool {
	if o != nil && !IsNil(o.AuthenticationKey) {
		return true
	}

	return false
}

// SetAuthenticationKey gets a reference to the given string and assigns it to the AuthenticationKey field.
func (o *Bfdtemplate) SetAuthenticationKey(v string) {
	o.AuthenticationKey = &v
}

// GetAuthenticationKeyId returns the AuthenticationKeyId field value if set, zero value otherwise.
func (o *Bfdtemplate) GetAuthenticationKeyId() int64 {
	if o == nil || IsNil(o.AuthenticationKeyId) {
		var ret int64
		return ret
	}
	return *o.AuthenticationKeyId
}

// GetAuthenticationKeyIdOk returns a tuple with the AuthenticationKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bfdtemplate) GetAuthenticationKeyIdOk() (*int64, bool) {
	if o == nil || IsNil(o.AuthenticationKeyId) {
		return nil, false
	}
	return o.AuthenticationKeyId, true
}

// HasAuthenticationKeyId returns a boolean if a field has been set.
func (o *Bfdtemplate) HasAuthenticationKeyId() bool {
	if o != nil && !IsNil(o.AuthenticationKeyId) {
		return true
	}

	return false
}

// SetAuthenticationKeyId gets a reference to the given int64 and assigns it to the AuthenticationKeyId field.
func (o *Bfdtemplate) SetAuthenticationKeyId(v int64) {
	o.AuthenticationKeyId = &v
}

// GetAuthenticationType returns the AuthenticationType field value if set, zero value otherwise.
func (o *Bfdtemplate) GetAuthenticationType() string {
	if o == nil || IsNil(o.AuthenticationType) {
		var ret string
		return ret
	}
	return *o.AuthenticationType
}

// GetAuthenticationTypeOk returns a tuple with the AuthenticationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bfdtemplate) GetAuthenticationTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AuthenticationType) {
		return nil, false
	}
	return o.AuthenticationType, true
}

// HasAuthenticationType returns a boolean if a field has been set.
func (o *Bfdtemplate) HasAuthenticationType() bool {
	if o != nil && !IsNil(o.AuthenticationType) {
		return true
	}

	return false
}

// SetAuthenticationType gets a reference to the given string and assigns it to the AuthenticationType field.
func (o *Bfdtemplate) SetAuthenticationType(v string) {
	o.AuthenticationType = &v
}

// GetDetectionMultiplier returns the DetectionMultiplier field value if set, zero value otherwise.
func (o *Bfdtemplate) GetDetectionMultiplier() int64 {
	if o == nil || IsNil(o.DetectionMultiplier) {
		var ret int64
		return ret
	}
	return *o.DetectionMultiplier
}

// GetDetectionMultiplierOk returns a tuple with the DetectionMultiplier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bfdtemplate) GetDetectionMultiplierOk() (*int64, bool) {
	if o == nil || IsNil(o.DetectionMultiplier) {
		return nil, false
	}
	return o.DetectionMultiplier, true
}

// HasDetectionMultiplier returns a boolean if a field has been set.
func (o *Bfdtemplate) HasDetectionMultiplier() bool {
	if o != nil && !IsNil(o.DetectionMultiplier) {
		return true
	}

	return false
}

// SetDetectionMultiplier gets a reference to the given int64 and assigns it to the DetectionMultiplier field.
func (o *Bfdtemplate) SetDetectionMultiplier(v int64) {
	o.DetectionMultiplier = &v
}

// GetMinRxInterval returns the MinRxInterval field value if set, zero value otherwise.
func (o *Bfdtemplate) GetMinRxInterval() int64 {
	if o == nil || IsNil(o.MinRxInterval) {
		var ret int64
		return ret
	}
	return *o.MinRxInterval
}

// GetMinRxIntervalOk returns a tuple with the MinRxInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bfdtemplate) GetMinRxIntervalOk() (*int64, bool) {
	if o == nil || IsNil(o.MinRxInterval) {
		return nil, false
	}
	return o.MinRxInterval, true
}

// HasMinRxInterval returns a boolean if a field has been set.
func (o *Bfdtemplate) HasMinRxInterval() bool {
	if o != nil && !IsNil(o.MinRxInterval) {
		return true
	}

	return false
}

// SetMinRxInterval gets a reference to the given int64 and assigns it to the MinRxInterval field.
func (o *Bfdtemplate) SetMinRxInterval(v int64) {
	o.MinRxInterval = &v
}

// GetMinTxInterval returns the MinTxInterval field value if set, zero value otherwise.
func (o *Bfdtemplate) GetMinTxInterval() int64 {
	if o == nil || IsNil(o.MinTxInterval) {
		var ret int64
		return ret
	}
	return *o.MinTxInterval
}

// GetMinTxIntervalOk returns a tuple with the MinTxInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bfdtemplate) GetMinTxIntervalOk() (*int64, bool) {
	if o == nil || IsNil(o.MinTxInterval) {
		return nil, false
	}
	return o.MinTxInterval, true
}

// HasMinTxInterval returns a boolean if a field has been set.
func (o *Bfdtemplate) HasMinTxInterval() bool {
	if o != nil && !IsNil(o.MinTxInterval) {
		return true
	}

	return false
}

// SetMinTxInterval gets a reference to the given int64 and assigns it to the MinTxInterval field.
func (o *Bfdtemplate) SetMinTxInterval(v int64) {
	o.MinTxInterval = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Bfdtemplate) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bfdtemplate) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Bfdtemplate) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Bfdtemplate) SetName(v string) {
	o.Name = &v
}

func (o Bfdtemplate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Bfdtemplate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.AuthenticationKey) {
		toSerialize["authentication_key"] = o.AuthenticationKey
	}
	if !IsNil(o.AuthenticationKeyId) {
		toSerialize["authentication_key_id"] = o.AuthenticationKeyId
	}
	if !IsNil(o.AuthenticationType) {
		toSerialize["authentication_type"] = o.AuthenticationType
	}
	if !IsNil(o.DetectionMultiplier) {
		toSerialize["detection_multiplier"] = o.DetectionMultiplier
	}
	if !IsNil(o.MinRxInterval) {
		toSerialize["min_rx_interval"] = o.MinRxInterval
	}
	if !IsNil(o.MinTxInterval) {
		toSerialize["min_tx_interval"] = o.MinTxInterval
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableBfdtemplate struct {
	value *Bfdtemplate
	isSet bool
}

func (v NullableBfdtemplate) Get() *Bfdtemplate {
	return v.value
}

func (v *NullableBfdtemplate) Set(val *Bfdtemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableBfdtemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableBfdtemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBfdtemplate(val *Bfdtemplate) *NullableBfdtemplate {
	return &NullableBfdtemplate{value: val, isSet: true}
}

func (v NullableBfdtemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBfdtemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
