/*
Infoblox MISC API

OpenAPI specification for Infoblox NIOS WAPI MISC objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package misc

import (
	"encoding/json"
	"fmt"
)

// GetDatacollectionclusterResponse - struct for GetDatacollectionclusterResponse
type GetDatacollectionclusterResponse struct {
	Datacollectioncluster                          *Datacollectioncluster
	GetDatacollectionclusterResponseObjectAsResult *GetDatacollectionclusterResponseObjectAsResult
}

// DatacollectionclusterAsGetDatacollectionclusterResponse is a convenience function that returns Datacollectioncluster wrapped in GetDatacollectionclusterResponse
func DatacollectionclusterAsGetDatacollectionclusterResponse(v *Datacollectioncluster) GetDatacollectionclusterResponse {
	return GetDatacollectionclusterResponse{
		Datacollectioncluster: v,
	}
}

// GetDatacollectionclusterResponseObjectAsResultAsGetDatacollectionclusterResponse is a convenience function that returns GetDatacollectionclusterResponseObjectAsResult wrapped in GetDatacollectionclusterResponse
func GetDatacollectionclusterResponseObjectAsResultAsGetDatacollectionclusterResponse(v *GetDatacollectionclusterResponseObjectAsResult) GetDatacollectionclusterResponse {
	return GetDatacollectionclusterResponse{
		GetDatacollectionclusterResponseObjectAsResult: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetDatacollectionclusterResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into Datacollectioncluster
	err = newStrictDecoder(data).Decode(&dst.Datacollectioncluster)
	if err == nil {
		jsonDatacollectioncluster, _ := json.Marshal(dst.Datacollectioncluster)
		if string(jsonDatacollectioncluster) == "{}" { // empty struct
			dst.Datacollectioncluster = nil
		} else {
			match++
		}
	} else {
		dst.Datacollectioncluster = nil
	}

	// try to unmarshal data into GetDatacollectionclusterResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetDatacollectionclusterResponseObjectAsResult)
	if err == nil {
		jsonGetDatacollectionclusterResponseObjectAsResult, _ := json.Marshal(dst.GetDatacollectionclusterResponseObjectAsResult)
		if string(jsonGetDatacollectionclusterResponseObjectAsResult) == "{}" { // empty struct
			dst.GetDatacollectionclusterResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetDatacollectionclusterResponseObjectAsResult = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.Datacollectioncluster = nil
		dst.GetDatacollectionclusterResponseObjectAsResult = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetDatacollectionclusterResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetDatacollectionclusterResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetDatacollectionclusterResponse) MarshalJSON() ([]byte, error) {
	if src.Datacollectioncluster != nil {
		return json.Marshal(&src.Datacollectioncluster)
	}

	if src.GetDatacollectionclusterResponseObjectAsResult != nil {
		return json.Marshal(&src.GetDatacollectionclusterResponseObjectAsResult)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetDatacollectionclusterResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.Datacollectioncluster != nil {
		return obj.Datacollectioncluster
	}

	if obj.GetDatacollectionclusterResponseObjectAsResult != nil {
		return obj.GetDatacollectionclusterResponseObjectAsResult
	}

	// all schemas are nil
	return nil
}

type NullableGetDatacollectionclusterResponse struct {
	value *GetDatacollectionclusterResponse
	isSet bool
}

func (v NullableGetDatacollectionclusterResponse) Get() *GetDatacollectionclusterResponse {
	return v.value
}

func (v *NullableGetDatacollectionclusterResponse) Set(val *GetDatacollectionclusterResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDatacollectionclusterResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDatacollectionclusterResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDatacollectionclusterResponse(val *GetDatacollectionclusterResponse) *NullableGetDatacollectionclusterResponse {
	return &NullableGetDatacollectionclusterResponse{value: val, isSet: true}
}

func (v NullableGetDatacollectionclusterResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDatacollectionclusterResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
