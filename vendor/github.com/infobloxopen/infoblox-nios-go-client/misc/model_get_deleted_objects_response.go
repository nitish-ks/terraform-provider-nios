/*
Infoblox MISC API

OpenAPI specification for Infoblox NIOS WAPI MISC objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package misc

import (
	"encoding/json"
	"fmt"
)

// GetDeletedObjectsResponse - struct for GetDeletedObjectsResponse
type GetDeletedObjectsResponse struct {
	DeletedObjects                          *DeletedObjects
	GetDeletedObjectsResponseObjectAsResult *GetDeletedObjectsResponseObjectAsResult
}

// DeletedObjectsAsGetDeletedObjectsResponse is a convenience function that returns DeletedObjects wrapped in GetDeletedObjectsResponse
func DeletedObjectsAsGetDeletedObjectsResponse(v *DeletedObjects) GetDeletedObjectsResponse {
	return GetDeletedObjectsResponse{
		DeletedObjects: v,
	}
}

// GetDeletedObjectsResponseObjectAsResultAsGetDeletedObjectsResponse is a convenience function that returns GetDeletedObjectsResponseObjectAsResult wrapped in GetDeletedObjectsResponse
func GetDeletedObjectsResponseObjectAsResultAsGetDeletedObjectsResponse(v *GetDeletedObjectsResponseObjectAsResult) GetDeletedObjectsResponse {
	return GetDeletedObjectsResponse{
		GetDeletedObjectsResponseObjectAsResult: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetDeletedObjectsResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into DeletedObjects
	err = newStrictDecoder(data).Decode(&dst.DeletedObjects)
	if err == nil {
		jsonDeletedObjects, _ := json.Marshal(dst.DeletedObjects)
		if string(jsonDeletedObjects) == "{}" { // empty struct
			dst.DeletedObjects = nil
		} else {
			match++
		}
	} else {
		dst.DeletedObjects = nil
	}

	// try to unmarshal data into GetDeletedObjectsResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetDeletedObjectsResponseObjectAsResult)
	if err == nil {
		jsonGetDeletedObjectsResponseObjectAsResult, _ := json.Marshal(dst.GetDeletedObjectsResponseObjectAsResult)
		if string(jsonGetDeletedObjectsResponseObjectAsResult) == "{}" { // empty struct
			dst.GetDeletedObjectsResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetDeletedObjectsResponseObjectAsResult = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.DeletedObjects = nil
		dst.GetDeletedObjectsResponseObjectAsResult = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetDeletedObjectsResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetDeletedObjectsResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetDeletedObjectsResponse) MarshalJSON() ([]byte, error) {
	if src.DeletedObjects != nil {
		return json.Marshal(&src.DeletedObjects)
	}

	if src.GetDeletedObjectsResponseObjectAsResult != nil {
		return json.Marshal(&src.GetDeletedObjectsResponseObjectAsResult)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetDeletedObjectsResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.DeletedObjects != nil {
		return obj.DeletedObjects
	}

	if obj.GetDeletedObjectsResponseObjectAsResult != nil {
		return obj.GetDeletedObjectsResponseObjectAsResult
	}

	// all schemas are nil
	return nil
}

type NullableGetDeletedObjectsResponse struct {
	value *GetDeletedObjectsResponse
	isSet bool
}

func (v NullableGetDeletedObjectsResponse) Get() *GetDeletedObjectsResponse {
	return v.value
}

func (v *NullableGetDeletedObjectsResponse) Set(val *GetDeletedObjectsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDeletedObjectsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDeletedObjectsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDeletedObjectsResponse(val *GetDeletedObjectsResponse) *NullableGetDeletedObjectsResponse {
	return &NullableGetDeletedObjectsResponse{value: val, isSet: true}
}

func (v NullableGetDeletedObjectsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDeletedObjectsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
