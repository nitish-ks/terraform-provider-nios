/*
Infoblox MISC API

OpenAPI specification for Infoblox NIOS WAPI MISC objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package misc

import (
	"encoding/json"
	"fmt"
)

// GetOutboundCloudclientResponse - struct for GetOutboundCloudclientResponse
type GetOutboundCloudclientResponse struct {
	GetOutboundCloudclientResponseObjectAsResult *GetOutboundCloudclientResponseObjectAsResult
	OutboundCloudclient                          *OutboundCloudclient
}

// GetOutboundCloudclientResponseObjectAsResultAsGetOutboundCloudclientResponse is a convenience function that returns GetOutboundCloudclientResponseObjectAsResult wrapped in GetOutboundCloudclientResponse
func GetOutboundCloudclientResponseObjectAsResultAsGetOutboundCloudclientResponse(v *GetOutboundCloudclientResponseObjectAsResult) GetOutboundCloudclientResponse {
	return GetOutboundCloudclientResponse{
		GetOutboundCloudclientResponseObjectAsResult: v,
	}
}

// OutboundCloudclientAsGetOutboundCloudclientResponse is a convenience function that returns OutboundCloudclient wrapped in GetOutboundCloudclientResponse
func OutboundCloudclientAsGetOutboundCloudclientResponse(v *OutboundCloudclient) GetOutboundCloudclientResponse {
	return GetOutboundCloudclientResponse{
		OutboundCloudclient: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetOutboundCloudclientResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetOutboundCloudclientResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetOutboundCloudclientResponseObjectAsResult)
	if err == nil {
		jsonGetOutboundCloudclientResponseObjectAsResult, _ := json.Marshal(dst.GetOutboundCloudclientResponseObjectAsResult)
		if string(jsonGetOutboundCloudclientResponseObjectAsResult) == "{}" { // empty struct
			dst.GetOutboundCloudclientResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetOutboundCloudclientResponseObjectAsResult = nil
	}

	// try to unmarshal data into OutboundCloudclient
	err = newStrictDecoder(data).Decode(&dst.OutboundCloudclient)
	if err == nil {
		jsonOutboundCloudclient, _ := json.Marshal(dst.OutboundCloudclient)
		if string(jsonOutboundCloudclient) == "{}" { // empty struct
			dst.OutboundCloudclient = nil
		} else {
			match++
		}
	} else {
		dst.OutboundCloudclient = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetOutboundCloudclientResponseObjectAsResult = nil
		dst.OutboundCloudclient = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetOutboundCloudclientResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetOutboundCloudclientResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetOutboundCloudclientResponse) MarshalJSON() ([]byte, error) {
	if src.GetOutboundCloudclientResponseObjectAsResult != nil {
		return json.Marshal(&src.GetOutboundCloudclientResponseObjectAsResult)
	}

	if src.OutboundCloudclient != nil {
		return json.Marshal(&src.OutboundCloudclient)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetOutboundCloudclientResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GetOutboundCloudclientResponseObjectAsResult != nil {
		return obj.GetOutboundCloudclientResponseObjectAsResult
	}

	if obj.OutboundCloudclient != nil {
		return obj.OutboundCloudclient
	}

	// all schemas are nil
	return nil
}

type NullableGetOutboundCloudclientResponse struct {
	value *GetOutboundCloudclientResponse
	isSet bool
}

func (v NullableGetOutboundCloudclientResponse) Get() *GetOutboundCloudclientResponse {
	return v.value
}

func (v *NullableGetOutboundCloudclientResponse) Set(val *GetOutboundCloudclientResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOutboundCloudclientResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOutboundCloudclientResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOutboundCloudclientResponse(val *GetOutboundCloudclientResponse) *NullableGetOutboundCloudclientResponse {
	return &NullableGetOutboundCloudclientResponse{value: val, isSet: true}
}

func (v NullableGetOutboundCloudclientResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOutboundCloudclientResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
