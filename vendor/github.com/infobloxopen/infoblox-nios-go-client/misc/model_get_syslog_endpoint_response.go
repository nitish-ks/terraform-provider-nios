/*
Infoblox MISC API

OpenAPI specification for Infoblox NIOS WAPI MISC objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package misc

import (
	"encoding/json"
	"fmt"
)

// GetSyslogEndpointResponse - struct for GetSyslogEndpointResponse
type GetSyslogEndpointResponse struct {
	GetSyslogEndpointResponseObjectAsResult *GetSyslogEndpointResponseObjectAsResult
	SyslogEndpoint                          *SyslogEndpoint
}

// GetSyslogEndpointResponseObjectAsResultAsGetSyslogEndpointResponse is a convenience function that returns GetSyslogEndpointResponseObjectAsResult wrapped in GetSyslogEndpointResponse
func GetSyslogEndpointResponseObjectAsResultAsGetSyslogEndpointResponse(v *GetSyslogEndpointResponseObjectAsResult) GetSyslogEndpointResponse {
	return GetSyslogEndpointResponse{
		GetSyslogEndpointResponseObjectAsResult: v,
	}
}

// SyslogEndpointAsGetSyslogEndpointResponse is a convenience function that returns SyslogEndpoint wrapped in GetSyslogEndpointResponse
func SyslogEndpointAsGetSyslogEndpointResponse(v *SyslogEndpoint) GetSyslogEndpointResponse {
	return GetSyslogEndpointResponse{
		SyslogEndpoint: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetSyslogEndpointResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetSyslogEndpointResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetSyslogEndpointResponseObjectAsResult)
	if err == nil {
		jsonGetSyslogEndpointResponseObjectAsResult, _ := json.Marshal(dst.GetSyslogEndpointResponseObjectAsResult)
		if string(jsonGetSyslogEndpointResponseObjectAsResult) == "{}" { // empty struct
			dst.GetSyslogEndpointResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetSyslogEndpointResponseObjectAsResult = nil
	}

	// try to unmarshal data into SyslogEndpoint
	err = newStrictDecoder(data).Decode(&dst.SyslogEndpoint)
	if err == nil {
		jsonSyslogEndpoint, _ := json.Marshal(dst.SyslogEndpoint)
		if string(jsonSyslogEndpoint) == "{}" { // empty struct
			dst.SyslogEndpoint = nil
		} else {
			match++
		}
	} else {
		dst.SyslogEndpoint = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetSyslogEndpointResponseObjectAsResult = nil
		dst.SyslogEndpoint = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetSyslogEndpointResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetSyslogEndpointResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetSyslogEndpointResponse) MarshalJSON() ([]byte, error) {
	if src.GetSyslogEndpointResponseObjectAsResult != nil {
		return json.Marshal(&src.GetSyslogEndpointResponseObjectAsResult)
	}

	if src.SyslogEndpoint != nil {
		return json.Marshal(&src.SyslogEndpoint)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetSyslogEndpointResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GetSyslogEndpointResponseObjectAsResult != nil {
		return obj.GetSyslogEndpointResponseObjectAsResult
	}

	if obj.SyslogEndpoint != nil {
		return obj.SyslogEndpoint
	}

	// all schemas are nil
	return nil
}

type NullableGetSyslogEndpointResponse struct {
	value *GetSyslogEndpointResponse
	isSet bool
}

func (v NullableGetSyslogEndpointResponse) Get() *GetSyslogEndpointResponse {
	return v.value
}

func (v *NullableGetSyslogEndpointResponse) Set(val *GetSyslogEndpointResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSyslogEndpointResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSyslogEndpointResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSyslogEndpointResponse(val *GetSyslogEndpointResponse) *NullableGetSyslogEndpointResponse {
	return &NullableGetSyslogEndpointResponse{value: val, isSet: true}
}

func (v NullableGetSyslogEndpointResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSyslogEndpointResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
