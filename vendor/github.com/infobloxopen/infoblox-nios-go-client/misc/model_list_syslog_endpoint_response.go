/*
Infoblox MISC API

OpenAPI specification for Infoblox NIOS WAPI MISC objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package misc

import (
	"encoding/json"
	"fmt"
)

// ListSyslogEndpointResponse - struct for ListSyslogEndpointResponse
type ListSyslogEndpointResponse struct {
	ListSyslogEndpointResponseObject *ListSyslogEndpointResponseObject
	ArrayOfSyslogEndpoint            *[]SyslogEndpoint
}

// ListSyslogEndpointResponseObjectAsListSyslogEndpointResponse is a convenience function that returns ListSyslogEndpointResponseObject wrapped in ListSyslogEndpointResponse
func ListSyslogEndpointResponseObjectAsListSyslogEndpointResponse(v *ListSyslogEndpointResponseObject) ListSyslogEndpointResponse {
	return ListSyslogEndpointResponse{
		ListSyslogEndpointResponseObject: v,
	}
}

// []SyslogEndpointAsListSyslogEndpointResponse is a convenience function that returns []SyslogEndpoint wrapped in ListSyslogEndpointResponse
func ArrayOfSyslogEndpointAsListSyslogEndpointResponse(v *[]SyslogEndpoint) ListSyslogEndpointResponse {
	return ListSyslogEndpointResponse{
		ArrayOfSyslogEndpoint: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListSyslogEndpointResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListSyslogEndpointResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListSyslogEndpointResponseObject)
	if err == nil {
		jsonListSyslogEndpointResponseObject, _ := json.Marshal(dst.ListSyslogEndpointResponseObject)
		if string(jsonListSyslogEndpointResponseObject) == "{}" { // empty struct
			dst.ListSyslogEndpointResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListSyslogEndpointResponseObject = nil
	}

	// try to unmarshal data into ArrayOfSyslogEndpoint
	err = newStrictDecoder(data).Decode(&dst.ArrayOfSyslogEndpoint)
	if err == nil {
		jsonArrayOfSyslogEndpoint, _ := json.Marshal(dst.ArrayOfSyslogEndpoint)
		if string(jsonArrayOfSyslogEndpoint) == "{}" { // empty struct
			dst.ArrayOfSyslogEndpoint = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfSyslogEndpoint = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListSyslogEndpointResponseObject = nil
		dst.ArrayOfSyslogEndpoint = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListSyslogEndpointResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListSyslogEndpointResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListSyslogEndpointResponse) MarshalJSON() ([]byte, error) {
	if src.ListSyslogEndpointResponseObject != nil {
		return json.Marshal(&src.ListSyslogEndpointResponseObject)
	}

	if src.ArrayOfSyslogEndpoint != nil {
		return json.Marshal(&src.ArrayOfSyslogEndpoint)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListSyslogEndpointResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListSyslogEndpointResponseObject != nil {
		return obj.ListSyslogEndpointResponseObject
	}

	if obj.ArrayOfSyslogEndpoint != nil {
		return obj.ArrayOfSyslogEndpoint
	}

	// all schemas are nil
	return nil
}

type NullableListSyslogEndpointResponse struct {
	value *ListSyslogEndpointResponse
	isSet bool
}

func (v NullableListSyslogEndpointResponse) Get() *ListSyslogEndpointResponse {
	return v.value
}

func (v *NullableListSyslogEndpointResponse) Set(val *ListSyslogEndpointResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListSyslogEndpointResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListSyslogEndpointResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListSyslogEndpointResponse(val *ListSyslogEndpointResponse) *NullableListSyslogEndpointResponse {
	return &NullableListSyslogEndpointResponse{value: val, isSet: true}
}

func (v NullableListSyslogEndpointResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListSyslogEndpointResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
