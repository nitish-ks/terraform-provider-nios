/*
Infoblox NOTIFICATION API

OpenAPI specification for Infoblox NIOS WAPI NOTIFICATION objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package notification

import (
	"encoding/json"
	"fmt"
)

// GetNotificationRestEndpointResponse - struct for GetNotificationRestEndpointResponse
type GetNotificationRestEndpointResponse struct {
	GetNotificationRestEndpointResponseObjectAsResult *GetNotificationRestEndpointResponseObjectAsResult
	NotificationRestEndpoint                          *NotificationRestEndpoint
}

// GetNotificationRestEndpointResponseObjectAsResultAsGetNotificationRestEndpointResponse is a convenience function that returns GetNotificationRestEndpointResponseObjectAsResult wrapped in GetNotificationRestEndpointResponse
func GetNotificationRestEndpointResponseObjectAsResultAsGetNotificationRestEndpointResponse(v *GetNotificationRestEndpointResponseObjectAsResult) GetNotificationRestEndpointResponse {
	return GetNotificationRestEndpointResponse{
		GetNotificationRestEndpointResponseObjectAsResult: v,
	}
}

// NotificationRestEndpointAsGetNotificationRestEndpointResponse is a convenience function that returns NotificationRestEndpoint wrapped in GetNotificationRestEndpointResponse
func NotificationRestEndpointAsGetNotificationRestEndpointResponse(v *NotificationRestEndpoint) GetNotificationRestEndpointResponse {
	return GetNotificationRestEndpointResponse{
		NotificationRestEndpoint: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetNotificationRestEndpointResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetNotificationRestEndpointResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetNotificationRestEndpointResponseObjectAsResult)
	if err == nil {
		jsonGetNotificationRestEndpointResponseObjectAsResult, _ := json.Marshal(dst.GetNotificationRestEndpointResponseObjectAsResult)
		if string(jsonGetNotificationRestEndpointResponseObjectAsResult) == "{}" { // empty struct
			dst.GetNotificationRestEndpointResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetNotificationRestEndpointResponseObjectAsResult = nil
	}

	// try to unmarshal data into NotificationRestEndpoint
	err = newStrictDecoder(data).Decode(&dst.NotificationRestEndpoint)
	if err == nil {
		jsonNotificationRestEndpoint, _ := json.Marshal(dst.NotificationRestEndpoint)
		if string(jsonNotificationRestEndpoint) == "{}" { // empty struct
			dst.NotificationRestEndpoint = nil
		} else {
			match++
		}
	} else {
		dst.NotificationRestEndpoint = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetNotificationRestEndpointResponseObjectAsResult = nil
		dst.NotificationRestEndpoint = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetNotificationRestEndpointResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetNotificationRestEndpointResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetNotificationRestEndpointResponse) MarshalJSON() ([]byte, error) {
	if src.GetNotificationRestEndpointResponseObjectAsResult != nil {
		return json.Marshal(&src.GetNotificationRestEndpointResponseObjectAsResult)
	}

	if src.NotificationRestEndpoint != nil {
		return json.Marshal(&src.NotificationRestEndpoint)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetNotificationRestEndpointResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GetNotificationRestEndpointResponseObjectAsResult != nil {
		return obj.GetNotificationRestEndpointResponseObjectAsResult
	}

	if obj.NotificationRestEndpoint != nil {
		return obj.NotificationRestEndpoint
	}

	// all schemas are nil
	return nil
}

type NullableGetNotificationRestEndpointResponse struct {
	value *GetNotificationRestEndpointResponse
	isSet bool
}

func (v NullableGetNotificationRestEndpointResponse) Get() *GetNotificationRestEndpointResponse {
	return v.value
}

func (v *NullableGetNotificationRestEndpointResponse) Set(val *GetNotificationRestEndpointResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNotificationRestEndpointResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNotificationRestEndpointResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNotificationRestEndpointResponse(val *GetNotificationRestEndpointResponse) *NullableGetNotificationRestEndpointResponse {
	return &NullableGetNotificationRestEndpointResponse{value: val, isSet: true}
}

func (v NullableGetNotificationRestEndpointResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNotificationRestEndpointResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
