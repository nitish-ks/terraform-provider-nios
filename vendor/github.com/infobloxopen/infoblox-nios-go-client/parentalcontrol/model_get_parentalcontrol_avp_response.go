/*
Infoblox PARENTALCONTROL API

OpenAPI specification for Infoblox NIOS WAPI PARENTALCONTROL objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package parentalcontrol

import (
	"encoding/json"
	"fmt"
)

// GetParentalcontrolAvpResponse - struct for GetParentalcontrolAvpResponse
type GetParentalcontrolAvpResponse struct {
	GetParentalcontrolAvpResponseObjectAsResult *GetParentalcontrolAvpResponseObjectAsResult
	ParentalcontrolAvp                          *ParentalcontrolAvp
}

// GetParentalcontrolAvpResponseObjectAsResultAsGetParentalcontrolAvpResponse is a convenience function that returns GetParentalcontrolAvpResponseObjectAsResult wrapped in GetParentalcontrolAvpResponse
func GetParentalcontrolAvpResponseObjectAsResultAsGetParentalcontrolAvpResponse(v *GetParentalcontrolAvpResponseObjectAsResult) GetParentalcontrolAvpResponse {
	return GetParentalcontrolAvpResponse{
		GetParentalcontrolAvpResponseObjectAsResult: v,
	}
}

// ParentalcontrolAvpAsGetParentalcontrolAvpResponse is a convenience function that returns ParentalcontrolAvp wrapped in GetParentalcontrolAvpResponse
func ParentalcontrolAvpAsGetParentalcontrolAvpResponse(v *ParentalcontrolAvp) GetParentalcontrolAvpResponse {
	return GetParentalcontrolAvpResponse{
		ParentalcontrolAvp: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetParentalcontrolAvpResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetParentalcontrolAvpResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetParentalcontrolAvpResponseObjectAsResult)
	if err == nil {
		jsonGetParentalcontrolAvpResponseObjectAsResult, _ := json.Marshal(dst.GetParentalcontrolAvpResponseObjectAsResult)
		if string(jsonGetParentalcontrolAvpResponseObjectAsResult) == "{}" { // empty struct
			dst.GetParentalcontrolAvpResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetParentalcontrolAvpResponseObjectAsResult = nil
	}

	// try to unmarshal data into ParentalcontrolAvp
	err = newStrictDecoder(data).Decode(&dst.ParentalcontrolAvp)
	if err == nil {
		jsonParentalcontrolAvp, _ := json.Marshal(dst.ParentalcontrolAvp)
		if string(jsonParentalcontrolAvp) == "{}" { // empty struct
			dst.ParentalcontrolAvp = nil
		} else {
			match++
		}
	} else {
		dst.ParentalcontrolAvp = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetParentalcontrolAvpResponseObjectAsResult = nil
		dst.ParentalcontrolAvp = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetParentalcontrolAvpResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetParentalcontrolAvpResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetParentalcontrolAvpResponse) MarshalJSON() ([]byte, error) {
	if src.GetParentalcontrolAvpResponseObjectAsResult != nil {
		return json.Marshal(&src.GetParentalcontrolAvpResponseObjectAsResult)
	}

	if src.ParentalcontrolAvp != nil {
		return json.Marshal(&src.ParentalcontrolAvp)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetParentalcontrolAvpResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GetParentalcontrolAvpResponseObjectAsResult != nil {
		return obj.GetParentalcontrolAvpResponseObjectAsResult
	}

	if obj.ParentalcontrolAvp != nil {
		return obj.ParentalcontrolAvp
	}

	// all schemas are nil
	return nil
}

type NullableGetParentalcontrolAvpResponse struct {
	value *GetParentalcontrolAvpResponse
	isSet bool
}

func (v NullableGetParentalcontrolAvpResponse) Get() *GetParentalcontrolAvpResponse {
	return v.value
}

func (v *NullableGetParentalcontrolAvpResponse) Set(val *GetParentalcontrolAvpResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetParentalcontrolAvpResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetParentalcontrolAvpResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetParentalcontrolAvpResponse(val *GetParentalcontrolAvpResponse) *NullableGetParentalcontrolAvpResponse {
	return &NullableGetParentalcontrolAvpResponse{value: val, isSet: true}
}

func (v NullableGetParentalcontrolAvpResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetParentalcontrolAvpResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
