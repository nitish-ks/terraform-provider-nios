/*
Infoblox PARENTALCONTROL API

OpenAPI specification for Infoblox NIOS WAPI PARENTALCONTROL objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package parentalcontrol

import (
	"encoding/json"
	"fmt"
)

// GetParentalcontrolSubscriberResponse - struct for GetParentalcontrolSubscriberResponse
type GetParentalcontrolSubscriberResponse struct {
	GetParentalcontrolSubscriberResponseObjectAsResult *GetParentalcontrolSubscriberResponseObjectAsResult
	ParentalcontrolSubscriber                          *ParentalcontrolSubscriber
}

// GetParentalcontrolSubscriberResponseObjectAsResultAsGetParentalcontrolSubscriberResponse is a convenience function that returns GetParentalcontrolSubscriberResponseObjectAsResult wrapped in GetParentalcontrolSubscriberResponse
func GetParentalcontrolSubscriberResponseObjectAsResultAsGetParentalcontrolSubscriberResponse(v *GetParentalcontrolSubscriberResponseObjectAsResult) GetParentalcontrolSubscriberResponse {
	return GetParentalcontrolSubscriberResponse{
		GetParentalcontrolSubscriberResponseObjectAsResult: v,
	}
}

// ParentalcontrolSubscriberAsGetParentalcontrolSubscriberResponse is a convenience function that returns ParentalcontrolSubscriber wrapped in GetParentalcontrolSubscriberResponse
func ParentalcontrolSubscriberAsGetParentalcontrolSubscriberResponse(v *ParentalcontrolSubscriber) GetParentalcontrolSubscriberResponse {
	return GetParentalcontrolSubscriberResponse{
		ParentalcontrolSubscriber: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetParentalcontrolSubscriberResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetParentalcontrolSubscriberResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetParentalcontrolSubscriberResponseObjectAsResult)
	if err == nil {
		jsonGetParentalcontrolSubscriberResponseObjectAsResult, _ := json.Marshal(dst.GetParentalcontrolSubscriberResponseObjectAsResult)
		if string(jsonGetParentalcontrolSubscriberResponseObjectAsResult) == "{}" { // empty struct
			dst.GetParentalcontrolSubscriberResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetParentalcontrolSubscriberResponseObjectAsResult = nil
	}

	// try to unmarshal data into ParentalcontrolSubscriber
	err = newStrictDecoder(data).Decode(&dst.ParentalcontrolSubscriber)
	if err == nil {
		jsonParentalcontrolSubscriber, _ := json.Marshal(dst.ParentalcontrolSubscriber)
		if string(jsonParentalcontrolSubscriber) == "{}" { // empty struct
			dst.ParentalcontrolSubscriber = nil
		} else {
			match++
		}
	} else {
		dst.ParentalcontrolSubscriber = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetParentalcontrolSubscriberResponseObjectAsResult = nil
		dst.ParentalcontrolSubscriber = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetParentalcontrolSubscriberResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetParentalcontrolSubscriberResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetParentalcontrolSubscriberResponse) MarshalJSON() ([]byte, error) {
	if src.GetParentalcontrolSubscriberResponseObjectAsResult != nil {
		return json.Marshal(&src.GetParentalcontrolSubscriberResponseObjectAsResult)
	}

	if src.ParentalcontrolSubscriber != nil {
		return json.Marshal(&src.ParentalcontrolSubscriber)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetParentalcontrolSubscriberResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GetParentalcontrolSubscriberResponseObjectAsResult != nil {
		return obj.GetParentalcontrolSubscriberResponseObjectAsResult
	}

	if obj.ParentalcontrolSubscriber != nil {
		return obj.ParentalcontrolSubscriber
	}

	// all schemas are nil
	return nil
}

type NullableGetParentalcontrolSubscriberResponse struct {
	value *GetParentalcontrolSubscriberResponse
	isSet bool
}

func (v NullableGetParentalcontrolSubscriberResponse) Get() *GetParentalcontrolSubscriberResponse {
	return v.value
}

func (v *NullableGetParentalcontrolSubscriberResponse) Set(val *GetParentalcontrolSubscriberResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetParentalcontrolSubscriberResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetParentalcontrolSubscriberResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetParentalcontrolSubscriberResponse(val *GetParentalcontrolSubscriberResponse) *NullableGetParentalcontrolSubscriberResponse {
	return &NullableGetParentalcontrolSubscriberResponse{value: val, isSet: true}
}

func (v NullableGetParentalcontrolSubscriberResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetParentalcontrolSubscriberResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
