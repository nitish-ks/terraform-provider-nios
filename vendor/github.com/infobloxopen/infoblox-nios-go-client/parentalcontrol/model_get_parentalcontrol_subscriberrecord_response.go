/*
Infoblox PARENTALCONTROL API

OpenAPI specification for Infoblox NIOS WAPI PARENTALCONTROL objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package parentalcontrol

import (
	"encoding/json"
	"fmt"
)

// GetParentalcontrolSubscriberrecordResponse - struct for GetParentalcontrolSubscriberrecordResponse
type GetParentalcontrolSubscriberrecordResponse struct {
	GetParentalcontrolSubscriberrecordResponseObjectAsResult *GetParentalcontrolSubscriberrecordResponseObjectAsResult
	ParentalcontrolSubscriberrecord                          *ParentalcontrolSubscriberrecord
}

// GetParentalcontrolSubscriberrecordResponseObjectAsResultAsGetParentalcontrolSubscriberrecordResponse is a convenience function that returns GetParentalcontrolSubscriberrecordResponseObjectAsResult wrapped in GetParentalcontrolSubscriberrecordResponse
func GetParentalcontrolSubscriberrecordResponseObjectAsResultAsGetParentalcontrolSubscriberrecordResponse(v *GetParentalcontrolSubscriberrecordResponseObjectAsResult) GetParentalcontrolSubscriberrecordResponse {
	return GetParentalcontrolSubscriberrecordResponse{
		GetParentalcontrolSubscriberrecordResponseObjectAsResult: v,
	}
}

// ParentalcontrolSubscriberrecordAsGetParentalcontrolSubscriberrecordResponse is a convenience function that returns ParentalcontrolSubscriberrecord wrapped in GetParentalcontrolSubscriberrecordResponse
func ParentalcontrolSubscriberrecordAsGetParentalcontrolSubscriberrecordResponse(v *ParentalcontrolSubscriberrecord) GetParentalcontrolSubscriberrecordResponse {
	return GetParentalcontrolSubscriberrecordResponse{
		ParentalcontrolSubscriberrecord: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetParentalcontrolSubscriberrecordResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetParentalcontrolSubscriberrecordResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetParentalcontrolSubscriberrecordResponseObjectAsResult)
	if err == nil {
		jsonGetParentalcontrolSubscriberrecordResponseObjectAsResult, _ := json.Marshal(dst.GetParentalcontrolSubscriberrecordResponseObjectAsResult)
		if string(jsonGetParentalcontrolSubscriberrecordResponseObjectAsResult) == "{}" { // empty struct
			dst.GetParentalcontrolSubscriberrecordResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetParentalcontrolSubscriberrecordResponseObjectAsResult = nil
	}

	// try to unmarshal data into ParentalcontrolSubscriberrecord
	err = newStrictDecoder(data).Decode(&dst.ParentalcontrolSubscriberrecord)
	if err == nil {
		jsonParentalcontrolSubscriberrecord, _ := json.Marshal(dst.ParentalcontrolSubscriberrecord)
		if string(jsonParentalcontrolSubscriberrecord) == "{}" { // empty struct
			dst.ParentalcontrolSubscriberrecord = nil
		} else {
			match++
		}
	} else {
		dst.ParentalcontrolSubscriberrecord = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetParentalcontrolSubscriberrecordResponseObjectAsResult = nil
		dst.ParentalcontrolSubscriberrecord = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetParentalcontrolSubscriberrecordResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetParentalcontrolSubscriberrecordResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetParentalcontrolSubscriberrecordResponse) MarshalJSON() ([]byte, error) {
	if src.GetParentalcontrolSubscriberrecordResponseObjectAsResult != nil {
		return json.Marshal(&src.GetParentalcontrolSubscriberrecordResponseObjectAsResult)
	}

	if src.ParentalcontrolSubscriberrecord != nil {
		return json.Marshal(&src.ParentalcontrolSubscriberrecord)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetParentalcontrolSubscriberrecordResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GetParentalcontrolSubscriberrecordResponseObjectAsResult != nil {
		return obj.GetParentalcontrolSubscriberrecordResponseObjectAsResult
	}

	if obj.ParentalcontrolSubscriberrecord != nil {
		return obj.ParentalcontrolSubscriberrecord
	}

	// all schemas are nil
	return nil
}

type NullableGetParentalcontrolSubscriberrecordResponse struct {
	value *GetParentalcontrolSubscriberrecordResponse
	isSet bool
}

func (v NullableGetParentalcontrolSubscriberrecordResponse) Get() *GetParentalcontrolSubscriberrecordResponse {
	return v.value
}

func (v *NullableGetParentalcontrolSubscriberrecordResponse) Set(val *GetParentalcontrolSubscriberrecordResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetParentalcontrolSubscriberrecordResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetParentalcontrolSubscriberrecordResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetParentalcontrolSubscriberrecordResponse(val *GetParentalcontrolSubscriberrecordResponse) *NullableGetParentalcontrolSubscriberrecordResponse {
	return &NullableGetParentalcontrolSubscriberrecordResponse{value: val, isSet: true}
}

func (v NullableGetParentalcontrolSubscriberrecordResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetParentalcontrolSubscriberrecordResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
