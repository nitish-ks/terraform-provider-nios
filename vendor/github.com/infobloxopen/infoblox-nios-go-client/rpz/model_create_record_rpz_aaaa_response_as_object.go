/*
Infoblox RPZ API

OpenAPI specification for Infoblox NIOS WAPI RPZ objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rpz

import (
	"encoding/json"
)

// checks if the CreateRecordRpzAaaaResponseAsObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateRecordRpzAaaaResponseAsObject{}

// CreateRecordRpzAaaaResponseAsObject The response format to create __RecordRpzAaaa__ in object format.
type CreateRecordRpzAaaaResponseAsObject struct {
	Result               *RecordRpzAaaa `json:"result,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateRecordRpzAaaaResponseAsObject CreateRecordRpzAaaaResponseAsObject

// NewCreateRecordRpzAaaaResponseAsObject instantiates a new CreateRecordRpzAaaaResponseAsObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRecordRpzAaaaResponseAsObject() *CreateRecordRpzAaaaResponseAsObject {
	this := CreateRecordRpzAaaaResponseAsObject{}
	return &this
}

// NewCreateRecordRpzAaaaResponseAsObjectWithDefaults instantiates a new CreateRecordRpzAaaaResponseAsObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRecordRpzAaaaResponseAsObjectWithDefaults() *CreateRecordRpzAaaaResponseAsObject {
	this := CreateRecordRpzAaaaResponseAsObject{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *CreateRecordRpzAaaaResponseAsObject) GetResult() RecordRpzAaaa {
	if o == nil || IsNil(o.Result) {
		var ret RecordRpzAaaa
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecordRpzAaaaResponseAsObject) GetResultOk() (*RecordRpzAaaa, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *CreateRecordRpzAaaaResponseAsObject) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given RecordRpzAaaa and assigns it to the Result field.
func (o *CreateRecordRpzAaaaResponseAsObject) SetResult(v RecordRpzAaaa) {
	o.Result = &v
}

func (o CreateRecordRpzAaaaResponseAsObject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateRecordRpzAaaaResponseAsObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateRecordRpzAaaaResponseAsObject) UnmarshalJSON(data []byte) (err error) {
	varCreateRecordRpzAaaaResponseAsObject := _CreateRecordRpzAaaaResponseAsObject{}

	err = json.Unmarshal(data, &varCreateRecordRpzAaaaResponseAsObject)

	if err != nil {
		return err
	}

	*o = CreateRecordRpzAaaaResponseAsObject(varCreateRecordRpzAaaaResponseAsObject)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "result")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateRecordRpzAaaaResponseAsObject struct {
	value *CreateRecordRpzAaaaResponseAsObject
	isSet bool
}

func (v NullableCreateRecordRpzAaaaResponseAsObject) Get() *CreateRecordRpzAaaaResponseAsObject {
	return v.value
}

func (v *NullableCreateRecordRpzAaaaResponseAsObject) Set(val *CreateRecordRpzAaaaResponseAsObject) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRecordRpzAaaaResponseAsObject) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRecordRpzAaaaResponseAsObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRecordRpzAaaaResponseAsObject(val *CreateRecordRpzAaaaResponseAsObject) *NullableCreateRecordRpzAaaaResponseAsObject {
	return &NullableCreateRecordRpzAaaaResponseAsObject{value: val, isSet: true}
}

func (v NullableCreateRecordRpzAaaaResponseAsObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRecordRpzAaaaResponseAsObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
