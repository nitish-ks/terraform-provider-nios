/*
Infoblox RPZ API

OpenAPI specification for Infoblox NIOS WAPI RPZ objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rpz

import (
	"encoding/json"
)

// checks if the UpdateRecordRpzCnameClientipaddressdnResponseAsObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateRecordRpzCnameClientipaddressdnResponseAsObject{}

// UpdateRecordRpzCnameClientipaddressdnResponseAsObject The response format to update __RecordRpzCnameClientipaddressdn__ in object format.
type UpdateRecordRpzCnameClientipaddressdnResponseAsObject struct {
	Result               *RecordRpzCnameClientipaddressdn `json:"result,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateRecordRpzCnameClientipaddressdnResponseAsObject UpdateRecordRpzCnameClientipaddressdnResponseAsObject

// NewUpdateRecordRpzCnameClientipaddressdnResponseAsObject instantiates a new UpdateRecordRpzCnameClientipaddressdnResponseAsObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateRecordRpzCnameClientipaddressdnResponseAsObject() *UpdateRecordRpzCnameClientipaddressdnResponseAsObject {
	this := UpdateRecordRpzCnameClientipaddressdnResponseAsObject{}
	return &this
}

// NewUpdateRecordRpzCnameClientipaddressdnResponseAsObjectWithDefaults instantiates a new UpdateRecordRpzCnameClientipaddressdnResponseAsObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateRecordRpzCnameClientipaddressdnResponseAsObjectWithDefaults() *UpdateRecordRpzCnameClientipaddressdnResponseAsObject {
	this := UpdateRecordRpzCnameClientipaddressdnResponseAsObject{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *UpdateRecordRpzCnameClientipaddressdnResponseAsObject) GetResult() RecordRpzCnameClientipaddressdn {
	if o == nil || IsNil(o.Result) {
		var ret RecordRpzCnameClientipaddressdn
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRecordRpzCnameClientipaddressdnResponseAsObject) GetResultOk() (*RecordRpzCnameClientipaddressdn, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *UpdateRecordRpzCnameClientipaddressdnResponseAsObject) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given RecordRpzCnameClientipaddressdn and assigns it to the Result field.
func (o *UpdateRecordRpzCnameClientipaddressdnResponseAsObject) SetResult(v RecordRpzCnameClientipaddressdn) {
	o.Result = &v
}

func (o UpdateRecordRpzCnameClientipaddressdnResponseAsObject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateRecordRpzCnameClientipaddressdnResponseAsObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateRecordRpzCnameClientipaddressdnResponseAsObject) UnmarshalJSON(data []byte) (err error) {
	varUpdateRecordRpzCnameClientipaddressdnResponseAsObject := _UpdateRecordRpzCnameClientipaddressdnResponseAsObject{}

	err = json.Unmarshal(data, &varUpdateRecordRpzCnameClientipaddressdnResponseAsObject)

	if err != nil {
		return err
	}

	*o = UpdateRecordRpzCnameClientipaddressdnResponseAsObject(varUpdateRecordRpzCnameClientipaddressdnResponseAsObject)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "result")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateRecordRpzCnameClientipaddressdnResponseAsObject struct {
	value *UpdateRecordRpzCnameClientipaddressdnResponseAsObject
	isSet bool
}

func (v NullableUpdateRecordRpzCnameClientipaddressdnResponseAsObject) Get() *UpdateRecordRpzCnameClientipaddressdnResponseAsObject {
	return v.value
}

func (v *NullableUpdateRecordRpzCnameClientipaddressdnResponseAsObject) Set(val *UpdateRecordRpzCnameClientipaddressdnResponseAsObject) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateRecordRpzCnameClientipaddressdnResponseAsObject) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateRecordRpzCnameClientipaddressdnResponseAsObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateRecordRpzCnameClientipaddressdnResponseAsObject(val *UpdateRecordRpzCnameClientipaddressdnResponseAsObject) *NullableUpdateRecordRpzCnameClientipaddressdnResponseAsObject {
	return &NullableUpdateRecordRpzCnameClientipaddressdnResponseAsObject{value: val, isSet: true}
}

func (v NullableUpdateRecordRpzCnameClientipaddressdnResponseAsObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateRecordRpzCnameClientipaddressdnResponseAsObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
