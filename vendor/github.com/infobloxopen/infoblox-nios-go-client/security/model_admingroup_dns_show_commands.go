/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
)

// checks if the AdmingroupDnsShowCommands type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdmingroupDnsShowCommands{}

// AdmingroupDnsShowCommands struct for AdmingroupDnsShowCommands
type AdmingroupDnsShowCommands struct {
	// If True then CLI user has permission to run the command
	ShowLogGuestLookups *bool `json:"show_log_guest_lookups,omitempty"`
	// If True then CLI user has permission to run the command
	ShowDnsGssTsig *bool `json:"show_dns_gss_tsig,omitempty"`
	// If True then CLI user has permission to run the command
	ShowDns *bool `json:"show_dns,omitempty"`
	// If True then CLI user has permission to run the command
	ShowDnstapStats *bool `json:"show_dnstap_stats,omitempty"`
	// If True then CLI user has permission to run the command
	ShowDnstapStatus *bool `json:"show_dnstap_status,omitempty"`
	// If True then CLI user has permission to run the command
	ShowDnsOverTlsConfig *bool `json:"show_dns_over_tls_config,omitempty"`
	// If True then CLI user has permission to run the command
	ShowDnsOverTlsStatus *bool `json:"show_dns_over_tls_status,omitempty"`
	// If True then CLI user has permission to run the command
	ShowDnsOverTlsStats *bool `json:"show_dns_over_tls_stats,omitempty"`
	// If True then CLI user has permission to run the command
	ShowDohConfig *bool `json:"show_doh_config,omitempty"`
	// If True then CLI user has permission to run the command
	ShowDohStatus *bool `json:"show_doh_status,omitempty"`
	// If True then CLI user has permission to run the command
	ShowDohStats *bool `json:"show_doh_stats,omitempty"`
	// If True then CLI user has permission to run the command
	ShowExtraDnsNameValidations *bool `json:"show_extra_dns_name_validations,omitempty"`
	// If True then CLI user has permission to run the command
	ShowMsStickyIp *bool `json:"show_ms_sticky_ip,omitempty"`
	// If True then CLI user has permission to run the command
	ShowDnsRrl *bool `json:"show_dns_rrl,omitempty"`
	// If True then CLI user has permission to run the command
	ShowEnableMatchRecursiveOnly *bool `json:"show_enable_match_recursive_only,omitempty"`
	// If True then CLI user has permission to run the command
	ShowMaxRecursionDepth *bool `json:"show_max_recursion_depth,omitempty"`
	// If True then CLI user has permission to run the command
	ShowMaxRecursionQueries *bool `json:"show_max_recursion_queries,omitempty"`
	// If True then CLI user has permission to run the command
	ShowMonitor *bool `json:"show_monitor,omitempty"`
	// If True then CLI user has permission to run the command
	ShowQueryCapture *bool `json:"show_query_capture,omitempty"`
	// If True then CLI user has permission to run the command
	ShowDtcEa *bool `json:"show_dtc_ea,omitempty"`
	// If True then CLI user has permission to run the command
	ShowDtcGeoip *bool `json:"show_dtc_geoip,omitempty"`
	// If True then CLI user has permission to run the command
	ShowRestartAnycastWithDnsRestart *bool `json:"show_restart_anycast_with_dns_restart,omitempty"`
	// If True then CLI user has permission to run the command
	ShowRpzAddSoa *bool `json:"show_rpz_add_soa,omitempty"`
	// If True then CLI user has permission to run the command
	ShowDnsAccel *bool `json:"show_dns_accel,omitempty"`
	// If True then CLI user has permission to run the command
	ShowDnsAccelDebug *bool `json:"show_dns_accel_debug,omitempty"`
	// If True then CLI user has permission to run the command
	ShowAllowQueryDomain *bool `json:"show_allow_query_domain,omitempty"`
	// If True then CLI user has permission to run the command
	ShowAllowQueryDomainViews *bool `json:"show_allow_query_domain_views,omitempty"`
	// If True then enable all fields
	EnableAll *bool `json:"enable_all,omitempty"`
	// If True then disable all fields
	DisableAll           *bool `json:"disable_all,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AdmingroupDnsShowCommands AdmingroupDnsShowCommands

// NewAdmingroupDnsShowCommands instantiates a new AdmingroupDnsShowCommands object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdmingroupDnsShowCommands() *AdmingroupDnsShowCommands {
	this := AdmingroupDnsShowCommands{}
	return &this
}

// NewAdmingroupDnsShowCommandsWithDefaults instantiates a new AdmingroupDnsShowCommands object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdmingroupDnsShowCommandsWithDefaults() *AdmingroupDnsShowCommands {
	this := AdmingroupDnsShowCommands{}
	return &this
}

// GetShowLogGuestLookups returns the ShowLogGuestLookups field value if set, zero value otherwise.
func (o *AdmingroupDnsShowCommands) GetShowLogGuestLookups() bool {
	if o == nil || IsNil(o.ShowLogGuestLookups) {
		var ret bool
		return ret
	}
	return *o.ShowLogGuestLookups
}

// GetShowLogGuestLookupsOk returns a tuple with the ShowLogGuestLookups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDnsShowCommands) GetShowLogGuestLookupsOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowLogGuestLookups) {
		return nil, false
	}
	return o.ShowLogGuestLookups, true
}

// HasShowLogGuestLookups returns a boolean if a field has been set.
func (o *AdmingroupDnsShowCommands) HasShowLogGuestLookups() bool {
	if o != nil && !IsNil(o.ShowLogGuestLookups) {
		return true
	}

	return false
}

// SetShowLogGuestLookups gets a reference to the given bool and assigns it to the ShowLogGuestLookups field.
func (o *AdmingroupDnsShowCommands) SetShowLogGuestLookups(v bool) {
	o.ShowLogGuestLookups = &v
}

// GetShowDnsGssTsig returns the ShowDnsGssTsig field value if set, zero value otherwise.
func (o *AdmingroupDnsShowCommands) GetShowDnsGssTsig() bool {
	if o == nil || IsNil(o.ShowDnsGssTsig) {
		var ret bool
		return ret
	}
	return *o.ShowDnsGssTsig
}

// GetShowDnsGssTsigOk returns a tuple with the ShowDnsGssTsig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDnsShowCommands) GetShowDnsGssTsigOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowDnsGssTsig) {
		return nil, false
	}
	return o.ShowDnsGssTsig, true
}

// HasShowDnsGssTsig returns a boolean if a field has been set.
func (o *AdmingroupDnsShowCommands) HasShowDnsGssTsig() bool {
	if o != nil && !IsNil(o.ShowDnsGssTsig) {
		return true
	}

	return false
}

// SetShowDnsGssTsig gets a reference to the given bool and assigns it to the ShowDnsGssTsig field.
func (o *AdmingroupDnsShowCommands) SetShowDnsGssTsig(v bool) {
	o.ShowDnsGssTsig = &v
}

// GetShowDns returns the ShowDns field value if set, zero value otherwise.
func (o *AdmingroupDnsShowCommands) GetShowDns() bool {
	if o == nil || IsNil(o.ShowDns) {
		var ret bool
		return ret
	}
	return *o.ShowDns
}

// GetShowDnsOk returns a tuple with the ShowDns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDnsShowCommands) GetShowDnsOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowDns) {
		return nil, false
	}
	return o.ShowDns, true
}

// HasShowDns returns a boolean if a field has been set.
func (o *AdmingroupDnsShowCommands) HasShowDns() bool {
	if o != nil && !IsNil(o.ShowDns) {
		return true
	}

	return false
}

// SetShowDns gets a reference to the given bool and assigns it to the ShowDns field.
func (o *AdmingroupDnsShowCommands) SetShowDns(v bool) {
	o.ShowDns = &v
}

// GetShowDnstapStats returns the ShowDnstapStats field value if set, zero value otherwise.
func (o *AdmingroupDnsShowCommands) GetShowDnstapStats() bool {
	if o == nil || IsNil(o.ShowDnstapStats) {
		var ret bool
		return ret
	}
	return *o.ShowDnstapStats
}

// GetShowDnstapStatsOk returns a tuple with the ShowDnstapStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDnsShowCommands) GetShowDnstapStatsOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowDnstapStats) {
		return nil, false
	}
	return o.ShowDnstapStats, true
}

// HasShowDnstapStats returns a boolean if a field has been set.
func (o *AdmingroupDnsShowCommands) HasShowDnstapStats() bool {
	if o != nil && !IsNil(o.ShowDnstapStats) {
		return true
	}

	return false
}

// SetShowDnstapStats gets a reference to the given bool and assigns it to the ShowDnstapStats field.
func (o *AdmingroupDnsShowCommands) SetShowDnstapStats(v bool) {
	o.ShowDnstapStats = &v
}

// GetShowDnstapStatus returns the ShowDnstapStatus field value if set, zero value otherwise.
func (o *AdmingroupDnsShowCommands) GetShowDnstapStatus() bool {
	if o == nil || IsNil(o.ShowDnstapStatus) {
		var ret bool
		return ret
	}
	return *o.ShowDnstapStatus
}

// GetShowDnstapStatusOk returns a tuple with the ShowDnstapStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDnsShowCommands) GetShowDnstapStatusOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowDnstapStatus) {
		return nil, false
	}
	return o.ShowDnstapStatus, true
}

// HasShowDnstapStatus returns a boolean if a field has been set.
func (o *AdmingroupDnsShowCommands) HasShowDnstapStatus() bool {
	if o != nil && !IsNil(o.ShowDnstapStatus) {
		return true
	}

	return false
}

// SetShowDnstapStatus gets a reference to the given bool and assigns it to the ShowDnstapStatus field.
func (o *AdmingroupDnsShowCommands) SetShowDnstapStatus(v bool) {
	o.ShowDnstapStatus = &v
}

// GetShowDnsOverTlsConfig returns the ShowDnsOverTlsConfig field value if set, zero value otherwise.
func (o *AdmingroupDnsShowCommands) GetShowDnsOverTlsConfig() bool {
	if o == nil || IsNil(o.ShowDnsOverTlsConfig) {
		var ret bool
		return ret
	}
	return *o.ShowDnsOverTlsConfig
}

// GetShowDnsOverTlsConfigOk returns a tuple with the ShowDnsOverTlsConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDnsShowCommands) GetShowDnsOverTlsConfigOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowDnsOverTlsConfig) {
		return nil, false
	}
	return o.ShowDnsOverTlsConfig, true
}

// HasShowDnsOverTlsConfig returns a boolean if a field has been set.
func (o *AdmingroupDnsShowCommands) HasShowDnsOverTlsConfig() bool {
	if o != nil && !IsNil(o.ShowDnsOverTlsConfig) {
		return true
	}

	return false
}

// SetShowDnsOverTlsConfig gets a reference to the given bool and assigns it to the ShowDnsOverTlsConfig field.
func (o *AdmingroupDnsShowCommands) SetShowDnsOverTlsConfig(v bool) {
	o.ShowDnsOverTlsConfig = &v
}

// GetShowDnsOverTlsStatus returns the ShowDnsOverTlsStatus field value if set, zero value otherwise.
func (o *AdmingroupDnsShowCommands) GetShowDnsOverTlsStatus() bool {
	if o == nil || IsNil(o.ShowDnsOverTlsStatus) {
		var ret bool
		return ret
	}
	return *o.ShowDnsOverTlsStatus
}

// GetShowDnsOverTlsStatusOk returns a tuple with the ShowDnsOverTlsStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDnsShowCommands) GetShowDnsOverTlsStatusOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowDnsOverTlsStatus) {
		return nil, false
	}
	return o.ShowDnsOverTlsStatus, true
}

// HasShowDnsOverTlsStatus returns a boolean if a field has been set.
func (o *AdmingroupDnsShowCommands) HasShowDnsOverTlsStatus() bool {
	if o != nil && !IsNil(o.ShowDnsOverTlsStatus) {
		return true
	}

	return false
}

// SetShowDnsOverTlsStatus gets a reference to the given bool and assigns it to the ShowDnsOverTlsStatus field.
func (o *AdmingroupDnsShowCommands) SetShowDnsOverTlsStatus(v bool) {
	o.ShowDnsOverTlsStatus = &v
}

// GetShowDnsOverTlsStats returns the ShowDnsOverTlsStats field value if set, zero value otherwise.
func (o *AdmingroupDnsShowCommands) GetShowDnsOverTlsStats() bool {
	if o == nil || IsNil(o.ShowDnsOverTlsStats) {
		var ret bool
		return ret
	}
	return *o.ShowDnsOverTlsStats
}

// GetShowDnsOverTlsStatsOk returns a tuple with the ShowDnsOverTlsStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDnsShowCommands) GetShowDnsOverTlsStatsOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowDnsOverTlsStats) {
		return nil, false
	}
	return o.ShowDnsOverTlsStats, true
}

// HasShowDnsOverTlsStats returns a boolean if a field has been set.
func (o *AdmingroupDnsShowCommands) HasShowDnsOverTlsStats() bool {
	if o != nil && !IsNil(o.ShowDnsOverTlsStats) {
		return true
	}

	return false
}

// SetShowDnsOverTlsStats gets a reference to the given bool and assigns it to the ShowDnsOverTlsStats field.
func (o *AdmingroupDnsShowCommands) SetShowDnsOverTlsStats(v bool) {
	o.ShowDnsOverTlsStats = &v
}

// GetShowDohConfig returns the ShowDohConfig field value if set, zero value otherwise.
func (o *AdmingroupDnsShowCommands) GetShowDohConfig() bool {
	if o == nil || IsNil(o.ShowDohConfig) {
		var ret bool
		return ret
	}
	return *o.ShowDohConfig
}

// GetShowDohConfigOk returns a tuple with the ShowDohConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDnsShowCommands) GetShowDohConfigOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowDohConfig) {
		return nil, false
	}
	return o.ShowDohConfig, true
}

// HasShowDohConfig returns a boolean if a field has been set.
func (o *AdmingroupDnsShowCommands) HasShowDohConfig() bool {
	if o != nil && !IsNil(o.ShowDohConfig) {
		return true
	}

	return false
}

// SetShowDohConfig gets a reference to the given bool and assigns it to the ShowDohConfig field.
func (o *AdmingroupDnsShowCommands) SetShowDohConfig(v bool) {
	o.ShowDohConfig = &v
}

// GetShowDohStatus returns the ShowDohStatus field value if set, zero value otherwise.
func (o *AdmingroupDnsShowCommands) GetShowDohStatus() bool {
	if o == nil || IsNil(o.ShowDohStatus) {
		var ret bool
		return ret
	}
	return *o.ShowDohStatus
}

// GetShowDohStatusOk returns a tuple with the ShowDohStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDnsShowCommands) GetShowDohStatusOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowDohStatus) {
		return nil, false
	}
	return o.ShowDohStatus, true
}

// HasShowDohStatus returns a boolean if a field has been set.
func (o *AdmingroupDnsShowCommands) HasShowDohStatus() bool {
	if o != nil && !IsNil(o.ShowDohStatus) {
		return true
	}

	return false
}

// SetShowDohStatus gets a reference to the given bool and assigns it to the ShowDohStatus field.
func (o *AdmingroupDnsShowCommands) SetShowDohStatus(v bool) {
	o.ShowDohStatus = &v
}

// GetShowDohStats returns the ShowDohStats field value if set, zero value otherwise.
func (o *AdmingroupDnsShowCommands) GetShowDohStats() bool {
	if o == nil || IsNil(o.ShowDohStats) {
		var ret bool
		return ret
	}
	return *o.ShowDohStats
}

// GetShowDohStatsOk returns a tuple with the ShowDohStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDnsShowCommands) GetShowDohStatsOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowDohStats) {
		return nil, false
	}
	return o.ShowDohStats, true
}

// HasShowDohStats returns a boolean if a field has been set.
func (o *AdmingroupDnsShowCommands) HasShowDohStats() bool {
	if o != nil && !IsNil(o.ShowDohStats) {
		return true
	}

	return false
}

// SetShowDohStats gets a reference to the given bool and assigns it to the ShowDohStats field.
func (o *AdmingroupDnsShowCommands) SetShowDohStats(v bool) {
	o.ShowDohStats = &v
}

// GetShowExtraDnsNameValidations returns the ShowExtraDnsNameValidations field value if set, zero value otherwise.
func (o *AdmingroupDnsShowCommands) GetShowExtraDnsNameValidations() bool {
	if o == nil || IsNil(o.ShowExtraDnsNameValidations) {
		var ret bool
		return ret
	}
	return *o.ShowExtraDnsNameValidations
}

// GetShowExtraDnsNameValidationsOk returns a tuple with the ShowExtraDnsNameValidations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDnsShowCommands) GetShowExtraDnsNameValidationsOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowExtraDnsNameValidations) {
		return nil, false
	}
	return o.ShowExtraDnsNameValidations, true
}

// HasShowExtraDnsNameValidations returns a boolean if a field has been set.
func (o *AdmingroupDnsShowCommands) HasShowExtraDnsNameValidations() bool {
	if o != nil && !IsNil(o.ShowExtraDnsNameValidations) {
		return true
	}

	return false
}

// SetShowExtraDnsNameValidations gets a reference to the given bool and assigns it to the ShowExtraDnsNameValidations field.
func (o *AdmingroupDnsShowCommands) SetShowExtraDnsNameValidations(v bool) {
	o.ShowExtraDnsNameValidations = &v
}

// GetShowMsStickyIp returns the ShowMsStickyIp field value if set, zero value otherwise.
func (o *AdmingroupDnsShowCommands) GetShowMsStickyIp() bool {
	if o == nil || IsNil(o.ShowMsStickyIp) {
		var ret bool
		return ret
	}
	return *o.ShowMsStickyIp
}

// GetShowMsStickyIpOk returns a tuple with the ShowMsStickyIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDnsShowCommands) GetShowMsStickyIpOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowMsStickyIp) {
		return nil, false
	}
	return o.ShowMsStickyIp, true
}

// HasShowMsStickyIp returns a boolean if a field has been set.
func (o *AdmingroupDnsShowCommands) HasShowMsStickyIp() bool {
	if o != nil && !IsNil(o.ShowMsStickyIp) {
		return true
	}

	return false
}

// SetShowMsStickyIp gets a reference to the given bool and assigns it to the ShowMsStickyIp field.
func (o *AdmingroupDnsShowCommands) SetShowMsStickyIp(v bool) {
	o.ShowMsStickyIp = &v
}

// GetShowDnsRrl returns the ShowDnsRrl field value if set, zero value otherwise.
func (o *AdmingroupDnsShowCommands) GetShowDnsRrl() bool {
	if o == nil || IsNil(o.ShowDnsRrl) {
		var ret bool
		return ret
	}
	return *o.ShowDnsRrl
}

// GetShowDnsRrlOk returns a tuple with the ShowDnsRrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDnsShowCommands) GetShowDnsRrlOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowDnsRrl) {
		return nil, false
	}
	return o.ShowDnsRrl, true
}

// HasShowDnsRrl returns a boolean if a field has been set.
func (o *AdmingroupDnsShowCommands) HasShowDnsRrl() bool {
	if o != nil && !IsNil(o.ShowDnsRrl) {
		return true
	}

	return false
}

// SetShowDnsRrl gets a reference to the given bool and assigns it to the ShowDnsRrl field.
func (o *AdmingroupDnsShowCommands) SetShowDnsRrl(v bool) {
	o.ShowDnsRrl = &v
}

// GetShowEnableMatchRecursiveOnly returns the ShowEnableMatchRecursiveOnly field value if set, zero value otherwise.
func (o *AdmingroupDnsShowCommands) GetShowEnableMatchRecursiveOnly() bool {
	if o == nil || IsNil(o.ShowEnableMatchRecursiveOnly) {
		var ret bool
		return ret
	}
	return *o.ShowEnableMatchRecursiveOnly
}

// GetShowEnableMatchRecursiveOnlyOk returns a tuple with the ShowEnableMatchRecursiveOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDnsShowCommands) GetShowEnableMatchRecursiveOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowEnableMatchRecursiveOnly) {
		return nil, false
	}
	return o.ShowEnableMatchRecursiveOnly, true
}

// HasShowEnableMatchRecursiveOnly returns a boolean if a field has been set.
func (o *AdmingroupDnsShowCommands) HasShowEnableMatchRecursiveOnly() bool {
	if o != nil && !IsNil(o.ShowEnableMatchRecursiveOnly) {
		return true
	}

	return false
}

// SetShowEnableMatchRecursiveOnly gets a reference to the given bool and assigns it to the ShowEnableMatchRecursiveOnly field.
func (o *AdmingroupDnsShowCommands) SetShowEnableMatchRecursiveOnly(v bool) {
	o.ShowEnableMatchRecursiveOnly = &v
}

// GetShowMaxRecursionDepth returns the ShowMaxRecursionDepth field value if set, zero value otherwise.
func (o *AdmingroupDnsShowCommands) GetShowMaxRecursionDepth() bool {
	if o == nil || IsNil(o.ShowMaxRecursionDepth) {
		var ret bool
		return ret
	}
	return *o.ShowMaxRecursionDepth
}

// GetShowMaxRecursionDepthOk returns a tuple with the ShowMaxRecursionDepth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDnsShowCommands) GetShowMaxRecursionDepthOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowMaxRecursionDepth) {
		return nil, false
	}
	return o.ShowMaxRecursionDepth, true
}

// HasShowMaxRecursionDepth returns a boolean if a field has been set.
func (o *AdmingroupDnsShowCommands) HasShowMaxRecursionDepth() bool {
	if o != nil && !IsNil(o.ShowMaxRecursionDepth) {
		return true
	}

	return false
}

// SetShowMaxRecursionDepth gets a reference to the given bool and assigns it to the ShowMaxRecursionDepth field.
func (o *AdmingroupDnsShowCommands) SetShowMaxRecursionDepth(v bool) {
	o.ShowMaxRecursionDepth = &v
}

// GetShowMaxRecursionQueries returns the ShowMaxRecursionQueries field value if set, zero value otherwise.
func (o *AdmingroupDnsShowCommands) GetShowMaxRecursionQueries() bool {
	if o == nil || IsNil(o.ShowMaxRecursionQueries) {
		var ret bool
		return ret
	}
	return *o.ShowMaxRecursionQueries
}

// GetShowMaxRecursionQueriesOk returns a tuple with the ShowMaxRecursionQueries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDnsShowCommands) GetShowMaxRecursionQueriesOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowMaxRecursionQueries) {
		return nil, false
	}
	return o.ShowMaxRecursionQueries, true
}

// HasShowMaxRecursionQueries returns a boolean if a field has been set.
func (o *AdmingroupDnsShowCommands) HasShowMaxRecursionQueries() bool {
	if o != nil && !IsNil(o.ShowMaxRecursionQueries) {
		return true
	}

	return false
}

// SetShowMaxRecursionQueries gets a reference to the given bool and assigns it to the ShowMaxRecursionQueries field.
func (o *AdmingroupDnsShowCommands) SetShowMaxRecursionQueries(v bool) {
	o.ShowMaxRecursionQueries = &v
}

// GetShowMonitor returns the ShowMonitor field value if set, zero value otherwise.
func (o *AdmingroupDnsShowCommands) GetShowMonitor() bool {
	if o == nil || IsNil(o.ShowMonitor) {
		var ret bool
		return ret
	}
	return *o.ShowMonitor
}

// GetShowMonitorOk returns a tuple with the ShowMonitor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDnsShowCommands) GetShowMonitorOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowMonitor) {
		return nil, false
	}
	return o.ShowMonitor, true
}

// HasShowMonitor returns a boolean if a field has been set.
func (o *AdmingroupDnsShowCommands) HasShowMonitor() bool {
	if o != nil && !IsNil(o.ShowMonitor) {
		return true
	}

	return false
}

// SetShowMonitor gets a reference to the given bool and assigns it to the ShowMonitor field.
func (o *AdmingroupDnsShowCommands) SetShowMonitor(v bool) {
	o.ShowMonitor = &v
}

// GetShowQueryCapture returns the ShowQueryCapture field value if set, zero value otherwise.
func (o *AdmingroupDnsShowCommands) GetShowQueryCapture() bool {
	if o == nil || IsNil(o.ShowQueryCapture) {
		var ret bool
		return ret
	}
	return *o.ShowQueryCapture
}

// GetShowQueryCaptureOk returns a tuple with the ShowQueryCapture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDnsShowCommands) GetShowQueryCaptureOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowQueryCapture) {
		return nil, false
	}
	return o.ShowQueryCapture, true
}

// HasShowQueryCapture returns a boolean if a field has been set.
func (o *AdmingroupDnsShowCommands) HasShowQueryCapture() bool {
	if o != nil && !IsNil(o.ShowQueryCapture) {
		return true
	}

	return false
}

// SetShowQueryCapture gets a reference to the given bool and assigns it to the ShowQueryCapture field.
func (o *AdmingroupDnsShowCommands) SetShowQueryCapture(v bool) {
	o.ShowQueryCapture = &v
}

// GetShowDtcEa returns the ShowDtcEa field value if set, zero value otherwise.
func (o *AdmingroupDnsShowCommands) GetShowDtcEa() bool {
	if o == nil || IsNil(o.ShowDtcEa) {
		var ret bool
		return ret
	}
	return *o.ShowDtcEa
}

// GetShowDtcEaOk returns a tuple with the ShowDtcEa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDnsShowCommands) GetShowDtcEaOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowDtcEa) {
		return nil, false
	}
	return o.ShowDtcEa, true
}

// HasShowDtcEa returns a boolean if a field has been set.
func (o *AdmingroupDnsShowCommands) HasShowDtcEa() bool {
	if o != nil && !IsNil(o.ShowDtcEa) {
		return true
	}

	return false
}

// SetShowDtcEa gets a reference to the given bool and assigns it to the ShowDtcEa field.
func (o *AdmingroupDnsShowCommands) SetShowDtcEa(v bool) {
	o.ShowDtcEa = &v
}

// GetShowDtcGeoip returns the ShowDtcGeoip field value if set, zero value otherwise.
func (o *AdmingroupDnsShowCommands) GetShowDtcGeoip() bool {
	if o == nil || IsNil(o.ShowDtcGeoip) {
		var ret bool
		return ret
	}
	return *o.ShowDtcGeoip
}

// GetShowDtcGeoipOk returns a tuple with the ShowDtcGeoip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDnsShowCommands) GetShowDtcGeoipOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowDtcGeoip) {
		return nil, false
	}
	return o.ShowDtcGeoip, true
}

// HasShowDtcGeoip returns a boolean if a field has been set.
func (o *AdmingroupDnsShowCommands) HasShowDtcGeoip() bool {
	if o != nil && !IsNil(o.ShowDtcGeoip) {
		return true
	}

	return false
}

// SetShowDtcGeoip gets a reference to the given bool and assigns it to the ShowDtcGeoip field.
func (o *AdmingroupDnsShowCommands) SetShowDtcGeoip(v bool) {
	o.ShowDtcGeoip = &v
}

// GetShowRestartAnycastWithDnsRestart returns the ShowRestartAnycastWithDnsRestart field value if set, zero value otherwise.
func (o *AdmingroupDnsShowCommands) GetShowRestartAnycastWithDnsRestart() bool {
	if o == nil || IsNil(o.ShowRestartAnycastWithDnsRestart) {
		var ret bool
		return ret
	}
	return *o.ShowRestartAnycastWithDnsRestart
}

// GetShowRestartAnycastWithDnsRestartOk returns a tuple with the ShowRestartAnycastWithDnsRestart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDnsShowCommands) GetShowRestartAnycastWithDnsRestartOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowRestartAnycastWithDnsRestart) {
		return nil, false
	}
	return o.ShowRestartAnycastWithDnsRestart, true
}

// HasShowRestartAnycastWithDnsRestart returns a boolean if a field has been set.
func (o *AdmingroupDnsShowCommands) HasShowRestartAnycastWithDnsRestart() bool {
	if o != nil && !IsNil(o.ShowRestartAnycastWithDnsRestart) {
		return true
	}

	return false
}

// SetShowRestartAnycastWithDnsRestart gets a reference to the given bool and assigns it to the ShowRestartAnycastWithDnsRestart field.
func (o *AdmingroupDnsShowCommands) SetShowRestartAnycastWithDnsRestart(v bool) {
	o.ShowRestartAnycastWithDnsRestart = &v
}

// GetShowRpzAddSoa returns the ShowRpzAddSoa field value if set, zero value otherwise.
func (o *AdmingroupDnsShowCommands) GetShowRpzAddSoa() bool {
	if o == nil || IsNil(o.ShowRpzAddSoa) {
		var ret bool
		return ret
	}
	return *o.ShowRpzAddSoa
}

// GetShowRpzAddSoaOk returns a tuple with the ShowRpzAddSoa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDnsShowCommands) GetShowRpzAddSoaOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowRpzAddSoa) {
		return nil, false
	}
	return o.ShowRpzAddSoa, true
}

// HasShowRpzAddSoa returns a boolean if a field has been set.
func (o *AdmingroupDnsShowCommands) HasShowRpzAddSoa() bool {
	if o != nil && !IsNil(o.ShowRpzAddSoa) {
		return true
	}

	return false
}

// SetShowRpzAddSoa gets a reference to the given bool and assigns it to the ShowRpzAddSoa field.
func (o *AdmingroupDnsShowCommands) SetShowRpzAddSoa(v bool) {
	o.ShowRpzAddSoa = &v
}

// GetShowDnsAccel returns the ShowDnsAccel field value if set, zero value otherwise.
func (o *AdmingroupDnsShowCommands) GetShowDnsAccel() bool {
	if o == nil || IsNil(o.ShowDnsAccel) {
		var ret bool
		return ret
	}
	return *o.ShowDnsAccel
}

// GetShowDnsAccelOk returns a tuple with the ShowDnsAccel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDnsShowCommands) GetShowDnsAccelOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowDnsAccel) {
		return nil, false
	}
	return o.ShowDnsAccel, true
}

// HasShowDnsAccel returns a boolean if a field has been set.
func (o *AdmingroupDnsShowCommands) HasShowDnsAccel() bool {
	if o != nil && !IsNil(o.ShowDnsAccel) {
		return true
	}

	return false
}

// SetShowDnsAccel gets a reference to the given bool and assigns it to the ShowDnsAccel field.
func (o *AdmingroupDnsShowCommands) SetShowDnsAccel(v bool) {
	o.ShowDnsAccel = &v
}

// GetShowDnsAccelDebug returns the ShowDnsAccelDebug field value if set, zero value otherwise.
func (o *AdmingroupDnsShowCommands) GetShowDnsAccelDebug() bool {
	if o == nil || IsNil(o.ShowDnsAccelDebug) {
		var ret bool
		return ret
	}
	return *o.ShowDnsAccelDebug
}

// GetShowDnsAccelDebugOk returns a tuple with the ShowDnsAccelDebug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDnsShowCommands) GetShowDnsAccelDebugOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowDnsAccelDebug) {
		return nil, false
	}
	return o.ShowDnsAccelDebug, true
}

// HasShowDnsAccelDebug returns a boolean if a field has been set.
func (o *AdmingroupDnsShowCommands) HasShowDnsAccelDebug() bool {
	if o != nil && !IsNil(o.ShowDnsAccelDebug) {
		return true
	}

	return false
}

// SetShowDnsAccelDebug gets a reference to the given bool and assigns it to the ShowDnsAccelDebug field.
func (o *AdmingroupDnsShowCommands) SetShowDnsAccelDebug(v bool) {
	o.ShowDnsAccelDebug = &v
}

// GetShowAllowQueryDomain returns the ShowAllowQueryDomain field value if set, zero value otherwise.
func (o *AdmingroupDnsShowCommands) GetShowAllowQueryDomain() bool {
	if o == nil || IsNil(o.ShowAllowQueryDomain) {
		var ret bool
		return ret
	}
	return *o.ShowAllowQueryDomain
}

// GetShowAllowQueryDomainOk returns a tuple with the ShowAllowQueryDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDnsShowCommands) GetShowAllowQueryDomainOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowAllowQueryDomain) {
		return nil, false
	}
	return o.ShowAllowQueryDomain, true
}

// HasShowAllowQueryDomain returns a boolean if a field has been set.
func (o *AdmingroupDnsShowCommands) HasShowAllowQueryDomain() bool {
	if o != nil && !IsNil(o.ShowAllowQueryDomain) {
		return true
	}

	return false
}

// SetShowAllowQueryDomain gets a reference to the given bool and assigns it to the ShowAllowQueryDomain field.
func (o *AdmingroupDnsShowCommands) SetShowAllowQueryDomain(v bool) {
	o.ShowAllowQueryDomain = &v
}

// GetShowAllowQueryDomainViews returns the ShowAllowQueryDomainViews field value if set, zero value otherwise.
func (o *AdmingroupDnsShowCommands) GetShowAllowQueryDomainViews() bool {
	if o == nil || IsNil(o.ShowAllowQueryDomainViews) {
		var ret bool
		return ret
	}
	return *o.ShowAllowQueryDomainViews
}

// GetShowAllowQueryDomainViewsOk returns a tuple with the ShowAllowQueryDomainViews field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDnsShowCommands) GetShowAllowQueryDomainViewsOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowAllowQueryDomainViews) {
		return nil, false
	}
	return o.ShowAllowQueryDomainViews, true
}

// HasShowAllowQueryDomainViews returns a boolean if a field has been set.
func (o *AdmingroupDnsShowCommands) HasShowAllowQueryDomainViews() bool {
	if o != nil && !IsNil(o.ShowAllowQueryDomainViews) {
		return true
	}

	return false
}

// SetShowAllowQueryDomainViews gets a reference to the given bool and assigns it to the ShowAllowQueryDomainViews field.
func (o *AdmingroupDnsShowCommands) SetShowAllowQueryDomainViews(v bool) {
	o.ShowAllowQueryDomainViews = &v
}

// GetEnableAll returns the EnableAll field value if set, zero value otherwise.
func (o *AdmingroupDnsShowCommands) GetEnableAll() bool {
	if o == nil || IsNil(o.EnableAll) {
		var ret bool
		return ret
	}
	return *o.EnableAll
}

// GetEnableAllOk returns a tuple with the EnableAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDnsShowCommands) GetEnableAllOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableAll) {
		return nil, false
	}
	return o.EnableAll, true
}

// HasEnableAll returns a boolean if a field has been set.
func (o *AdmingroupDnsShowCommands) HasEnableAll() bool {
	if o != nil && !IsNil(o.EnableAll) {
		return true
	}

	return false
}

// SetEnableAll gets a reference to the given bool and assigns it to the EnableAll field.
func (o *AdmingroupDnsShowCommands) SetEnableAll(v bool) {
	o.EnableAll = &v
}

// GetDisableAll returns the DisableAll field value if set, zero value otherwise.
func (o *AdmingroupDnsShowCommands) GetDisableAll() bool {
	if o == nil || IsNil(o.DisableAll) {
		var ret bool
		return ret
	}
	return *o.DisableAll
}

// GetDisableAllOk returns a tuple with the DisableAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdmingroupDnsShowCommands) GetDisableAllOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableAll) {
		return nil, false
	}
	return o.DisableAll, true
}

// HasDisableAll returns a boolean if a field has been set.
func (o *AdmingroupDnsShowCommands) HasDisableAll() bool {
	if o != nil && !IsNil(o.DisableAll) {
		return true
	}

	return false
}

// SetDisableAll gets a reference to the given bool and assigns it to the DisableAll field.
func (o *AdmingroupDnsShowCommands) SetDisableAll(v bool) {
	o.DisableAll = &v
}

func (o AdmingroupDnsShowCommands) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdmingroupDnsShowCommands) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ShowLogGuestLookups) {
		toSerialize["show_log_guest_lookups"] = o.ShowLogGuestLookups
	}
	if !IsNil(o.ShowDnsGssTsig) {
		toSerialize["show_dns_gss_tsig"] = o.ShowDnsGssTsig
	}
	if !IsNil(o.ShowDns) {
		toSerialize["show_dns"] = o.ShowDns
	}
	if !IsNil(o.ShowDnstapStats) {
		toSerialize["show_dnstap_stats"] = o.ShowDnstapStats
	}
	if !IsNil(o.ShowDnstapStatus) {
		toSerialize["show_dnstap_status"] = o.ShowDnstapStatus
	}
	if !IsNil(o.ShowDnsOverTlsConfig) {
		toSerialize["show_dns_over_tls_config"] = o.ShowDnsOverTlsConfig
	}
	if !IsNil(o.ShowDnsOverTlsStatus) {
		toSerialize["show_dns_over_tls_status"] = o.ShowDnsOverTlsStatus
	}
	if !IsNil(o.ShowDnsOverTlsStats) {
		toSerialize["show_dns_over_tls_stats"] = o.ShowDnsOverTlsStats
	}
	if !IsNil(o.ShowDohConfig) {
		toSerialize["show_doh_config"] = o.ShowDohConfig
	}
	if !IsNil(o.ShowDohStatus) {
		toSerialize["show_doh_status"] = o.ShowDohStatus
	}
	if !IsNil(o.ShowDohStats) {
		toSerialize["show_doh_stats"] = o.ShowDohStats
	}
	if !IsNil(o.ShowExtraDnsNameValidations) {
		toSerialize["show_extra_dns_name_validations"] = o.ShowExtraDnsNameValidations
	}
	if !IsNil(o.ShowMsStickyIp) {
		toSerialize["show_ms_sticky_ip"] = o.ShowMsStickyIp
	}
	if !IsNil(o.ShowDnsRrl) {
		toSerialize["show_dns_rrl"] = o.ShowDnsRrl
	}
	if !IsNil(o.ShowEnableMatchRecursiveOnly) {
		toSerialize["show_enable_match_recursive_only"] = o.ShowEnableMatchRecursiveOnly
	}
	if !IsNil(o.ShowMaxRecursionDepth) {
		toSerialize["show_max_recursion_depth"] = o.ShowMaxRecursionDepth
	}
	if !IsNil(o.ShowMaxRecursionQueries) {
		toSerialize["show_max_recursion_queries"] = o.ShowMaxRecursionQueries
	}
	if !IsNil(o.ShowMonitor) {
		toSerialize["show_monitor"] = o.ShowMonitor
	}
	if !IsNil(o.ShowQueryCapture) {
		toSerialize["show_query_capture"] = o.ShowQueryCapture
	}
	if !IsNil(o.ShowDtcEa) {
		toSerialize["show_dtc_ea"] = o.ShowDtcEa
	}
	if !IsNil(o.ShowDtcGeoip) {
		toSerialize["show_dtc_geoip"] = o.ShowDtcGeoip
	}
	if !IsNil(o.ShowRestartAnycastWithDnsRestart) {
		toSerialize["show_restart_anycast_with_dns_restart"] = o.ShowRestartAnycastWithDnsRestart
	}
	if !IsNil(o.ShowRpzAddSoa) {
		toSerialize["show_rpz_add_soa"] = o.ShowRpzAddSoa
	}
	if !IsNil(o.ShowDnsAccel) {
		toSerialize["show_dns_accel"] = o.ShowDnsAccel
	}
	if !IsNil(o.ShowDnsAccelDebug) {
		toSerialize["show_dns_accel_debug"] = o.ShowDnsAccelDebug
	}
	if !IsNil(o.ShowAllowQueryDomain) {
		toSerialize["show_allow_query_domain"] = o.ShowAllowQueryDomain
	}
	if !IsNil(o.ShowAllowQueryDomainViews) {
		toSerialize["show_allow_query_domain_views"] = o.ShowAllowQueryDomainViews
	}
	if !IsNil(o.EnableAll) {
		toSerialize["enable_all"] = o.EnableAll
	}
	if !IsNil(o.DisableAll) {
		toSerialize["disable_all"] = o.DisableAll
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AdmingroupDnsShowCommands) UnmarshalJSON(data []byte) (err error) {
	varAdmingroupDnsShowCommands := _AdmingroupDnsShowCommands{}

	err = json.Unmarshal(data, &varAdmingroupDnsShowCommands)

	if err != nil {
		return err
	}

	*o = AdmingroupDnsShowCommands(varAdmingroupDnsShowCommands)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "show_log_guest_lookups")
		delete(additionalProperties, "show_dns_gss_tsig")
		delete(additionalProperties, "show_dns")
		delete(additionalProperties, "show_dnstap_stats")
		delete(additionalProperties, "show_dnstap_status")
		delete(additionalProperties, "show_dns_over_tls_config")
		delete(additionalProperties, "show_dns_over_tls_status")
		delete(additionalProperties, "show_dns_over_tls_stats")
		delete(additionalProperties, "show_doh_config")
		delete(additionalProperties, "show_doh_status")
		delete(additionalProperties, "show_doh_stats")
		delete(additionalProperties, "show_extra_dns_name_validations")
		delete(additionalProperties, "show_ms_sticky_ip")
		delete(additionalProperties, "show_dns_rrl")
		delete(additionalProperties, "show_enable_match_recursive_only")
		delete(additionalProperties, "show_max_recursion_depth")
		delete(additionalProperties, "show_max_recursion_queries")
		delete(additionalProperties, "show_monitor")
		delete(additionalProperties, "show_query_capture")
		delete(additionalProperties, "show_dtc_ea")
		delete(additionalProperties, "show_dtc_geoip")
		delete(additionalProperties, "show_restart_anycast_with_dns_restart")
		delete(additionalProperties, "show_rpz_add_soa")
		delete(additionalProperties, "show_dns_accel")
		delete(additionalProperties, "show_dns_accel_debug")
		delete(additionalProperties, "show_allow_query_domain")
		delete(additionalProperties, "show_allow_query_domain_views")
		delete(additionalProperties, "enable_all")
		delete(additionalProperties, "disable_all")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAdmingroupDnsShowCommands struct {
	value *AdmingroupDnsShowCommands
	isSet bool
}

func (v NullableAdmingroupDnsShowCommands) Get() *AdmingroupDnsShowCommands {
	return v.value
}

func (v *NullableAdmingroupDnsShowCommands) Set(val *AdmingroupDnsShowCommands) {
	v.value = val
	v.isSet = true
}

func (v NullableAdmingroupDnsShowCommands) IsSet() bool {
	return v.isSet
}

func (v *NullableAdmingroupDnsShowCommands) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdmingroupDnsShowCommands(val *AdmingroupDnsShowCommands) *NullableAdmingroupDnsShowCommands {
	return &NullableAdmingroupDnsShowCommands{value: val, isSet: true}
}

func (v NullableAdmingroupDnsShowCommands) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdmingroupDnsShowCommands) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
