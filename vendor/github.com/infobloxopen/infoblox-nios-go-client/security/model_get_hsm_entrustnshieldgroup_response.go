/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
	"fmt"
)

// GetHsmEntrustnshieldgroupResponse - struct for GetHsmEntrustnshieldgroupResponse
type GetHsmEntrustnshieldgroupResponse struct {
	GetHsmEntrustnshieldgroupResponseObjectAsResult *GetHsmEntrustnshieldgroupResponseObjectAsResult
	HsmEntrustnshieldgroup                          *HsmEntrustnshieldgroup
}

// GetHsmEntrustnshieldgroupResponseObjectAsResultAsGetHsmEntrustnshieldgroupResponse is a convenience function that returns GetHsmEntrustnshieldgroupResponseObjectAsResult wrapped in GetHsmEntrustnshieldgroupResponse
func GetHsmEntrustnshieldgroupResponseObjectAsResultAsGetHsmEntrustnshieldgroupResponse(v *GetHsmEntrustnshieldgroupResponseObjectAsResult) GetHsmEntrustnshieldgroupResponse {
	return GetHsmEntrustnshieldgroupResponse{
		GetHsmEntrustnshieldgroupResponseObjectAsResult: v,
	}
}

// HsmEntrustnshieldgroupAsGetHsmEntrustnshieldgroupResponse is a convenience function that returns HsmEntrustnshieldgroup wrapped in GetHsmEntrustnshieldgroupResponse
func HsmEntrustnshieldgroupAsGetHsmEntrustnshieldgroupResponse(v *HsmEntrustnshieldgroup) GetHsmEntrustnshieldgroupResponse {
	return GetHsmEntrustnshieldgroupResponse{
		HsmEntrustnshieldgroup: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetHsmEntrustnshieldgroupResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetHsmEntrustnshieldgroupResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetHsmEntrustnshieldgroupResponseObjectAsResult)
	if err == nil {
		jsonGetHsmEntrustnshieldgroupResponseObjectAsResult, _ := json.Marshal(dst.GetHsmEntrustnshieldgroupResponseObjectAsResult)
		if string(jsonGetHsmEntrustnshieldgroupResponseObjectAsResult) == "{}" { // empty struct
			dst.GetHsmEntrustnshieldgroupResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetHsmEntrustnshieldgroupResponseObjectAsResult = nil
	}

	// try to unmarshal data into HsmEntrustnshieldgroup
	err = newStrictDecoder(data).Decode(&dst.HsmEntrustnshieldgroup)
	if err == nil {
		jsonHsmEntrustnshieldgroup, _ := json.Marshal(dst.HsmEntrustnshieldgroup)
		if string(jsonHsmEntrustnshieldgroup) == "{}" { // empty struct
			dst.HsmEntrustnshieldgroup = nil
		} else {
			match++
		}
	} else {
		dst.HsmEntrustnshieldgroup = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetHsmEntrustnshieldgroupResponseObjectAsResult = nil
		dst.HsmEntrustnshieldgroup = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetHsmEntrustnshieldgroupResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetHsmEntrustnshieldgroupResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetHsmEntrustnshieldgroupResponse) MarshalJSON() ([]byte, error) {
	if src.GetHsmEntrustnshieldgroupResponseObjectAsResult != nil {
		return json.Marshal(&src.GetHsmEntrustnshieldgroupResponseObjectAsResult)
	}

	if src.HsmEntrustnshieldgroup != nil {
		return json.Marshal(&src.HsmEntrustnshieldgroup)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetHsmEntrustnshieldgroupResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GetHsmEntrustnshieldgroupResponseObjectAsResult != nil {
		return obj.GetHsmEntrustnshieldgroupResponseObjectAsResult
	}

	if obj.HsmEntrustnshieldgroup != nil {
		return obj.HsmEntrustnshieldgroup
	}

	// all schemas are nil
	return nil
}

type NullableGetHsmEntrustnshieldgroupResponse struct {
	value *GetHsmEntrustnshieldgroupResponse
	isSet bool
}

func (v NullableGetHsmEntrustnshieldgroupResponse) Get() *GetHsmEntrustnshieldgroupResponse {
	return v.value
}

func (v *NullableGetHsmEntrustnshieldgroupResponse) Set(val *GetHsmEntrustnshieldgroupResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetHsmEntrustnshieldgroupResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetHsmEntrustnshieldgroupResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetHsmEntrustnshieldgroupResponse(val *GetHsmEntrustnshieldgroupResponse) *NullableGetHsmEntrustnshieldgroupResponse {
	return &NullableGetHsmEntrustnshieldgroupResponse{value: val, isSet: true}
}

func (v NullableGetHsmEntrustnshieldgroupResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetHsmEntrustnshieldgroupResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
