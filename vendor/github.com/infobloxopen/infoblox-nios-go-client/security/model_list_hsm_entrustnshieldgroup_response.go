/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
	"fmt"
)

// ListHsmEntrustnshieldgroupResponse - struct for ListHsmEntrustnshieldgroupResponse
type ListHsmEntrustnshieldgroupResponse struct {
	ListHsmEntrustnshieldgroupResponseObject *ListHsmEntrustnshieldgroupResponseObject
	ArrayOfHsmEntrustnshieldgroup            *[]HsmEntrustnshieldgroup
}

// ListHsmEntrustnshieldgroupResponseObjectAsListHsmEntrustnshieldgroupResponse is a convenience function that returns ListHsmEntrustnshieldgroupResponseObject wrapped in ListHsmEntrustnshieldgroupResponse
func ListHsmEntrustnshieldgroupResponseObjectAsListHsmEntrustnshieldgroupResponse(v *ListHsmEntrustnshieldgroupResponseObject) ListHsmEntrustnshieldgroupResponse {
	return ListHsmEntrustnshieldgroupResponse{
		ListHsmEntrustnshieldgroupResponseObject: v,
	}
}

// []HsmEntrustnshieldgroupAsListHsmEntrustnshieldgroupResponse is a convenience function that returns []HsmEntrustnshieldgroup wrapped in ListHsmEntrustnshieldgroupResponse
func ArrayOfHsmEntrustnshieldgroupAsListHsmEntrustnshieldgroupResponse(v *[]HsmEntrustnshieldgroup) ListHsmEntrustnshieldgroupResponse {
	return ListHsmEntrustnshieldgroupResponse{
		ArrayOfHsmEntrustnshieldgroup: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListHsmEntrustnshieldgroupResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListHsmEntrustnshieldgroupResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListHsmEntrustnshieldgroupResponseObject)
	if err == nil {
		jsonListHsmEntrustnshieldgroupResponseObject, _ := json.Marshal(dst.ListHsmEntrustnshieldgroupResponseObject)
		if string(jsonListHsmEntrustnshieldgroupResponseObject) == "{}" { // empty struct
			dst.ListHsmEntrustnshieldgroupResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListHsmEntrustnshieldgroupResponseObject = nil
	}

	// try to unmarshal data into ArrayOfHsmEntrustnshieldgroup
	err = newStrictDecoder(data).Decode(&dst.ArrayOfHsmEntrustnshieldgroup)
	if err == nil {
		jsonArrayOfHsmEntrustnshieldgroup, _ := json.Marshal(dst.ArrayOfHsmEntrustnshieldgroup)
		if string(jsonArrayOfHsmEntrustnshieldgroup) == "{}" { // empty struct
			dst.ArrayOfHsmEntrustnshieldgroup = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfHsmEntrustnshieldgroup = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListHsmEntrustnshieldgroupResponseObject = nil
		dst.ArrayOfHsmEntrustnshieldgroup = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListHsmEntrustnshieldgroupResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListHsmEntrustnshieldgroupResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListHsmEntrustnshieldgroupResponse) MarshalJSON() ([]byte, error) {
	if src.ListHsmEntrustnshieldgroupResponseObject != nil {
		return json.Marshal(&src.ListHsmEntrustnshieldgroupResponseObject)
	}

	if src.ArrayOfHsmEntrustnshieldgroup != nil {
		return json.Marshal(&src.ArrayOfHsmEntrustnshieldgroup)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListHsmEntrustnshieldgroupResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListHsmEntrustnshieldgroupResponseObject != nil {
		return obj.ListHsmEntrustnshieldgroupResponseObject
	}

	if obj.ArrayOfHsmEntrustnshieldgroup != nil {
		return obj.ArrayOfHsmEntrustnshieldgroup
	}

	// all schemas are nil
	return nil
}

type NullableListHsmEntrustnshieldgroupResponse struct {
	value *ListHsmEntrustnshieldgroupResponse
	isSet bool
}

func (v NullableListHsmEntrustnshieldgroupResponse) Get() *ListHsmEntrustnshieldgroupResponse {
	return v.value
}

func (v *NullableListHsmEntrustnshieldgroupResponse) Set(val *ListHsmEntrustnshieldgroupResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListHsmEntrustnshieldgroupResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListHsmEntrustnshieldgroupResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListHsmEntrustnshieldgroupResponse(val *ListHsmEntrustnshieldgroupResponse) *NullableListHsmEntrustnshieldgroupResponse {
	return &NullableListHsmEntrustnshieldgroupResponse{value: val, isSet: true}
}

func (v NullableListHsmEntrustnshieldgroupResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListHsmEntrustnshieldgroupResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
