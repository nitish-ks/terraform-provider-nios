/*
Infoblox SMARTFOLDER API

OpenAPI specification for Infoblox NIOS WAPI SMARTFOLDER objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package smartfolder

import (
	"encoding/json"
	"fmt"
)

// GetSmartfolderPersonalResponse - struct for GetSmartfolderPersonalResponse
type GetSmartfolderPersonalResponse struct {
	GetSmartfolderPersonalResponseObjectAsResult *GetSmartfolderPersonalResponseObjectAsResult
	SmartfolderPersonal                          *SmartfolderPersonal
}

// GetSmartfolderPersonalResponseObjectAsResultAsGetSmartfolderPersonalResponse is a convenience function that returns GetSmartfolderPersonalResponseObjectAsResult wrapped in GetSmartfolderPersonalResponse
func GetSmartfolderPersonalResponseObjectAsResultAsGetSmartfolderPersonalResponse(v *GetSmartfolderPersonalResponseObjectAsResult) GetSmartfolderPersonalResponse {
	return GetSmartfolderPersonalResponse{
		GetSmartfolderPersonalResponseObjectAsResult: v,
	}
}

// SmartfolderPersonalAsGetSmartfolderPersonalResponse is a convenience function that returns SmartfolderPersonal wrapped in GetSmartfolderPersonalResponse
func SmartfolderPersonalAsGetSmartfolderPersonalResponse(v *SmartfolderPersonal) GetSmartfolderPersonalResponse {
	return GetSmartfolderPersonalResponse{
		SmartfolderPersonal: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetSmartfolderPersonalResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetSmartfolderPersonalResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetSmartfolderPersonalResponseObjectAsResult)
	if err == nil {
		jsonGetSmartfolderPersonalResponseObjectAsResult, _ := json.Marshal(dst.GetSmartfolderPersonalResponseObjectAsResult)
		if string(jsonGetSmartfolderPersonalResponseObjectAsResult) == "{}" { // empty struct
			dst.GetSmartfolderPersonalResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetSmartfolderPersonalResponseObjectAsResult = nil
	}

	// try to unmarshal data into SmartfolderPersonal
	err = newStrictDecoder(data).Decode(&dst.SmartfolderPersonal)
	if err == nil {
		jsonSmartfolderPersonal, _ := json.Marshal(dst.SmartfolderPersonal)
		if string(jsonSmartfolderPersonal) == "{}" { // empty struct
			dst.SmartfolderPersonal = nil
		} else {
			match++
		}
	} else {
		dst.SmartfolderPersonal = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetSmartfolderPersonalResponseObjectAsResult = nil
		dst.SmartfolderPersonal = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetSmartfolderPersonalResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetSmartfolderPersonalResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetSmartfolderPersonalResponse) MarshalJSON() ([]byte, error) {
	if src.GetSmartfolderPersonalResponseObjectAsResult != nil {
		return json.Marshal(&src.GetSmartfolderPersonalResponseObjectAsResult)
	}

	if src.SmartfolderPersonal != nil {
		return json.Marshal(&src.SmartfolderPersonal)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetSmartfolderPersonalResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GetSmartfolderPersonalResponseObjectAsResult != nil {
		return obj.GetSmartfolderPersonalResponseObjectAsResult
	}

	if obj.SmartfolderPersonal != nil {
		return obj.SmartfolderPersonal
	}

	// all schemas are nil
	return nil
}

type NullableGetSmartfolderPersonalResponse struct {
	value *GetSmartfolderPersonalResponse
	isSet bool
}

func (v NullableGetSmartfolderPersonalResponse) Get() *GetSmartfolderPersonalResponse {
	return v.value
}

func (v *NullableGetSmartfolderPersonalResponse) Set(val *GetSmartfolderPersonalResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSmartfolderPersonalResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSmartfolderPersonalResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSmartfolderPersonalResponse(val *GetSmartfolderPersonalResponse) *NullableGetSmartfolderPersonalResponse {
	return &NullableGetSmartfolderPersonalResponse{value: val, isSet: true}
}

func (v NullableGetSmartfolderPersonalResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSmartfolderPersonalResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
