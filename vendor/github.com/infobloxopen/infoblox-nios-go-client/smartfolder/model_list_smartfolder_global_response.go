/*
Infoblox SMARTFOLDER API

OpenAPI specification for Infoblox NIOS WAPI SMARTFOLDER objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package smartfolder

import (
	"encoding/json"
	"fmt"
)

// ListSmartfolderGlobalResponse - struct for ListSmartfolderGlobalResponse
type ListSmartfolderGlobalResponse struct {
	ListSmartfolderGlobalResponseObject *ListSmartfolderGlobalResponseObject
	ArrayOfSmartfolderGlobal            *[]SmartfolderGlobal
}

// ListSmartfolderGlobalResponseObjectAsListSmartfolderGlobalResponse is a convenience function that returns ListSmartfolderGlobalResponseObject wrapped in ListSmartfolderGlobalResponse
func ListSmartfolderGlobalResponseObjectAsListSmartfolderGlobalResponse(v *ListSmartfolderGlobalResponseObject) ListSmartfolderGlobalResponse {
	return ListSmartfolderGlobalResponse{
		ListSmartfolderGlobalResponseObject: v,
	}
}

// []SmartfolderGlobalAsListSmartfolderGlobalResponse is a convenience function that returns []SmartfolderGlobal wrapped in ListSmartfolderGlobalResponse
func ArrayOfSmartfolderGlobalAsListSmartfolderGlobalResponse(v *[]SmartfolderGlobal) ListSmartfolderGlobalResponse {
	return ListSmartfolderGlobalResponse{
		ArrayOfSmartfolderGlobal: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ListSmartfolderGlobalResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ListSmartfolderGlobalResponseObject
	err = newStrictDecoder(data).Decode(&dst.ListSmartfolderGlobalResponseObject)
	if err == nil {
		jsonListSmartfolderGlobalResponseObject, _ := json.Marshal(dst.ListSmartfolderGlobalResponseObject)
		if string(jsonListSmartfolderGlobalResponseObject) == "{}" { // empty struct
			dst.ListSmartfolderGlobalResponseObject = nil
		} else {
			match++
		}
	} else {
		dst.ListSmartfolderGlobalResponseObject = nil
	}

	// try to unmarshal data into ArrayOfSmartfolderGlobal
	err = newStrictDecoder(data).Decode(&dst.ArrayOfSmartfolderGlobal)
	if err == nil {
		jsonArrayOfSmartfolderGlobal, _ := json.Marshal(dst.ArrayOfSmartfolderGlobal)
		if string(jsonArrayOfSmartfolderGlobal) == "{}" { // empty struct
			dst.ArrayOfSmartfolderGlobal = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfSmartfolderGlobal = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ListSmartfolderGlobalResponseObject = nil
		dst.ArrayOfSmartfolderGlobal = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ListSmartfolderGlobalResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ListSmartfolderGlobalResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ListSmartfolderGlobalResponse) MarshalJSON() ([]byte, error) {
	if src.ListSmartfolderGlobalResponseObject != nil {
		return json.Marshal(&src.ListSmartfolderGlobalResponseObject)
	}

	if src.ArrayOfSmartfolderGlobal != nil {
		return json.Marshal(&src.ArrayOfSmartfolderGlobal)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ListSmartfolderGlobalResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ListSmartfolderGlobalResponseObject != nil {
		return obj.ListSmartfolderGlobalResponseObject
	}

	if obj.ArrayOfSmartfolderGlobal != nil {
		return obj.ArrayOfSmartfolderGlobal
	}

	// all schemas are nil
	return nil
}

type NullableListSmartfolderGlobalResponse struct {
	value *ListSmartfolderGlobalResponse
	isSet bool
}

func (v NullableListSmartfolderGlobalResponse) Get() *ListSmartfolderGlobalResponse {
	return v.value
}

func (v *NullableListSmartfolderGlobalResponse) Set(val *ListSmartfolderGlobalResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListSmartfolderGlobalResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListSmartfolderGlobalResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListSmartfolderGlobalResponse(val *ListSmartfolderGlobalResponse) *NullableListSmartfolderGlobalResponse {
	return &NullableListSmartfolderGlobalResponse{value: val, isSet: true}
}

func (v NullableListSmartfolderGlobalResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListSmartfolderGlobalResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
