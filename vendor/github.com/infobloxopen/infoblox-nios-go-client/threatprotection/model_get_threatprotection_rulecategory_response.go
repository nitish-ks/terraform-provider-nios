/*
Infoblox THREATPROTECTION API

OpenAPI specification for Infoblox NIOS WAPI THREATPROTECTION objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package threatprotection

import (
	"encoding/json"
	"fmt"
)

// GetThreatprotectionRulecategoryResponse - struct for GetThreatprotectionRulecategoryResponse
type GetThreatprotectionRulecategoryResponse struct {
	GetThreatprotectionRulecategoryResponseObjectAsResult *GetThreatprotectionRulecategoryResponseObjectAsResult
	ThreatprotectionRulecategory                          *ThreatprotectionRulecategory
}

// GetThreatprotectionRulecategoryResponseObjectAsResultAsGetThreatprotectionRulecategoryResponse is a convenience function that returns GetThreatprotectionRulecategoryResponseObjectAsResult wrapped in GetThreatprotectionRulecategoryResponse
func GetThreatprotectionRulecategoryResponseObjectAsResultAsGetThreatprotectionRulecategoryResponse(v *GetThreatprotectionRulecategoryResponseObjectAsResult) GetThreatprotectionRulecategoryResponse {
	return GetThreatprotectionRulecategoryResponse{
		GetThreatprotectionRulecategoryResponseObjectAsResult: v,
	}
}

// ThreatprotectionRulecategoryAsGetThreatprotectionRulecategoryResponse is a convenience function that returns ThreatprotectionRulecategory wrapped in GetThreatprotectionRulecategoryResponse
func ThreatprotectionRulecategoryAsGetThreatprotectionRulecategoryResponse(v *ThreatprotectionRulecategory) GetThreatprotectionRulecategoryResponse {
	return GetThreatprotectionRulecategoryResponse{
		ThreatprotectionRulecategory: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetThreatprotectionRulecategoryResponse) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetThreatprotectionRulecategoryResponseObjectAsResult
	err = newStrictDecoder(data).Decode(&dst.GetThreatprotectionRulecategoryResponseObjectAsResult)
	if err == nil {
		jsonGetThreatprotectionRulecategoryResponseObjectAsResult, _ := json.Marshal(dst.GetThreatprotectionRulecategoryResponseObjectAsResult)
		if string(jsonGetThreatprotectionRulecategoryResponseObjectAsResult) == "{}" { // empty struct
			dst.GetThreatprotectionRulecategoryResponseObjectAsResult = nil
		} else {
			match++
		}
	} else {
		dst.GetThreatprotectionRulecategoryResponseObjectAsResult = nil
	}

	// try to unmarshal data into ThreatprotectionRulecategory
	err = newStrictDecoder(data).Decode(&dst.ThreatprotectionRulecategory)
	if err == nil {
		jsonThreatprotectionRulecategory, _ := json.Marshal(dst.ThreatprotectionRulecategory)
		if string(jsonThreatprotectionRulecategory) == "{}" { // empty struct
			dst.ThreatprotectionRulecategory = nil
		} else {
			match++
		}
	} else {
		dst.ThreatprotectionRulecategory = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetThreatprotectionRulecategoryResponseObjectAsResult = nil
		dst.ThreatprotectionRulecategory = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetThreatprotectionRulecategoryResponse)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetThreatprotectionRulecategoryResponse)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetThreatprotectionRulecategoryResponse) MarshalJSON() ([]byte, error) {
	if src.GetThreatprotectionRulecategoryResponseObjectAsResult != nil {
		return json.Marshal(&src.GetThreatprotectionRulecategoryResponseObjectAsResult)
	}

	if src.ThreatprotectionRulecategory != nil {
		return json.Marshal(&src.ThreatprotectionRulecategory)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetThreatprotectionRulecategoryResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GetThreatprotectionRulecategoryResponseObjectAsResult != nil {
		return obj.GetThreatprotectionRulecategoryResponseObjectAsResult
	}

	if obj.ThreatprotectionRulecategory != nil {
		return obj.ThreatprotectionRulecategory
	}

	// all schemas are nil
	return nil
}

type NullableGetThreatprotectionRulecategoryResponse struct {
	value *GetThreatprotectionRulecategoryResponse
	isSet bool
}

func (v NullableGetThreatprotectionRulecategoryResponse) Get() *GetThreatprotectionRulecategoryResponse {
	return v.value
}

func (v *NullableGetThreatprotectionRulecategoryResponse) Set(val *GetThreatprotectionRulecategoryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetThreatprotectionRulecategoryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetThreatprotectionRulecategoryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetThreatprotectionRulecategoryResponse(val *GetThreatprotectionRulecategoryResponse) *NullableGetThreatprotectionRulecategoryResponse {
	return &NullableGetThreatprotectionRulecategoryResponse{value: val, isSet: true}
}

func (v NullableGetThreatprotectionRulecategoryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetThreatprotectionRulecategoryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
